{"version":3,"file":"static/js/825.9ecc8ef8.chunk.js","mappings":"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GAGdswB,EAAKzxE,QAAUg0B,EAAKxQ,MAAMxjB,SAC1Bg0B,EAAKxQ,MAAQiuD,GAGrB,OAAOz9C,EAgBP,SAAS09C,EAAc9c,EAAY9lB,GAC/B,QAAIA,EAAIhF,WAAW9pC,UACd8uC,EAAI0gB,UACLoF,EAAWjxB,SAAS2iC,QACf1R,EAAW2Q,YACJ3Q,EAAW2Q,WAAWz2B,Q,eChjJvC,IAAI6iC,GAAW,CAClB,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,SACA,iBACA,uBACA,2BACA,0BACA,2BACA,iCACA,sBACA,4BACA,iCACA,kBACA,2BACA,kBACA,wBACA,wBACA,wBACA,oBACA,oBACA,0BACA,0BACA,0BACA,iBACA,qBACA,gBACA,yBACA,kBACA,gBACA,kBACA,kBACA,6BACA,8BACA,+BACA,eACA,oBACA,kBACA,oBACA,cACA,0BACA,sBACA,iCACA,kCACA,8BACA,+BACA,mBACA,qBACA,mBACA,0BACA,gBACA,wBACA,iBACA,wBACA,uBACA,kBACA,wBACA,2BACA,2BACA,kCACA,kBACA,kBACA,mBACA,mBACA,uBACA,wBACA,sBACA,qBACA,oBACA,0BACA,8BACA,6BACA,8BACA,oCACA,yBACA,+BACA,oCACA,qBACA,8BACA,0BACA,4BACA,0BACA,oCACA,qCACA,uBACA,wBACA,iCACA,kCACA,oBACA,wBACA,mBACA,4BACA,qBACA,mBACA,qBACA,qBACA,iBACA,eACA,qBACA,yBACA,oBACA,oBACA,sBACA,oBACA,0BACA,qBACA,eACA,oBACA,yBACA,qBACA,sBACA,wBACA,0BACA,0BACA,sBACA,oBACA,gBACA,sBACA,6BACA,0BACA,2BACA,sBACA,4BACA,4BACA,oBACA,2BACA,0BACA,qBACA,2BACA,8BACA,8BACA,qCACA,sBACA,IACA,IACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,IACA,KACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,aACA,YACA,SACA,oBACA,iBACA,kBACA,wBACA,WACA,2BACA,2BACA,uBACA,UACA,QACA,aACA,mBACA,WACA,SACA,qBACA,kCACA,WACA,0BACA,eACA,uBACA,mBACA,iBACA,YACA,kBACA,cACA,4BACA,gBACA,gBACA,oBACA,iBACA,eACA,YACA,kBACA,iBACA,yBACA,oBACA,qBACA,MACA,mBACA,6BACA,QACA,cACA,YACA,UACA,OACA,QACA,cACA,wBACA,eACA,uBACA,gBACA,YACA,aACA,gBACA,uBACA,2BACA,mBACA,eACA,mBACA,iCACA,mCACA,wBACA,yBACA,OACA,yBACA,cACA,WACA,QACA,cACA,kBACA,gBACA,iBACA,uBACA,qBACA,kBACA,gBACA,YACA,OACA,OACA,eACA,YACA,YACA,YACA,OACA,wBACA,iBACA,cACA,eACA,OACA,oBACA,yBACA,wBACA,8BACA,UACA,kBACA,mBACA,WACA,iBACA,2BACA,kBACA,oBACA,SACA,gBACA,iBACA,mBACA,OACA,YACA,YACA,oCACA,kBACA,oCACA,gCACA,4BACA,6BACA,gBACA,UACA,mBACA,4BACA,kBACA,MACA,eACA,qBACA,SACA,eACA,WACA,gBACA,QACA,SACA,UACA,QACA,oBACA,oBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,oBACA,kBACA,eACA,yBACA,iBACA,gCACA,gCACA,gCACA,+BACA,6BACA,sBACA,4BACA,aACA,iBACA,iBACA,iBACA,qBACA,eACA,mBACA,2BACA,oBACA,4BACA,qBACA,MACA,iBACA,eACA,iBACA,mBACA,sBACA,kBACA,2BACA,kBACA,gBACA,gBACA,kBACA,mBACA,kBACA,gBACA,aACA,aACA,gBACA,iBACA,aACA,eACA,qBACA,eACA,qBACA,mBACA,mBACA,kBACA,kBACA,cACA,iBACA,mBACA,oBACA,YACA,UACA,cACA,WACA,UACA,WACA,WACA,sBACA,eACA,gBACA,gBACA,kBACA,wBACA,oBACA,gBACA,eACA,eACA,iBACA,mBACA,WACA,eACA,4BACA,0BACA,mBACA,kBACA,WACA,SACA,cACA,aACA,UACA,gBACA,UACA,UACA,kBACA,wBACA,sBACA,oBACA,yBACA,uBACA,wBACA,oBACA,qBACA,uBACA,sBACA,mBACA,WACA,SACA,YACA,SACA,cACA,UACA,aACA,eACA,SACA,SACA,aACA,SACA,iBACA,kBACA,sBACA,SACA,SACA,UACA,WACA,eACA,aACA,eACA,cACA,cACA,cACA,QACA,YACA,cACA,aACA,aACA,aACA,WACA,YACA,YACA,aACA,gBACA,kBACA,iBACA,iBACA,iBACA,cACA,UACA,iBACA,SACA,WACA,WACA,SACA,YACA,iBACA,kBACA,gBACA,wBACA,SACA,KACA,QACA,eACA,2BACA,gCACA,iBACA,gBACA,2BACA,gBACA,oBACA,sBACA,gBACA,aACA,iBACA,YACA,iBACA,gBACA,aACA,WACA,eACA,UACA,eACA,mBACA,oBACA,UACA,qBACA,cACA,gBACA,uBACA,UACA,aACA,uBACA,SACA,YACA,wBACA,cACA,eACA,iBACA,WACA,WACA,OACA,YACA,gBACA,QACA,mBACA,oBACA,mBACA,aACA,mBACA,oBACA,kBACA,oBACA,oBACA,qBACA,aACA,cACA,gBACA,2BACA,aACA,kBACA,oBACA,iBACA,iBACA,kBACA,eACA,WACA,uBACA,SACA,yBACA,gBACA,iCACA,6BACA,iCACA,8BACA,4CACA,8BACA,qBACA,YACA,WACA,eACA,oBACA,sBACA,YACA,oBACA,YACA,WACA,mBACA,UACA,UACA,cACA,kBACA,aACA,qBACA,uBACA,gBACA,eACA,eACA,sBACA,iBACA,iBACA,kBACA,wBACA,+BACA,uBACA,4BACA,8BACA,0BACA,yBACA,0BACA,2BACA,yBACA,4BACA,wBACA,0BACA,0BACA,yBACA,4BACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,gBACA,aACA,aACA,eACA,mBACA,kBACA,YACA,cACA,WACA,mBACA,oBACA,oBACA,oBACA,WACA,gBACA,mBACA,oBACA,eACA,uBACA,6BACA,qBACA,eACA,eACA,sBACA,iBACA,iBACA,eACA,cACA,WACA,iBACA,gBACA,gBACA,gBACA,sBACA,cACA,WACA,cACA,aACA,eACA,gBACA,eACA,gBACA,qBACA,iBACA,eACA,WACA,YACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,YACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,YACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,YACA,YACA,YACA,YACA,YACA,YACA,eACA,eACA,WACA,sBACA,WACA,gBACA,eACA,cACA,cACA,mBACA,cACA,sBACA,WACA,gBACA,WACA,eACA,WACA,cACA,eACA,WACA,cACA,kBACA,mBACA,WACA,cACA,oBACA,kBACA,WACA,oBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,kBACA,WACA,eACA,iBACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,mBACA,mBACA,oBACA,kBACA,sBACA,4BACA,oBACA,WACA,aACA,kBACA,gBACA,mBACA,iBACA,eACA,iBACA,gBACA,cACA,cACA,cACA,eACA,qBACA,oBACA,oBACA,WACA,uBACA,eACA,WACA,cACA,gBACA,eACA,WACA,qBACA,gBACA,mBACA,mBACA,eACA,eACA,eACA,eACA,kBACA,WACA,aACA,eACA,WACA,oBACA,cACA,iBACA,YACA,WACA,qBACA,qBACA,mBACA,WACA,aACA,gBACA,oBACA,uBACA,sBACA,sBACA,sBACA,yBACA,uBACA,sBACA,uBACA,sBACA,wBACA,0BACA,yBACA,4BACA,yBACA,4BACA,sBACA,qBACA,qBACA,qBACA,uBACA,wBACA,WACA,6BACA,iCACA,kCACA,kCACA,8BACA,mCACA,4BACA,2BACA,2BACA,4BACA,2BACA,2BACA,mCACA,kCACA,6BACA,6BACA,6BACA,2BACA,qBACA,qBACA,6BACA,wBACA,qBACA,0BACA,qBACA,kCACA,2BACA,yBACA,mBACA,sBACA,0BACA,gCACA,qBACA,oBACA,4BACA,wBACA,0BACA,oBACA,sBACA,sBACA,yBACA,0BACA,wBACA,wBACA,2BACA,8BACA,qBACA,mBACA,sBACA,0BACA,wBACA,0BACA,0BACA,wBACA,oCACA,kCACA,iCACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,2BACA,wBACA,qBACA,6BACA,uBACA,wBACA,qBACA,wBACA,wBACA,0BACA,oCACA,kCACA,sBACA,4BACA,yBACA,oBACA,qBACA,4BACA,qBACA,yBACA,uBACA,sBACA,sBACA,yBACA,2BACA,0BACA,oBACA,wBACA,uBACA,sBACA,4BACA,6BACA,0BACA,+BACA,4BACA,4BACA,qBACA,6BACA,6BACA,4BACA,0BACA,uBACA,qBACA,qBACA,sBACA,6BACA,wBACA,sBACA,qBACA,yBACA,wBACA,wBACA,0BACA,yBACA,qBACA,sBACA,yBACA,2BACA,uBACA,wBACA,wBACA,wBACA,oBACA,4BACA,sBACA,qBACA,wBACA,wBACA,6BACA,qBACA,qBACA,oBACA,qBACA,uBACA,wBACA,yBACA,WACA,WACA,cACA,OACA,YACA,cACA,WACA,eACA,eACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,mBACA,2BACA,YACA,YACA,eACA,eACA,eACA,cACA,eACA,mBACA,uBACA,WACA,OACA,iBACA,sBACA,YACA,wBACA,sBACA,4BACA,mBACA,oBACA,gCACA,gCACA,yBACA,uBACA,gBACA,2BACA,YACA,eACA,WACA,mBACA,mBACA,eACA,YACA,yBACA,IACA,uBACA,+BACA,eACA,QACA,eACA,QACA,aACA,eACA,cACA,wBACA,UACA,QACA,aACA,QACA,uBACA,UACA,mBACA,eACA,6BACA,SACA,kBACA,QACA,aACA,YACA,QACA,iBACA,cACA,cACA,WACA,UACA,UACA,gBACA,mBACA,gBACA,cACA,iBACA,0BACA,QACA,iCACA,aACA,eACA,eACA,aACA,eACA,eACA,aACA,eACA,eACA,aACA,aACA,aACA,QACA,iBACA,2BACA,kBACA,kCACA,sCACA,cACA,oCACA,mCACA,wCACA,wCACA,oCACA,oCACA,qCACA,qCACA,kCACA,sCACA,+CACA,uCACA,uCACA,sBACA,uBACA,sBACA,oCACA,oCACA,4CACA,qCACA,0BACA,QACA,iBACA,aACA,WACA,wBACA,gBACA,gBACA,mCACA,sBACA,OACA,YACA,OACA,YACA,WACA,aACA,aACA,2BACA,4BACA,kBACA,sBACA,uBACA,aACA,eACA,eACA,aACA,WACA,cACA,uBACA,WACA,gBACA,oBACA,WACA,uBACA,SACA,UACA,aACA,WACA,UACA,uBACA,gBACA,qBACA,eACA,wBACA,cACA,cACA,yBACA,sBACA,2BACA,eACA,SACA,YACA,aACA,oBACA,mBACA,mBACA,gBACA,eACA,mBACA,SACA,wBACA,WACA,YACA,aACA,WACA,aACA,kBACA,OACA,oBACA,oBACA,oBACA,kBACA,mBACA,gBACA,kBACA,sBACA,wBACA,kBACA,oBACA,oBACA,iBACA,qBACA,qBACA,mBACA,kBACA,sBACA,qBACA,oBACA,uBACA,iBACA,eACA,cACA,mBACA,sBACA,kBACA,6BACA,kBACA,mBACA,sBACA,gBACA,kBACA,qBACA,kBACA,oBACA,mBACA,mBACA,qBACA,oBACA,gBACA,mBACA,oBACA,kBACA,iBACA,qBACA,mBACA,kBACA,sBACA,kBACA,mBACA,iBACA,mBACA,oBACA,sBACA,oBACA,wBACA,oBACA,uBACA,mBACA,qBACA,iBACA,sBACA,2BACA,mBACA,oBACA,oBACA,oBACA,kBACA,oBACA,kBACA,mBACA,0BACA,uBACA,sBACA,mBACA,sBACA,0BACA,sBACA,sBACA,kBACA,mBACA,mBACA,mBACA,qBACA,mBACA,kBACA,UACA,UACA,KACA,eACA,aACA,gBACA,gBACA,aACA,gBACA,cACA,YACA,qBACA,cACA,uBACA,aACA,gBACA,iBACA,WACA,cACA,iBACA,iBACA,mBACA,aACA,iBACA,wBACA,OACA,gBACA,mCACA,iCACA,cACA,OACA,YACA,iBACA,MACA,sBACA,qBACA,iBACA,uBACA,iBACA,mBACA,WACA,WACA,WACA,sBACA,qBACA,wBACA,eACA,yBACA,gCACA,gBACA,2BACA,wBACA,oBACA,oBACA,gBACA,mBACA,SACA,eACA,eACA,QACA,cACA,8BACA,eACA,YACA,WACA,0BACA,kBACA,aACA,qBACA,iBACA,qBACA,WACA,aACA,aACA,YACA,SACA,gBACA,uBACA,4BACA,OACA,4BACA,WACA,OACA,OACA,UACA,iBACA,gBACA,WACA,QACA,WACA,WACA,gBACA,oBACA,iBACA,uBACA,gCACA,uBACA,SACA,OACA,SACA,kBACA,uBACA,wBACA,QACA,YACA,aACA,aACA,cACA,OACA,OACA,MACA,SACA,UACA,SACA,QACA,UACA,WACA,YACA,UACA,cACA,iBACA,YACA,kBACA,yBACA,cACA,yBACA,2BACA,YACA,aACA,mBACA,SACA,WACA,OACA,cACA,MACA,sBACA,2BACA,gCACA,wBACA,2CACA,mCACA,8BACA,yCACA,4BACA,mBACA,uBACA,wBACA,oBACA,gCACA,8BACA,kCACA,+BACA,2BACA,wBACA,mBACA,cACA,0BACA,0BACA,uBACA,iCACA,mBACA,gDACA,0CACA,6CACA,yBACA,8BACA,YACA,yBACA,sBACA,qBACA,+BACA,iCACA,4BACA,gCACA,6BACA,oBACA,oBACA,mBACA,sBACA,oBACA,8BACA,sBACA,sBACA,8BACA,sBACA,uBACA,uBACA,aACA,eACA,aACA,YACA,aACA,sBACA,YACA,eACA,mBACA,aACA,gBACA,WACA,MACA,2BACA,mBACA,YACA,kBACA,oBACA,mBACA,eACA,YACA,YACA,YACA,WACA,YACA,UACA,qBACA,oBACA,oBACA,oBACA,sBACA,mBACA,iBACA,mBACA,qBACA,uBACA,wBACA,qBACA,yBACA,sBACA,uBACA,qBACA,uBACA,2CACA,kCACA,qCACA,iCACA,gCACA,8BACA,2BACA,6BACA,+BACA,kCACA,kCACA,iCACA,gCACA,kCACA,kCACA,gCACA,yBACA,yBACA,yBACA,iCACA,yBACA,0BACA,0BACA,MACA,OACA,gBACA,oBACA,wBACA,kBACA,kBACA,eACA,8BACA,sBACA,aACA,gBACA,gBACA,uBACA,sBACA,kBACA,oBACA,uBACA,YACA,YACA,gBACA,iBACA,sBACA,gBACA,0BACA,eACA,qBACA,cACA,cACA,kCACA,6BACA,mBACA,mBACA,kCACA,wBACA,SACA,iBACA,eACA,cACA,UACA,WACA,gBACA,SACA,aACA,mBACA,eACA,oBACA,wBACA,uBACA,uBACA,6BACA,mBACA,wBACA,6BACA,gBACA,wBACA,aACA,wBACA,eACA,oBACA,oBACA,oBACA,iBACA,sBACA,uBACA,iBACA,sBACA,sBACA,sBACA,qBACA,cACA,kBACA,aACA,qBACA,eACA,aACA,eACA,qBACA,sBACA,iBACA,gBACA,eACA,gBACA,qBACA,qBACA,qBACA,iBACA,aACA,wBACA,eACA,yBACA,0BACA,0BACA,aACA,iBACA,eACA,iBACA,cACA,gBACA,yBACA,sBACA,YACA,sBACA,mBACA,6BACA,8BACA,0BACA,2BACA,gBACA,kBACA,iBACA,uBACA,kBACA,mBACA,cACA,gBACA,iBACA,aACA,mBACA,yBACA,wBACA,yBACA,oBACA,eACA,qBACA,oBACA,gBACA,qBACA,wBACA,wBACA,8BACA,eACA,eACA,gBACA,gBACA,oBACA,kBACA,gBACA,mBACA,iBACA,gBACA,iBACA,UACA,wBACA,yBACA,oBACA,gBACA,cACA,eACA,iBACA,kBACA,oBACA,QACA,MACA,OACA,oBACA,SACA,aACA,cACA,wBACA,cACA,OACA,oBACA,gBACA,QACA,WACA,kBACA,gBACA,mBACA,oBACA,sBACA,SACA,WACA,8BACA,cACA,iCACA,MACA,eACA,2BACA,YACA,cACA,qBACA,OACA,aACA,eACA,WACA,WACA,eACA,mBACA,SACA,eACA,cACA,WACA,KACA,MACA,2BACA,2BACA,sBACA,sBACA,sBACA,sBACA,OACA,SACA,UACA,6BACA,6BACA,cACA,gBACA,SACA,8BACA,sBACA,sBACA,kBACA,oCACA,SACA,oBACA,iBACA,uBACA,gBACA,iBACA,kBACA,mBACA,iBACA,YACA,YACA,kBACA,kBACA,oBACA,4BACA,4BACA,mCACA,mCACA,gCACA,gCACA,uCACA,uCACA,qBACA,gCACA,gCACA,qBACA,8BACA,8BACA,qBACA,qBACA,kBACA,kBACA,UACA,oBACA,aACA,KACA,oBACA,4BACA,sBACA,8BACA,gBACA,SACA,wBACA,sBACA,uBACA,uBACA,oBACA,OACA,oBACA,8BACA,kBACA,sBACA,eACA,mBACA,aACA,qBACA,SACA,iBACA,qBACA,iBACA,2BACA,iBACA,4BACA,kBACA,cACA,2BACA,mBACA,yBACA,4BACA,kBACA,qBACA,wBACA,8BACA,sBACA,+BACA,yBACA,4BACA,0BACA,oBACA,sBACA,eACA,mBACA,cACA,oBACA,yBACA,SACA,cACA,cACA,eACA,gBACA,oBACA,eACA,2BACA,yBACA,uCACA,mCACA,6BACA,uBACA,sBACA,wBACA,gBACA,UACA,wBACA,mBACA,QACA,sBACA,cACA,mBACA,0BACA,IACA,eACA,yBACA,YACA,qBACA,iBACA,iBACA,OACA,OACA,QACA,OACA,OACA,QACA,KACA,MACA,OACA,WACA,qBACA,cACA,mBACA,2BACA,YACA,gBACA,aACA,MACA,WACA,cACA,UACA,eACA,0BACA,uBACA,yBACA,0BACA,0BACA,sBACA,+BACA,wBACA,uBACA,4BACA,qBACA,WACA,yCACA,wBACA,8BACA,yCACA,8BACA,2BACA,SACA,UACA,KACA,QACA,QACA,SACA,QACA,QACA,SACA,MACA,OACA,QACA,YACA,MACA,WACA,aACA,SACA,SACA,UACA,SACA,SACA,UACA,SACA,UACA,OACA,QACA,SACA,aACA,UACA,OACA,UACA,UACA,WACA,UACA,UACA,WACA,QACA,QACA,SACA,UACA,cACA,eACA,WACA,cACA,aACA,qBACA,4BACA,iBACA,gBACA,yBACA,iBACA,sBACA,mBACA,WACA,gBACA,kBACA,kBACA,oBACA,iCACA,4BACA,iBACA,eACA,oBACA,mBACA,wBACA,iBACA,gBACA,gBACA,QACA,aACA,iBACA,iBACA,8BACA,mBACA,OACA,iBACA,UACA,SACA,4BACA,qBACA,iBACA,SACA,aACA,oBACA,UACA,iBACA,sBACA,qBACA,WACA,eACA,aACA,mBACA,0BACA,oBACA,aACA,kBACA,eACA,sBACA,UACA,2BACA,iBACA,kBACA,yBACA,wBACA,WACA,kBACA,cACA,eACA,mBACA,iBACA,aACA,YACA,eACA,eACA,SACA,mBACA,gBACA,iBACA,uBACA,mBACA,kBACA,cACA,2BACA,aACA,QACA,UACA,WACA,iBACA,qBACA,eACA,gBACA,yBACA,qBACA,eACA,cACA,wBACA,gBACA,8BACA,YACA,WACA,oBACA,OACA,aACA,eACA,UACA,QACA,SACA,YACA,qBACA,YACA,OACA,QACA,eACA,eACA,iBACA,cACA,cACA,cACA,UACA,qBACA,oBACA,oBACA,+BACA,+BACA,mBACA,0BACA,yBACA,eACA,qBACA,sBACA,eACA,eACA,gBACA,iBACA,0BACA,0BACA,cACA,eACA,qBACA,oBACA,cACA,cACA,cACA,cACA,aACA,gBACA,gBACA,cACA,wBACA,qBACA,yBACA,WACA,yBACA,oBACA,0BACA,6BACA,mBACA,qBACA,yBACA,qBACA,oBACA,wBACA,oBACA,wBACA,iCACA,kBACA,oBACA,2BACA,sBACA,mBACA,qBACA,WACA,sCACA,mBACA,iBACA,iBACA,oBACA,cACA,aACA,qBACA,yBACA,oBACA,eACA,oBACA,0BACA,gCACA,wBACA,6BACA,8BACA,8BACA,2BACA,yBACA,oBACA,oBACA,oBACA,oBACA,oBACA,2BACA,oBACA,oBACA,wBACA,yBACA,qBACA,yBACA,+BACA,wBACA,mBACA,yBACA,mBACA,iBACA,qBACA,2BACA,yBACA,wBACA,wBACA,0BACA,cACA,qBACA,kBACA,qBACA,qBACA,qBACA,kBACA,kBACA,YACA,gBACA,iBACA,2BACA,kBACA,mBACA,iBACA,YACA,qBACA,yBACA,YACA,gBACA,WACA,iBACA,aACA,mBACA,mBACA,sBACA,4BACA,4BACA,kCACA,kCACA,gCACA,gCACA,sCACA,sCACA,sBACA,gCACA,gCACA,sBACA,8BACA,8BACA,iBACA,sBACA,sBACA,oBACA,WACA,eACA,oBACA,qBACA,yBACA,2BACA,UACA,iBACA,qBACA,gBACA,mBACA,gBACA,iBACA,gBACA,kBACA,mBACA,mBACA,iBACA,kBACA,wBACA,iBACA,qBACA,4BACA,kBACA,eACA,mBACA,eACA,gBACA,kBACA,iBACA,cACA,gBACA,eACA,oBACA,qBACA,oBACA,wBACA,4BACA,gBACA,gBACA,gBACA,gBACA,sBACA,6BACA,yBACA,kCACA,wBACA,yBACA,oBACA,uBACA,oBACA,yBACA,8BACA,+BACA,0BACA,8BACA,6BACA,8BACA,uBACA,2BACA,8BACA,4BACA,0BACA,2BACA,8BACA,0BACA,8BACA,2BACA,mCACA,0CACA,gCACA,kCACA,iCACA,wCACA,qCACA,wCACA,sCACA,qCACA,uCACA,sCACA,gCACA,8BACA,+BACA,gCACA,mCACA,+BACA,wBACA,oBACA,qBACA,qBACA,oBACA,oBACA,wBACA,oBACA,4BACA,oBACA,oBACA,yBACA,8BACA,0BACA,iCACA,0BACA,yBACA,4BACA,qBACA,yBACA,4BACA,uBACA,wBACA,0BACA,iCACA,gCACA,kCACA,6BACA,qBACA,yBACA,kCACA,wBACA,oBACA,iCACA,yBACA,6BACA,sCACA,+BACA,kCACA,mCACA,mCACA,mCACA,mCACA,mCACA,mCACA,mCACA,mCACA,mCACA,uBACA,2BACA,0BACA,2BACA,0BACA,wBACA,yBACA,uBACA,uBACA,sBACA,sBACA,sBACA,0BACA,wBACA,mCACA,iCACA,8BACA,kCACA,wBACA,+BACA,qBACA,yBACA,yBACA,yBACA,iBACA,aACA,aACA,0BACA,6BACA,cACA,aACA,aACA,SACA,oBACA,SACA,sBACA,kBACA,+BACA,YACA,SACA,mBACA,gBACA,yBACA,4BACA,qBACA,MACA,aACA,oBACA,eACA,qBACA,eACA,mBACA,kBACA,4BACA,uBACA,2BACA,uBACA,cACA,mBACA,gBACA,UACA,eACA,iBACA,SACA,aACA,mBACA,2BACA,aACA,iBACA,cACA,eACA,SACA,cACA,cACA,YACA,4BACA,8BACA,8BACA,4BACA,6BACA,+BACA,UACA,WACA,WACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,WACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,WACA,YACA,YACA,WACA,WACA,WACA,WACA,WACA,WACA,aACA,mBACA,aACA,qBACA,qBACA,2BACA,qBACA,2BACA,uBACA,uBACA,mBACA,8BACA,8BACA,8BACA,8BACA,8BACA,8BACA,2BACA,2BACA,qBACA,6BACA,oBACA,kBACA,qBACA,kBACA,iBACA,iBACA,iBACA,YACA,UACA,cACA,kBACA,kBACA,gBACA,2BACA,qBACA,4BACA,6BACA,4BACA,oCACA,iCACA,iCACA,kCACA,4BACA,wCACA,8BACA,WACA,YACA,eACA,iBACA,oBACA,WACA,oBACA,gBACA,cACA,gBACA,QACA,wBACA,OACA,cACA,oBACA,cACA,oBACA,YACA,cACA,YACA,eACA,mBACA,gBACA,YACA,aACA,QACA,aACA,YACA,aACA,kBACA,kBACA,aACA,cACA,gBACA,mBACA,oBACA,2BACA,YACA,cACA,MACA,UACA,WACA,uBACA,gCACA,uCACA,wBACA,0BACA,sBACA,8CACA,4CACA,iBACA,yBACA,kCACA,sBACA,uBACA,uBACA,wBACA,iBACA,eACA,eACA,cACA,eACA,0BACA,wBACA,+BACA,+BACA,mBACA,qCACA,sBACA,sBACA,iCACA,oBACA,qBACA,qBACA,mBACA,oBACA,SACA,aACA,gBACA,eACA,+BACA,oBACA,8BACA,2BACA,0BACA,gCACA,0BACA,4BACA,oBACA,oBACA,oBACA,sBACA,iBACA,yBACA,yBACA,uBACA,6BACA,cACA,WACA,MACA,kBACA,eACA,mBACA,MACA,wBACA,mBACA,qBACA,YACA,cACA,sBACA,eACA,iCACA,iCACA,kCACA,kCACA,uBACA,MACA,cACA,cACA,aACA,oBACA,iBACA,qBACA,+BACA,qBACA,kBACA,iBACA,iBACA,SACA,UACA,iBACA,cACA,uBACA,qCACA,8BACA,oCACA,8BACA,8BACA,iCACA,8BACA,2BACA,6BACA,2BACA,gBACA,WACA,gBACA,UACA,WACA,gBACA,YACA,wBACA,iBACA,kBACA,gBACA,cACA,SACA,oBACA,SACA,YACA,gBACA,uBACA,mBACA,iBACA,cACA,qBACA,wBACA,uBACA,qBACA,qBACA,WACA,mBACA,aACA,iBACA,UACA,UACA,UACA,cACA,yBACA,kBACA,cACA,oBACA,mBACA,eACA,aACA,oBACA,wBACA,eACA,cACA,6BACA,YACA,eACA,yBACA,uBACA,mBACA,yBACA,uBACA,oBACA,sBACA,uBACA,wBACA,yBACA,kBACA,sBACA,0BACA,gBACA,gBACA,sBACA,6BACA,wBACA,kBACA,oBACA,yBACA,kBACA,wCACA,cACA,mBACA,qBACA,yBACA,wBACA,YACA,qBACA,mBACA,kBACA,kBACA,uBACA,2BACA,0BACA,0BACA,gCACA,sBACA,2BACA,gCACA,mBACA,2BACA,uBACA,yBACA,uBACA,+BACA,gCACA,oBACA,qBACA,4BACA,6BACA,iBACA,qBACA,gBACA,wBACA,kBACA,gBACA,kBACA,kBACA,eACA,aACA,kBACA,sBACA,iBACA,iBACA,mBACA,iBACA,uBACA,kBACA,aACA,iBACA,sBACA,kBACA,mBACA,qBACA,sBACA,sBACA,mBACA,iBACA,cACA,oBACA,0BACA,sBACA,uBACA,mBACA,wBACA,wBACA,kBACA,wBACA,uBACA,mBACA,wBACA,2BACA,2BACA,iCACA,mBACA,aACA,SACA,SACA,UACA,iBACA,8BACA,cACA,iBACA,4BACA,0BACA,8BACA,uBACA,gBACA,qCACA,iBACA,iBACA,kBACA,kBACA,cACA,0BACA,oBACA,UACA,kBACA,kBACA,gBACA,qBACA,qBACA,4BACA,UACA,SACA,QACA,mBACA,wBACA,gBACA,mBACA,YACA,iBACA,UACA,WACA,gCACA,gCACA,SACA,eACA,aACA,eACA,gBACA,OACA,SACA,SACA,mBACA,mBACA,mBACA,mBACA,UACA,YACA,gBACA,IACA,QACA,OACA,QACA,UACA,MACA,WACA,eACA,+BACA,cACA,SACA,gBACA,aACA,YACA,iBACA,WACA,OACA,QACA,SACA,YACA,UACA,YACA,SACA,aACA,gBACA,sBACA,oBACA,gBACA,mBACA,0BACA,2BACA,wBACA,yBACA,MACA,SACA,cACA,eACA,eACA,SACA,aACA,mBACA,YACA,gBACA,aACA,kBACA,YACA,cACA,YACA,WACA,cACA,UACA,aACA,WACA,YACA,UACA,kBACA,kBACA,YACA,eACA,WACA,iBACA,sBACA,QACA,aACA,iBACA,kBACA,SACA,UACA,cACA,YACA,qBACA,MACA,UACA,QACA,QACA,QACA,YACA,QACA,gBACA,cACA,aACA,eACA,aACA,YACA,oBACA,aACA,MACA,aACA,QACA,kBACA,sBACA,oBACA,kBACA,gBACA,gBACA,QACA,MACA,cACA,UACA,SACA,UACA,YACA,mBACA,aACA,WACA,mBACA,YACA,kBACA,SACA,aACA,eACA,UACA,MACA,QACA,sBACA,kBACA,UACA,UACA,uBACA,gCACA,sBACA,iBACA,YACA,kBACA,sBACA,qBACA,sBACA,4BACA,iBACA,uBACA,4BACA,iBACA,qBACA,oBACA,oBACA,0BACA,gBACA,qBACA,qBACA,0BACA,mBACA,cACA,YACA,qBACA,MACA,MACA,cACA,kBACA,UACA,mBACA,aACA,aACA,SACA,eACA,cACA,aACA,aACA,eACA,cACA,aACA,eACA,kBACA,oBACA,UACA,mBACA,uBACA,QACA,mBACA,eACA,MACA,QACA,UACA,QACA,YACA,aACA,mBACA,WACA,cACA,eACA,eACA,cACA,cACA,kBACA,eACA,eACA,eACA,aACA,mBACA,YACA,YACA,WACA,YACA,gBACA,sBACA,kBACA,kBACA,eACA,cACA,eACA,eACA,eACA,sBACA,eACA,eACA,cACA,eACA,cACA,WACA,eACA,eACA,eACA,gBACA,cACA,SACA,UACA,KACA,SACA,UACA,OACA,QACA,SACA,SACA,mBACA,gBACA,eACA,QACA,gBACA,QACA,OACA,QACA,QACA,OACA,cACA,kBACA,eACA,eACA,cACA,SACA,oBACA,aACA,WACA,kBACA,gBACA,qBACA,oBACA,oBACA,aACA,cACA,qBACA,cACA,eACA,4BACA,oBACA,gBACA,aACA,iBACA,eACA,cACA,YACA,iBACA,WACA,cACA,YACA,WACA,aACA,eACA,YACA,WACA,KACA,OACA,OACA,KACA,UACA,IACA,OACA,sBACA,qBACA,aACA,wBACA,wBACA,kBACA,mBACA,mBACA,oBACA,sBACA,wBACA,wBACA,oBACA,kBACA,uBACA,sBACA,iBACA,kBACA,kBACA,kBACA,mBACA,qBACA,sBACA,sBACA,mBACA,iBACA,WACA,QACA,UACA,iBACA,iBACA,cACA,YACA,WACA,aACA,UACA,UACA,gBACA,UACA,OACA,SACA,eACA,iBACA,YACA,aACA,yBACA,WACA,iBACA,eACA,eACA,OACA,gBACA,UACA,eACA,OACA,MACA,WACA,YACA,aACA,OACA,qBACA,aACA,iBACA,kBACA,kBACA,mBACA,cACA,cACA,wBACA,kBACA,aACA,gBACA,wBACA,YACA,oBACA,QACA,kBACA,OACA,aACA,iBACA,YACA,aACA,OACA,YACA,OACA,OACA,WACA,OACA,YACA,eACA,SACA,eACA,qBACA,mBACA,yBACA,yBACA,yBACA,qBACA,2BACA,2BACA,2BACA,qBACA,qBACA,gBACA,sBACA,4BACA,6BACA,sBACA,sBACA,kBACA,eACA,wBACA,0BACA,eACA,sBACA,sBACA,qBACA,sBACA,qBACA,gBACA,sBACA,oBACA,0BACA,0BACA,0BACA,sBACA,4BACA,4BACA,4BACA,sBACA,sBACA,cACA,oBACA,oBACA,oBACA,gBACA,eACA,qBACA,qBACA,qBACA,iBACA,0BACA,4BACA,eACA,aACA,mBACA,yBACA,0BACA,mBACA,mBACA,eACA,cACA,mBACA,iBACA,sBACA,sBACA,sBACA,mBACA,wBACA,wBACA,wBACA,mBACA,mBACA,eACA,oBACA,yBACA,0BACA,oBACA,oBACA,gBACA,iBACA,cACA,kBACA,mBACA,qBACA,uBACA,cACA,oBACA,oBACA,mBACA,oBACA,mBACA,eACA,oBACA,kBACA,uBACA,uBACA,uBACA,oBACA,yBACA,yBACA,yBACA,oBACA,oBACA,aACA,kBACA,kBACA,kBACA,eACA,cACA,mBACA,mBACA,mBACA,gBACA,uBACA,yBACA,cACA,YACA,iBACA,sBACA,uBACA,iBACA,iBACA,cACA,SACA,eACA,QACA,gBACA,qBACA,iBACA,eACA,cACA,gBACA,SACA,iBACA,uBACA,aACA,aACA,qBACA,YACA,YACA,cACA,eACA,eACA,aACA,cACA,cACA,YACA,kBACA,OACA,UACA,SACA,aACA,cACA,aACA,gBACA,WACA,iBACA,6BACA,UACA,cACA,SACA,WACA,UACA,aACA,aACA,eACA,IACA,QACA,SACA,OACA,SACA,iBACA,eACA,cACA,kBACA,cACA,gBACA,iBACA,cACA,aACA,0BACA,SACA,sBACA,uBACA,eACA,qBACA,wBACA,2BACA,0BACA,aACA,YACA,gBACA,SACA,eACA,UACA,eACA,cACA,UACA,gBACA,oBACA,gBACA,cACA,iBACA,aACA,yBACA,sBACA,OACA,QACA,WACA,OACA,KACA,OACA,YACA,cACA,cACA,QACA,KACA,QACA,QACA,YACA,aACA,iBACA,UACA,eACA,mBACA,wBACA,OACA,SACA,WACA,aACA,YACA,aACA,gBACA,wBACA,eACA,iBACA,WACA,eACA,UACA,QACA,iBACA,yBACA,oBACA,gBACA,UACA,oBACA,YACA,aACA,WACA,SACA,aACA,OACA,OACA,iBACA,UACA,YACA,YACA,UACA,QACA,gBACA,kBACA,gBACA,gBACA,gBACA,iBACA,aACA,YACA,aACA,YACA,iBACA,gBACA,yBACA,aACA,6BACA,gBACA,kBACA,YACA,uBACA,cACA,eACA,eACA,aACA,QACA,aACA,iBACA,eACA,oBACA,aACA,aACA,cACA,YACA,iBACA,cACA,UACA,UACA,OACA,YACA,YACA,aACA,WACA,WACA,gBACA,YACA,WACA,UACA,YACA,gBACA,QACA,gBACA,YACA,aACA,QACA,YACA,SACA,UACA,MACA,QACA,KACA,MACA,OACA,WACA,cACA,WACA,UACA,WACA,gBACA,kBACA,YACA,UACA,QACA,QACA,eACA,sBACA,8BACA,cACA,aACA,qBACA,4BACA,YACA,YACA,OACA,eACA,cACA,aACA,cACA,oBACA,oBACA,oBACA,cACA,eACA,cACA,aACA,YACA,eACA,aACA,kBACA,kBACA,kBACA,aACA,cACA,UACA,UACA,SACA,oBACA,eACA,0BACA,UACA,wBACA,0BACA,mBACA,kBACA,cACA,eACA,aACA,aACA,UACA,gBACA,mBACA,WACA,YACA,qBACA,WACA,eACA,YACA,uBACA,yBACA,uBACA,uBACA,0BACA,0BACA,mBACA,SACA,gBACA,iBACA,iBACA,gBACA,gBACA,oBACA,qBACA,iBACA,UACA,qBACA,uCACA,kCACA,UACA,aACA,eACA,eACA,YACA,aACA,iBACA,kBACA,kBACA,cACA,UACA,cACA,aACA,qBACA,YACA,cACA,YACA,UACA,cACA,gBACA,eACA,gBACA,WACA,eACA,UACA,iBACA,kBACA,kBACA,cACA,kBACA,cACA,oBACA,mBACA,cACA,gBACA,UACA,cACA,cACA,WACA,qBACA,aACA,UACA,oBACA,qBACA,aACA,WACA,eACA,uBACA,sBACA,sBACA,gBACA,0BACA,SACA,gBACA,SACA,oBACA,kBACA,iBACA,oBACA,oBACA,gBACA,aACA,uBACA,0BACA,uBACA,MACA,OACA,QACA,aACA,oBACA,gBACA,cACA,mBACA,eACA,aACA,UACA,WACA,kBACA,SACA,iBACA,eACA,kBACA,oBACA,qBACA,eACA,qBACA,qBACA,sBACA,gBACA,sBACA,wBACA,gBACA,uBACA,2BACA,qBACA,kBACA,mBACA,oBACA,cACA,kBACA,iBACA,yBACA,qBACA,2BACA,gBACA,kBACA,wBACA,cACA,oBACA,mBACA,oBACA,iBACA,aACA,iBACA,aACA,qBACA,kBACA,oBACA,kBACA,cACA,uBACA,uBACA,2BACA,kBACA,+BACA,0BACA,+BACA,oBACA,mBACA,qBACA,qBACA,oBACA,kBACA,cACA,mBACA,eACA,gBACA,qBACA,eACA,cACA,8BACA,gBACA,cACA,uBACA,cACA,wBACA,eACA,qBACA,iBACA,kBACA,kBACA,kBACA,yBACA,yBACA,4BACA,kCACA,kCACA,wCACA,wCACA,sCACA,sCACA,4CACA,4CACA,4BACA,sCACA,sCACA,4BACA,oCACA,oCACA,4BACA,4BACA,iBACA,gBACA,qBACA,+BACA,gBACA,eACA,wBACA,kBACA,gBACA,eACA,mBACA,qBACA,mBACA,cACA,cACA,cACA,iBACA,kBACA,gBACA,cACA,kBACA,0BACA,mBACA,oBACA,mBACA,eACA,cACA,cACA,sBACA,SACA,MACA,MACA,WACA,WACA,UACA,eACA,UACA,WACA,OACA,WACA,mBACA,0BACA,cACA,cACA,cACA,2BACA,eACA,gBACA,aACA,eACA,eACA,gBACA,cACA,mBACA,cACA,SACA,QACA,iBACA,cACA,KACA,KACA,IACA,OACA,UACA,eACA,WACA,kBACA,eACA,UACA,eACA,WACA,YACA,UACA,WACA,KACA,QACA,kBACA,UACA,SACA,kBACA,YACA,qBACA,kBACA,WACA,eACA,UACA,UACA,iBACA,iBACA,eACA,sBACA,gBACA,mBACA,iBACA,kBACA,gBACA,aACA,eACA,cACA,gBACA,QACA,SACA,sBACA,sBACA,mBACA,iBACA,MACA,QACA,YACA,iBACA,SACA,eACA,gBACA,aACA,iBACA,aACA,iBACA,oBACA,qBACA,cACA,eACA,oBACA,gBACA,iBACA,cACA,qBACA,YACA,aACA,gBACA,eACA,aACA,cACA,cACA,gBACA,0BACA,oBACA,uBACA,WACA,eACA,iBACA,oBACA,QACA,YACA,SACA,SACA,SACA,oBACA,WACA,YACA,YACA,YACA,aACA,QACA,aACA,YACA,cACA,cACA,aACA,cACA,cACA,iBACA,SACA,cACA,eACA,SACA,UACA,SACA,SACA,SACA,cACA,WACA,eACA,4BACA,mBACA,iBACA,iBACA,qBACA,qBACA,wBACA,aACA,aACA,aACA,kBACA,SACA,aACA,MACA,UACA,YACA,SACA,UACA,0BACA,wBACA,2BACA,WACA,kBACA,aACA,kBACA,gBACA,UACA,YACA,cACA,cACA,gBACA,MACA,UACA,SACA,WACA,WACA,aACA,WACA,UACA,WACA,kBACA,eACA,cACA,UACA,oBACA,cACA,cACA,cACA,2BACA,6BACA,iBACA,aACA,kBACA,SACA,kBACA,oBACA,oBACA,mBACA,OACA,gBACA,SACA,cACA,WACA,WACA,gBACA,aACA,OACA,MACA,OACA,WACA,YACA,aACA,sBACA,2BACA,cACA,sBACA,eACA,wBACA,6BACA,oBACA,YACA,oBACA,oBACA,sBACA,sBACA,qBACA,aACA,qBACA,WACA,OACA,OACA,cACA,YACA,aACA,WACA,SACA,QACA,KACA,KACA,SACA,IACA,WACA,SACA,gBACA,qBACA,gBACA,cACA,UACA,mBACA,gBACA,WACA,oBACA,YACA,UACA,KACA,QACA,SACA,OACA,QACA,cACA,aACA,YACA,cACA,mBACA,SACA,mBACA,oBACA,0BACA,0BACA,UACA,gBACA,SACA,aACA,YACA,qBACA,kBACA,WACA,eACA,UACA,UACA,MACA,eACA,aACA,eACA,cACA,YACA,WACA,UACA,uBACA,QACA,WACA,iBACA,YACA,WACA,eACA,WACA,UACA,YACA,YACA,mBACA,oBACA,uBACA,SACA,QACA,YACA,cACA,YACA,SACA,WACA,OACA,WACA,QACA,aACA,QACA,KACA,YACA,WACA,OACA,cACA,sBACA,aACA,iBACA,uBACA,kBACA,cACA,MACA,SACA,yBACA,UACA,YACA,aACA,iBACA,UACA,aACA,yBACA,QACA,WACA,+BACA,YACA,UACA,SACA,aACA,aACA,eACA,WACA,4BACA,kBACA,cACA,MACA,IACA,OACA,eACA,gBACA,WACA,SACA,aACA,0BACA,WACA,QACA,YACA,gBACA,kBACA,WACA,YACA,QACA,aACA,UACA,UACA,cACA,OACA,kBACA,aACA,mBACA,WACA,WACA,kBACA,WACA,QACA,aACA,OACA,eACA,YACA,gBACA,cACA,WACA,WACA,YACA,WACA,SACA,aACA,aACA,cACA,UACA,UACA,OACA,YACA,WACA,WACA,SACA,WACA,YACA,mBACA,aACA,oBACA,YACA,QACA,QACA,OACA,UACA,OACA,aACA,iBACA,YACA,YACA,cACA,YACA,YACA,gBACA,WACA,WACA,aACA,WACA,QACA,QACA,QACA,UACA,UACA,cACA,gBACA,aACA,eACA,QACA,QACA,QACA,YACA,cACA,OACA,cACA,wBACA,eACA,yBACA,sBACA,YACA,mBACA,eACA,aACA,iBACA,eACA,0BACA,oBACA,0BACA,yBACA,uBACA,wBACA,0BACA,cACA,aACA,sBACA,cACA,uBACA,oBACA,WACA,iBACA,uBACA,cACA,YACA,gBACA,cACA,wBACA,kBACA,uBACA,uBACA,qBACA,sBACA,wBACA,aACA,YACA,YACA,QACA,WACA,MACA,UACA,QACA,cACA,OACA,aACA,WACA,cACA,aACA,iBACA,aACA,SACA,gBACA,QACA,UACA,WACA,WACA,WACA,aACA,KACA,oBACA,QACA,cACA,eACA,eACA,cACA,oBACA,0BACA,uBACA,0BACA,mBACA,SACA,YACA,SACA,YACA,oBACA,OACA,eACA,gBACA,cACA,cACA,mBACA,mBACA,aACA,YACA,WACA,WACA,YACA,SACA,WACA,aACA,aACA,oBACA,oBACA,KACA,KACA,OACA,UACA,QACA,MACA,iBACA,OACA,iBACA,sBACA,cACA,iBACA,kBACA,cACA,gBACA,MACA,kBACA,mBACA,4BACA,iCACA,oBACA,kBACA,SACA,aACA,wBACA,yBACA,gBACA,YACA,cACA,qBACA,oBACA,eACA,iBACA,oBACA,mBACA,qBACA,mBACA,iBACA,kBACA,UACA,aACA,cACA,eACA,UACA,cACA,wBACA,YACA,cACA,qBACA,mBACA,uBACA,wBACA,sBACA,SACA,+BACA,sBACA,kBACA,iBACA,uBACA,oBACA,qBACA,4BACA,gBACA,iBACA,qBACA,6BACA,mBACA,wBACA,oBACA,mBACA,iBACA,aACA,uBACA,yBACA,kBACA,eACA,aACA,qBACA,iBACA,UACA,mBACA,UACA,SACA,0BACA,gBACA,iBACA,gCACA,aACA,eACA,kBACA,sBACA,cACA,iBACA,yBACA,oBACA,uBACA,yBACA,mBACA,uBACA,aACA,mBACA,mBACA,WACA,eACA,kBACA,mBACA,aACA,UACA,WACA,yBACA,kBACA,aACA,aACA,wBACA,yBACA,gBACA,sBACA,eACA,oCACA,uBACA,cACA,cACA,oBACA,qCACA,WACA,uBACA,SACA,eACA,sBACA,0BACA,WACA,WACA,UACA,6BACA,sBACA,UACA,WACA,SACA,eACA,YACA,eACA,cACA,qBACA,qBACA,kBACA,WACA,qBACA,0BACA,cACA,cACA,kBACA,aACA,mBACA,WACA,eACA,iBACA,kCACA,mBACA,cACA,mBACA,0BACA,qBACA,mCACA,mBACA,2BACA,4BACA,sBACA,wBACA,eACA,gBACA,YACA,qBACA,uBACA,mBACA,mBACA,UACA,qBACA,gBACA,uBACA,2BACA,oBACA,oBACA,qBACA,oBACA,sBACA,sBACA,sBACA,uBACA,kBACA,mBACA,iBACA,WACA,oBACA,mBACA,kBACA,aACA,YACA,eACA,eACA,kBACA,mBACA,sBACA,wBACA,sBACA,mBACA,2BACA,oBACA,UACA,cACA,oBACA,iBACA,sBACA,eACA,aACA,2BACA,eACA,aACA,aACA,cACA,mBACA,qBACA,2BACA,kBACA,oBACA,eACA,aACA,2BACA,yBACA,eACA,WACA,WACA,qBACA,oBACA,gBACA,iBACA,qBACA,kBACA,0BACA,yBACA,sBACA,mBACA,4BACA,UACA,kBACA,kBACA,UACA,oBACA,YACA,iBACA,eACA,YACA,kBACA,eACA,8BACA,wBACA,gBACA,UACA,iBACA,aACA,YACA,iBACA,cACA,qBACA,gBACA,cACA,gBACA,YACA,YACA,WACA,aACA,uBACA,oBACA,qBACA,eACA,gBACA,YACA,aACA,mBACA,kBACA,wBACA,0BACA,iBACA,gBACA,cACA,YACA,mBACA,YACA,UACA,YACA,SACA,cACA,2BACA,aACA,6BACA,2BACA,WACA,KACA,YACA,OACA,oBACA,gBACA,WACA,QACA,OACA,YACA,oBACA,iBACA,iBACA,cACA,kBACA,kBACA,oBACA,WACA,WACA,eACA,eACA,iBACA,gBACA,sBACA,wBACA,qBACA,WACA,kBACA,eACA,eACA,aACA,gBACA,gBACA,kBACA,UACA,UACA,aACA,aACA,eACA,eACA,oBACA,sBACA,mBACA,YACA,QACA,iBACA,WACA,UACA,iBACA,OACA,aACA,kBACA,sBACA,MACA,eACA,iBACA,gBACA,gBACA,gBACA,iBACA,wBACA,eACA,qBACA,aACA,WACA,cACA,YACA,iBACA,iBACA,oBACA,cACA,aACA,mBACA,OACA,OACA,UACA,UACA,SACA,SACA,OACA,YACA,OACA,gBACA,OACA,UACA,kBACA,kBACA,qBACA,OACA,gBACA,WACA,OACA,gBACA,WACA,SACA,wBACA,UACA,WACA,YACA,wBACA,cACA,UACA,QACA,QACA,qBACA,oBACA,eACA,OACA,UACA,KACA,aACA,WACA,cACA,YACA,aACA,oBACA,oBACA,kBACA,cACA,mBACA,iBACA,aACA,wBACA,wBACA,cACA,aACA,SACA,WACA,UACA,iBACA,YACA,aACA,mBACA,UACA,OACA,OACA,KACA,MACA,MACA,kCACA,UACA,WACA,cACA,gBACA,QACA,aACA,UACA,YACA,WACA,sBACA,sBACA,OACA,OACA,qBACA,sBACA,qBACA,iBACA,mBACA,uBACA,kBACA,WACA,eACA,wBACA,6BACA,gBACA,iBACA,YACA,iBACA,mBACA,sBACA,eACA,oBACA,0BACA,mBACA,iBACA,uBACA,sBACA,oBACA,mBACA,oBACA,gBACA,0BACA,mBACA,oBACA,oBACA,sBACA,yBACA,mBACA,gBACA,gBACA,iBACA,sBACA,cACA,2BACA,4BACA,uBACA,iBACA,cACA,aACA,gBACA,cACA,aACA,4BACA,QACA,YACA,cACA,YACA,aACA,QACA,cACA,gBACA,cACA,YACA,cACA,eACA,YACA,SACA,wBACA,qBACA,qBACA,eACA,aACA,aACA,aACA,mBACA,aACA,YACA,aACA,QACA,cACA,kBACA,oBACA,eACA,mBACA,qBACA,aACA,gBACA,kBACA,cACA,iBACA,mBACA,aACA,eACA,cACA,uBACA,cACA,QACA,QACA,OACA,YACA,kBACA,YACA,iBACA,gBACA,kBACA,oBACA,oBACA,aACA,iBACA,iBACA,iBACA,oBACA,mBACA,iBACA,WACA,uBACA,wBACA,2BACA,UACA,aACA,KACA,OACA,WACA,cACA,UACA,6BACA,WACA,2BACA,SACA,cACA,cACA,qBACA,cACA,oBACA,6BACA,gBACA,qBACA,cACA,aACA,YACA,UACA,cACA,eACA,sCACA,SACA,WACA,gBACA,WACA,cACA,SACA,sBACA,OACA,aACA,aACA,YACA,iBACA,aACA,QACA,cACA,QACA,SACA,gBACA,gBACA,iBACA,kBACA,kBACA,eACA,YACA,YACA,qBACA,8BACA,gBACA,UACA,iBACA,gBACA,aACA,YACA,WACA,cACA,WACA,kBACA,qBACA,WACA,cACA,SACA,aACA,YACA,sBACA,YACA,kBACA,gDACA,gBACA,SACA,YACA,wBACA,yBACA,YACA,UACA,OACA,SACA,WACA,UACA,YACA,WACA,YACA,QACA,cACA,qBACA,WACA,cACA,WACA,OACA,OACA,kBACA,gBACA,eACA,iBACA,eACA,cACA,KACA,KACA,KACA,KACA,MACA,YACA,eACA,oBACA,oBACA,UACA,MACA,UACA,SACA,gBACA,kBACA,cACA,UACA,cACA,YACA,UACA,WACA,WACA,OACA,UACA,OACA,OACA,QACA,SACA,OACA,WACA,YACA,eACA,YACA,mBACA,cACA,YACA,cACA,gBACA,YACA,qBACA,kBACA,eACA,mBACA,WACA,YACA,YACA,oBACA,WACA,SACA,SACA,aACA,aACA,iBACA,iBACA,iBACA,iBACA,SACA,OACA,cACA,cACA,aACA,uBACA,iBACA,SACA,eACA,mBACA,iBACA,gBACA,QACA,iBACA,gBACA,oBACA,OACA,aACA,cACA,YACA,YACA,UACA,iBACA,aACA,WACA,aACA,SACA,YACA,qBACA,0BACA,iBACA,SACA,QACA,OACA,YACA,cACA,QACA,OACA,aACA,mBACA,sBACA,kBACA,YACA,iBACA,oBACA,gBACA,WACA,OACA,eACA,iBACA,WACA,YACA,SACA,UACA,mBACA,YACA,eACA,eACA,SACA,gBACA,WACA,cACA,OACA,SACA,aACA,QACA,MACA,QACA,QACA,OACA,cACA,cACA,WACA,YACA,qBACA,eACA,OACA,UACA,YACA,UACA,MACA,QACA,aACA,YACA,SACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,mBACA,WACA,eACA,mBACA,MACA,UACA,SACA,eACA,mBACA,qBACA,gBACA,gBACA,oBACA,sBACA,cACA,eACA,aACA,cACA,iBACA,mBACA,eACA,eACA,eACA,kBACA,oBACA,aACA,cACA,YACA,cACA,OACA,SACA,aACA,aACA,gBACA,eACA,YACA,eACA,YACA,eACA,cACA,cACA,cACA,QACA,OACA,YACA,iBACA,aACA,YACA,cACA,gBACA,kBACA,kBACA,cACA,YACA,YACA,WACA,gBACA,mBACA,YACA,WACA,aACA,eACA,gBACA,gBACA,aACA,WACA,WACA,YACA,QACA,WACA,aACA,cACA,UACA,SACA,kBACA,MACA,iBACA,aACA,kBACA,YACA,aACA,kBACA,eACA,kBACA,cACA,0BACA,cACA,cACA,YACA,gBACA,YACA,YACA,iBACA,oBACA,iBACA,iBACA,WACA,WACA,UACA,cACA,QACA,oBACA,eACA,eACA,aACA,YACA,eACA,cACA,YACA,cACA,SACA,UACA,kBACA,UACA,eACA,kBACA,cACA,UACA,WACA,SACA,gBACA,aACA,MACA,WACA,YACA,MACA,iBACA,aACA,kBACA,YACA,eACA,cACA,YACA,gBACA,YACA,WACA,WACA,aACA,iBACA,eACA,KACA,OACA,SACA,QACA,OACA,SACA,UACA,YACA,gBACA,gBACA,iBACA,cACA,WACA,UACA,YACA,SACA,iBACA,oBACA,cACA,YACA,YACA,SACA,wBACA,UACA,UACA,mBACA,sBACA,qBACA,0BACA,sBACA,iCACA,mBACA,6BACA,iBACA,aACA,cACA,sBACA,sBACA,6BACA,YACA,UACA,gBACA,mBACA,qBACA,cACA,iBACA,gBACA,gBACA,uBACA,uBACA,YACA,gBACA,eACA,eACA,iBACA,kBACA,cACA,aACA,YACA,2BACA,eACA,kBACA,kBACA,iBACA,iBACA,UACA,eACA,WACA,YACA,qBACA,qBACA,eACA,eACA,YACA,iBACA,gBACA,mBACA,kBACA,SACA,wBACA,qBACA,oBACA,cACA,mBACA,qBACA,uBACA,2BACA,YACA,2BACA,uBACA,wBACA,eACA,qBACA,gBACA,eACA,YACA,eACA,eACA,aACA,uBACA,mBACA,qBACA,KACA,cACA,mBACA,uBACA,sBACA,sBACA,4BACA,kBACA,uBACA,uBACA,4BACA,uBACA,qBACA,6BACA,YACA,mBACA,gCACA,uBACA,mBACA,UACA,wBACA,sBACA,qBACA,wBACA,wBACA,oBACA,0BACA,wBACA,mBACA,eACA,WACA,eACA,sBACA,qBACA,mBACA,iBACA,aACA,eACA,SACA,cACA,kBACA,aACA,kBACA,iBACA,iBACA,cACA,aACA,iBACA,sBACA,aACA,aACA,aACA,wBACA,sBACA,sBACA,oBACA,qBACA,2BACA,wBACA,eACA,oBACA,mBACA,gBACA,YACA,iBACA,gBACA,aACA,WACA,uBACA,wBACA,wBACA,uBACA,YACA,0BACA,aACA,cACA,sBACA,iBACA,cACA,SACA,cACA,oBACA,6BACA,eACA,oBACA,mBACA,gBACA,kBACA,gBACA,sBACA,mBACA,6BACA,kBACA,mBACA,mBACA,0BACA,0BACA,sBACA,aACA,mBACA,mBACA,gBACA,oBACA,oBACA,oBACA,oBACA,gBACA,sBACA,sBACA,mBACA,gBACA,gBACA,sBACA,iBACA,iBACA,sBACA,0BACA,mBACA,WACA,gBACA,gBACA,gCACA,+BACA,iCACA,gCACA,cACA,oBACA,mBACA,eACA,oBACA,uBACA,uBACA,6BACA,sBACA,gCACA,eACA,oBACA,aACA,eACA,gBACA,sBACA,SACA,WACA,KACA,MACA,aACA,oBACA,YACA,WACA,WACA,eACA,cACA,QACA,IACA,OACA,WACA,YACA,iBACA,QACA,eACA,aACA,gBACA,eACA,WACA,aACA,iBACA,oBACA,kBACA,YACA,OACA,yBACA,WACA,aACA,WACA,eACA,WACA,eACA,SACA,WACA,yBACA,aACA,UACA,OACA,qBACA,kBACA,WACA,WACA,cACA,WACA,SACA,WACA,WACA,UACA,aACA,SACA,OACA,WACA,WACA,YACA,QACA,YACA,wBACA,eACA,YACA,OACA,cACA,UACA,SACA,SACA,MACA,aACA,SACA,mBACA,iBACA,gBACA,kBACA,cACA,mBACA,SACA,aACA,kBACA,YACA,iBACA,cACA,mBACA,aACA,UACA,KACA,qBACA,SACA,gBACA,kBACA,cACA,gBACA,eACA,iBACA,eACA,aACA,aACA,eACA,aACA,eACA,YACA,cACA,UACA,UACA,KACA,SACA,WACA,aACA,kBACA,SACA,UACA,8BACA,aACA,WACA,oBACA,cACA,aACA,eACA,uBACA,gBACA,oBACA,iBACA,uBACA,mBACA,iBACA,aACA,iBACA,eACA,iBACA,sBACA,aACA,mBACA,eACA,cACA,qBACA,oBACA,wBACA,gBACA,gBACA,wBACA,iBACA,iBACA,mBACA,UACA,YACA,SACA,WACA,aACA,sBACA,WACA,WACA,wBACA,wBACA,0BACA,YACA,mBACA,OACA,eACA,WACA,+BACA,mBACA,uBACA,aACA,UACA,UACA,YACA,4BACA,aACA,YACA,eACA,wBACA,0BACA,gBACA,qBACA,kBACA,SACA,cACA,QACA,kBACA,gBACA,mBACA,oBACA,aACA,eACA,iBACA,gBACA,iBACA,sBACA,8BACA,oBACA,0BACA,eACA,YACA,gBACA,SACA,YACA,cACA,aACA,cACA,aACA,cACA,SACA,mBACA,YACA,cACA,QACA,UACA,UACA,0BACA,UACA,gBACA,SACA,iBACA,WACA,UACA,YACA,aACA,aACA,WACA,qBACA,oBACA,yBACA,2BACA,kBACA,eACA,iBACA,sBACA,eACA,SACA,iBACA,sBACA,6BACA,4BACA,aACA,UACA,uBACA,YACA,YACA,aACA,sBACA,UACA,mBACA,mBACA,0BACA,gBACA,SACA,eACA,mBACA,YACA,YACA,gBACA,iBACA,cACA,gBACA,uBACA,OACA,SACA,YACA,iBACA,gBACA,cACA,eACA,eACA,cACA,aACA,cACA,YACA,eACA,SACA,YACA,cACA,wBACA,uBACA,yBACA,yBACA,wBACA,kBACA,uBACA,sBACA,oBACA,uBACA,iBACA,kBACA,mBACA,iBACA,wBACA,mBACA,yBACA,+BACA,cACA,wBACA,oBACA,kBACA,mBACA,mBACA,mBACA,kBACA,iBACA,kBACA,gBACA,kCACA,qBACA,SACA,sBACA,YACA,aACA,aACA,YACA,WACA,SACA,sBACA,eACA,aACA,aACA,UACA,UACA,sBACA,wBACA,SACA,YACA,sBACA,kBACA,gBACA,iBACA,iBACA,sBACA,qBACA,gBACA,eACA,gBACA,qBACA,cACA,aACA,mBACA,aACA,mBACA,eACA,YACA,qBACA,qBACA,YACA,WACA,uBACA,iBACA,gBACA,WACA,UACA,WACA,cACA,gBACA,6BACA,WACA,WACA,aACA,YACA,eACA,iBACA,WACA,WACA,4BACA,WACA,YACA,WACA,gCACA,cACA,oBACA,gBACA,0BACA,yBACA,SACA,yBACA,aACA,eACA,gBACA,iBACA,gBACA,eACA,cACA,gBACA,YACA,eACA,iBACA,YACA,UACA,gBACA,SACA,YACA,kBACA,WACA,YACA,YACA,cACA,cACA,YACA,eACA,WACA,eACA,gBACA,aACA,cACA,eACA,UACA,qBACA,kBACA,kBACA,oBACA,uBACA,WACA,WACA,WACA,cACA,gBACA,gBACA,gBACA,kBACA,kBACA,kBACA,qBACA,kBACA,iBACA,sBACA,qBACA,wBACA,wBACA,2BACA,YACA,kBACA,YACA,uBACA,6BACA,yBACA,iDACA,2BACA,0BACA,mBACA,mBACA,qBACA,kBACA,4BACA,4CACA,4BACA,2BACA,mCACA,wBACA,UACA,SACA,UACA,OACA,aACA,eACA,gBACA,SACA,SACA,QACA,gBACA,WACA,MACA,UACA,UACA,KACA,QACA,SACA,SACA,UACA,MACA,eACA,SACA,cACA,aACA,cACA,eACA,eACA,eACA,SACA,iBACA,iBACA,UACA,QACA,YACA,cACA,YACA,aACA,UACA,gBACA,iBACA,gBACA,gBACA,eACA,gBACA,eACA,eACA,eACA,gBACA,UACA,WACA,kBACA,iBACA,kBACA,gBACA,aACA,aACA,iBACA,gBACA,iBACA,eACA,YACA,YACA,mBACA,aACA,sBACA,4BACA,6BACA,wBACA,wBACA,qBACA,0BACA,2BACA,sBACA,sBACA,UACA,gBACA,eACA,YACA,YACA,kBACA,gBACA,KACA,KACA,KACA,KACA,aACA,UACA,MACA,SACA,WACA,UACA,gBACA,oBACA,sBACA,iBACA,iBACA,qBACA,uBACA,eACA,gBACA,cACA,eACA,kBACA,oBACA,gBACA,gBACA,mBACA,qBACA,cACA,eACA,aACA,OACA,mBACA,oBACA,oBACA,iBACA,kBACA,kBACA,YACA,WACA,UACA,QACA,cACA,QACA,cACA,QACA,cACA,aACA,gBACA,YACA,eACA,UACA,MACA,eACA,aACA,SACA,gBACA,aACA,aACA,mBACA,iBACA,eACA,QACA,WACA,aACA,kBACA,WACA,OACA,eACA,UACA,WACA,YACA,OACA,aACA,cACA,cACA,sBACA,WACA,UACA,sBACA,kBACA,mBACA,eACA,QACA,kBACA,cACA,iBACA,yBACA,SACA,aACA,YACA,aACA,iBACA,KACA,eACA,UACA,0BACA,2BACA,UACA,cACA,eACA,aACA,kBACA,cACA,UACA,YACA,cACA,cACA,qBACA,oBACA,QACA,qBACA,oBACA,QACA,0BACA,0BACA,yBACA,OACA,cACA,SACA,QACA,cACA,aACA,cACA,YACA,aACA,cACA,WACA,yBACA,yBACA,aACA,gBACA,cACA,aACA,eACA,aACA,YACA,cACA,WACA,YACA,OACA,aACA,YACA,eACA,gBACA,eACA,SACA,mBACA,cACA,UACA,cACA,QACA,iBACA,6BACA,iBACA,gBACA,YACA,qBACA,cACA,SACA,YACA,YACA,YACA,gBACA,MACA,iBACA,sBACA,kBACA,iBACA,OACA,QACA,QACA,QACA,YACA,YACA,UACA,WACA,SACA,WACA,OACA,WACA,gBACA,YACA,YACA,YACA,YACA,cACA,aACA,SACA,MACA,iBACA,WACA,kBACA,YACA,yBACA,yBACA,SACA,UACA,UACA,eACA,gBACA,sBACA,4BACA,UACA,WACA,YACA,iBACA,oBACA,sBACA,yBACA,eACA,eACA,eACA,gBACA,kBACA,oBACA,aACA,gBACA,iBACA,aACA,QACA,WACA,aACA,0BACA,UACA,oBACA,gBACA,kBACA,UACA,YACA,cACA,aACA,UACA,aACA,WACA,mBACA,UACA,SACA,aACA,uBACA,eACA,WACA,eACA,YACA,WACA,cACA,gBACA,KACA,WACA,YACA,YACA,QACA,OACA,cACA,mBACA,YACA,MACA,eACA,KACA,mBACA,YACA,aACA,QACA,sBACA,uBACA,oBACA,wBACA,mBACA,oBACA,gBACA,mBACA,iBACA,QACA,SACA,IACA,KACA,KACA,OACA,MACA,aACA,UACA,UACA,SACA,QACA,aACA,WACA,WACA,cACA,gBACA,cACA,iBACA,OACA,QACA,MACA,QACA,OACA,oBACA,qBACA,aACA,gBACA,aACA,aACA,cACA,WACA,aACA,sBACA,WACA,YACA,WACA,QACA,aACA,SACA,SACA,gBACA,WACA,YACA,YACA,YACA,eACA,mBACA,YACA,OACA,MACA,kBACA,WACA,gBACA,cACA,gBACA,aACA,SACA,cACA,YACA,cACA,OACA,OACA,gBACA,iBACA,WACA,iBACA,UACA,SACA,gBACA,gBACA,WACA,UACA,WACA,yBACA,kBACA,mBACA,0BACA,SACA,MACA,UACA,iBACA,cACA,cACA,gBACA,UACA,iBACA,gBACA,mBACA,cACA,wBACA,wBACA,WACA,gBACA,SACA,MACA,iBACA,SACA,oBACA,SACA,kBACA,kBACA,oBACA,sBACA,iBACA,cACA,YACA,sBACA,eACA,eACA,aACA,iBACA,kBACA,oBACA,aACA,kBACA,iBACA,cACA,eACA,aACA,sCACA,qBACA,eACA,cACA,iBACA,yBACA,iCACA,UACA,eACA,eACA,cACA,aACA,cACA,sBACA,iCACA,iBACA,gBACA,WACA,SACA,UACA,sBACA,aACA,eACA,kBACA,cACA,YACA,cACA,cACA,eACA,cACA,eACA,mBACA,cACA,iBACA,UACA,wBACA,sBACA,cACA,gBACA,eACA,oBACA,uBACA,wCACA,YACA,sBACA,oBACA,8BACA,oBACA,0BACA,qBACA,iBACA,wBACA,iBACA,eACA,uBACA,gBACA,4BACA,mBACA,qBACA,WACA,qBACA,mBACA,QACA,YACA,iBACA,SACA,WACA,WACA,UACA,WACA,eACA,cACA,gBACA,gBACA,eACA,eACA,cACA,cACA,aACA,UACA,SACA,cACA,aACA,UACA,SACA,kBACA,0BACA,QACA,cACA,MACA,UACA,WACA,YACA,kBACA,WACA,QACA,eACA,eACA,cACA,wBACA,kBACA,OACA,gBACA,OACA,aACA,cACA,aACA,SACA,kBACA,sBACA,mBACA,uBACA,aACA,WACA,gBACA,eACA,QACA,UACA,SACA,WACA,UACA,OACA,gBACA,MACA,aACA,gBACA,YACA,eACA,eACA,QACA,UACA,eACA,KACA,KACA,IACA,SACA,SACA,iBACA,aACA,oBACA,oBACA,UACA,OACA,WACA,QACA,UACA,cACA,kBACA,sBACA,YACA,SACA,UACA,QACA,YACA,SACA,SACA,mBACA,gBACA,aACA,2BACA,2BACA,YACA,UACA,UACA,YACA,UACA,SACA,kBACA,gBACA,sBACA,0BACA,4BACA,uBACA,uBACA,2BACA,6BACA,qBACA,sBACA,oBACA,iBACA,uBACA,2BACA,6BACA,wBACA,wBACA,4BACA,8BACA,sBACA,uBACA,qBACA,oBACA,mBACA,eACA,iBACA,WACA,gBACA,gBACA,cACA,eACA,iBACA,yBACA,aACA,gBACA,eACA,oBACA,uBACA,yBACA,qBACA,qBACA,wBACA,0BACA,mBACA,oBACA,kBACA,aACA,aACA,gBACA,qBACA,wBACA,0BACA,sBACA,sBACA,yBACA,2BACA,oBACA,qBACA,mBACA,oBACA,kBACA,iBACA,WACA,YACA,eACA,cACA,UACA,UACA,kBACA,kBACA,wBACA,sBACA,qBACA,iBACA,2BACA,qBACA,0BACA,uBACA,sBACA,iBACA,aACA,YACA,mBACA,OACA,gBACA,MACA,gBACA,gBACA,SACA,OACA,SACA,YACA,uBACA,eACA,kBACA,wBACA,WACA,OACA,kBACA,WACA,UACA,SACA,oBACA,2BACA,sBACA,aACA,qBACA,cACA,mBACA,kBACA,WACA,gBACA,kBACA,wBACA,wBACA,YACA,qBACA,eACA,iBACA,WACA,eACA,OACA,OACA,eACA,aACA,SACA,YACA,gBACA,YACA,eACA,oBACA,eACA,UACA,gBACA,UACA,YACA,iBACA,MACA,mBACA,YACA,WACA,cACA,eACA,iBACA,mBACA,qBACA,mBACA,cACA,eACA,8BACA,aACA,sBACA,WACA,wBACA,mBACA,iBACA,oBACA,UACA,UACA,eACA,SACA,cACA,eACA,cACA,eACA,eACA,aACA,aACA,gBACA,eACA,cACA,iBACA,WACA,sBACA,eACA,WACA,WACA,UACA,cACA,UACA,eACA,aACA,cACA,cACA,eACA,uBACA,sBACA,YACA,iBACA,eACA,kBACA,aACA,gBACA,WACA,eACA,iBACA,2BACA,mBACA,kBACA,iBACA,mCACA,WACA,eACA,gBACA,kBACA,oBACA,cACA,mBACA,gBACA,cACA,iBACA,cACA,sBACA,YACA,eACA,uBACA,mBACA,eACA,8BACA,YACA,WACA,aACA,oBACA,uBACA,YACA,YACA,WACA,WACA,WACA,gBACA,iBACA,kBACA,aACA,iBACA,iBACA,mBACA,kBACA,uBACA,UACA,aACA,eACA,eACA,aACA,iBACA,cACA,qBACA,gBACA,cACA,gBACA,YACA,YACA,WACA,SACA,cACA,iBACA,sBACA,cACA,cACA,aACA,UACA,cACA,eACA,MACA,eACA,aACA,cACA,gBACA,gBACA,aACA,QACA,wBACA,eACA,gBACA,kBACA,sBACA,cACA,eACA,iBACA,QACA,QACA,WACA,YACA,kBACA,iBACA,eACA,OACA,WACA,YACA,kBACA,qBACA,mBACA,UACA,OACA,SACA,iBACA,YACA,SACA,MACA,kBACA,OACA,SACA,6BACA,OACA,gBACA,QACA,QACA,QACA,QACA,YACA,QACA,YACA,QACA,QACA,OACA,QACA,OACA,SACA,wBACA,cACA,eACA,iBACA,OACA,OACA,cACA,SACA,eACA,gBACA,qBACA,aACA,cACA,UACA,UACA,OACA,QACA,UACA,WACA,UACA,YACA,mBACA,mBACA,kBACA,QACA,eACA,aACA,SACA,QACA,YACA,eACA,OACA,MACA,aACA,YACA,YACA,SACA,SACA,UACA,SACA,QACA,kBACA,aACA,kBACA,aACA,UACA,QACA,iBACA,WACA,gBACA,qBACA,cACA,iBACA,iBACA,aACA,YACA,aACA,QACA,SACA,aACA,gBACA,aACA,YACA,gBACA,gBACA,cACA,sBACA,cACA,sBACA,YACA,oBACA,OACA,WACA,eACA,SACA,SACA,cACA,OACA,aACA,eACA,YACA,2BACA,oBACA,cACA,gBACA,kBACA,YACA,UACA,UACA,cACA,cACA,gBACA,QACA,qCACA,gCACA,aACA,SACA,UACA,UACA,SACA,SACA,cACA,YACA,SACA,mBACA,oBACA,iBACA,kBACA,oBACA,iBACA,eACA,kBACA,mBACA,gBACA,iBACA,mBACA,gBACA,aACA,cACA,aACA,cACA,QACA,aACA,WACA,aACA,aACA,iBACA,cACA,MACA,WACA,UACA,SACA,cACA,YACA,YACA,SACA,YACA,gBACA,SACA,UACA,SACA,WACA,UACA,MACA,YACA,4BACA,sBACA,WACA,kBACA,eACA,mBACA,UACA,gBACA,YACA,WACA,YACA,UACA,OACA,eACA,SACA,aACA,WACA,iBACA,aACA,aACA,UACA,QACA,QACA,WACA,QACA,eACA,cACA,cACA,MACA,UACA,SACA,OACA,eACA,YACA,cACA,MACA,qBACA,OACA,SACA,gBACA,gBACA,iBACA,gBACA,UACA,UACA,UACA,MACA,MACA,YACA,OACA,aACA,aACA,gBACA,gBACA,eACA,eACA,gBACA,gBACA,OACA,aACA,kBACA,cACA,uBACA,kBACA,wBACA,uBACA,2BACA,wBACA,4BACA,gBACA,sBACA,yBACA,sBACA,cACA,eACA,mBACA,gBACA,iBACA,cACA,iBACA,wBACA,0BACA,YACA,gBACA,aACA,gBACA,eACA,qBACA,cACA,iBACA,sBACA,sBACA,qBACA,4BACA,qBACA,yBACA,wBACA,sBACA,0BACA,0BACA,eACA,oBACA,uBACA,oBACA,aACA,cACA,kBACA,cACA,mBACA,aACA,kBACA,eACA,gBACA,aACA,aACA,gBACA,sBACA,wBACA,OACA,WACA,YACA,aACA,QACA,QACA,OACA,UACA,UACA,aACA,gBACA,YACA,WACA,WACA,eACA,UACA,YACA,kBACA,SACA,QACA,KACA,UACA,SACA,YACA,eACA,YACA,gBACA,UACA,iBACA,iBACA,cACA,cACA,SACA,qBACA,iBACA,oBACA,iBACA,qBACA,oBACA,cACA,WACA,WACA,cACA,cACA,QACA,WACA,eACA,WACA,cACA,QACA,eACA,cACA,cACA,SACA,kBACA,yBACA,OACA,aACA,UACA,WACA,UACA,MACA,YACA,QACA,kBACA,mBACA,eACA,cACA,UACA,UACA,QACA,QACA,kBACA,cACA,eACA,cACA,6BACA,0BACA,sBACA,aACA,cACA,eACA,wBACA,YACA,gBACA,mBACA,kBACA,eACA,4BACA,kBACA,iBACA,kBACA,iBACA,sBACA,sBACA,aACA,mBACA,sBACA,sBACA,6BACA,kBACA,qBACA,qBACA,2BACA,YACA,gBACA,eACA,eACA,YACA,OACA,UACA,WACA,YACA,YACA,YACA,QACA,WACA,eACA,OACA,QACA,OACA,aACA,eACA,gBACA,QACA,MACA,SACA,SACA,SACA,QACA,eACA,YACA,WACA,SACA,UACA,eACA,cACA,eACA,YACA,aACA,YACA,aACA,aACA,cACA,YACA,aACA,YACA,aACA,aACA,cACA,YACA,aACA,YACA,aACA,aACA,cACA,YACA,aACA,YACA,aACA,aACA,cACA,sBACA,mBACA,qBACA,qBACA,mBACA,qBACA,qBACA,mBACA,qBACA,qBACA,SACA,WACA,eACA,OACA,WACA,QACA,iBACA,mBACA,SACA,UACA,YACA,UACA,oBACA,cACA,aACA,2BACA,4BACA,cACA,eACA,UACA,cACA,kBACA,qBACA,UACA,YACA,YACA,MACA,MACA,MACA,SACA,iBACA,YACA,iBACA,qBACA,oBACA,iBACA,eACA,iBACA,aACA,UACA,WACA,UACA,SACA,cACA,WACA,QACA,aACA,YACA,MACA,MACA,MACA,OACA,SACA,MACA,kBACA,kBACA,qBACA,iBACA,SACA,aACA,YACA,cACA,iBACA,YACA,aACA,aACA,WACA,eACA,aACA,kBACA,WACA,mBACA,YACA,OACA,kBACA,SACA,QACA,QACA,WACA,kBACA,oBACA,WACA,QACA,cACA,gBACA,gBACA,wBACA,eACA,UACA,YACA,YACA,SACA,WACA,UACA,oBACA,gBACA,eACA,kBACA,oBACA,YACA,YACA,SACA,WACA,YACA,SACA,UACA,iBACA,kBACA,iBACA,kBACA,iBACA,kBACA,iBACA,kBACA,sBACA,2BACA,kBACA,mBACA,mBACA,oBACA,uBACA,sBACA,WACA,iBACA,gBACA,mBACA,KACA,UACA,oBACA,qBACA,cACA,cACA,aACA,OACA,UACA,gBACA,aACA,mBACA,WACA,kBACA,kBACA,kBACA,QACA,oBACA,aACA,kBACA,UACA,iBACA,aACA,OACA,OACA,QACA,WACA,SACA,OACA,SACA,KACA,IACA,OACA,WACA,UACA,OACA,WACA,OACA,OACA,WACA,eACA,QACA,oBACA,gBACA,YACA,eACA,qBACA,mBACA,kBACA,kBACA,uBACA,2BACA,0BACA,0BACA,gCACA,sBACA,2BACA,gCACA,mBACA,qBACA,8BACA,wBACA,2BACA,mBACA,6BACA,uBACA,wBACA,wBACA,yBACA,2BACA,4BACA,4BACA,yBACA,uBACA,+BACA,+BACA,gCACA,oBACA,0BACA,0BACA,yBACA,0BACA,yBACA,qBACA,4BACA,6BACA,iBACA,qBACA,gBACA,wBACA,kBACA,gBACA,kBACA,kBACA,6BACA,yBACA,yBACA,oCACA,6BACA,8BACA,mCACA,mCACA,yBACA,iCACA,wCACA,0BACA,oCACA,6BACA,0BACA,wBACA,wBACA,gBACA,uBACA,uBACA,wBACA,eACA,aACA,kBACA,sBACA,iBACA,iBACA,mBACA,iBACA,uCACA,0BACA,0BACA,2BACA,mBACA,yBACA,mBACA,yBACA,yBACA,sBACA,oBACA,uBACA,sBACA,4BACA,qBACA,0BACA,eACA,kBACA,oBACA,yBACA,6BACA,mBACA,iBACA,oBACA,uBACA,mBACA,uBACA,8BACA,kBACA,yBACA,qBACA,uBACA,aACA,kBACA,uBACA,wBACA,aACA,iBACA,sBACA,kBACA,mBACA,qBACA,sBACA,sBACA,mBACA,iBACA,wBACA,oBACA,sBACA,4BACA,cACA,oBACA,yBACA,0BACA,oBACA,0BACA,2BACA,oBACA,uBACA,uBACA,0BACA,sBACA,qBACA,8BACA,0BACA,0BACA,0BACA,2BACA,kCACA,qBACA,oCACA,mBACA,iCACA,cACA,sBACA,0BACA,0BACA,+BACA,+BACA,oBACA,2BACA,yBACA,sBACA,uBACA,mBACA,wBACA,wBACA,kBACA,wBACA,uBACA,mBACA,wBACA,2BACA,2BACA,iCACA,YACA,0BACA,mBACA,8BACA,wBACA,sCACA,kBACA,iBACA,WACA,SACA,aACA,aACA,cACA,cACA,cACA,QACA,cACA,aACA,YACA,SACA,QACA,cACA,aACA,eACA,SACA,kBACA,aACA,eACA,YACA,YACA,cACA,WACA,cACA,OACA,UACA,WACA,sBACA,QACA,YACA,aACA,uBACA,UACA,eACA,cACA,IACA,KACA,KACA,mBACA,cACA,gBACA,aACA,UACA,UACA,WACA,MACA,KACA,IACA,KACA,KACA,mBACA,SACA,IACA,UACA,SACA,OACA,aACA,kBCv9OJ,SAASC,GAAW33D,EAAMyC,GACtBzC,EAAKyT,KAAK,IAAI2sB,IAAW,SAA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","sources":["../node_modules/pako/index.js","../node_modules/pako/lib/deflate.js","../node_modules/pako/lib/inflate.js","../node_modules/pako/lib/utils/common.js","../node_modules/pako/lib/utils/strings.js","../node_modules/pako/lib/zlib/adler32.js","../node_modules/pako/lib/zlib/constants.js","../node_modules/pako/lib/zlib/crc32.js","../node_modules/pako/lib/zlib/deflate.js","../node_modules/pako/lib/zlib/gzheader.js","../node_modules/pako/lib/zlib/inffast.js","../node_modules/pako/lib/zlib/inflate.js","../node_modules/pako/lib/zlib/inftrees.js","../node_modules/pako/lib/zlib/messages.js","../node_modules/pako/lib/zlib/trees.js","../node_modules/pako/lib/zlib/zstream.js","../node_modules/terser/node_modules/source-map/lib/array-set.js","../node_modules/terser/node_modules/source-map/lib/base64-vlq.js","../node_modules/terser/node_modules/source-map/lib/base64.js","../node_modules/terser/node_modules/source-map/lib/binary-search.js","../node_modules/terser/node_modules/source-map/lib/mapping-list.js","../node_modules/terser/node_modules/source-map/lib/read-wasm.js","../node_modules/terser/node_modules/source-map/lib/source-map-consumer.js","../node_modules/terser/node_modules/source-map/lib/source-map-generator.js","../node_modules/terser/node_modules/source-map/lib/source-node.js","../node_modules/terser/node_modules/source-map/lib/util.js","../node_modules/terser/node_modules/source-map/lib/wasm.js","../node_modules/terser/node_modules/source-map/source-map.js","../node_modules/comlink/src/comlink.ts","../node_modules/terser/lib/utils/index.js","../node_modules/terser/lib/parse.js","../node_modules/terser/lib/ast.js","../node_modules/terser/lib/transform.js","../node_modules/terser/lib/utils/first_in_statement.js","../node_modules/terser/lib/mozilla-ast.js","../node_modules/terser/lib/output.js","../node_modules/terser/lib/equivalent-to.js","../node_modules/terser/lib/scope.js","../node_modules/terser/lib/size.js","../node_modules/terser/lib/compress/common.js","../node_modules/terser/lib/compress/compressor-flags.js","../node_modules/terser/lib/compress/native-objects.js","../node_modules/terser/lib/compress/inference.js","../node_modules/terser/lib/compress/evaluate.js","../node_modules/terser/lib/compress/drop-side-effect-free.js","../node_modules/terser/lib/compress/reduce-vars.js","../node_modules/terser/lib/compress/tighten-body.js","../node_modules/terser/lib/compress/index.js","../node_modules/terser/tools/domprops.js","../node_modules/terser/lib/propmangle.js","../node_modules/terser/lib/minify.js","../node_modules/terser/lib/sourcemap.js"],"sourcesContent":["// Top level file is just a mixin of submodules & constants\n'use strict';\n\nvar assign    = require('./lib/utils/common').assign;\n\nvar deflate   = require('./lib/deflate');\nvar inflate   = require('./lib/inflate');\nvar constants = require('./lib/zlib/constants');\n\nvar pako = {};\n\nassign(pako, deflate, inflate, constants);\n\nmodule.exports = pako;\n","'use strict';\n\n\nvar zlib_deflate = require('./zlib/deflate');\nvar utils        = require('./utils/common');\nvar strings      = require('./utils/strings');\nvar msg          = require('./zlib/messages');\nvar ZStream      = require('./zlib/zstream');\n\nvar toString = Object.prototype.toString;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nvar Z_NO_FLUSH      = 0;\nvar Z_FINISH        = 4;\n\nvar Z_OK            = 0;\nvar Z_STREAM_END    = 1;\nvar Z_SYNC_FLUSH    = 2;\n\nvar Z_DEFAULT_COMPRESSION = -1;\n\nvar Z_DEFAULT_STRATEGY    = 0;\n\nvar Z_DEFLATED  = 8;\n\n/* ===========================================================================*/\n\n\n/**\n * class Deflate\n *\n * Generic JS-style wrapper for zlib calls. If you don't need\n * streaming behaviour - use more simple functions: [[deflate]],\n * [[deflateRaw]] and [[gzip]].\n **/\n\n/* internal\n * Deflate.chunks -> Array\n *\n * Chunks of output data, if [[Deflate#onData]] not overridden.\n **/\n\n/**\n * Deflate.result -> Uint8Array|Array\n *\n * Compressed result, generated by default [[Deflate#onData]]\n * and [[Deflate#onEnd]] handlers. Filled after you push last chunk\n * (call [[Deflate#push]] with `Z_FINISH` / `true` param)  or if you\n * push a chunk with explicit flush (call [[Deflate#push]] with\n * `Z_SYNC_FLUSH` param).\n **/\n\n/**\n * Deflate.err -> Number\n *\n * Error code after deflate finished. 0 (Z_OK) on success.\n * You will not need it in real life, because deflate errors\n * are possible only on wrong options or bad `onData` / `onEnd`\n * custom handlers.\n **/\n\n/**\n * Deflate.msg -> String\n *\n * Error message, if [[Deflate.err]] != 0\n **/\n\n\n/**\n * new Deflate(options)\n * - options (Object): zlib deflate options.\n *\n * Creates new deflator instance with specified params. Throws exception\n * on bad params. Supported options:\n *\n * - `level`\n * - `windowBits`\n * - `memLevel`\n * - `strategy`\n * - `dictionary`\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Additional options, for internal needs:\n *\n * - `chunkSize` - size of generated data chunks (16K by default)\n * - `raw` (Boolean) - do raw deflate\n * - `gzip` (Boolean) - create gzip wrapper\n * - `to` (String) - if equal to 'string', then result will be \"binary string\"\n *    (each char code [0..255])\n * - `header` (Object) - custom header for gzip\n *   - `text` (Boolean) - true if compressed data believed to be text\n *   - `time` (Number) - modification time, unix timestamp\n *   - `os` (Number) - operation system code\n *   - `extra` (Array) - array of bytes with extra data (max 65536)\n *   - `name` (String) - file name (binary string)\n *   - `comment` (String) - comment (binary string)\n *   - `hcrc` (Boolean) - true if header crc should be added\n *\n * ##### Example:\n *\n * ```javascript\n * var pako = require('pako')\n *   , chunk1 = Uint8Array([1,2,3,4,5,6,7,8,9])\n *   , chunk2 = Uint8Array([10,11,12,13,14,15,16,17,18,19]);\n *\n * var deflate = new pako.Deflate({ level: 3});\n *\n * deflate.push(chunk1, false);\n * deflate.push(chunk2, true);  // true -> last chunk\n *\n * if (deflate.err) { throw new Error(deflate.err); }\n *\n * console.log(deflate.result);\n * ```\n **/\nfunction Deflate(options) {\n  if (!(this instanceof Deflate)) return new Deflate(options);\n\n  this.options = utils.assign({\n    level: Z_DEFAULT_COMPRESSION,\n    method: Z_DEFLATED,\n    chunkSize: 16384,\n    windowBits: 15,\n    memLevel: 8,\n    strategy: Z_DEFAULT_STRATEGY,\n    to: ''\n  }, options || {});\n\n  var opt = this.options;\n\n  if (opt.raw && (opt.windowBits > 0)) {\n    opt.windowBits = -opt.windowBits;\n  }\n\n  else if (opt.gzip && (opt.windowBits > 0) && (opt.windowBits < 16)) {\n    opt.windowBits += 16;\n  }\n\n  this.err    = 0;      // error code, if happens (0 = Z_OK)\n  this.msg    = '';     // error message\n  this.ended  = false;  // used to avoid multiple onEnd() calls\n  this.chunks = [];     // chunks of compressed data\n\n  this.strm = new ZStream();\n  this.strm.avail_out = 0;\n\n  var status = zlib_deflate.deflateInit2(\n    this.strm,\n    opt.level,\n    opt.method,\n    opt.windowBits,\n    opt.memLevel,\n    opt.strategy\n  );\n\n  if (status !== Z_OK) {\n    throw new Error(msg[status]);\n  }\n\n  if (opt.header) {\n    zlib_deflate.deflateSetHeader(this.strm, opt.header);\n  }\n\n  if (opt.dictionary) {\n    var dict;\n    // Convert data if needed\n    if (typeof opt.dictionary === 'string') {\n      // If we need to compress text, change encoding to utf8.\n      dict = strings.string2buf(opt.dictionary);\n    } else if (toString.call(opt.dictionary) === '[object ArrayBuffer]') {\n      dict = new Uint8Array(opt.dictionary);\n    } else {\n      dict = opt.dictionary;\n    }\n\n    status = zlib_deflate.deflateSetDictionary(this.strm, dict);\n\n    if (status !== Z_OK) {\n      throw new Error(msg[status]);\n    }\n\n    this._dict_set = true;\n  }\n}\n\n/**\n * Deflate#push(data[, mode]) -> Boolean\n * - data (Uint8Array|Array|ArrayBuffer|String): input data. Strings will be\n *   converted to utf8 byte sequence.\n * - mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE modes.\n *   See constants. Skipped or `false` means Z_NO_FLUSH, `true` means Z_FINISH.\n *\n * Sends input data to deflate pipe, generating [[Deflate#onData]] calls with\n * new compressed chunks. Returns `true` on success. The last data block must have\n * mode Z_FINISH (or `true`). That will flush internal pending buffers and call\n * [[Deflate#onEnd]]. For interim explicit flushes (without ending the stream) you\n * can use mode Z_SYNC_FLUSH, keeping the compression context.\n *\n * On fail call [[Deflate#onEnd]] with error code and return false.\n *\n * We strongly recommend to use `Uint8Array` on input for best speed (output\n * array format is detected automatically). Also, don't skip last param and always\n * use the same type in your code (boolean or number). That will improve JS speed.\n *\n * For regular `Array`-s make sure all elements are [0..255].\n *\n * ##### Example\n *\n * ```javascript\n * push(chunk, false); // push one of data chunks\n * ...\n * push(chunk, true);  // push last chunk\n * ```\n **/\nDeflate.prototype.push = function (data, mode) {\n  var strm = this.strm;\n  var chunkSize = this.options.chunkSize;\n  var status, _mode;\n\n  if (this.ended) { return false; }\n\n  _mode = (mode === ~~mode) ? mode : ((mode === true) ? Z_FINISH : Z_NO_FLUSH);\n\n  // Convert data if needed\n  if (typeof data === 'string') {\n    // If we need to compress text, change encoding to utf8.\n    strm.input = strings.string2buf(data);\n  } else if (toString.call(data) === '[object ArrayBuffer]') {\n    strm.input = new Uint8Array(data);\n  } else {\n    strm.input = data;\n  }\n\n  strm.next_in = 0;\n  strm.avail_in = strm.input.length;\n\n  do {\n    if (strm.avail_out === 0) {\n      strm.output = new utils.Buf8(chunkSize);\n      strm.next_out = 0;\n      strm.avail_out = chunkSize;\n    }\n    status = zlib_deflate.deflate(strm, _mode);    /* no bad return value */\n\n    if (status !== Z_STREAM_END && status !== Z_OK) {\n      this.onEnd(status);\n      this.ended = true;\n      return false;\n    }\n    if (strm.avail_out === 0 || (strm.avail_in === 0 && (_mode === Z_FINISH || _mode === Z_SYNC_FLUSH))) {\n      if (this.options.to === 'string') {\n        this.onData(strings.buf2binstring(utils.shrinkBuf(strm.output, strm.next_out)));\n      } else {\n        this.onData(utils.shrinkBuf(strm.output, strm.next_out));\n      }\n    }\n  } while ((strm.avail_in > 0 || strm.avail_out === 0) && status !== Z_STREAM_END);\n\n  // Finalize on the last chunk.\n  if (_mode === Z_FINISH) {\n    status = zlib_deflate.deflateEnd(this.strm);\n    this.onEnd(status);\n    this.ended = true;\n    return status === Z_OK;\n  }\n\n  // callback interim results if Z_SYNC_FLUSH.\n  if (_mode === Z_SYNC_FLUSH) {\n    this.onEnd(Z_OK);\n    strm.avail_out = 0;\n    return true;\n  }\n\n  return true;\n};\n\n\n/**\n * Deflate#onData(chunk) -> Void\n * - chunk (Uint8Array|Array|String): output data. Type of array depends\n *   on js engine support. When string output requested, each chunk\n *   will be string.\n *\n * By default, stores data blocks in `chunks[]` property and glue\n * those in `onEnd`. Override this handler, if you need another behaviour.\n **/\nDeflate.prototype.onData = function (chunk) {\n  this.chunks.push(chunk);\n};\n\n\n/**\n * Deflate#onEnd(status) -> Void\n * - status (Number): deflate status. 0 (Z_OK) on success,\n *   other if not.\n *\n * Called once after you tell deflate that the input stream is\n * complete (Z_FINISH) or should be flushed (Z_SYNC_FLUSH)\n * or if an error happened. By default - join collected chunks,\n * free memory and fill `results` / `err` properties.\n **/\nDeflate.prototype.onEnd = function (status) {\n  // On success - join\n  if (status === Z_OK) {\n    if (this.options.to === 'string') {\n      this.result = this.chunks.join('');\n    } else {\n      this.result = utils.flattenChunks(this.chunks);\n    }\n  }\n  this.chunks = [];\n  this.err = status;\n  this.msg = this.strm.msg;\n};\n\n\n/**\n * deflate(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * Compress `data` with deflate algorithm and `options`.\n *\n * Supported options are:\n *\n * - level\n * - windowBits\n * - memLevel\n * - strategy\n * - dictionary\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Sugar (options):\n *\n * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\n *   negative windowBits implicitly.\n * - `to` (String) - if equal to 'string', then result will be \"binary string\"\n *    (each char code [0..255])\n *\n * ##### Example:\n *\n * ```javascript\n * var pako = require('pako')\n *   , data = Uint8Array([1,2,3,4,5,6,7,8,9]);\n *\n * console.log(pako.deflate(data));\n * ```\n **/\nfunction deflate(input, options) {\n  var deflator = new Deflate(options);\n\n  deflator.push(input, true);\n\n  // That will never happens, if you don't cheat with options :)\n  if (deflator.err) { throw deflator.msg || msg[deflator.err]; }\n\n  return deflator.result;\n}\n\n\n/**\n * deflateRaw(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * The same as [[deflate]], but creates raw data, without wrapper\n * (header and adler32 crc).\n **/\nfunction deflateRaw(input, options) {\n  options = options || {};\n  options.raw = true;\n  return deflate(input, options);\n}\n\n\n/**\n * gzip(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * The same as [[deflate]], but create gzip wrapper instead of\n * deflate one.\n **/\nfunction gzip(input, options) {\n  options = options || {};\n  options.gzip = true;\n  return deflate(input, options);\n}\n\n\nexports.Deflate = Deflate;\nexports.deflate = deflate;\nexports.deflateRaw = deflateRaw;\nexports.gzip = gzip;\n","'use strict';\n\n\nvar zlib_inflate = require('./zlib/inflate');\nvar utils        = require('./utils/common');\nvar strings      = require('./utils/strings');\nvar c            = require('./zlib/constants');\nvar msg          = require('./zlib/messages');\nvar ZStream      = require('./zlib/zstream');\nvar GZheader     = require('./zlib/gzheader');\n\nvar toString = Object.prototype.toString;\n\n/**\n * class Inflate\n *\n * Generic JS-style wrapper for zlib calls. If you don't need\n * streaming behaviour - use more simple functions: [[inflate]]\n * and [[inflateRaw]].\n **/\n\n/* internal\n * inflate.chunks -> Array\n *\n * Chunks of output data, if [[Inflate#onData]] not overridden.\n **/\n\n/**\n * Inflate.result -> Uint8Array|Array|String\n *\n * Uncompressed result, generated by default [[Inflate#onData]]\n * and [[Inflate#onEnd]] handlers. Filled after you push last chunk\n * (call [[Inflate#push]] with `Z_FINISH` / `true` param) or if you\n * push a chunk with explicit flush (call [[Inflate#push]] with\n * `Z_SYNC_FLUSH` param).\n **/\n\n/**\n * Inflate.err -> Number\n *\n * Error code after inflate finished. 0 (Z_OK) on success.\n * Should be checked if broken data possible.\n **/\n\n/**\n * Inflate.msg -> String\n *\n * Error message, if [[Inflate.err]] != 0\n **/\n\n\n/**\n * new Inflate(options)\n * - options (Object): zlib inflate options.\n *\n * Creates new inflator instance with specified params. Throws exception\n * on bad params. Supported options:\n *\n * - `windowBits`\n * - `dictionary`\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Additional options, for internal needs:\n *\n * - `chunkSize` - size of generated data chunks (16K by default)\n * - `raw` (Boolean) - do raw inflate\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n * By default, when no options set, autodetect deflate/gzip data format via\n * wrapper header.\n *\n * ##### Example:\n *\n * ```javascript\n * var pako = require('pako')\n *   , chunk1 = Uint8Array([1,2,3,4,5,6,7,8,9])\n *   , chunk2 = Uint8Array([10,11,12,13,14,15,16,17,18,19]);\n *\n * var inflate = new pako.Inflate({ level: 3});\n *\n * inflate.push(chunk1, false);\n * inflate.push(chunk2, true);  // true -> last chunk\n *\n * if (inflate.err) { throw new Error(inflate.err); }\n *\n * console.log(inflate.result);\n * ```\n **/\nfunction Inflate(options) {\n  if (!(this instanceof Inflate)) return new Inflate(options);\n\n  this.options = utils.assign({\n    chunkSize: 16384,\n    windowBits: 0,\n    to: ''\n  }, options || {});\n\n  var opt = this.options;\n\n  // Force window size for `raw` data, if not set directly,\n  // because we have no header for autodetect.\n  if (opt.raw && (opt.windowBits >= 0) && (opt.windowBits < 16)) {\n    opt.windowBits = -opt.windowBits;\n    if (opt.windowBits === 0) { opt.windowBits = -15; }\n  }\n\n  // If `windowBits` not defined (and mode not raw) - set autodetect flag for gzip/deflate\n  if ((opt.windowBits >= 0) && (opt.windowBits < 16) &&\n      !(options && options.windowBits)) {\n    opt.windowBits += 32;\n  }\n\n  // Gzip header has no info about windows size, we can do autodetect only\n  // for deflate. So, if window size not set, force it to max when gzip possible\n  if ((opt.windowBits > 15) && (opt.windowBits < 48)) {\n    // bit 3 (16) -> gzipped data\n    // bit 4 (32) -> autodetect gzip/deflate\n    if ((opt.windowBits & 15) === 0) {\n      opt.windowBits |= 15;\n    }\n  }\n\n  this.err    = 0;      // error code, if happens (0 = Z_OK)\n  this.msg    = '';     // error message\n  this.ended  = false;  // used to avoid multiple onEnd() calls\n  this.chunks = [];     // chunks of compressed data\n\n  this.strm   = new ZStream();\n  this.strm.avail_out = 0;\n\n  var status  = zlib_inflate.inflateInit2(\n    this.strm,\n    opt.windowBits\n  );\n\n  if (status !== c.Z_OK) {\n    throw new Error(msg[status]);\n  }\n\n  this.header = new GZheader();\n\n  zlib_inflate.inflateGetHeader(this.strm, this.header);\n\n  // Setup dictionary\n  if (opt.dictionary) {\n    // Convert data if needed\n    if (typeof opt.dictionary === 'string') {\n      opt.dictionary = strings.string2buf(opt.dictionary);\n    } else if (toString.call(opt.dictionary) === '[object ArrayBuffer]') {\n      opt.dictionary = new Uint8Array(opt.dictionary);\n    }\n    if (opt.raw) { //In raw mode we need to set the dictionary early\n      status = zlib_inflate.inflateSetDictionary(this.strm, opt.dictionary);\n      if (status !== c.Z_OK) {\n        throw new Error(msg[status]);\n      }\n    }\n  }\n}\n\n/**\n * Inflate#push(data[, mode]) -> Boolean\n * - data (Uint8Array|Array|ArrayBuffer|String): input data\n * - mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE modes.\n *   See constants. Skipped or `false` means Z_NO_FLUSH, `true` means Z_FINISH.\n *\n * Sends input data to inflate pipe, generating [[Inflate#onData]] calls with\n * new output chunks. Returns `true` on success. The last data block must have\n * mode Z_FINISH (or `true`). That will flush internal pending buffers and call\n * [[Inflate#onEnd]]. For interim explicit flushes (without ending the stream) you\n * can use mode Z_SYNC_FLUSH, keeping the decompression context.\n *\n * On fail call [[Inflate#onEnd]] with error code and return false.\n *\n * We strongly recommend to use `Uint8Array` on input for best speed (output\n * format is detected automatically). Also, don't skip last param and always\n * use the same type in your code (boolean or number). That will improve JS speed.\n *\n * For regular `Array`-s make sure all elements are [0..255].\n *\n * ##### Example\n *\n * ```javascript\n * push(chunk, false); // push one of data chunks\n * ...\n * push(chunk, true);  // push last chunk\n * ```\n **/\nInflate.prototype.push = function (data, mode) {\n  var strm = this.strm;\n  var chunkSize = this.options.chunkSize;\n  var dictionary = this.options.dictionary;\n  var status, _mode;\n  var next_out_utf8, tail, utf8str;\n\n  // Flag to properly process Z_BUF_ERROR on testing inflate call\n  // when we check that all output data was flushed.\n  var allowBufError = false;\n\n  if (this.ended) { return false; }\n  _mode = (mode === ~~mode) ? mode : ((mode === true) ? c.Z_FINISH : c.Z_NO_FLUSH);\n\n  // Convert data if needed\n  if (typeof data === 'string') {\n    // Only binary strings can be decompressed on practice\n    strm.input = strings.binstring2buf(data);\n  } else if (toString.call(data) === '[object ArrayBuffer]') {\n    strm.input = new Uint8Array(data);\n  } else {\n    strm.input = data;\n  }\n\n  strm.next_in = 0;\n  strm.avail_in = strm.input.length;\n\n  do {\n    if (strm.avail_out === 0) {\n      strm.output = new utils.Buf8(chunkSize);\n      strm.next_out = 0;\n      strm.avail_out = chunkSize;\n    }\n\n    status = zlib_inflate.inflate(strm, c.Z_NO_FLUSH);    /* no bad return value */\n\n    if (status === c.Z_NEED_DICT && dictionary) {\n      status = zlib_inflate.inflateSetDictionary(this.strm, dictionary);\n    }\n\n    if (status === c.Z_BUF_ERROR && allowBufError === true) {\n      status = c.Z_OK;\n      allowBufError = false;\n    }\n\n    if (status !== c.Z_STREAM_END && status !== c.Z_OK) {\n      this.onEnd(status);\n      this.ended = true;\n      return false;\n    }\n\n    if (strm.next_out) {\n      if (strm.avail_out === 0 || status === c.Z_STREAM_END || (strm.avail_in === 0 && (_mode === c.Z_FINISH || _mode === c.Z_SYNC_FLUSH))) {\n\n        if (this.options.to === 'string') {\n\n          next_out_utf8 = strings.utf8border(strm.output, strm.next_out);\n\n          tail = strm.next_out - next_out_utf8;\n          utf8str = strings.buf2string(strm.output, next_out_utf8);\n\n          // move tail\n          strm.next_out = tail;\n          strm.avail_out = chunkSize - tail;\n          if (tail) { utils.arraySet(strm.output, strm.output, next_out_utf8, tail, 0); }\n\n          this.onData(utf8str);\n\n        } else {\n          this.onData(utils.shrinkBuf(strm.output, strm.next_out));\n        }\n      }\n    }\n\n    // When no more input data, we should check that internal inflate buffers\n    // are flushed. The only way to do it when avail_out = 0 - run one more\n    // inflate pass. But if output data not exists, inflate return Z_BUF_ERROR.\n    // Here we set flag to process this error properly.\n    //\n    // NOTE. Deflate does not return error in this case and does not needs such\n    // logic.\n    if (strm.avail_in === 0 && strm.avail_out === 0) {\n      allowBufError = true;\n    }\n\n  } while ((strm.avail_in > 0 || strm.avail_out === 0) && status !== c.Z_STREAM_END);\n\n  if (status === c.Z_STREAM_END) {\n    _mode = c.Z_FINISH;\n  }\n\n  // Finalize on the last chunk.\n  if (_mode === c.Z_FINISH) {\n    status = zlib_inflate.inflateEnd(this.strm);\n    this.onEnd(status);\n    this.ended = true;\n    return status === c.Z_OK;\n  }\n\n  // callback interim results if Z_SYNC_FLUSH.\n  if (_mode === c.Z_SYNC_FLUSH) {\n    this.onEnd(c.Z_OK);\n    strm.avail_out = 0;\n    return true;\n  }\n\n  return true;\n};\n\n\n/**\n * Inflate#onData(chunk) -> Void\n * - chunk (Uint8Array|Array|String): output data. Type of array depends\n *   on js engine support. When string output requested, each chunk\n *   will be string.\n *\n * By default, stores data blocks in `chunks[]` property and glue\n * those in `onEnd`. Override this handler, if you need another behaviour.\n **/\nInflate.prototype.onData = function (chunk) {\n  this.chunks.push(chunk);\n};\n\n\n/**\n * Inflate#onEnd(status) -> Void\n * - status (Number): inflate status. 0 (Z_OK) on success,\n *   other if not.\n *\n * Called either after you tell inflate that the input stream is\n * complete (Z_FINISH) or should be flushed (Z_SYNC_FLUSH)\n * or if an error happened. By default - join collected chunks,\n * free memory and fill `results` / `err` properties.\n **/\nInflate.prototype.onEnd = function (status) {\n  // On success - join\n  if (status === c.Z_OK) {\n    if (this.options.to === 'string') {\n      // Glue & convert here, until we teach pako to send\n      // utf8 aligned strings to onData\n      this.result = this.chunks.join('');\n    } else {\n      this.result = utils.flattenChunks(this.chunks);\n    }\n  }\n  this.chunks = [];\n  this.err = status;\n  this.msg = this.strm.msg;\n};\n\n\n/**\n * inflate(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Decompress `data` with inflate/ungzip and `options`. Autodetect\n * format via wrapper header by default. That's why we don't provide\n * separate `ungzip` method.\n *\n * Supported options are:\n *\n * - windowBits\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information.\n *\n * Sugar (options):\n *\n * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\n *   negative windowBits implicitly.\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n *\n * ##### Example:\n *\n * ```javascript\n * var pako = require('pako')\n *   , input = pako.deflate([1,2,3,4,5,6,7,8,9])\n *   , output;\n *\n * try {\n *   output = pako.inflate(input);\n * } catch (err)\n *   console.log(err);\n * }\n * ```\n **/\nfunction inflate(input, options) {\n  var inflator = new Inflate(options);\n\n  inflator.push(input, true);\n\n  // That will never happens, if you don't cheat with options :)\n  if (inflator.err) { throw inflator.msg || msg[inflator.err]; }\n\n  return inflator.result;\n}\n\n\n/**\n * inflateRaw(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * The same as [[inflate]], but creates raw data, without wrapper\n * (header and adler32 crc).\n **/\nfunction inflateRaw(input, options) {\n  options = options || {};\n  options.raw = true;\n  return inflate(input, options);\n}\n\n\n/**\n * ungzip(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Just shortcut to [[inflate]], because it autodetects format\n * by header.content. Done for convenience.\n **/\n\n\nexports.Inflate = Inflate;\nexports.inflate = inflate;\nexports.inflateRaw = inflateRaw;\nexports.ungzip  = inflate;\n","'use strict';\n\n\nvar TYPED_OK =  (typeof Uint8Array !== 'undefined') &&\n                (typeof Uint16Array !== 'undefined') &&\n                (typeof Int32Array !== 'undefined');\n\nfunction _has(obj, key) {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\nexports.assign = function (obj /*from1, from2, from3, ...*/) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n  while (sources.length) {\n    var source = sources.shift();\n    if (!source) { continue; }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be non-object');\n    }\n\n    for (var p in source) {\n      if (_has(source, p)) {\n        obj[p] = source[p];\n      }\n    }\n  }\n\n  return obj;\n};\n\n\n// reduce buffer size, avoiding mem copy\nexports.shrinkBuf = function (buf, size) {\n  if (buf.length === size) { return buf; }\n  if (buf.subarray) { return buf.subarray(0, size); }\n  buf.length = size;\n  return buf;\n};\n\n\nvar fnTyped = {\n  arraySet: function (dest, src, src_offs, len, dest_offs) {\n    if (src.subarray && dest.subarray) {\n      dest.set(src.subarray(src_offs, src_offs + len), dest_offs);\n      return;\n    }\n    // Fallback to ordinary array\n    for (var i = 0; i < len; i++) {\n      dest[dest_offs + i] = src[src_offs + i];\n    }\n  },\n  // Join array of chunks to single array.\n  flattenChunks: function (chunks) {\n    var i, l, len, pos, chunk, result;\n\n    // calculate data length\n    len = 0;\n    for (i = 0, l = chunks.length; i < l; i++) {\n      len += chunks[i].length;\n    }\n\n    // join chunks\n    result = new Uint8Array(len);\n    pos = 0;\n    for (i = 0, l = chunks.length; i < l; i++) {\n      chunk = chunks[i];\n      result.set(chunk, pos);\n      pos += chunk.length;\n    }\n\n    return result;\n  }\n};\n\nvar fnUntyped = {\n  arraySet: function (dest, src, src_offs, len, dest_offs) {\n    for (var i = 0; i < len; i++) {\n      dest[dest_offs + i] = src[src_offs + i];\n    }\n  },\n  // Join array of chunks to single array.\n  flattenChunks: function (chunks) {\n    return [].concat.apply([], chunks);\n  }\n};\n\n\n// Enable/Disable typed arrays use, for testing\n//\nexports.setTyped = function (on) {\n  if (on) {\n    exports.Buf8  = Uint8Array;\n    exports.Buf16 = Uint16Array;\n    exports.Buf32 = Int32Array;\n    exports.assign(exports, fnTyped);\n  } else {\n    exports.Buf8  = Array;\n    exports.Buf16 = Array;\n    exports.Buf32 = Array;\n    exports.assign(exports, fnUntyped);\n  }\n};\n\nexports.setTyped(TYPED_OK);\n","// String encode/decode helpers\n'use strict';\n\n\nvar utils = require('./common');\n\n\n// Quick check if we can use fast array to bin string conversion\n//\n// - apply(Array) can fail on Android 2.2\n// - apply(Uint8Array) can fail on iOS 5.1 Safari\n//\nvar STR_APPLY_OK = true;\nvar STR_APPLY_UIA_OK = true;\n\ntry { String.fromCharCode.apply(null, [ 0 ]); } catch (__) { STR_APPLY_OK = false; }\ntry { String.fromCharCode.apply(null, new Uint8Array(1)); } catch (__) { STR_APPLY_UIA_OK = false; }\n\n\n// Table with utf8 lengths (calculated by first byte of sequence)\n// Note, that 5 & 6-byte values and some 4-byte values can not be represented in JS,\n// because max possible codepoint is 0x10ffff\nvar _utf8len = new utils.Buf8(256);\nfor (var q = 0; q < 256; q++) {\n  _utf8len[q] = (q >= 252 ? 6 : q >= 248 ? 5 : q >= 240 ? 4 : q >= 224 ? 3 : q >= 192 ? 2 : 1);\n}\n_utf8len[254] = _utf8len[254] = 1; // Invalid sequence start\n\n\n// convert string to array (typed, when possible)\nexports.string2buf = function (str) {\n  var buf, c, c2, m_pos, i, str_len = str.length, buf_len = 0;\n\n  // count binary size\n  for (m_pos = 0; m_pos < str_len; m_pos++) {\n    c = str.charCodeAt(m_pos);\n    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {\n      c2 = str.charCodeAt(m_pos + 1);\n      if ((c2 & 0xfc00) === 0xdc00) {\n        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n        m_pos++;\n      }\n    }\n    buf_len += c < 0x80 ? 1 : c < 0x800 ? 2 : c < 0x10000 ? 3 : 4;\n  }\n\n  // allocate buffer\n  buf = new utils.Buf8(buf_len);\n\n  // convert\n  for (i = 0, m_pos = 0; i < buf_len; m_pos++) {\n    c = str.charCodeAt(m_pos);\n    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {\n      c2 = str.charCodeAt(m_pos + 1);\n      if ((c2 & 0xfc00) === 0xdc00) {\n        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n        m_pos++;\n      }\n    }\n    if (c < 0x80) {\n      /* one byte */\n      buf[i++] = c;\n    } else if (c < 0x800) {\n      /* two bytes */\n      buf[i++] = 0xC0 | (c >>> 6);\n      buf[i++] = 0x80 | (c & 0x3f);\n    } else if (c < 0x10000) {\n      /* three bytes */\n      buf[i++] = 0xE0 | (c >>> 12);\n      buf[i++] = 0x80 | (c >>> 6 & 0x3f);\n      buf[i++] = 0x80 | (c & 0x3f);\n    } else {\n      /* four bytes */\n      buf[i++] = 0xf0 | (c >>> 18);\n      buf[i++] = 0x80 | (c >>> 12 & 0x3f);\n      buf[i++] = 0x80 | (c >>> 6 & 0x3f);\n      buf[i++] = 0x80 | (c & 0x3f);\n    }\n  }\n\n  return buf;\n};\n\n// Helper (used in 2 places)\nfunction buf2binstring(buf, len) {\n  // On Chrome, the arguments in a function call that are allowed is `65534`.\n  // If the length of the buffer is smaller than that, we can use this optimization,\n  // otherwise we will take a slower path.\n  if (len < 65534) {\n    if ((buf.subarray && STR_APPLY_UIA_OK) || (!buf.subarray && STR_APPLY_OK)) {\n      return String.fromCharCode.apply(null, utils.shrinkBuf(buf, len));\n    }\n  }\n\n  var result = '';\n  for (var i = 0; i < len; i++) {\n    result += String.fromCharCode(buf[i]);\n  }\n  return result;\n}\n\n\n// Convert byte array to binary string\nexports.buf2binstring = function (buf) {\n  return buf2binstring(buf, buf.length);\n};\n\n\n// Convert binary string (typed, when possible)\nexports.binstring2buf = function (str) {\n  var buf = new utils.Buf8(str.length);\n  for (var i = 0, len = buf.length; i < len; i++) {\n    buf[i] = str.charCodeAt(i);\n  }\n  return buf;\n};\n\n\n// convert array to string\nexports.buf2string = function (buf, max) {\n  var i, out, c, c_len;\n  var len = max || buf.length;\n\n  // Reserve max possible length (2 words per char)\n  // NB: by unknown reasons, Array is significantly faster for\n  //     String.fromCharCode.apply than Uint16Array.\n  var utf16buf = new Array(len * 2);\n\n  for (out = 0, i = 0; i < len;) {\n    c = buf[i++];\n    // quick process ascii\n    if (c < 0x80) { utf16buf[out++] = c; continue; }\n\n    c_len = _utf8len[c];\n    // skip 5 & 6 byte codes\n    if (c_len > 4) { utf16buf[out++] = 0xfffd; i += c_len - 1; continue; }\n\n    // apply mask on first byte\n    c &= c_len === 2 ? 0x1f : c_len === 3 ? 0x0f : 0x07;\n    // join the rest\n    while (c_len > 1 && i < len) {\n      c = (c << 6) | (buf[i++] & 0x3f);\n      c_len--;\n    }\n\n    // terminated by end of string?\n    if (c_len > 1) { utf16buf[out++] = 0xfffd; continue; }\n\n    if (c < 0x10000) {\n      utf16buf[out++] = c;\n    } else {\n      c -= 0x10000;\n      utf16buf[out++] = 0xd800 | ((c >> 10) & 0x3ff);\n      utf16buf[out++] = 0xdc00 | (c & 0x3ff);\n    }\n  }\n\n  return buf2binstring(utf16buf, out);\n};\n\n\n// Calculate max possible position in utf8 buffer,\n// that will not break sequence. If that's not possible\n// - (very small limits) return max size as is.\n//\n// buf[] - utf8 bytes array\n// max   - length limit (mandatory);\nexports.utf8border = function (buf, max) {\n  var pos;\n\n  max = max || buf.length;\n  if (max > buf.length) { max = buf.length; }\n\n  // go back from last position, until start of sequence found\n  pos = max - 1;\n  while (pos >= 0 && (buf[pos] & 0xC0) === 0x80) { pos--; }\n\n  // Very small and broken sequence,\n  // return max, because we should return something anyway.\n  if (pos < 0) { return max; }\n\n  // If we came to start of buffer - that means buffer is too small,\n  // return max too.\n  if (pos === 0) { return max; }\n\n  return (pos + _utf8len[buf[pos]] > max) ? pos : max;\n};\n","'use strict';\n\n// Note: adler32 takes 12% for level 0 and 2% for level 6.\n// It isn't worth it to make additional optimizations as in original.\n// Small size is preferable.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction adler32(adler, buf, len, pos) {\n  var s1 = (adler & 0xffff) |0,\n      s2 = ((adler >>> 16) & 0xffff) |0,\n      n = 0;\n\n  while (len !== 0) {\n    // Set limit ~ twice less than 5552, to keep\n    // s2 in 31-bits, because we force signed ints.\n    // in other case %= will fail.\n    n = len > 2000 ? 2000 : len;\n    len -= n;\n\n    do {\n      s1 = (s1 + buf[pos++]) |0;\n      s2 = (s2 + s1) |0;\n    } while (--n);\n\n    s1 %= 65521;\n    s2 %= 65521;\n  }\n\n  return (s1 | (s2 << 16)) |0;\n}\n\n\nmodule.exports = adler32;\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nmodule.exports = {\n\n  /* Allowed flush values; see deflate() and inflate() below for details */\n  Z_NO_FLUSH:         0,\n  Z_PARTIAL_FLUSH:    1,\n  Z_SYNC_FLUSH:       2,\n  Z_FULL_FLUSH:       3,\n  Z_FINISH:           4,\n  Z_BLOCK:            5,\n  Z_TREES:            6,\n\n  /* Return codes for the compression/decompression functions. Negative values\n  * are errors, positive values are used for special but normal events.\n  */\n  Z_OK:               0,\n  Z_STREAM_END:       1,\n  Z_NEED_DICT:        2,\n  Z_ERRNO:           -1,\n  Z_STREAM_ERROR:    -2,\n  Z_DATA_ERROR:      -3,\n  //Z_MEM_ERROR:     -4,\n  Z_BUF_ERROR:       -5,\n  //Z_VERSION_ERROR: -6,\n\n  /* compression levels */\n  Z_NO_COMPRESSION:         0,\n  Z_BEST_SPEED:             1,\n  Z_BEST_COMPRESSION:       9,\n  Z_DEFAULT_COMPRESSION:   -1,\n\n\n  Z_FILTERED:               1,\n  Z_HUFFMAN_ONLY:           2,\n  Z_RLE:                    3,\n  Z_FIXED:                  4,\n  Z_DEFAULT_STRATEGY:       0,\n\n  /* Possible values of the data_type field (though see inflate()) */\n  Z_BINARY:                 0,\n  Z_TEXT:                   1,\n  //Z_ASCII:                1, // = Z_TEXT (deprecated)\n  Z_UNKNOWN:                2,\n\n  /* The deflate compression method */\n  Z_DEFLATED:               8\n  //Z_NULL:                 null // Use -1 or null inline, depending on var type\n};\n","'use strict';\n\n// Note: we can't get significant speed boost here.\n// So write code to minimize size - no pregenerated tables\n// and array tools dependencies.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n// Use ordinary array, since untyped makes no boost here\nfunction makeTable() {\n  var c, table = [];\n\n  for (var n = 0; n < 256; n++) {\n    c = n;\n    for (var k = 0; k < 8; k++) {\n      c = ((c & 1) ? (0xEDB88320 ^ (c >>> 1)) : (c >>> 1));\n    }\n    table[n] = c;\n  }\n\n  return table;\n}\n\n// Create table on load. Just 255 signed longs. Not a problem.\nvar crcTable = makeTable();\n\n\nfunction crc32(crc, buf, len, pos) {\n  var t = crcTable,\n      end = pos + len;\n\n  crc ^= -1;\n\n  for (var i = pos; i < end; i++) {\n    crc = (crc >>> 8) ^ t[(crc ^ buf[i]) & 0xFF];\n  }\n\n  return (crc ^ (-1)); // >>> 0;\n}\n\n\nmodule.exports = crc32;\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar utils   = require('../utils/common');\nvar trees   = require('./trees');\nvar adler32 = require('./adler32');\nvar crc32   = require('./crc32');\nvar msg     = require('./messages');\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\n\n/* Allowed flush values; see deflate() and inflate() below for details */\nvar Z_NO_FLUSH      = 0;\nvar Z_PARTIAL_FLUSH = 1;\n//var Z_SYNC_FLUSH    = 2;\nvar Z_FULL_FLUSH    = 3;\nvar Z_FINISH        = 4;\nvar Z_BLOCK         = 5;\n//var Z_TREES         = 6;\n\n\n/* Return codes for the compression/decompression functions. Negative values\n * are errors, positive values are used for special but normal events.\n */\nvar Z_OK            = 0;\nvar Z_STREAM_END    = 1;\n//var Z_NEED_DICT     = 2;\n//var Z_ERRNO         = -1;\nvar Z_STREAM_ERROR  = -2;\nvar Z_DATA_ERROR    = -3;\n//var Z_MEM_ERROR     = -4;\nvar Z_BUF_ERROR     = -5;\n//var Z_VERSION_ERROR = -6;\n\n\n/* compression levels */\n//var Z_NO_COMPRESSION      = 0;\n//var Z_BEST_SPEED          = 1;\n//var Z_BEST_COMPRESSION    = 9;\nvar Z_DEFAULT_COMPRESSION = -1;\n\n\nvar Z_FILTERED            = 1;\nvar Z_HUFFMAN_ONLY        = 2;\nvar Z_RLE                 = 3;\nvar Z_FIXED               = 4;\nvar Z_DEFAULT_STRATEGY    = 0;\n\n/* Possible values of the data_type field (though see inflate()) */\n//var Z_BINARY              = 0;\n//var Z_TEXT                = 1;\n//var Z_ASCII               = 1; // = Z_TEXT\nvar Z_UNKNOWN             = 2;\n\n\n/* The deflate compression method */\nvar Z_DEFLATED  = 8;\n\n/*============================================================================*/\n\n\nvar MAX_MEM_LEVEL = 9;\n/* Maximum value for memLevel in deflateInit2 */\nvar MAX_WBITS = 15;\n/* 32K LZ77 window */\nvar DEF_MEM_LEVEL = 8;\n\n\nvar LENGTH_CODES  = 29;\n/* number of length codes, not counting the special END_BLOCK code */\nvar LITERALS      = 256;\n/* number of literal bytes 0..255 */\nvar L_CODES       = LITERALS + 1 + LENGTH_CODES;\n/* number of Literal or Length codes, including the END_BLOCK code */\nvar D_CODES       = 30;\n/* number of distance codes */\nvar BL_CODES      = 19;\n/* number of codes used to transfer the bit lengths */\nvar HEAP_SIZE     = 2 * L_CODES + 1;\n/* maximum heap size */\nvar MAX_BITS  = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nvar MIN_MATCH = 3;\nvar MAX_MATCH = 258;\nvar MIN_LOOKAHEAD = (MAX_MATCH + MIN_MATCH + 1);\n\nvar PRESET_DICT = 0x20;\n\nvar INIT_STATE = 42;\nvar EXTRA_STATE = 69;\nvar NAME_STATE = 73;\nvar COMMENT_STATE = 91;\nvar HCRC_STATE = 103;\nvar BUSY_STATE = 113;\nvar FINISH_STATE = 666;\n\nvar BS_NEED_MORE      = 1; /* block not completed, need more input or more output */\nvar BS_BLOCK_DONE     = 2; /* block flush performed */\nvar BS_FINISH_STARTED = 3; /* finish started, need only more output at next deflate */\nvar BS_FINISH_DONE    = 4; /* finish done, accept no more input or output */\n\nvar OS_CODE = 0x03; // Unix :) . Don't detect, use this default.\n\nfunction err(strm, errorCode) {\n  strm.msg = msg[errorCode];\n  return errorCode;\n}\n\nfunction rank(f) {\n  return ((f) << 1) - ((f) > 4 ? 9 : 0);\n}\n\nfunction zero(buf) { var len = buf.length; while (--len >= 0) { buf[len] = 0; } }\n\n\n/* =========================================================================\n * Flush as much pending output as possible. All deflate() output goes\n * through this function so some applications may wish to modify it\n * to avoid allocating a large strm->output buffer and copying into it.\n * (See also read_buf()).\n */\nfunction flush_pending(strm) {\n  var s = strm.state;\n\n  //_tr_flush_bits(s);\n  var len = s.pending;\n  if (len > strm.avail_out) {\n    len = strm.avail_out;\n  }\n  if (len === 0) { return; }\n\n  utils.arraySet(strm.output, s.pending_buf, s.pending_out, len, strm.next_out);\n  strm.next_out += len;\n  s.pending_out += len;\n  strm.total_out += len;\n  strm.avail_out -= len;\n  s.pending -= len;\n  if (s.pending === 0) {\n    s.pending_out = 0;\n  }\n}\n\n\nfunction flush_block_only(s, last) {\n  trees._tr_flush_block(s, (s.block_start >= 0 ? s.block_start : -1), s.strstart - s.block_start, last);\n  s.block_start = s.strstart;\n  flush_pending(s.strm);\n}\n\n\nfunction put_byte(s, b) {\n  s.pending_buf[s.pending++] = b;\n}\n\n\n/* =========================================================================\n * Put a short in the pending buffer. The 16-bit value is put in MSB order.\n * IN assertion: the stream state is correct and there is enough room in\n * pending_buf.\n */\nfunction putShortMSB(s, b) {\n//  put_byte(s, (Byte)(b >> 8));\n//  put_byte(s, (Byte)(b & 0xff));\n  s.pending_buf[s.pending++] = (b >>> 8) & 0xff;\n  s.pending_buf[s.pending++] = b & 0xff;\n}\n\n\n/* ===========================================================================\n * Read a new buffer from the current input stream, update the adler32\n * and total number of bytes read.  All deflate() input goes through\n * this function so some applications may wish to modify it to avoid\n * allocating a large strm->input buffer and copying from it.\n * (See also flush_pending()).\n */\nfunction read_buf(strm, buf, start, size) {\n  var len = strm.avail_in;\n\n  if (len > size) { len = size; }\n  if (len === 0) { return 0; }\n\n  strm.avail_in -= len;\n\n  // zmemcpy(buf, strm->next_in, len);\n  utils.arraySet(buf, strm.input, strm.next_in, len, start);\n  if (strm.state.wrap === 1) {\n    strm.adler = adler32(strm.adler, buf, len, start);\n  }\n\n  else if (strm.state.wrap === 2) {\n    strm.adler = crc32(strm.adler, buf, len, start);\n  }\n\n  strm.next_in += len;\n  strm.total_in += len;\n\n  return len;\n}\n\n\n/* ===========================================================================\n * Set match_start to the longest match starting at the given string and\n * return its length. Matches shorter or equal to prev_length are discarded,\n * in which case the result is equal to prev_length and match_start is\n * garbage.\n * IN assertions: cur_match is the head of the hash chain for the current\n *   string (strstart) and its distance is <= MAX_DIST, and prev_length >= 1\n * OUT assertion: the match length is not greater than s->lookahead.\n */\nfunction longest_match(s, cur_match) {\n  var chain_length = s.max_chain_length;      /* max hash chain length */\n  var scan = s.strstart; /* current string */\n  var match;                       /* matched string */\n  var len;                           /* length of current match */\n  var best_len = s.prev_length;              /* best match length so far */\n  var nice_match = s.nice_match;             /* stop if match long enough */\n  var limit = (s.strstart > (s.w_size - MIN_LOOKAHEAD)) ?\n      s.strstart - (s.w_size - MIN_LOOKAHEAD) : 0/*NIL*/;\n\n  var _win = s.window; // shortcut\n\n  var wmask = s.w_mask;\n  var prev  = s.prev;\n\n  /* Stop when cur_match becomes <= limit. To simplify the code,\n   * we prevent matches with the string of window index 0.\n   */\n\n  var strend = s.strstart + MAX_MATCH;\n  var scan_end1  = _win[scan + best_len - 1];\n  var scan_end   = _win[scan + best_len];\n\n  /* The code is optimized for HASH_BITS >= 8 and MAX_MATCH-2 multiple of 16.\n   * It is easy to get rid of this optimization if necessary.\n   */\n  // Assert(s->hash_bits >= 8 && MAX_MATCH == 258, \"Code too clever\");\n\n  /* Do not waste too much time if we already have a good match: */\n  if (s.prev_length >= s.good_match) {\n    chain_length >>= 2;\n  }\n  /* Do not look for matches beyond the end of the input. This is necessary\n   * to make deflate deterministic.\n   */\n  if (nice_match > s.lookahead) { nice_match = s.lookahead; }\n\n  // Assert((ulg)s->strstart <= s->window_size-MIN_LOOKAHEAD, \"need lookahead\");\n\n  do {\n    // Assert(cur_match < s->strstart, \"no future\");\n    match = cur_match;\n\n    /* Skip to next match if the match length cannot increase\n     * or if the match length is less than 2.  Note that the checks below\n     * for insufficient lookahead only occur occasionally for performance\n     * reasons.  Therefore uninitialized memory will be accessed, and\n     * conditional jumps will be made that depend on those values.\n     * However the length of the match is limited to the lookahead, so\n     * the output of deflate is not affected by the uninitialized values.\n     */\n\n    if (_win[match + best_len]     !== scan_end  ||\n        _win[match + best_len - 1] !== scan_end1 ||\n        _win[match]                !== _win[scan] ||\n        _win[++match]              !== _win[scan + 1]) {\n      continue;\n    }\n\n    /* The check at best_len-1 can be removed because it will be made\n     * again later. (This heuristic is not always a win.)\n     * It is not necessary to compare scan[2] and match[2] since they\n     * are always equal when the other bytes match, given that\n     * the hash keys are equal and that HASH_BITS >= 8.\n     */\n    scan += 2;\n    match++;\n    // Assert(*scan == *match, \"match[2]?\");\n\n    /* We check for insufficient lookahead only every 8th comparison;\n     * the 256th check will be made at strstart+258.\n     */\n    do {\n      /*jshint noempty:false*/\n    } while (_win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             scan < strend);\n\n    // Assert(scan <= s->window+(unsigned)(s->window_size-1), \"wild scan\");\n\n    len = MAX_MATCH - (strend - scan);\n    scan = strend - MAX_MATCH;\n\n    if (len > best_len) {\n      s.match_start = cur_match;\n      best_len = len;\n      if (len >= nice_match) {\n        break;\n      }\n      scan_end1  = _win[scan + best_len - 1];\n      scan_end   = _win[scan + best_len];\n    }\n  } while ((cur_match = prev[cur_match & wmask]) > limit && --chain_length !== 0);\n\n  if (best_len <= s.lookahead) {\n    return best_len;\n  }\n  return s.lookahead;\n}\n\n\n/* ===========================================================================\n * Fill the window when the lookahead becomes insufficient.\n * Updates strstart and lookahead.\n *\n * IN assertion: lookahead < MIN_LOOKAHEAD\n * OUT assertions: strstart <= window_size-MIN_LOOKAHEAD\n *    At least one byte has been read, or avail_in == 0; reads are\n *    performed for at least two bytes (required for the zip translate_eol\n *    option -- not supported here).\n */\nfunction fill_window(s) {\n  var _w_size = s.w_size;\n  var p, n, m, more, str;\n\n  //Assert(s->lookahead < MIN_LOOKAHEAD, \"already enough lookahead\");\n\n  do {\n    more = s.window_size - s.lookahead - s.strstart;\n\n    // JS ints have 32 bit, block below not needed\n    /* Deal with !@#$% 64K limit: */\n    //if (sizeof(int) <= 2) {\n    //    if (more == 0 && s->strstart == 0 && s->lookahead == 0) {\n    //        more = wsize;\n    //\n    //  } else if (more == (unsigned)(-1)) {\n    //        /* Very unlikely, but possible on 16 bit machine if\n    //         * strstart == 0 && lookahead == 1 (input done a byte at time)\n    //         */\n    //        more--;\n    //    }\n    //}\n\n\n    /* If the window is almost full and there is insufficient lookahead,\n     * move the upper half to the lower one to make room in the upper half.\n     */\n    if (s.strstart >= _w_size + (_w_size - MIN_LOOKAHEAD)) {\n\n      utils.arraySet(s.window, s.window, _w_size, _w_size, 0);\n      s.match_start -= _w_size;\n      s.strstart -= _w_size;\n      /* we now have strstart >= MAX_DIST */\n      s.block_start -= _w_size;\n\n      /* Slide the hash table (could be avoided with 32 bit values\n       at the expense of memory usage). We slide even when level == 0\n       to keep the hash table consistent if we switch back to level > 0\n       later. (Using level 0 permanently is not an optimal usage of\n       zlib, so we don't care about this pathological case.)\n       */\n\n      n = s.hash_size;\n      p = n;\n      do {\n        m = s.head[--p];\n        s.head[p] = (m >= _w_size ? m - _w_size : 0);\n      } while (--n);\n\n      n = _w_size;\n      p = n;\n      do {\n        m = s.prev[--p];\n        s.prev[p] = (m >= _w_size ? m - _w_size : 0);\n        /* If n is not on any hash chain, prev[n] is garbage but\n         * its value will never be used.\n         */\n      } while (--n);\n\n      more += _w_size;\n    }\n    if (s.strm.avail_in === 0) {\n      break;\n    }\n\n    /* If there was no sliding:\n     *    strstart <= WSIZE+MAX_DIST-1 && lookahead <= MIN_LOOKAHEAD - 1 &&\n     *    more == window_size - lookahead - strstart\n     * => more >= window_size - (MIN_LOOKAHEAD-1 + WSIZE + MAX_DIST-1)\n     * => more >= window_size - 2*WSIZE + 2\n     * In the BIG_MEM or MMAP case (not yet supported),\n     *   window_size == input_size + MIN_LOOKAHEAD  &&\n     *   strstart + s->lookahead <= input_size => more >= MIN_LOOKAHEAD.\n     * Otherwise, window_size == 2*WSIZE so more >= 2.\n     * If there was sliding, more >= WSIZE. So in all cases, more >= 2.\n     */\n    //Assert(more >= 2, \"more < 2\");\n    n = read_buf(s.strm, s.window, s.strstart + s.lookahead, more);\n    s.lookahead += n;\n\n    /* Initialize the hash value now that we have some input: */\n    if (s.lookahead + s.insert >= MIN_MATCH) {\n      str = s.strstart - s.insert;\n      s.ins_h = s.window[str];\n\n      /* UPDATE_HASH(s, s->ins_h, s->window[str + 1]); */\n      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[str + 1]) & s.hash_mask;\n//#if MIN_MATCH != 3\n//        Call update_hash() MIN_MATCH-3 more times\n//#endif\n      while (s.insert) {\n        /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n        s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[str + MIN_MATCH - 1]) & s.hash_mask;\n\n        s.prev[str & s.w_mask] = s.head[s.ins_h];\n        s.head[s.ins_h] = str;\n        str++;\n        s.insert--;\n        if (s.lookahead + s.insert < MIN_MATCH) {\n          break;\n        }\n      }\n    }\n    /* If the whole input has less than MIN_MATCH bytes, ins_h is garbage,\n     * but this is not important since only literal bytes will be emitted.\n     */\n\n  } while (s.lookahead < MIN_LOOKAHEAD && s.strm.avail_in !== 0);\n\n  /* If the WIN_INIT bytes after the end of the current data have never been\n   * written, then zero those bytes in order to avoid memory check reports of\n   * the use of uninitialized (or uninitialised as Julian writes) bytes by\n   * the longest match routines.  Update the high water mark for the next\n   * time through here.  WIN_INIT is set to MAX_MATCH since the longest match\n   * routines allow scanning to strstart + MAX_MATCH, ignoring lookahead.\n   */\n//  if (s.high_water < s.window_size) {\n//    var curr = s.strstart + s.lookahead;\n//    var init = 0;\n//\n//    if (s.high_water < curr) {\n//      /* Previous high water mark below current data -- zero WIN_INIT\n//       * bytes or up to end of window, whichever is less.\n//       */\n//      init = s.window_size - curr;\n//      if (init > WIN_INIT)\n//        init = WIN_INIT;\n//      zmemzero(s->window + curr, (unsigned)init);\n//      s->high_water = curr + init;\n//    }\n//    else if (s->high_water < (ulg)curr + WIN_INIT) {\n//      /* High water mark at or above current data, but below current data\n//       * plus WIN_INIT -- zero out to current data plus WIN_INIT, or up\n//       * to end of window, whichever is less.\n//       */\n//      init = (ulg)curr + WIN_INIT - s->high_water;\n//      if (init > s->window_size - s->high_water)\n//        init = s->window_size - s->high_water;\n//      zmemzero(s->window + s->high_water, (unsigned)init);\n//      s->high_water += init;\n//    }\n//  }\n//\n//  Assert((ulg)s->strstart <= s->window_size - MIN_LOOKAHEAD,\n//    \"not enough room for search\");\n}\n\n/* ===========================================================================\n * Copy without compression as much as possible from the input stream, return\n * the current block state.\n * This function does not insert new strings in the dictionary since\n * uncompressible data is probably not useful. This function is used\n * only for the level=0 compression option.\n * NOTE: this function should be optimized to avoid extra copying from\n * window to pending_buf.\n */\nfunction deflate_stored(s, flush) {\n  /* Stored blocks are limited to 0xffff bytes, pending_buf is limited\n   * to pending_buf_size, and each stored block has a 5 byte header:\n   */\n  var max_block_size = 0xffff;\n\n  if (max_block_size > s.pending_buf_size - 5) {\n    max_block_size = s.pending_buf_size - 5;\n  }\n\n  /* Copy as much as possible from input to output: */\n  for (;;) {\n    /* Fill the window as much as possible: */\n    if (s.lookahead <= 1) {\n\n      //Assert(s->strstart < s->w_size+MAX_DIST(s) ||\n      //  s->block_start >= (long)s->w_size, \"slide too late\");\n//      if (!(s.strstart < s.w_size + (s.w_size - MIN_LOOKAHEAD) ||\n//        s.block_start >= s.w_size)) {\n//        throw  new Error(\"slide too late\");\n//      }\n\n      fill_window(s);\n      if (s.lookahead === 0 && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n\n      if (s.lookahead === 0) {\n        break;\n      }\n      /* flush the current block */\n    }\n    //Assert(s->block_start >= 0L, \"block gone\");\n//    if (s.block_start < 0) throw new Error(\"block gone\");\n\n    s.strstart += s.lookahead;\n    s.lookahead = 0;\n\n    /* Emit a stored block if pending_buf will be full: */\n    var max_start = s.block_start + max_block_size;\n\n    if (s.strstart === 0 || s.strstart >= max_start) {\n      /* strstart == 0 is possible when wraparound on 16-bit machine */\n      s.lookahead = s.strstart - max_start;\n      s.strstart = max_start;\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n\n\n    }\n    /* Flush if we may have to slide, otherwise block_start may become\n     * negative and the data will be gone:\n     */\n    if (s.strstart - s.block_start >= (s.w_size - MIN_LOOKAHEAD)) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n\n  s.insert = 0;\n\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n\n  if (s.strstart > s.block_start) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n\n  return BS_NEED_MORE;\n}\n\n/* ===========================================================================\n * Compress as much as possible from the input stream, return the current\n * block state.\n * This function does not perform lazy evaluation of matches and inserts\n * new strings in the dictionary only for unmatched strings or for short\n * matches. It is used only for the fast compression options.\n */\nfunction deflate_fast(s, flush) {\n  var hash_head;        /* head of the hash chain */\n  var bflush;           /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) {\n        break; /* flush the current block */\n      }\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0/*NIL*/;\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     * At this point we have always match_length < MIN_MATCH\n     */\n    if (hash_head !== 0/*NIL*/ && ((s.strstart - hash_head) <= (s.w_size - MIN_LOOKAHEAD))) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n    }\n    if (s.match_length >= MIN_MATCH) {\n      // check_match(s, s.strstart, s.match_start, s.match_length); // for debug only\n\n      /*** _tr_tally_dist(s, s.strstart - s.match_start,\n                     s.match_length - MIN_MATCH, bflush); ***/\n      bflush = trees._tr_tally(s, s.strstart - s.match_start, s.match_length - MIN_MATCH);\n\n      s.lookahead -= s.match_length;\n\n      /* Insert new strings in the hash table only if the match length\n       * is not too large. This saves time but degrades compression.\n       */\n      if (s.match_length <= s.max_lazy_match/*max_insert_length*/ && s.lookahead >= MIN_MATCH) {\n        s.match_length--; /* string at strstart already in table */\n        do {\n          s.strstart++;\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n          /* strstart never exceeds WSIZE-MAX_MATCH, so there are\n           * always MIN_MATCH bytes ahead.\n           */\n        } while (--s.match_length !== 0);\n        s.strstart++;\n      } else\n      {\n        s.strstart += s.match_length;\n        s.match_length = 0;\n        s.ins_h = s.window[s.strstart];\n        /* UPDATE_HASH(s, s.ins_h, s.window[s.strstart+1]); */\n        s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + 1]) & s.hash_mask;\n\n//#if MIN_MATCH != 3\n//                Call UPDATE_HASH() MIN_MATCH-3 more times\n//#endif\n        /* If lookahead < MIN_MATCH, ins_h is garbage, but it does not\n         * matter since it will be recomputed at next deflate call.\n         */\n      }\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s.window[s.strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = trees._tr_tally(s, 0, s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = ((s.strstart < (MIN_MATCH - 1)) ? s.strstart : MIN_MATCH - 1);\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n}\n\n/* ===========================================================================\n * Same as above, but achieves better compression. We use a lazy\n * evaluation for matches: a match is finally adopted only if there is\n * no better match at the next window position.\n */\nfunction deflate_slow(s, flush) {\n  var hash_head;          /* head of hash chain */\n  var bflush;              /* set if current block must be flushed */\n\n  var max_insert;\n\n  /* Process the input block. */\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) { break; } /* flush the current block */\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0/*NIL*/;\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     */\n    s.prev_length = s.match_length;\n    s.prev_match = s.match_start;\n    s.match_length = MIN_MATCH - 1;\n\n    if (hash_head !== 0/*NIL*/ && s.prev_length < s.max_lazy_match &&\n        s.strstart - hash_head <= (s.w_size - MIN_LOOKAHEAD)/*MAX_DIST(s)*/) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n\n      if (s.match_length <= 5 &&\n         (s.strategy === Z_FILTERED || (s.match_length === MIN_MATCH && s.strstart - s.match_start > 4096/*TOO_FAR*/))) {\n\n        /* If prev_match is also MIN_MATCH, match_start is garbage\n         * but we will ignore the current match anyway.\n         */\n        s.match_length = MIN_MATCH - 1;\n      }\n    }\n    /* If there was a match at the previous step and the current\n     * match is not better, output the previous match:\n     */\n    if (s.prev_length >= MIN_MATCH && s.match_length <= s.prev_length) {\n      max_insert = s.strstart + s.lookahead - MIN_MATCH;\n      /* Do not insert strings in hash table beyond this. */\n\n      //check_match(s, s.strstart-1, s.prev_match, s.prev_length);\n\n      /***_tr_tally_dist(s, s.strstart - 1 - s.prev_match,\n                     s.prev_length - MIN_MATCH, bflush);***/\n      bflush = trees._tr_tally(s, s.strstart - 1 - s.prev_match, s.prev_length - MIN_MATCH);\n      /* Insert in hash table all strings up to the end of the match.\n       * strstart-1 and strstart are already inserted. If there is not\n       * enough lookahead, the last two strings are not inserted in\n       * the hash table.\n       */\n      s.lookahead -= s.prev_length - 1;\n      s.prev_length -= 2;\n      do {\n        if (++s.strstart <= max_insert) {\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n        }\n      } while (--s.prev_length !== 0);\n      s.match_available = 0;\n      s.match_length = MIN_MATCH - 1;\n      s.strstart++;\n\n      if (bflush) {\n        /*** FLUSH_BLOCK(s, 0); ***/\n        flush_block_only(s, false);\n        if (s.strm.avail_out === 0) {\n          return BS_NEED_MORE;\n        }\n        /***/\n      }\n\n    } else if (s.match_available) {\n      /* If there was no match at the previous position, output a\n       * single literal. If there was a match but the current match\n       * is longer, truncate the previous match to a single literal.\n       */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n      /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n      bflush = trees._tr_tally(s, 0, s.window[s.strstart - 1]);\n\n      if (bflush) {\n        /*** FLUSH_BLOCK_ONLY(s, 0) ***/\n        flush_block_only(s, false);\n        /***/\n      }\n      s.strstart++;\n      s.lookahead--;\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n    } else {\n      /* There is no previous match to compare with, wait for\n       * the next step to decide.\n       */\n      s.match_available = 1;\n      s.strstart++;\n      s.lookahead--;\n    }\n  }\n  //Assert (flush != Z_NO_FLUSH, \"no flush?\");\n  if (s.match_available) {\n    //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n    /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n    bflush = trees._tr_tally(s, 0, s.window[s.strstart - 1]);\n\n    s.match_available = 0;\n  }\n  s.insert = s.strstart < MIN_MATCH - 1 ? s.strstart : MIN_MATCH - 1;\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n\n  return BS_BLOCK_DONE;\n}\n\n\n/* ===========================================================================\n * For Z_RLE, simply look for runs of bytes, generate matches only of distance\n * one.  Do not maintain a hash table.  (It will be regenerated if this run of\n * deflate switches away from Z_RLE.)\n */\nfunction deflate_rle(s, flush) {\n  var bflush;            /* set if current block must be flushed */\n  var prev;              /* byte at distance one to match */\n  var scan, strend;      /* scan goes up to strend for length of run */\n\n  var _win = s.window;\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the longest run, plus one for the unrolled loop.\n     */\n    if (s.lookahead <= MAX_MATCH) {\n      fill_window(s);\n      if (s.lookahead <= MAX_MATCH && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) { break; } /* flush the current block */\n    }\n\n    /* See how many times the previous byte repeats */\n    s.match_length = 0;\n    if (s.lookahead >= MIN_MATCH && s.strstart > 0) {\n      scan = s.strstart - 1;\n      prev = _win[scan];\n      if (prev === _win[++scan] && prev === _win[++scan] && prev === _win[++scan]) {\n        strend = s.strstart + MAX_MATCH;\n        do {\n          /*jshint noempty:false*/\n        } while (prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 scan < strend);\n        s.match_length = MAX_MATCH - (strend - scan);\n        if (s.match_length > s.lookahead) {\n          s.match_length = s.lookahead;\n        }\n      }\n      //Assert(scan <= s->window+(uInt)(s->window_size-1), \"wild scan\");\n    }\n\n    /* Emit match if have run of MIN_MATCH or longer, else emit literal */\n    if (s.match_length >= MIN_MATCH) {\n      //check_match(s, s.strstart, s.strstart - 1, s.match_length);\n\n      /*** _tr_tally_dist(s, 1, s.match_length - MIN_MATCH, bflush); ***/\n      bflush = trees._tr_tally(s, 1, s.match_length - MIN_MATCH);\n\n      s.lookahead -= s.match_length;\n      s.strstart += s.match_length;\n      s.match_length = 0;\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = trees._tr_tally(s, 0, s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n}\n\n/* ===========================================================================\n * For Z_HUFFMAN_ONLY, do not look for matches.  Do not maintain a hash table.\n * (It will be regenerated if this run of deflate switches away from Huffman.)\n */\nfunction deflate_huff(s, flush) {\n  var bflush;             /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we have a literal to write. */\n    if (s.lookahead === 0) {\n      fill_window(s);\n      if (s.lookahead === 0) {\n        if (flush === Z_NO_FLUSH) {\n          return BS_NEED_MORE;\n        }\n        break;      /* flush the current block */\n      }\n    }\n\n    /* Output a literal byte */\n    s.match_length = 0;\n    //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n    /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n    bflush = trees._tr_tally(s, 0, s.window[s.strstart]);\n    s.lookahead--;\n    s.strstart++;\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n}\n\n/* Values for max_lazy_match, good_match and max_chain_length, depending on\n * the desired pack level (0..9). The values given below have been tuned to\n * exclude worst case performance for pathological files. Better values may be\n * found for specific files.\n */\nfunction Config(good_length, max_lazy, nice_length, max_chain, func) {\n  this.good_length = good_length;\n  this.max_lazy = max_lazy;\n  this.nice_length = nice_length;\n  this.max_chain = max_chain;\n  this.func = func;\n}\n\nvar configuration_table;\n\nconfiguration_table = [\n  /*      good lazy nice chain */\n  new Config(0, 0, 0, 0, deflate_stored),          /* 0 store only */\n  new Config(4, 4, 8, 4, deflate_fast),            /* 1 max speed, no lazy matches */\n  new Config(4, 5, 16, 8, deflate_fast),           /* 2 */\n  new Config(4, 6, 32, 32, deflate_fast),          /* 3 */\n\n  new Config(4, 4, 16, 16, deflate_slow),          /* 4 lazy matches */\n  new Config(8, 16, 32, 32, deflate_slow),         /* 5 */\n  new Config(8, 16, 128, 128, deflate_slow),       /* 6 */\n  new Config(8, 32, 128, 256, deflate_slow),       /* 7 */\n  new Config(32, 128, 258, 1024, deflate_slow),    /* 8 */\n  new Config(32, 258, 258, 4096, deflate_slow)     /* 9 max compression */\n];\n\n\n/* ===========================================================================\n * Initialize the \"longest match\" routines for a new zlib stream\n */\nfunction lm_init(s) {\n  s.window_size = 2 * s.w_size;\n\n  /*** CLEAR_HASH(s); ***/\n  zero(s.head); // Fill with NIL (= 0);\n\n  /* Set the default configuration parameters:\n   */\n  s.max_lazy_match = configuration_table[s.level].max_lazy;\n  s.good_match = configuration_table[s.level].good_length;\n  s.nice_match = configuration_table[s.level].nice_length;\n  s.max_chain_length = configuration_table[s.level].max_chain;\n\n  s.strstart = 0;\n  s.block_start = 0;\n  s.lookahead = 0;\n  s.insert = 0;\n  s.match_length = s.prev_length = MIN_MATCH - 1;\n  s.match_available = 0;\n  s.ins_h = 0;\n}\n\n\nfunction DeflateState() {\n  this.strm = null;            /* pointer back to this zlib stream */\n  this.status = 0;            /* as the name implies */\n  this.pending_buf = null;      /* output still pending */\n  this.pending_buf_size = 0;  /* size of pending_buf */\n  this.pending_out = 0;       /* next pending byte to output to the stream */\n  this.pending = 0;           /* nb of bytes in the pending buffer */\n  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */\n  this.gzhead = null;         /* gzip header information to write */\n  this.gzindex = 0;           /* where in extra, name, or comment */\n  this.method = Z_DEFLATED; /* can only be DEFLATED */\n  this.last_flush = -1;   /* value of flush param for previous deflate call */\n\n  this.w_size = 0;  /* LZ77 window size (32K by default) */\n  this.w_bits = 0;  /* log2(w_size)  (8..16) */\n  this.w_mask = 0;  /* w_size - 1 */\n\n  this.window = null;\n  /* Sliding window. Input bytes are read into the second half of the window,\n   * and move to the first half later to keep a dictionary of at least wSize\n   * bytes. With this organization, matches are limited to a distance of\n   * wSize-MAX_MATCH bytes, but this ensures that IO is always\n   * performed with a length multiple of the block size.\n   */\n\n  this.window_size = 0;\n  /* Actual size of window: 2*wSize, except when the user input buffer\n   * is directly used as sliding window.\n   */\n\n  this.prev = null;\n  /* Link to older string with same hash index. To limit the size of this\n   * array to 64K, this link is maintained only for the last 32K strings.\n   * An index in this array is thus a window index modulo 32K.\n   */\n\n  this.head = null;   /* Heads of the hash chains or NIL. */\n\n  this.ins_h = 0;       /* hash index of string to be inserted */\n  this.hash_size = 0;   /* number of elements in hash table */\n  this.hash_bits = 0;   /* log2(hash_size) */\n  this.hash_mask = 0;   /* hash_size-1 */\n\n  this.hash_shift = 0;\n  /* Number of bits by which ins_h must be shifted at each input\n   * step. It must be such that after MIN_MATCH steps, the oldest\n   * byte no longer takes part in the hash key, that is:\n   *   hash_shift * MIN_MATCH >= hash_bits\n   */\n\n  this.block_start = 0;\n  /* Window position at the beginning of the current output block. Gets\n   * negative when the window is moved backwards.\n   */\n\n  this.match_length = 0;      /* length of best match */\n  this.prev_match = 0;        /* previous match */\n  this.match_available = 0;   /* set if previous match exists */\n  this.strstart = 0;          /* start of string to insert */\n  this.match_start = 0;       /* start of matching string */\n  this.lookahead = 0;         /* number of valid bytes ahead in window */\n\n  this.prev_length = 0;\n  /* Length of the best match at previous step. Matches not greater than this\n   * are discarded. This is used in the lazy match evaluation.\n   */\n\n  this.max_chain_length = 0;\n  /* To speed up deflation, hash chains are never searched beyond this\n   * length.  A higher limit improves compression ratio but degrades the\n   * speed.\n   */\n\n  this.max_lazy_match = 0;\n  /* Attempt to find a better match only when the current match is strictly\n   * smaller than this value. This mechanism is used only for compression\n   * levels >= 4.\n   */\n  // That's alias to max_lazy_match, don't use directly\n  //this.max_insert_length = 0;\n  /* Insert new strings in the hash table only if the match length is not\n   * greater than this length. This saves time but degrades compression.\n   * max_insert_length is used only for compression levels <= 3.\n   */\n\n  this.level = 0;     /* compression level (1..9) */\n  this.strategy = 0;  /* favor or force Huffman coding*/\n\n  this.good_match = 0;\n  /* Use a faster search when the previous match is longer than this */\n\n  this.nice_match = 0; /* Stop searching when current match exceeds this */\n\n              /* used by trees.c: */\n\n  /* Didn't use ct_data typedef below to suppress compiler warning */\n\n  // struct ct_data_s dyn_ltree[HEAP_SIZE];   /* literal and length tree */\n  // struct ct_data_s dyn_dtree[2*D_CODES+1]; /* distance tree */\n  // struct ct_data_s bl_tree[2*BL_CODES+1];  /* Huffman tree for bit lengths */\n\n  // Use flat array of DOUBLE size, with interleaved fata,\n  // because JS does not support effective\n  this.dyn_ltree  = new utils.Buf16(HEAP_SIZE * 2);\n  this.dyn_dtree  = new utils.Buf16((2 * D_CODES + 1) * 2);\n  this.bl_tree    = new utils.Buf16((2 * BL_CODES + 1) * 2);\n  zero(this.dyn_ltree);\n  zero(this.dyn_dtree);\n  zero(this.bl_tree);\n\n  this.l_desc   = null;         /* desc. for literal tree */\n  this.d_desc   = null;         /* desc. for distance tree */\n  this.bl_desc  = null;         /* desc. for bit length tree */\n\n  //ush bl_count[MAX_BITS+1];\n  this.bl_count = new utils.Buf16(MAX_BITS + 1);\n  /* number of codes at each bit length for an optimal tree */\n\n  //int heap[2*L_CODES+1];      /* heap used to build the Huffman trees */\n  this.heap = new utils.Buf16(2 * L_CODES + 1);  /* heap used to build the Huffman trees */\n  zero(this.heap);\n\n  this.heap_len = 0;               /* number of elements in the heap */\n  this.heap_max = 0;               /* element of largest frequency */\n  /* The sons of heap[n] are heap[2*n] and heap[2*n+1]. heap[0] is not used.\n   * The same heap array is used to build all trees.\n   */\n\n  this.depth = new utils.Buf16(2 * L_CODES + 1); //uch depth[2*L_CODES+1];\n  zero(this.depth);\n  /* Depth of each subtree used as tie breaker for trees of equal frequency\n   */\n\n  this.l_buf = 0;          /* buffer index for literals or lengths */\n\n  this.lit_bufsize = 0;\n  /* Size of match buffer for literals/lengths.  There are 4 reasons for\n   * limiting lit_bufsize to 64K:\n   *   - frequencies can be kept in 16 bit counters\n   *   - if compression is not successful for the first block, all input\n   *     data is still in the window so we can still emit a stored block even\n   *     when input comes from standard input.  (This can also be done for\n   *     all blocks if lit_bufsize is not greater than 32K.)\n   *   - if compression is not successful for a file smaller than 64K, we can\n   *     even emit a stored file instead of a stored block (saving 5 bytes).\n   *     This is applicable only for zip (not gzip or zlib).\n   *   - creating new Huffman trees less frequently may not provide fast\n   *     adaptation to changes in the input data statistics. (Take for\n   *     example a binary file with poorly compressible code followed by\n   *     a highly compressible string table.) Smaller buffer sizes give\n   *     fast adaptation but have of course the overhead of transmitting\n   *     trees more frequently.\n   *   - I can't count above 4\n   */\n\n  this.last_lit = 0;      /* running index in l_buf */\n\n  this.d_buf = 0;\n  /* Buffer index for distances. To simplify the code, d_buf and l_buf have\n   * the same number of elements. To use different lengths, an extra flag\n   * array would be necessary.\n   */\n\n  this.opt_len = 0;       /* bit length of current block with optimal trees */\n  this.static_len = 0;    /* bit length of current block with static trees */\n  this.matches = 0;       /* number of string matches in current block */\n  this.insert = 0;        /* bytes at end of window left to insert */\n\n\n  this.bi_buf = 0;\n  /* Output buffer. bits are inserted starting at the bottom (least\n   * significant bits).\n   */\n  this.bi_valid = 0;\n  /* Number of valid bits in bi_buf.  All bits above the last valid bit\n   * are always zero.\n   */\n\n  // Used for window memory init. We safely ignore it for JS. That makes\n  // sense only for pointers and memory check tools.\n  //this.high_water = 0;\n  /* High water mark offset in window for initialized bytes -- bytes above\n   * this are set to zero in order to avoid memory check warnings when\n   * longest match routines access bytes past the input.  This is then\n   * updated to the new high water mark.\n   */\n}\n\n\nfunction deflateResetKeep(strm) {\n  var s;\n\n  if (!strm || !strm.state) {\n    return err(strm, Z_STREAM_ERROR);\n  }\n\n  strm.total_in = strm.total_out = 0;\n  strm.data_type = Z_UNKNOWN;\n\n  s = strm.state;\n  s.pending = 0;\n  s.pending_out = 0;\n\n  if (s.wrap < 0) {\n    s.wrap = -s.wrap;\n    /* was made negative by deflate(..., Z_FINISH); */\n  }\n  s.status = (s.wrap ? INIT_STATE : BUSY_STATE);\n  strm.adler = (s.wrap === 2) ?\n    0  // crc32(0, Z_NULL, 0)\n  :\n    1; // adler32(0, Z_NULL, 0)\n  s.last_flush = Z_NO_FLUSH;\n  trees._tr_init(s);\n  return Z_OK;\n}\n\n\nfunction deflateReset(strm) {\n  var ret = deflateResetKeep(strm);\n  if (ret === Z_OK) {\n    lm_init(strm.state);\n  }\n  return ret;\n}\n\n\nfunction deflateSetHeader(strm, head) {\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  if (strm.state.wrap !== 2) { return Z_STREAM_ERROR; }\n  strm.state.gzhead = head;\n  return Z_OK;\n}\n\n\nfunction deflateInit2(strm, level, method, windowBits, memLevel, strategy) {\n  if (!strm) { // === Z_NULL\n    return Z_STREAM_ERROR;\n  }\n  var wrap = 1;\n\n  if (level === Z_DEFAULT_COMPRESSION) {\n    level = 6;\n  }\n\n  if (windowBits < 0) { /* suppress zlib wrapper */\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n\n  else if (windowBits > 15) {\n    wrap = 2;           /* write gzip wrapper instead */\n    windowBits -= 16;\n  }\n\n\n  if (memLevel < 1 || memLevel > MAX_MEM_LEVEL || method !== Z_DEFLATED ||\n    windowBits < 8 || windowBits > 15 || level < 0 || level > 9 ||\n    strategy < 0 || strategy > Z_FIXED) {\n    return err(strm, Z_STREAM_ERROR);\n  }\n\n\n  if (windowBits === 8) {\n    windowBits = 9;\n  }\n  /* until 256-byte window bug fixed */\n\n  var s = new DeflateState();\n\n  strm.state = s;\n  s.strm = strm;\n\n  s.wrap = wrap;\n  s.gzhead = null;\n  s.w_bits = windowBits;\n  s.w_size = 1 << s.w_bits;\n  s.w_mask = s.w_size - 1;\n\n  s.hash_bits = memLevel + 7;\n  s.hash_size = 1 << s.hash_bits;\n  s.hash_mask = s.hash_size - 1;\n  s.hash_shift = ~~((s.hash_bits + MIN_MATCH - 1) / MIN_MATCH);\n\n  s.window = new utils.Buf8(s.w_size * 2);\n  s.head = new utils.Buf16(s.hash_size);\n  s.prev = new utils.Buf16(s.w_size);\n\n  // Don't need mem init magic for JS.\n  //s.high_water = 0;  /* nothing written to s->window yet */\n\n  s.lit_bufsize = 1 << (memLevel + 6); /* 16K elements by default */\n\n  s.pending_buf_size = s.lit_bufsize * 4;\n\n  //overlay = (ushf *) ZALLOC(strm, s->lit_bufsize, sizeof(ush)+2);\n  //s->pending_buf = (uchf *) overlay;\n  s.pending_buf = new utils.Buf8(s.pending_buf_size);\n\n  // It is offset from `s.pending_buf` (size is `s.lit_bufsize * 2`)\n  //s->d_buf = overlay + s->lit_bufsize/sizeof(ush);\n  s.d_buf = 1 * s.lit_bufsize;\n\n  //s->l_buf = s->pending_buf + (1+sizeof(ush))*s->lit_bufsize;\n  s.l_buf = (1 + 2) * s.lit_bufsize;\n\n  s.level = level;\n  s.strategy = strategy;\n  s.method = method;\n\n  return deflateReset(strm);\n}\n\nfunction deflateInit(strm, level) {\n  return deflateInit2(strm, level, Z_DEFLATED, MAX_WBITS, DEF_MEM_LEVEL, Z_DEFAULT_STRATEGY);\n}\n\n\nfunction deflate(strm, flush) {\n  var old_flush, s;\n  var beg, val; // for gzip header write only\n\n  if (!strm || !strm.state ||\n    flush > Z_BLOCK || flush < 0) {\n    return strm ? err(strm, Z_STREAM_ERROR) : Z_STREAM_ERROR;\n  }\n\n  s = strm.state;\n\n  if (!strm.output ||\n      (!strm.input && strm.avail_in !== 0) ||\n      (s.status === FINISH_STATE && flush !== Z_FINISH)) {\n    return err(strm, (strm.avail_out === 0) ? Z_BUF_ERROR : Z_STREAM_ERROR);\n  }\n\n  s.strm = strm; /* just in case */\n  old_flush = s.last_flush;\n  s.last_flush = flush;\n\n  /* Write the header */\n  if (s.status === INIT_STATE) {\n\n    if (s.wrap === 2) { // GZIP header\n      strm.adler = 0;  //crc32(0L, Z_NULL, 0);\n      put_byte(s, 31);\n      put_byte(s, 139);\n      put_byte(s, 8);\n      if (!s.gzhead) { // s->gzhead == Z_NULL\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, s.level === 9 ? 2 :\n                    (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n                     4 : 0));\n        put_byte(s, OS_CODE);\n        s.status = BUSY_STATE;\n      }\n      else {\n        put_byte(s, (s.gzhead.text ? 1 : 0) +\n                    (s.gzhead.hcrc ? 2 : 0) +\n                    (!s.gzhead.extra ? 0 : 4) +\n                    (!s.gzhead.name ? 0 : 8) +\n                    (!s.gzhead.comment ? 0 : 16)\n        );\n        put_byte(s, s.gzhead.time & 0xff);\n        put_byte(s, (s.gzhead.time >> 8) & 0xff);\n        put_byte(s, (s.gzhead.time >> 16) & 0xff);\n        put_byte(s, (s.gzhead.time >> 24) & 0xff);\n        put_byte(s, s.level === 9 ? 2 :\n                    (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n                     4 : 0));\n        put_byte(s, s.gzhead.os & 0xff);\n        if (s.gzhead.extra && s.gzhead.extra.length) {\n          put_byte(s, s.gzhead.extra.length & 0xff);\n          put_byte(s, (s.gzhead.extra.length >> 8) & 0xff);\n        }\n        if (s.gzhead.hcrc) {\n          strm.adler = crc32(strm.adler, s.pending_buf, s.pending, 0);\n        }\n        s.gzindex = 0;\n        s.status = EXTRA_STATE;\n      }\n    }\n    else // DEFLATE header\n    {\n      var header = (Z_DEFLATED + ((s.w_bits - 8) << 4)) << 8;\n      var level_flags = -1;\n\n      if (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2) {\n        level_flags = 0;\n      } else if (s.level < 6) {\n        level_flags = 1;\n      } else if (s.level === 6) {\n        level_flags = 2;\n      } else {\n        level_flags = 3;\n      }\n      header |= (level_flags << 6);\n      if (s.strstart !== 0) { header |= PRESET_DICT; }\n      header += 31 - (header % 31);\n\n      s.status = BUSY_STATE;\n      putShortMSB(s, header);\n\n      /* Save the adler32 of the preset dictionary: */\n      if (s.strstart !== 0) {\n        putShortMSB(s, strm.adler >>> 16);\n        putShortMSB(s, strm.adler & 0xffff);\n      }\n      strm.adler = 1; // adler32(0L, Z_NULL, 0);\n    }\n  }\n\n//#ifdef GZIP\n  if (s.status === EXTRA_STATE) {\n    if (s.gzhead.extra/* != Z_NULL*/) {\n      beg = s.pending;  /* start of bytes to update crc */\n\n      while (s.gzindex < (s.gzhead.extra.length & 0xffff)) {\n        if (s.pending === s.pending_buf_size) {\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          flush_pending(strm);\n          beg = s.pending;\n          if (s.pending === s.pending_buf_size) {\n            break;\n          }\n        }\n        put_byte(s, s.gzhead.extra[s.gzindex] & 0xff);\n        s.gzindex++;\n      }\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      if (s.gzindex === s.gzhead.extra.length) {\n        s.gzindex = 0;\n        s.status = NAME_STATE;\n      }\n    }\n    else {\n      s.status = NAME_STATE;\n    }\n  }\n  if (s.status === NAME_STATE) {\n    if (s.gzhead.name/* != Z_NULL*/) {\n      beg = s.pending;  /* start of bytes to update crc */\n      //int val;\n\n      do {\n        if (s.pending === s.pending_buf_size) {\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          flush_pending(strm);\n          beg = s.pending;\n          if (s.pending === s.pending_buf_size) {\n            val = 1;\n            break;\n          }\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.name.length) {\n          val = s.gzhead.name.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      if (val === 0) {\n        s.gzindex = 0;\n        s.status = COMMENT_STATE;\n      }\n    }\n    else {\n      s.status = COMMENT_STATE;\n    }\n  }\n  if (s.status === COMMENT_STATE) {\n    if (s.gzhead.comment/* != Z_NULL*/) {\n      beg = s.pending;  /* start of bytes to update crc */\n      //int val;\n\n      do {\n        if (s.pending === s.pending_buf_size) {\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          flush_pending(strm);\n          beg = s.pending;\n          if (s.pending === s.pending_buf_size) {\n            val = 1;\n            break;\n          }\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.comment.length) {\n          val = s.gzhead.comment.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      if (val === 0) {\n        s.status = HCRC_STATE;\n      }\n    }\n    else {\n      s.status = HCRC_STATE;\n    }\n  }\n  if (s.status === HCRC_STATE) {\n    if (s.gzhead.hcrc) {\n      if (s.pending + 2 > s.pending_buf_size) {\n        flush_pending(strm);\n      }\n      if (s.pending + 2 <= s.pending_buf_size) {\n        put_byte(s, strm.adler & 0xff);\n        put_byte(s, (strm.adler >> 8) & 0xff);\n        strm.adler = 0; //crc32(0L, Z_NULL, 0);\n        s.status = BUSY_STATE;\n      }\n    }\n    else {\n      s.status = BUSY_STATE;\n    }\n  }\n//#endif\n\n  /* Flush as much pending output as possible */\n  if (s.pending !== 0) {\n    flush_pending(strm);\n    if (strm.avail_out === 0) {\n      /* Since avail_out is 0, deflate will be called again with\n       * more output space, but possibly with both pending and\n       * avail_in equal to zero. There won't be anything to do,\n       * but this is not an error situation so make sure we\n       * return OK instead of BUF_ERROR at next call of deflate:\n       */\n      s.last_flush = -1;\n      return Z_OK;\n    }\n\n    /* Make sure there is something to do and avoid duplicate consecutive\n     * flushes. For repeated and useless calls with Z_FINISH, we keep\n     * returning Z_STREAM_END instead of Z_BUF_ERROR.\n     */\n  } else if (strm.avail_in === 0 && rank(flush) <= rank(old_flush) &&\n    flush !== Z_FINISH) {\n    return err(strm, Z_BUF_ERROR);\n  }\n\n  /* User must not provide more input after the first FINISH: */\n  if (s.status === FINISH_STATE && strm.avail_in !== 0) {\n    return err(strm, Z_BUF_ERROR);\n  }\n\n  /* Start a new block or continue the current one.\n   */\n  if (strm.avail_in !== 0 || s.lookahead !== 0 ||\n    (flush !== Z_NO_FLUSH && s.status !== FINISH_STATE)) {\n    var bstate = (s.strategy === Z_HUFFMAN_ONLY) ? deflate_huff(s, flush) :\n      (s.strategy === Z_RLE ? deflate_rle(s, flush) :\n        configuration_table[s.level].func(s, flush));\n\n    if (bstate === BS_FINISH_STARTED || bstate === BS_FINISH_DONE) {\n      s.status = FINISH_STATE;\n    }\n    if (bstate === BS_NEED_MORE || bstate === BS_FINISH_STARTED) {\n      if (strm.avail_out === 0) {\n        s.last_flush = -1;\n        /* avoid BUF_ERROR next call, see above */\n      }\n      return Z_OK;\n      /* If flush != Z_NO_FLUSH && avail_out == 0, the next call\n       * of deflate should use the same flush parameter to make sure\n       * that the flush is complete. So we don't have to output an\n       * empty block here, this will be done at next call. This also\n       * ensures that for a very small output buffer, we emit at most\n       * one empty block.\n       */\n    }\n    if (bstate === BS_BLOCK_DONE) {\n      if (flush === Z_PARTIAL_FLUSH) {\n        trees._tr_align(s);\n      }\n      else if (flush !== Z_BLOCK) { /* FULL_FLUSH or SYNC_FLUSH */\n\n        trees._tr_stored_block(s, 0, 0, false);\n        /* For a full flush, this empty block will be recognized\n         * as a special marker by inflate_sync().\n         */\n        if (flush === Z_FULL_FLUSH) {\n          /*** CLEAR_HASH(s); ***/             /* forget history */\n          zero(s.head); // Fill with NIL (= 0);\n\n          if (s.lookahead === 0) {\n            s.strstart = 0;\n            s.block_start = 0;\n            s.insert = 0;\n          }\n        }\n      }\n      flush_pending(strm);\n      if (strm.avail_out === 0) {\n        s.last_flush = -1; /* avoid BUF_ERROR at next call, see above */\n        return Z_OK;\n      }\n    }\n  }\n  //Assert(strm->avail_out > 0, \"bug2\");\n  //if (strm.avail_out <= 0) { throw new Error(\"bug2\");}\n\n  if (flush !== Z_FINISH) { return Z_OK; }\n  if (s.wrap <= 0) { return Z_STREAM_END; }\n\n  /* Write the trailer */\n  if (s.wrap === 2) {\n    put_byte(s, strm.adler & 0xff);\n    put_byte(s, (strm.adler >> 8) & 0xff);\n    put_byte(s, (strm.adler >> 16) & 0xff);\n    put_byte(s, (strm.adler >> 24) & 0xff);\n    put_byte(s, strm.total_in & 0xff);\n    put_byte(s, (strm.total_in >> 8) & 0xff);\n    put_byte(s, (strm.total_in >> 16) & 0xff);\n    put_byte(s, (strm.total_in >> 24) & 0xff);\n  }\n  else\n  {\n    putShortMSB(s, strm.adler >>> 16);\n    putShortMSB(s, strm.adler & 0xffff);\n  }\n\n  flush_pending(strm);\n  /* If avail_out is zero, the application will call deflate again\n   * to flush the rest.\n   */\n  if (s.wrap > 0) { s.wrap = -s.wrap; }\n  /* write the trailer only once! */\n  return s.pending !== 0 ? Z_OK : Z_STREAM_END;\n}\n\nfunction deflateEnd(strm) {\n  var status;\n\n  if (!strm/*== Z_NULL*/ || !strm.state/*== Z_NULL*/) {\n    return Z_STREAM_ERROR;\n  }\n\n  status = strm.state.status;\n  if (status !== INIT_STATE &&\n    status !== EXTRA_STATE &&\n    status !== NAME_STATE &&\n    status !== COMMENT_STATE &&\n    status !== HCRC_STATE &&\n    status !== BUSY_STATE &&\n    status !== FINISH_STATE\n  ) {\n    return err(strm, Z_STREAM_ERROR);\n  }\n\n  strm.state = null;\n\n  return status === BUSY_STATE ? err(strm, Z_DATA_ERROR) : Z_OK;\n}\n\n\n/* =========================================================================\n * Initializes the compression dictionary from the given byte\n * sequence without producing any compressed output.\n */\nfunction deflateSetDictionary(strm, dictionary) {\n  var dictLength = dictionary.length;\n\n  var s;\n  var str, n;\n  var wrap;\n  var avail;\n  var next;\n  var input;\n  var tmpDict;\n\n  if (!strm/*== Z_NULL*/ || !strm.state/*== Z_NULL*/) {\n    return Z_STREAM_ERROR;\n  }\n\n  s = strm.state;\n  wrap = s.wrap;\n\n  if (wrap === 2 || (wrap === 1 && s.status !== INIT_STATE) || s.lookahead) {\n    return Z_STREAM_ERROR;\n  }\n\n  /* when using zlib wrappers, compute Adler-32 for provided dictionary */\n  if (wrap === 1) {\n    /* adler32(strm->adler, dictionary, dictLength); */\n    strm.adler = adler32(strm.adler, dictionary, dictLength, 0);\n  }\n\n  s.wrap = 0;   /* avoid computing Adler-32 in read_buf */\n\n  /* if dictionary would fill window, just replace the history */\n  if (dictLength >= s.w_size) {\n    if (wrap === 0) {            /* already empty otherwise */\n      /*** CLEAR_HASH(s); ***/\n      zero(s.head); // Fill with NIL (= 0);\n      s.strstart = 0;\n      s.block_start = 0;\n      s.insert = 0;\n    }\n    /* use the tail */\n    // dictionary = dictionary.slice(dictLength - s.w_size);\n    tmpDict = new utils.Buf8(s.w_size);\n    utils.arraySet(tmpDict, dictionary, dictLength - s.w_size, s.w_size, 0);\n    dictionary = tmpDict;\n    dictLength = s.w_size;\n  }\n  /* insert dictionary into window and hash */\n  avail = strm.avail_in;\n  next = strm.next_in;\n  input = strm.input;\n  strm.avail_in = dictLength;\n  strm.next_in = 0;\n  strm.input = dictionary;\n  fill_window(s);\n  while (s.lookahead >= MIN_MATCH) {\n    str = s.strstart;\n    n = s.lookahead - (MIN_MATCH - 1);\n    do {\n      /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[str + MIN_MATCH - 1]) & s.hash_mask;\n\n      s.prev[str & s.w_mask] = s.head[s.ins_h];\n\n      s.head[s.ins_h] = str;\n      str++;\n    } while (--n);\n    s.strstart = str;\n    s.lookahead = MIN_MATCH - 1;\n    fill_window(s);\n  }\n  s.strstart += s.lookahead;\n  s.block_start = s.strstart;\n  s.insert = s.lookahead;\n  s.lookahead = 0;\n  s.match_length = s.prev_length = MIN_MATCH - 1;\n  s.match_available = 0;\n  strm.next_in = next;\n  strm.input = input;\n  strm.avail_in = avail;\n  s.wrap = wrap;\n  return Z_OK;\n}\n\n\nexports.deflateInit = deflateInit;\nexports.deflateInit2 = deflateInit2;\nexports.deflateReset = deflateReset;\nexports.deflateResetKeep = deflateResetKeep;\nexports.deflateSetHeader = deflateSetHeader;\nexports.deflate = deflate;\nexports.deflateEnd = deflateEnd;\nexports.deflateSetDictionary = deflateSetDictionary;\nexports.deflateInfo = 'pako deflate (from Nodeca project)';\n\n/* Not implemented\nexports.deflateBound = deflateBound;\nexports.deflateCopy = deflateCopy;\nexports.deflateParams = deflateParams;\nexports.deflatePending = deflatePending;\nexports.deflatePrime = deflatePrime;\nexports.deflateTune = deflateTune;\n*/\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction GZheader() {\n  /* true if compressed data believed to be text */\n  this.text       = 0;\n  /* modification time */\n  this.time       = 0;\n  /* extra flags (not used when writing a gzip file) */\n  this.xflags     = 0;\n  /* operating system */\n  this.os         = 0;\n  /* pointer to extra field or Z_NULL if none */\n  this.extra      = null;\n  /* extra field length (valid if extra != Z_NULL) */\n  this.extra_len  = 0; // Actually, we don't need it in JS,\n                       // but leave for few code modifications\n\n  //\n  // Setup limits is not necessary because in js we should not preallocate memory\n  // for inflate use constant limit in 65536 bytes\n  //\n\n  /* space at extra (only when reading header) */\n  // this.extra_max  = 0;\n  /* pointer to zero-terminated file name or Z_NULL */\n  this.name       = '';\n  /* space at name (only when reading header) */\n  // this.name_max   = 0;\n  /* pointer to zero-terminated comment or Z_NULL */\n  this.comment    = '';\n  /* space at comment (only when reading header) */\n  // this.comm_max   = 0;\n  /* true if there was or will be a header crc */\n  this.hcrc       = 0;\n  /* true when done reading gzip header (not used when writing a gzip file) */\n  this.done       = false;\n}\n\nmodule.exports = GZheader;\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n// See state defs from inflate.js\nvar BAD = 30;       /* got a data error -- remain here until reset */\nvar TYPE = 12;      /* i: waiting for type bits, including last-flag bit */\n\n/*\n   Decode literal, length, and distance codes and write out the resulting\n   literal and match bytes until either not enough input or output is\n   available, an end-of-block is encountered, or a data error is encountered.\n   When large enough input and output buffers are supplied to inflate(), for\n   example, a 16K input buffer and a 64K output buffer, more than 95% of the\n   inflate execution time is spent in this routine.\n\n   Entry assumptions:\n\n        state.mode === LEN\n        strm.avail_in >= 6\n        strm.avail_out >= 258\n        start >= strm.avail_out\n        state.bits < 8\n\n   On return, state.mode is one of:\n\n        LEN -- ran out of enough output space or enough available input\n        TYPE -- reached end of block code, inflate() to interpret next block\n        BAD -- error in block data\n\n   Notes:\n\n    - The maximum input bits used by a length/distance pair is 15 bits for the\n      length code, 5 bits for the length extra, 15 bits for the distance code,\n      and 13 bits for the distance extra.  This totals 48 bits, or six bytes.\n      Therefore if strm.avail_in >= 6, then there is enough input to avoid\n      checking for available input while decoding.\n\n    - The maximum bytes that a single length/distance pair can output is 258\n      bytes, which is the maximum length that can be coded.  inflate_fast()\n      requires strm.avail_out >= 258 for each loop to avoid checking for\n      output space.\n */\nmodule.exports = function inflate_fast(strm, start) {\n  var state;\n  var _in;                    /* local strm.input */\n  var last;                   /* have enough input while in < last */\n  var _out;                   /* local strm.output */\n  var beg;                    /* inflate()'s initial strm.output */\n  var end;                    /* while out < end, enough space available */\n//#ifdef INFLATE_STRICT\n  var dmax;                   /* maximum distance from zlib header */\n//#endif\n  var wsize;                  /* window size or zero if not using window */\n  var whave;                  /* valid bytes in the window */\n  var wnext;                  /* window write index */\n  // Use `s_window` instead `window`, avoid conflict with instrumentation tools\n  var s_window;               /* allocated sliding window, if wsize != 0 */\n  var hold;                   /* local strm.hold */\n  var bits;                   /* local strm.bits */\n  var lcode;                  /* local strm.lencode */\n  var dcode;                  /* local strm.distcode */\n  var lmask;                  /* mask for first level of length codes */\n  var dmask;                  /* mask for first level of distance codes */\n  var here;                   /* retrieved table entry */\n  var op;                     /* code bits, operation, extra bits, or */\n                              /*  window position, window bytes to copy */\n  var len;                    /* match length, unused bytes */\n  var dist;                   /* match distance */\n  var from;                   /* where to copy match from */\n  var from_source;\n\n\n  var input, output; // JS specific, because we have no pointers\n\n  /* copy state to local variables */\n  state = strm.state;\n  //here = state.here;\n  _in = strm.next_in;\n  input = strm.input;\n  last = _in + (strm.avail_in - 5);\n  _out = strm.next_out;\n  output = strm.output;\n  beg = _out - (start - strm.avail_out);\n  end = _out + (strm.avail_out - 257);\n//#ifdef INFLATE_STRICT\n  dmax = state.dmax;\n//#endif\n  wsize = state.wsize;\n  whave = state.whave;\n  wnext = state.wnext;\n  s_window = state.window;\n  hold = state.hold;\n  bits = state.bits;\n  lcode = state.lencode;\n  dcode = state.distcode;\n  lmask = (1 << state.lenbits) - 1;\n  dmask = (1 << state.distbits) - 1;\n\n\n  /* decode literals and length/distances until end-of-block or not enough\n     input data or output space */\n\n  top:\n  do {\n    if (bits < 15) {\n      hold += input[_in++] << bits;\n      bits += 8;\n      hold += input[_in++] << bits;\n      bits += 8;\n    }\n\n    here = lcode[hold & lmask];\n\n    dolen:\n    for (;;) { // Goto emulation\n      op = here >>> 24/*here.bits*/;\n      hold >>>= op;\n      bits -= op;\n      op = (here >>> 16) & 0xff/*here.op*/;\n      if (op === 0) {                          /* literal */\n        //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n        //        \"inflate:         literal '%c'\\n\" :\n        //        \"inflate:         literal 0x%02x\\n\", here.val));\n        output[_out++] = here & 0xffff/*here.val*/;\n      }\n      else if (op & 16) {                     /* length base */\n        len = here & 0xffff/*here.val*/;\n        op &= 15;                           /* number of extra bits */\n        if (op) {\n          if (bits < op) {\n            hold += input[_in++] << bits;\n            bits += 8;\n          }\n          len += hold & ((1 << op) - 1);\n          hold >>>= op;\n          bits -= op;\n        }\n        //Tracevv((stderr, \"inflate:         length %u\\n\", len));\n        if (bits < 15) {\n          hold += input[_in++] << bits;\n          bits += 8;\n          hold += input[_in++] << bits;\n          bits += 8;\n        }\n        here = dcode[hold & dmask];\n\n        dodist:\n        for (;;) { // goto emulation\n          op = here >>> 24/*here.bits*/;\n          hold >>>= op;\n          bits -= op;\n          op = (here >>> 16) & 0xff/*here.op*/;\n\n          if (op & 16) {                      /* distance base */\n            dist = here & 0xffff/*here.val*/;\n            op &= 15;                       /* number of extra bits */\n            if (bits < op) {\n              hold += input[_in++] << bits;\n              bits += 8;\n              if (bits < op) {\n                hold += input[_in++] << bits;\n                bits += 8;\n              }\n            }\n            dist += hold & ((1 << op) - 1);\n//#ifdef INFLATE_STRICT\n            if (dist > dmax) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD;\n              break top;\n            }\n//#endif\n            hold >>>= op;\n            bits -= op;\n            //Tracevv((stderr, \"inflate:         distance %u\\n\", dist));\n            op = _out - beg;                /* max distance in output */\n            if (dist > op) {                /* see if copy from window */\n              op = dist - op;               /* distance back in window */\n              if (op > whave) {\n                if (state.sane) {\n                  strm.msg = 'invalid distance too far back';\n                  state.mode = BAD;\n                  break top;\n                }\n\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//                if (len <= op - whave) {\n//                  do {\n//                    output[_out++] = 0;\n//                  } while (--len);\n//                  continue top;\n//                }\n//                len -= op - whave;\n//                do {\n//                  output[_out++] = 0;\n//                } while (--op > whave);\n//                if (op === 0) {\n//                  from = _out - dist;\n//                  do {\n//                    output[_out++] = output[from++];\n//                  } while (--len);\n//                  continue top;\n//                }\n//#endif\n              }\n              from = 0; // window index\n              from_source = s_window;\n              if (wnext === 0) {           /* very common case */\n                from += wsize - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              else if (wnext < op) {      /* wrap around window */\n                from += wsize + wnext - op;\n                op -= wnext;\n                if (op < len) {         /* some from end of window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = 0;\n                  if (wnext < len) {  /* some from start of window */\n                    op = wnext;\n                    len -= op;\n                    do {\n                      output[_out++] = s_window[from++];\n                    } while (--op);\n                    from = _out - dist;      /* rest from output */\n                    from_source = output;\n                  }\n                }\n              }\n              else {                      /* contiguous in window */\n                from += wnext - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              while (len > 2) {\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                len -= 3;\n              }\n              if (len) {\n                output[_out++] = from_source[from++];\n                if (len > 1) {\n                  output[_out++] = from_source[from++];\n                }\n              }\n            }\n            else {\n              from = _out - dist;          /* copy direct from output */\n              do {                        /* minimum length is three */\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                len -= 3;\n              } while (len > 2);\n              if (len) {\n                output[_out++] = output[from++];\n                if (len > 1) {\n                  output[_out++] = output[from++];\n                }\n              }\n            }\n          }\n          else if ((op & 64) === 0) {          /* 2nd level distance code */\n            here = dcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n            continue dodist;\n          }\n          else {\n            strm.msg = 'invalid distance code';\n            state.mode = BAD;\n            break top;\n          }\n\n          break; // need to emulate goto via \"continue\"\n        }\n      }\n      else if ((op & 64) === 0) {              /* 2nd level length code */\n        here = lcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n        continue dolen;\n      }\n      else if (op & 32) {                     /* end-of-block */\n        //Tracevv((stderr, \"inflate:         end of block\\n\"));\n        state.mode = TYPE;\n        break top;\n      }\n      else {\n        strm.msg = 'invalid literal/length code';\n        state.mode = BAD;\n        break top;\n      }\n\n      break; // need to emulate goto via \"continue\"\n    }\n  } while (_in < last && _out < end);\n\n  /* return unused bytes (on entry, bits < 8, so in won't go too far back) */\n  len = bits >> 3;\n  _in -= len;\n  bits -= len << 3;\n  hold &= (1 << bits) - 1;\n\n  /* update state and return */\n  strm.next_in = _in;\n  strm.next_out = _out;\n  strm.avail_in = (_in < last ? 5 + (last - _in) : 5 - (_in - last));\n  strm.avail_out = (_out < end ? 257 + (end - _out) : 257 - (_out - end));\n  state.hold = hold;\n  state.bits = bits;\n  return;\n};\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar utils         = require('../utils/common');\nvar adler32       = require('./adler32');\nvar crc32         = require('./crc32');\nvar inflate_fast  = require('./inffast');\nvar inflate_table = require('./inftrees');\n\nvar CODES = 0;\nvar LENS = 1;\nvar DISTS = 2;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\n\n/* Allowed flush values; see deflate() and inflate() below for details */\n//var Z_NO_FLUSH      = 0;\n//var Z_PARTIAL_FLUSH = 1;\n//var Z_SYNC_FLUSH    = 2;\n//var Z_FULL_FLUSH    = 3;\nvar Z_FINISH        = 4;\nvar Z_BLOCK         = 5;\nvar Z_TREES         = 6;\n\n\n/* Return codes for the compression/decompression functions. Negative values\n * are errors, positive values are used for special but normal events.\n */\nvar Z_OK            = 0;\nvar Z_STREAM_END    = 1;\nvar Z_NEED_DICT     = 2;\n//var Z_ERRNO         = -1;\nvar Z_STREAM_ERROR  = -2;\nvar Z_DATA_ERROR    = -3;\nvar Z_MEM_ERROR     = -4;\nvar Z_BUF_ERROR     = -5;\n//var Z_VERSION_ERROR = -6;\n\n/* The deflate compression method */\nvar Z_DEFLATED  = 8;\n\n\n/* STATES ====================================================================*/\n/* ===========================================================================*/\n\n\nvar    HEAD = 1;       /* i: waiting for magic header */\nvar    FLAGS = 2;      /* i: waiting for method and flags (gzip) */\nvar    TIME = 3;       /* i: waiting for modification time (gzip) */\nvar    OS = 4;         /* i: waiting for extra flags and operating system (gzip) */\nvar    EXLEN = 5;      /* i: waiting for extra length (gzip) */\nvar    EXTRA = 6;      /* i: waiting for extra bytes (gzip) */\nvar    NAME = 7;       /* i: waiting for end of file name (gzip) */\nvar    COMMENT = 8;    /* i: waiting for end of comment (gzip) */\nvar    HCRC = 9;       /* i: waiting for header crc (gzip) */\nvar    DICTID = 10;    /* i: waiting for dictionary check value */\nvar    DICT = 11;      /* waiting for inflateSetDictionary() call */\nvar        TYPE = 12;      /* i: waiting for type bits, including last-flag bit */\nvar        TYPEDO = 13;    /* i: same, but skip check to exit inflate on new block */\nvar        STORED = 14;    /* i: waiting for stored size (length and complement) */\nvar        COPY_ = 15;     /* i/o: same as COPY below, but only first time in */\nvar        COPY = 16;      /* i/o: waiting for input or output to copy stored block */\nvar        TABLE = 17;     /* i: waiting for dynamic block table lengths */\nvar        LENLENS = 18;   /* i: waiting for code length code lengths */\nvar        CODELENS = 19;  /* i: waiting for length/lit and distance code lengths */\nvar            LEN_ = 20;      /* i: same as LEN below, but only first time in */\nvar            LEN = 21;       /* i: waiting for length/lit/eob code */\nvar            LENEXT = 22;    /* i: waiting for length extra bits */\nvar            DIST = 23;      /* i: waiting for distance code */\nvar            DISTEXT = 24;   /* i: waiting for distance extra bits */\nvar            MATCH = 25;     /* o: waiting for output space to copy string */\nvar            LIT = 26;       /* o: waiting for output space to write literal */\nvar    CHECK = 27;     /* i: waiting for 32-bit check value */\nvar    LENGTH = 28;    /* i: waiting for 32-bit length (gzip) */\nvar    DONE = 29;      /* finished check, done -- remain here until reset */\nvar    BAD = 30;       /* got a data error -- remain here until reset */\nvar    MEM = 31;       /* got an inflate() memory error -- remain here until reset */\nvar    SYNC = 32;      /* looking for synchronization bytes to restart inflate() */\n\n/* ===========================================================================*/\n\n\n\nvar ENOUGH_LENS = 852;\nvar ENOUGH_DISTS = 592;\n//var ENOUGH =  (ENOUGH_LENS+ENOUGH_DISTS);\n\nvar MAX_WBITS = 15;\n/* 32K LZ77 window */\nvar DEF_WBITS = MAX_WBITS;\n\n\nfunction zswap32(q) {\n  return  (((q >>> 24) & 0xff) +\n          ((q >>> 8) & 0xff00) +\n          ((q & 0xff00) << 8) +\n          ((q & 0xff) << 24));\n}\n\n\nfunction InflateState() {\n  this.mode = 0;             /* current inflate mode */\n  this.last = false;          /* true if processing last block */\n  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */\n  this.havedict = false;      /* true if dictionary provided */\n  this.flags = 0;             /* gzip header method and flags (0 if zlib) */\n  this.dmax = 0;              /* zlib header max distance (INFLATE_STRICT) */\n  this.check = 0;             /* protected copy of check value */\n  this.total = 0;             /* protected copy of output count */\n  // TODO: may be {}\n  this.head = null;           /* where to save gzip header information */\n\n  /* sliding window */\n  this.wbits = 0;             /* log base 2 of requested window size */\n  this.wsize = 0;             /* window size or zero if not using window */\n  this.whave = 0;             /* valid bytes in the window */\n  this.wnext = 0;             /* window write index */\n  this.window = null;         /* allocated sliding window, if needed */\n\n  /* bit accumulator */\n  this.hold = 0;              /* input bit accumulator */\n  this.bits = 0;              /* number of bits in \"in\" */\n\n  /* for string and stored block copying */\n  this.length = 0;            /* literal or length of data to copy */\n  this.offset = 0;            /* distance back to copy string from */\n\n  /* for table and code decoding */\n  this.extra = 0;             /* extra bits needed */\n\n  /* fixed and dynamic code tables */\n  this.lencode = null;          /* starting table for length/literal codes */\n  this.distcode = null;         /* starting table for distance codes */\n  this.lenbits = 0;           /* index bits for lencode */\n  this.distbits = 0;          /* index bits for distcode */\n\n  /* dynamic table building */\n  this.ncode = 0;             /* number of code length code lengths */\n  this.nlen = 0;              /* number of length code lengths */\n  this.ndist = 0;             /* number of distance code lengths */\n  this.have = 0;              /* number of code lengths in lens[] */\n  this.next = null;              /* next available space in codes[] */\n\n  this.lens = new utils.Buf16(320); /* temporary storage for code lengths */\n  this.work = new utils.Buf16(288); /* work area for code table building */\n\n  /*\n   because we don't have pointers in js, we use lencode and distcode directly\n   as buffers so we don't need codes\n  */\n  //this.codes = new utils.Buf32(ENOUGH);       /* space for code tables */\n  this.lendyn = null;              /* dynamic table for length/literal codes (JS specific) */\n  this.distdyn = null;             /* dynamic table for distance codes (JS specific) */\n  this.sane = 0;                   /* if false, allow invalid distance too far */\n  this.back = 0;                   /* bits back of last unprocessed length/lit */\n  this.was = 0;                    /* initial length of match */\n}\n\nfunction inflateResetKeep(strm) {\n  var state;\n\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  state = strm.state;\n  strm.total_in = strm.total_out = state.total = 0;\n  strm.msg = ''; /*Z_NULL*/\n  if (state.wrap) {       /* to support ill-conceived Java test suite */\n    strm.adler = state.wrap & 1;\n  }\n  state.mode = HEAD;\n  state.last = 0;\n  state.havedict = 0;\n  state.dmax = 32768;\n  state.head = null/*Z_NULL*/;\n  state.hold = 0;\n  state.bits = 0;\n  //state.lencode = state.distcode = state.next = state.codes;\n  state.lencode = state.lendyn = new utils.Buf32(ENOUGH_LENS);\n  state.distcode = state.distdyn = new utils.Buf32(ENOUGH_DISTS);\n\n  state.sane = 1;\n  state.back = -1;\n  //Tracev((stderr, \"inflate: reset\\n\"));\n  return Z_OK;\n}\n\nfunction inflateReset(strm) {\n  var state;\n\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  state = strm.state;\n  state.wsize = 0;\n  state.whave = 0;\n  state.wnext = 0;\n  return inflateResetKeep(strm);\n\n}\n\nfunction inflateReset2(strm, windowBits) {\n  var wrap;\n  var state;\n\n  /* get the state */\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  state = strm.state;\n\n  /* extract wrap request from windowBits parameter */\n  if (windowBits < 0) {\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n  else {\n    wrap = (windowBits >> 4) + 1;\n    if (windowBits < 48) {\n      windowBits &= 15;\n    }\n  }\n\n  /* set number of window bits, free window if different */\n  if (windowBits && (windowBits < 8 || windowBits > 15)) {\n    return Z_STREAM_ERROR;\n  }\n  if (state.window !== null && state.wbits !== windowBits) {\n    state.window = null;\n  }\n\n  /* update state and reset the rest of it */\n  state.wrap = wrap;\n  state.wbits = windowBits;\n  return inflateReset(strm);\n}\n\nfunction inflateInit2(strm, windowBits) {\n  var ret;\n  var state;\n\n  if (!strm) { return Z_STREAM_ERROR; }\n  //strm.msg = Z_NULL;                 /* in case we return an error */\n\n  state = new InflateState();\n\n  //if (state === Z_NULL) return Z_MEM_ERROR;\n  //Tracev((stderr, \"inflate: allocated\\n\"));\n  strm.state = state;\n  state.window = null/*Z_NULL*/;\n  ret = inflateReset2(strm, windowBits);\n  if (ret !== Z_OK) {\n    strm.state = null/*Z_NULL*/;\n  }\n  return ret;\n}\n\nfunction inflateInit(strm) {\n  return inflateInit2(strm, DEF_WBITS);\n}\n\n\n/*\n Return state with length and distance decoding tables and index sizes set to\n fixed code decoding.  Normally this returns fixed tables from inffixed.h.\n If BUILDFIXED is defined, then instead this routine builds the tables the\n first time it's called, and returns those tables the first time and\n thereafter.  This reduces the size of the code by about 2K bytes, in\n exchange for a little execution time.  However, BUILDFIXED should not be\n used for threaded applications, since the rewriting of the tables and virgin\n may not be thread-safe.\n */\nvar virgin = true;\n\nvar lenfix, distfix; // We have no pointers in JS, so keep tables separate\n\nfunction fixedtables(state) {\n  /* build fixed huffman tables if first call (may not be thread safe) */\n  if (virgin) {\n    var sym;\n\n    lenfix = new utils.Buf32(512);\n    distfix = new utils.Buf32(32);\n\n    /* literal/length table */\n    sym = 0;\n    while (sym < 144) { state.lens[sym++] = 8; }\n    while (sym < 256) { state.lens[sym++] = 9; }\n    while (sym < 280) { state.lens[sym++] = 7; }\n    while (sym < 288) { state.lens[sym++] = 8; }\n\n    inflate_table(LENS,  state.lens, 0, 288, lenfix,   0, state.work, { bits: 9 });\n\n    /* distance table */\n    sym = 0;\n    while (sym < 32) { state.lens[sym++] = 5; }\n\n    inflate_table(DISTS, state.lens, 0, 32,   distfix, 0, state.work, { bits: 5 });\n\n    /* do this just once */\n    virgin = false;\n  }\n\n  state.lencode = lenfix;\n  state.lenbits = 9;\n  state.distcode = distfix;\n  state.distbits = 5;\n}\n\n\n/*\n Update the window with the last wsize (normally 32K) bytes written before\n returning.  If window does not exist yet, create it.  This is only called\n when a window is already in use, or when output has been written during this\n inflate call, but the end of the deflate stream has not been reached yet.\n It is also called to create a window for dictionary data when a dictionary\n is loaded.\n\n Providing output buffers larger than 32K to inflate() should provide a speed\n advantage, since only the last 32K of output is copied to the sliding window\n upon return from inflate(), and since all distances after the first 32K of\n output will fall in the output data, making match copies simpler and faster.\n The advantage may be dependent on the size of the processor's data caches.\n */\nfunction updatewindow(strm, src, end, copy) {\n  var dist;\n  var state = strm.state;\n\n  /* if it hasn't been done already, allocate space for the window */\n  if (state.window === null) {\n    state.wsize = 1 << state.wbits;\n    state.wnext = 0;\n    state.whave = 0;\n\n    state.window = new utils.Buf8(state.wsize);\n  }\n\n  /* copy state->wsize or less output bytes into the circular window */\n  if (copy >= state.wsize) {\n    utils.arraySet(state.window, src, end - state.wsize, state.wsize, 0);\n    state.wnext = 0;\n    state.whave = state.wsize;\n  }\n  else {\n    dist = state.wsize - state.wnext;\n    if (dist > copy) {\n      dist = copy;\n    }\n    //zmemcpy(state->window + state->wnext, end - copy, dist);\n    utils.arraySet(state.window, src, end - copy, dist, state.wnext);\n    copy -= dist;\n    if (copy) {\n      //zmemcpy(state->window, end - copy, copy);\n      utils.arraySet(state.window, src, end - copy, copy, 0);\n      state.wnext = copy;\n      state.whave = state.wsize;\n    }\n    else {\n      state.wnext += dist;\n      if (state.wnext === state.wsize) { state.wnext = 0; }\n      if (state.whave < state.wsize) { state.whave += dist; }\n    }\n  }\n  return 0;\n}\n\nfunction inflate(strm, flush) {\n  var state;\n  var input, output;          // input/output buffers\n  var next;                   /* next input INDEX */\n  var put;                    /* next output INDEX */\n  var have, left;             /* available input and output */\n  var hold;                   /* bit buffer */\n  var bits;                   /* bits in bit buffer */\n  var _in, _out;              /* save starting available input and output */\n  var copy;                   /* number of stored or match bytes to copy */\n  var from;                   /* where to copy match bytes from */\n  var from_source;\n  var here = 0;               /* current decoding table entry */\n  var here_bits, here_op, here_val; // paked \"here\" denormalized (JS specific)\n  //var last;                   /* parent table entry */\n  var last_bits, last_op, last_val; // paked \"last\" denormalized (JS specific)\n  var len;                    /* length to copy for repeats, bits to drop */\n  var ret;                    /* return code */\n  var hbuf = new utils.Buf8(4);    /* buffer for gzip header crc calculation */\n  var opts;\n\n  var n; // temporary var for NEED_BITS\n\n  var order = /* permutation of code lengths */\n    [ 16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15 ];\n\n\n  if (!strm || !strm.state || !strm.output ||\n      (!strm.input && strm.avail_in !== 0)) {\n    return Z_STREAM_ERROR;\n  }\n\n  state = strm.state;\n  if (state.mode === TYPE) { state.mode = TYPEDO; }    /* skip check */\n\n\n  //--- LOAD() ---\n  put = strm.next_out;\n  output = strm.output;\n  left = strm.avail_out;\n  next = strm.next_in;\n  input = strm.input;\n  have = strm.avail_in;\n  hold = state.hold;\n  bits = state.bits;\n  //---\n\n  _in = have;\n  _out = left;\n  ret = Z_OK;\n\n  inf_leave: // goto emulation\n  for (;;) {\n    switch (state.mode) {\n      case HEAD:\n        if (state.wrap === 0) {\n          state.mode = TYPEDO;\n          break;\n        }\n        //=== NEEDBITS(16);\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if ((state.wrap & 2) && hold === 0x8b1f) {  /* gzip header */\n          state.check = 0/*crc32(0L, Z_NULL, 0)*/;\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32(state.check, hbuf, 2, 0);\n          //===//\n\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          state.mode = FLAGS;\n          break;\n        }\n        state.flags = 0;           /* expect zlib header */\n        if (state.head) {\n          state.head.done = false;\n        }\n        if (!(state.wrap & 1) ||   /* check if zlib header allowed */\n          (((hold & 0xff)/*BITS(8)*/ << 8) + (hold >> 8)) % 31) {\n          strm.msg = 'incorrect header check';\n          state.mode = BAD;\n          break;\n        }\n        if ((hold & 0x0f)/*BITS(4)*/ !== Z_DEFLATED) {\n          strm.msg = 'unknown compression method';\n          state.mode = BAD;\n          break;\n        }\n        //--- DROPBITS(4) ---//\n        hold >>>= 4;\n        bits -= 4;\n        //---//\n        len = (hold & 0x0f)/*BITS(4)*/ + 8;\n        if (state.wbits === 0) {\n          state.wbits = len;\n        }\n        else if (len > state.wbits) {\n          strm.msg = 'invalid window size';\n          state.mode = BAD;\n          break;\n        }\n        state.dmax = 1 << len;\n        //Tracev((stderr, \"inflate:   zlib header ok\\n\"));\n        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n        state.mode = hold & 0x200 ? DICTID : TYPE;\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        break;\n      case FLAGS:\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.flags = hold;\n        if ((state.flags & 0xff) !== Z_DEFLATED) {\n          strm.msg = 'unknown compression method';\n          state.mode = BAD;\n          break;\n        }\n        if (state.flags & 0xe000) {\n          strm.msg = 'unknown header flags set';\n          state.mode = BAD;\n          break;\n        }\n        if (state.head) {\n          state.head.text = ((hold >> 8) & 1);\n        }\n        if (state.flags & 0x0200) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = TIME;\n        /* falls through */\n      case TIME:\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (state.head) {\n          state.head.time = hold;\n        }\n        if (state.flags & 0x0200) {\n          //=== CRC4(state.check, hold)\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          hbuf[2] = (hold >>> 16) & 0xff;\n          hbuf[3] = (hold >>> 24) & 0xff;\n          state.check = crc32(state.check, hbuf, 4, 0);\n          //===\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = OS;\n        /* falls through */\n      case OS:\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (state.head) {\n          state.head.xflags = (hold & 0xff);\n          state.head.os = (hold >> 8);\n        }\n        if (state.flags & 0x0200) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = EXLEN;\n        /* falls through */\n      case EXLEN:\n        if (state.flags & 0x0400) {\n          //=== NEEDBITS(16); */\n          while (bits < 16) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.length = hold;\n          if (state.head) {\n            state.head.extra_len = hold;\n          }\n          if (state.flags & 0x0200) {\n            //=== CRC2(state.check, hold);\n            hbuf[0] = hold & 0xff;\n            hbuf[1] = (hold >>> 8) & 0xff;\n            state.check = crc32(state.check, hbuf, 2, 0);\n            //===//\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n        }\n        else if (state.head) {\n          state.head.extra = null/*Z_NULL*/;\n        }\n        state.mode = EXTRA;\n        /* falls through */\n      case EXTRA:\n        if (state.flags & 0x0400) {\n          copy = state.length;\n          if (copy > have) { copy = have; }\n          if (copy) {\n            if (state.head) {\n              len = state.head.extra_len - state.length;\n              if (!state.head.extra) {\n                // Use untyped array for more convenient processing later\n                state.head.extra = new Array(state.head.extra_len);\n              }\n              utils.arraySet(\n                state.head.extra,\n                input,\n                next,\n                // extra field is limited to 65536 bytes\n                // - no need for additional size check\n                copy,\n                /*len + copy > state.head.extra_max - len ? state.head.extra_max : copy,*/\n                len\n              );\n              //zmemcpy(state.head.extra + len, next,\n              //        len + copy > state.head.extra_max ?\n              //        state.head.extra_max - len : copy);\n            }\n            if (state.flags & 0x0200) {\n              state.check = crc32(state.check, input, copy, next);\n            }\n            have -= copy;\n            next += copy;\n            state.length -= copy;\n          }\n          if (state.length) { break inf_leave; }\n        }\n        state.length = 0;\n        state.mode = NAME;\n        /* falls through */\n      case NAME:\n        if (state.flags & 0x0800) {\n          if (have === 0) { break inf_leave; }\n          copy = 0;\n          do {\n            // TODO: 2 or 1 bytes?\n            len = input[next + copy++];\n            /* use constant limit because in js we should not preallocate memory */\n            if (state.head && len &&\n                (state.length < 65536 /*state.head.name_max*/)) {\n              state.head.name += String.fromCharCode(len);\n            }\n          } while (len && copy < have);\n\n          if (state.flags & 0x0200) {\n            state.check = crc32(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          if (len) { break inf_leave; }\n        }\n        else if (state.head) {\n          state.head.name = null;\n        }\n        state.length = 0;\n        state.mode = COMMENT;\n        /* falls through */\n      case COMMENT:\n        if (state.flags & 0x1000) {\n          if (have === 0) { break inf_leave; }\n          copy = 0;\n          do {\n            len = input[next + copy++];\n            /* use constant limit because in js we should not preallocate memory */\n            if (state.head && len &&\n                (state.length < 65536 /*state.head.comm_max*/)) {\n              state.head.comment += String.fromCharCode(len);\n            }\n          } while (len && copy < have);\n          if (state.flags & 0x0200) {\n            state.check = crc32(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          if (len) { break inf_leave; }\n        }\n        else if (state.head) {\n          state.head.comment = null;\n        }\n        state.mode = HCRC;\n        /* falls through */\n      case HCRC:\n        if (state.flags & 0x0200) {\n          //=== NEEDBITS(16); */\n          while (bits < 16) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          if (hold !== (state.check & 0xffff)) {\n            strm.msg = 'header crc mismatch';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n        }\n        if (state.head) {\n          state.head.hcrc = ((state.flags >> 9) & 1);\n          state.head.done = true;\n        }\n        strm.adler = state.check = 0;\n        state.mode = TYPE;\n        break;\n      case DICTID:\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        strm.adler = state.check = zswap32(hold);\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = DICT;\n        /* falls through */\n      case DICT:\n        if (state.havedict === 0) {\n          //--- RESTORE() ---\n          strm.next_out = put;\n          strm.avail_out = left;\n          strm.next_in = next;\n          strm.avail_in = have;\n          state.hold = hold;\n          state.bits = bits;\n          //---\n          return Z_NEED_DICT;\n        }\n        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n        state.mode = TYPE;\n        /* falls through */\n      case TYPE:\n        if (flush === Z_BLOCK || flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case TYPEDO:\n        if (state.last) {\n          //--- BYTEBITS() ---//\n          hold >>>= bits & 7;\n          bits -= bits & 7;\n          //---//\n          state.mode = CHECK;\n          break;\n        }\n        //=== NEEDBITS(3); */\n        while (bits < 3) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.last = (hold & 0x01)/*BITS(1)*/;\n        //--- DROPBITS(1) ---//\n        hold >>>= 1;\n        bits -= 1;\n        //---//\n\n        switch ((hold & 0x03)/*BITS(2)*/) {\n          case 0:                             /* stored block */\n            //Tracev((stderr, \"inflate:     stored block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = STORED;\n            break;\n          case 1:                             /* fixed block */\n            fixedtables(state);\n            //Tracev((stderr, \"inflate:     fixed codes block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = LEN_;             /* decode codes */\n            if (flush === Z_TREES) {\n              //--- DROPBITS(2) ---//\n              hold >>>= 2;\n              bits -= 2;\n              //---//\n              break inf_leave;\n            }\n            break;\n          case 2:                             /* dynamic block */\n            //Tracev((stderr, \"inflate:     dynamic codes block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = TABLE;\n            break;\n          case 3:\n            strm.msg = 'invalid block type';\n            state.mode = BAD;\n        }\n        //--- DROPBITS(2) ---//\n        hold >>>= 2;\n        bits -= 2;\n        //---//\n        break;\n      case STORED:\n        //--- BYTEBITS() ---// /* go to byte boundary */\n        hold >>>= bits & 7;\n        bits -= bits & 7;\n        //---//\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if ((hold & 0xffff) !== ((hold >>> 16) ^ 0xffff)) {\n          strm.msg = 'invalid stored block lengths';\n          state.mode = BAD;\n          break;\n        }\n        state.length = hold & 0xffff;\n        //Tracev((stderr, \"inflate:       stored length %u\\n\",\n        //        state.length));\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = COPY_;\n        if (flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case COPY_:\n        state.mode = COPY;\n        /* falls through */\n      case COPY:\n        copy = state.length;\n        if (copy) {\n          if (copy > have) { copy = have; }\n          if (copy > left) { copy = left; }\n          if (copy === 0) { break inf_leave; }\n          //--- zmemcpy(put, next, copy); ---\n          utils.arraySet(output, input, next, copy, put);\n          //---//\n          have -= copy;\n          next += copy;\n          left -= copy;\n          put += copy;\n          state.length -= copy;\n          break;\n        }\n        //Tracev((stderr, \"inflate:       stored end\\n\"));\n        state.mode = TYPE;\n        break;\n      case TABLE:\n        //=== NEEDBITS(14); */\n        while (bits < 14) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.nlen = (hold & 0x1f)/*BITS(5)*/ + 257;\n        //--- DROPBITS(5) ---//\n        hold >>>= 5;\n        bits -= 5;\n        //---//\n        state.ndist = (hold & 0x1f)/*BITS(5)*/ + 1;\n        //--- DROPBITS(5) ---//\n        hold >>>= 5;\n        bits -= 5;\n        //---//\n        state.ncode = (hold & 0x0f)/*BITS(4)*/ + 4;\n        //--- DROPBITS(4) ---//\n        hold >>>= 4;\n        bits -= 4;\n        //---//\n//#ifndef PKZIP_BUG_WORKAROUND\n        if (state.nlen > 286 || state.ndist > 30) {\n          strm.msg = 'too many length or distance symbols';\n          state.mode = BAD;\n          break;\n        }\n//#endif\n        //Tracev((stderr, \"inflate:       table sizes ok\\n\"));\n        state.have = 0;\n        state.mode = LENLENS;\n        /* falls through */\n      case LENLENS:\n        while (state.have < state.ncode) {\n          //=== NEEDBITS(3);\n          while (bits < 3) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.lens[order[state.have++]] = (hold & 0x07);//BITS(3);\n          //--- DROPBITS(3) ---//\n          hold >>>= 3;\n          bits -= 3;\n          //---//\n        }\n        while (state.have < 19) {\n          state.lens[order[state.have++]] = 0;\n        }\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        //state.next = state.codes;\n        //state.lencode = state.next;\n        // Switch to use dynamic table\n        state.lencode = state.lendyn;\n        state.lenbits = 7;\n\n        opts = { bits: state.lenbits };\n        ret = inflate_table(CODES, state.lens, 0, 19, state.lencode, 0, state.work, opts);\n        state.lenbits = opts.bits;\n\n        if (ret) {\n          strm.msg = 'invalid code lengths set';\n          state.mode = BAD;\n          break;\n        }\n        //Tracev((stderr, \"inflate:       code lengths ok\\n\"));\n        state.have = 0;\n        state.mode = CODELENS;\n        /* falls through */\n      case CODELENS:\n        while (state.have < state.nlen + state.ndist) {\n          for (;;) {\n            here = state.lencode[hold & ((1 << state.lenbits) - 1)];/*BITS(state.lenbits)*/\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          if (here_val < 16) {\n            //--- DROPBITS(here.bits) ---//\n            hold >>>= here_bits;\n            bits -= here_bits;\n            //---//\n            state.lens[state.have++] = here_val;\n          }\n          else {\n            if (here_val === 16) {\n              //=== NEEDBITS(here.bits + 2);\n              n = here_bits + 2;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              if (state.have === 0) {\n                strm.msg = 'invalid bit length repeat';\n                state.mode = BAD;\n                break;\n              }\n              len = state.lens[state.have - 1];\n              copy = 3 + (hold & 0x03);//BITS(2);\n              //--- DROPBITS(2) ---//\n              hold >>>= 2;\n              bits -= 2;\n              //---//\n            }\n            else if (here_val === 17) {\n              //=== NEEDBITS(here.bits + 3);\n              n = here_bits + 3;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              len = 0;\n              copy = 3 + (hold & 0x07);//BITS(3);\n              //--- DROPBITS(3) ---//\n              hold >>>= 3;\n              bits -= 3;\n              //---//\n            }\n            else {\n              //=== NEEDBITS(here.bits + 7);\n              n = here_bits + 7;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              len = 0;\n              copy = 11 + (hold & 0x7f);//BITS(7);\n              //--- DROPBITS(7) ---//\n              hold >>>= 7;\n              bits -= 7;\n              //---//\n            }\n            if (state.have + copy > state.nlen + state.ndist) {\n              strm.msg = 'invalid bit length repeat';\n              state.mode = BAD;\n              break;\n            }\n            while (copy--) {\n              state.lens[state.have++] = len;\n            }\n          }\n        }\n\n        /* handle error breaks in while */\n        if (state.mode === BAD) { break; }\n\n        /* check for end-of-block code (better have one) */\n        if (state.lens[256] === 0) {\n          strm.msg = 'invalid code -- missing end-of-block';\n          state.mode = BAD;\n          break;\n        }\n\n        /* build code tables -- note: do not change the lenbits or distbits\n           values here (9 and 6) without reading the comments in inftrees.h\n           concerning the ENOUGH constants, which depend on those values */\n        state.lenbits = 9;\n\n        opts = { bits: state.lenbits };\n        ret = inflate_table(LENS, state.lens, 0, state.nlen, state.lencode, 0, state.work, opts);\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        // state.next_index = opts.table_index;\n        state.lenbits = opts.bits;\n        // state.lencode = state.next;\n\n        if (ret) {\n          strm.msg = 'invalid literal/lengths set';\n          state.mode = BAD;\n          break;\n        }\n\n        state.distbits = 6;\n        //state.distcode.copy(state.codes);\n        // Switch to use dynamic table\n        state.distcode = state.distdyn;\n        opts = { bits: state.distbits };\n        ret = inflate_table(DISTS, state.lens, state.nlen, state.ndist, state.distcode, 0, state.work, opts);\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        // state.next_index = opts.table_index;\n        state.distbits = opts.bits;\n        // state.distcode = state.next;\n\n        if (ret) {\n          strm.msg = 'invalid distances set';\n          state.mode = BAD;\n          break;\n        }\n        //Tracev((stderr, 'inflate:       codes ok\\n'));\n        state.mode = LEN_;\n        if (flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case LEN_:\n        state.mode = LEN;\n        /* falls through */\n      case LEN:\n        if (have >= 6 && left >= 258) {\n          //--- RESTORE() ---\n          strm.next_out = put;\n          strm.avail_out = left;\n          strm.next_in = next;\n          strm.avail_in = have;\n          state.hold = hold;\n          state.bits = bits;\n          //---\n          inflate_fast(strm, _out);\n          //--- LOAD() ---\n          put = strm.next_out;\n          output = strm.output;\n          left = strm.avail_out;\n          next = strm.next_in;\n          input = strm.input;\n          have = strm.avail_in;\n          hold = state.hold;\n          bits = state.bits;\n          //---\n\n          if (state.mode === TYPE) {\n            state.back = -1;\n          }\n          break;\n        }\n        state.back = 0;\n        for (;;) {\n          here = state.lencode[hold & ((1 << state.lenbits) - 1)];  /*BITS(state.lenbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if (here_bits <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if (here_op && (here_op & 0xf0) === 0) {\n          last_bits = here_bits;\n          last_op = here_op;\n          last_val = here_val;\n          for (;;) {\n            here = state.lencode[last_val +\n                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((last_bits + here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          //--- DROPBITS(last.bits) ---//\n          hold >>>= last_bits;\n          bits -= last_bits;\n          //---//\n          state.back += last_bits;\n        }\n        //--- DROPBITS(here.bits) ---//\n        hold >>>= here_bits;\n        bits -= here_bits;\n        //---//\n        state.back += here_bits;\n        state.length = here_val;\n        if (here_op === 0) {\n          //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n          //        \"inflate:         literal '%c'\\n\" :\n          //        \"inflate:         literal 0x%02x\\n\", here.val));\n          state.mode = LIT;\n          break;\n        }\n        if (here_op & 32) {\n          //Tracevv((stderr, \"inflate:         end of block\\n\"));\n          state.back = -1;\n          state.mode = TYPE;\n          break;\n        }\n        if (here_op & 64) {\n          strm.msg = 'invalid literal/length code';\n          state.mode = BAD;\n          break;\n        }\n        state.extra = here_op & 15;\n        state.mode = LENEXT;\n        /* falls through */\n      case LENEXT:\n        if (state.extra) {\n          //=== NEEDBITS(state.extra);\n          n = state.extra;\n          while (bits < n) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.length += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\n          //--- DROPBITS(state.extra) ---//\n          hold >>>= state.extra;\n          bits -= state.extra;\n          //---//\n          state.back += state.extra;\n        }\n        //Tracevv((stderr, \"inflate:         length %u\\n\", state.length));\n        state.was = state.length;\n        state.mode = DIST;\n        /* falls through */\n      case DIST:\n        for (;;) {\n          here = state.distcode[hold & ((1 << state.distbits) - 1)];/*BITS(state.distbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if ((here_bits) <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if ((here_op & 0xf0) === 0) {\n          last_bits = here_bits;\n          last_op = here_op;\n          last_val = here_val;\n          for (;;) {\n            here = state.distcode[last_val +\n                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((last_bits + here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          //--- DROPBITS(last.bits) ---//\n          hold >>>= last_bits;\n          bits -= last_bits;\n          //---//\n          state.back += last_bits;\n        }\n        //--- DROPBITS(here.bits) ---//\n        hold >>>= here_bits;\n        bits -= here_bits;\n        //---//\n        state.back += here_bits;\n        if (here_op & 64) {\n          strm.msg = 'invalid distance code';\n          state.mode = BAD;\n          break;\n        }\n        state.offset = here_val;\n        state.extra = (here_op) & 15;\n        state.mode = DISTEXT;\n        /* falls through */\n      case DISTEXT:\n        if (state.extra) {\n          //=== NEEDBITS(state.extra);\n          n = state.extra;\n          while (bits < n) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.offset += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\n          //--- DROPBITS(state.extra) ---//\n          hold >>>= state.extra;\n          bits -= state.extra;\n          //---//\n          state.back += state.extra;\n        }\n//#ifdef INFLATE_STRICT\n        if (state.offset > state.dmax) {\n          strm.msg = 'invalid distance too far back';\n          state.mode = BAD;\n          break;\n        }\n//#endif\n        //Tracevv((stderr, \"inflate:         distance %u\\n\", state.offset));\n        state.mode = MATCH;\n        /* falls through */\n      case MATCH:\n        if (left === 0) { break inf_leave; }\n        copy = _out - left;\n        if (state.offset > copy) {         /* copy from window */\n          copy = state.offset - copy;\n          if (copy > state.whave) {\n            if (state.sane) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD;\n              break;\n            }\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//          Trace((stderr, \"inflate.c too far\\n\"));\n//          copy -= state.whave;\n//          if (copy > state.length) { copy = state.length; }\n//          if (copy > left) { copy = left; }\n//          left -= copy;\n//          state.length -= copy;\n//          do {\n//            output[put++] = 0;\n//          } while (--copy);\n//          if (state.length === 0) { state.mode = LEN; }\n//          break;\n//#endif\n          }\n          if (copy > state.wnext) {\n            copy -= state.wnext;\n            from = state.wsize - copy;\n          }\n          else {\n            from = state.wnext - copy;\n          }\n          if (copy > state.length) { copy = state.length; }\n          from_source = state.window;\n        }\n        else {                              /* copy from output */\n          from_source = output;\n          from = put - state.offset;\n          copy = state.length;\n        }\n        if (copy > left) { copy = left; }\n        left -= copy;\n        state.length -= copy;\n        do {\n          output[put++] = from_source[from++];\n        } while (--copy);\n        if (state.length === 0) { state.mode = LEN; }\n        break;\n      case LIT:\n        if (left === 0) { break inf_leave; }\n        output[put++] = state.length;\n        left--;\n        state.mode = LEN;\n        break;\n      case CHECK:\n        if (state.wrap) {\n          //=== NEEDBITS(32);\n          while (bits < 32) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            // Use '|' instead of '+' to make sure that result is signed\n            hold |= input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          _out -= left;\n          strm.total_out += _out;\n          state.total += _out;\n          if (_out) {\n            strm.adler = state.check =\n                /*UPDATE(state.check, put - _out, _out);*/\n                (state.flags ? crc32(state.check, output, _out, put - _out) : adler32(state.check, output, _out, put - _out));\n\n          }\n          _out = left;\n          // NB: crc32 stored as signed 32-bit int, zswap32 returns signed too\n          if ((state.flags ? hold : zswap32(hold)) !== state.check) {\n            strm.msg = 'incorrect data check';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          //Tracev((stderr, \"inflate:   check matches trailer\\n\"));\n        }\n        state.mode = LENGTH;\n        /* falls through */\n      case LENGTH:\n        if (state.wrap && state.flags) {\n          //=== NEEDBITS(32);\n          while (bits < 32) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          if (hold !== (state.total & 0xffffffff)) {\n            strm.msg = 'incorrect length check';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          //Tracev((stderr, \"inflate:   length matches trailer\\n\"));\n        }\n        state.mode = DONE;\n        /* falls through */\n      case DONE:\n        ret = Z_STREAM_END;\n        break inf_leave;\n      case BAD:\n        ret = Z_DATA_ERROR;\n        break inf_leave;\n      case MEM:\n        return Z_MEM_ERROR;\n      case SYNC:\n        /* falls through */\n      default:\n        return Z_STREAM_ERROR;\n    }\n  }\n\n  // inf_leave <- here is real place for \"goto inf_leave\", emulated via \"break inf_leave\"\n\n  /*\n     Return from inflate(), updating the total counts and the check value.\n     If there was no progress during the inflate() call, return a buffer\n     error.  Call updatewindow() to create and/or update the window state.\n     Note: a memory error from inflate() is non-recoverable.\n   */\n\n  //--- RESTORE() ---\n  strm.next_out = put;\n  strm.avail_out = left;\n  strm.next_in = next;\n  strm.avail_in = have;\n  state.hold = hold;\n  state.bits = bits;\n  //---\n\n  if (state.wsize || (_out !== strm.avail_out && state.mode < BAD &&\n                      (state.mode < CHECK || flush !== Z_FINISH))) {\n    if (updatewindow(strm, strm.output, strm.next_out, _out - strm.avail_out)) {\n      state.mode = MEM;\n      return Z_MEM_ERROR;\n    }\n  }\n  _in -= strm.avail_in;\n  _out -= strm.avail_out;\n  strm.total_in += _in;\n  strm.total_out += _out;\n  state.total += _out;\n  if (state.wrap && _out) {\n    strm.adler = state.check = /*UPDATE(state.check, strm.next_out - _out, _out);*/\n      (state.flags ? crc32(state.check, output, _out, strm.next_out - _out) : adler32(state.check, output, _out, strm.next_out - _out));\n  }\n  strm.data_type = state.bits + (state.last ? 64 : 0) +\n                    (state.mode === TYPE ? 128 : 0) +\n                    (state.mode === LEN_ || state.mode === COPY_ ? 256 : 0);\n  if (((_in === 0 && _out === 0) || flush === Z_FINISH) && ret === Z_OK) {\n    ret = Z_BUF_ERROR;\n  }\n  return ret;\n}\n\nfunction inflateEnd(strm) {\n\n  if (!strm || !strm.state /*|| strm->zfree == (free_func)0*/) {\n    return Z_STREAM_ERROR;\n  }\n\n  var state = strm.state;\n  if (state.window) {\n    state.window = null;\n  }\n  strm.state = null;\n  return Z_OK;\n}\n\nfunction inflateGetHeader(strm, head) {\n  var state;\n\n  /* check state */\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  state = strm.state;\n  if ((state.wrap & 2) === 0) { return Z_STREAM_ERROR; }\n\n  /* save header structure */\n  state.head = head;\n  head.done = false;\n  return Z_OK;\n}\n\nfunction inflateSetDictionary(strm, dictionary) {\n  var dictLength = dictionary.length;\n\n  var state;\n  var dictid;\n  var ret;\n\n  /* check state */\n  if (!strm /* == Z_NULL */ || !strm.state /* == Z_NULL */) { return Z_STREAM_ERROR; }\n  state = strm.state;\n\n  if (state.wrap !== 0 && state.mode !== DICT) {\n    return Z_STREAM_ERROR;\n  }\n\n  /* check for correct dictionary identifier */\n  if (state.mode === DICT) {\n    dictid = 1; /* adler32(0, null, 0)*/\n    /* dictid = adler32(dictid, dictionary, dictLength); */\n    dictid = adler32(dictid, dictionary, dictLength, 0);\n    if (dictid !== state.check) {\n      return Z_DATA_ERROR;\n    }\n  }\n  /* copy dictionary to window using updatewindow(), which will amend the\n   existing dictionary if appropriate */\n  ret = updatewindow(strm, dictionary, dictLength, dictLength);\n  if (ret) {\n    state.mode = MEM;\n    return Z_MEM_ERROR;\n  }\n  state.havedict = 1;\n  // Tracev((stderr, \"inflate:   dictionary set\\n\"));\n  return Z_OK;\n}\n\nexports.inflateReset = inflateReset;\nexports.inflateReset2 = inflateReset2;\nexports.inflateResetKeep = inflateResetKeep;\nexports.inflateInit = inflateInit;\nexports.inflateInit2 = inflateInit2;\nexports.inflate = inflate;\nexports.inflateEnd = inflateEnd;\nexports.inflateGetHeader = inflateGetHeader;\nexports.inflateSetDictionary = inflateSetDictionary;\nexports.inflateInfo = 'pako inflate (from Nodeca project)';\n\n/* Not implemented\nexports.inflateCopy = inflateCopy;\nexports.inflateGetDictionary = inflateGetDictionary;\nexports.inflateMark = inflateMark;\nexports.inflatePrime = inflatePrime;\nexports.inflateSync = inflateSync;\nexports.inflateSyncPoint = inflateSyncPoint;\nexports.inflateUndermine = inflateUndermine;\n*/\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar utils = require('../utils/common');\n\nvar MAXBITS = 15;\nvar ENOUGH_LENS = 852;\nvar ENOUGH_DISTS = 592;\n//var ENOUGH = (ENOUGH_LENS+ENOUGH_DISTS);\n\nvar CODES = 0;\nvar LENS = 1;\nvar DISTS = 2;\n\nvar lbase = [ /* Length codes 257..285 base */\n  3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31,\n  35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0\n];\n\nvar lext = [ /* Length codes 257..285 extra */\n  16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18,\n  19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78\n];\n\nvar dbase = [ /* Distance codes 0..29 base */\n  1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193,\n  257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145,\n  8193, 12289, 16385, 24577, 0, 0\n];\n\nvar dext = [ /* Distance codes 0..29 extra */\n  16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22,\n  23, 23, 24, 24, 25, 25, 26, 26, 27, 27,\n  28, 28, 29, 29, 64, 64\n];\n\nmodule.exports = function inflate_table(type, lens, lens_index, codes, table, table_index, work, opts)\n{\n  var bits = opts.bits;\n      //here = opts.here; /* table entry for duplication */\n\n  var len = 0;               /* a code's length in bits */\n  var sym = 0;               /* index of code symbols */\n  var min = 0, max = 0;          /* minimum and maximum code lengths */\n  var root = 0;              /* number of index bits for root table */\n  var curr = 0;              /* number of index bits for current table */\n  var drop = 0;              /* code bits to drop for sub-table */\n  var left = 0;                   /* number of prefix codes available */\n  var used = 0;              /* code entries in table used */\n  var huff = 0;              /* Huffman code */\n  var incr;              /* for incrementing code, index */\n  var fill;              /* index for replicating entries */\n  var low;               /* low bits for current root entry */\n  var mask;              /* mask for low root bits */\n  var next;             /* next available space in table */\n  var base = null;     /* base value table to use */\n  var base_index = 0;\n//  var shoextra;    /* extra bits table to use */\n  var end;                    /* use base and extra for symbol > end */\n  var count = new utils.Buf16(MAXBITS + 1); //[MAXBITS+1];    /* number of codes of each length */\n  var offs = new utils.Buf16(MAXBITS + 1); //[MAXBITS+1];     /* offsets in table for each length */\n  var extra = null;\n  var extra_index = 0;\n\n  var here_bits, here_op, here_val;\n\n  /*\n   Process a set of code lengths to create a canonical Huffman code.  The\n   code lengths are lens[0..codes-1].  Each length corresponds to the\n   symbols 0..codes-1.  The Huffman code is generated by first sorting the\n   symbols by length from short to long, and retaining the symbol order\n   for codes with equal lengths.  Then the code starts with all zero bits\n   for the first code of the shortest length, and the codes are integer\n   increments for the same length, and zeros are appended as the length\n   increases.  For the deflate format, these bits are stored backwards\n   from their more natural integer increment ordering, and so when the\n   decoding tables are built in the large loop below, the integer codes\n   are incremented backwards.\n\n   This routine assumes, but does not check, that all of the entries in\n   lens[] are in the range 0..MAXBITS.  The caller must assure this.\n   1..MAXBITS is interpreted as that code length.  zero means that that\n   symbol does not occur in this code.\n\n   The codes are sorted by computing a count of codes for each length,\n   creating from that a table of starting indices for each length in the\n   sorted table, and then entering the symbols in order in the sorted\n   table.  The sorted table is work[], with that space being provided by\n   the caller.\n\n   The length counts are used for other purposes as well, i.e. finding\n   the minimum and maximum length codes, determining if there are any\n   codes at all, checking for a valid set of lengths, and looking ahead\n   at length counts to determine sub-table sizes when building the\n   decoding tables.\n   */\n\n  /* accumulate lengths for codes (assumes lens[] all in 0..MAXBITS) */\n  for (len = 0; len <= MAXBITS; len++) {\n    count[len] = 0;\n  }\n  for (sym = 0; sym < codes; sym++) {\n    count[lens[lens_index + sym]]++;\n  }\n\n  /* bound code lengths, force root to be within code lengths */\n  root = bits;\n  for (max = MAXBITS; max >= 1; max--) {\n    if (count[max] !== 0) { break; }\n  }\n  if (root > max) {\n    root = max;\n  }\n  if (max === 0) {                     /* no symbols to code at all */\n    //table.op[opts.table_index] = 64;  //here.op = (var char)64;    /* invalid code marker */\n    //table.bits[opts.table_index] = 1;   //here.bits = (var char)1;\n    //table.val[opts.table_index++] = 0;   //here.val = (var short)0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n\n    //table.op[opts.table_index] = 64;\n    //table.bits[opts.table_index] = 1;\n    //table.val[opts.table_index++] = 0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n    opts.bits = 1;\n    return 0;     /* no symbols, but wait for decoding to report error */\n  }\n  for (min = 1; min < max; min++) {\n    if (count[min] !== 0) { break; }\n  }\n  if (root < min) {\n    root = min;\n  }\n\n  /* check for an over-subscribed or incomplete set of lengths */\n  left = 1;\n  for (len = 1; len <= MAXBITS; len++) {\n    left <<= 1;\n    left -= count[len];\n    if (left < 0) {\n      return -1;\n    }        /* over-subscribed */\n  }\n  if (left > 0 && (type === CODES || max !== 1)) {\n    return -1;                      /* incomplete set */\n  }\n\n  /* generate offsets into symbol table for each length for sorting */\n  offs[1] = 0;\n  for (len = 1; len < MAXBITS; len++) {\n    offs[len + 1] = offs[len] + count[len];\n  }\n\n  /* sort symbols by length, by symbol order within each length */\n  for (sym = 0; sym < codes; sym++) {\n    if (lens[lens_index + sym] !== 0) {\n      work[offs[lens[lens_index + sym]]++] = sym;\n    }\n  }\n\n  /*\n   Create and fill in decoding tables.  In this loop, the table being\n   filled is at next and has curr index bits.  The code being used is huff\n   with length len.  That code is converted to an index by dropping drop\n   bits off of the bottom.  For codes where len is less than drop + curr,\n   those top drop + curr - len bits are incremented through all values to\n   fill the table with replicated entries.\n\n   root is the number of index bits for the root table.  When len exceeds\n   root, sub-tables are created pointed to by the root entry with an index\n   of the low root bits of huff.  This is saved in low to check for when a\n   new sub-table should be started.  drop is zero when the root table is\n   being filled, and drop is root when sub-tables are being filled.\n\n   When a new sub-table is needed, it is necessary to look ahead in the\n   code lengths to determine what size sub-table is needed.  The length\n   counts are used for this, and so count[] is decremented as codes are\n   entered in the tables.\n\n   used keeps track of how many table entries have been allocated from the\n   provided *table space.  It is checked for LENS and DIST tables against\n   the constants ENOUGH_LENS and ENOUGH_DISTS to guard against changes in\n   the initial root table size constants.  See the comments in inftrees.h\n   for more information.\n\n   sym increments through all symbols, and the loop terminates when\n   all codes of length max, i.e. all codes, have been processed.  This\n   routine permits incomplete codes, so another loop after this one fills\n   in the rest of the decoding tables with invalid code markers.\n   */\n\n  /* set up for code type */\n  // poor man optimization - use if-else instead of switch,\n  // to avoid deopts in old v8\n  if (type === CODES) {\n    base = extra = work;    /* dummy value--not used */\n    end = 19;\n\n  } else if (type === LENS) {\n    base = lbase;\n    base_index -= 257;\n    extra = lext;\n    extra_index -= 257;\n    end = 256;\n\n  } else {                    /* DISTS */\n    base = dbase;\n    extra = dext;\n    end = -1;\n  }\n\n  /* initialize opts for loop */\n  huff = 0;                   /* starting code */\n  sym = 0;                    /* starting code symbol */\n  len = min;                  /* starting code length */\n  next = table_index;              /* current table to fill in */\n  curr = root;                /* current table index bits */\n  drop = 0;                   /* current bits to drop from code for index */\n  low = -1;                   /* trigger new sub-table when len > root */\n  used = 1 << root;          /* use root table entries */\n  mask = used - 1;            /* mask for comparing low */\n\n  /* check available table space */\n  if ((type === LENS && used > ENOUGH_LENS) ||\n    (type === DISTS && used > ENOUGH_DISTS)) {\n    return 1;\n  }\n\n  /* process all codes and make table entries */\n  for (;;) {\n    /* create table entry */\n    here_bits = len - drop;\n    if (work[sym] < end) {\n      here_op = 0;\n      here_val = work[sym];\n    }\n    else if (work[sym] > end) {\n      here_op = extra[extra_index + work[sym]];\n      here_val = base[base_index + work[sym]];\n    }\n    else {\n      here_op = 32 + 64;         /* end of block */\n      here_val = 0;\n    }\n\n    /* replicate for those indices with low len bits equal to huff */\n    incr = 1 << (len - drop);\n    fill = 1 << curr;\n    min = fill;                 /* save offset to next table */\n    do {\n      fill -= incr;\n      table[next + (huff >> drop) + fill] = (here_bits << 24) | (here_op << 16) | here_val |0;\n    } while (fill !== 0);\n\n    /* backwards increment the len-bit code huff */\n    incr = 1 << (len - 1);\n    while (huff & incr) {\n      incr >>= 1;\n    }\n    if (incr !== 0) {\n      huff &= incr - 1;\n      huff += incr;\n    } else {\n      huff = 0;\n    }\n\n    /* go to next symbol, update count, len */\n    sym++;\n    if (--count[len] === 0) {\n      if (len === max) { break; }\n      len = lens[lens_index + work[sym]];\n    }\n\n    /* create new sub-table if needed */\n    if (len > root && (huff & mask) !== low) {\n      /* if first time, transition to sub-tables */\n      if (drop === 0) {\n        drop = root;\n      }\n\n      /* increment past last table */\n      next += min;            /* here min is 1 << curr */\n\n      /* determine length of next table */\n      curr = len - drop;\n      left = 1 << curr;\n      while (curr + drop < max) {\n        left -= count[curr + drop];\n        if (left <= 0) { break; }\n        curr++;\n        left <<= 1;\n      }\n\n      /* check for enough space */\n      used += 1 << curr;\n      if ((type === LENS && used > ENOUGH_LENS) ||\n        (type === DISTS && used > ENOUGH_DISTS)) {\n        return 1;\n      }\n\n      /* point entry in root table to sub-table */\n      low = huff & mask;\n      /*table.op[low] = curr;\n      table.bits[low] = root;\n      table.val[low] = next - opts.table_index;*/\n      table[low] = (root << 24) | (curr << 16) | (next - table_index) |0;\n    }\n  }\n\n  /* fill in remaining table entry if code is incomplete (guaranteed to have\n   at most one remaining entry, since if the code is incomplete, the\n   maximum code length that was allowed to get this far is one bit) */\n  if (huff !== 0) {\n    //table.op[next + huff] = 64;            /* invalid code marker */\n    //table.bits[next + huff] = len - drop;\n    //table.val[next + huff] = 0;\n    table[next + huff] = ((len - drop) << 24) | (64 << 16) |0;\n  }\n\n  /* set return parameters */\n  //opts.table_index += used;\n  opts.bits = root;\n  return 0;\n};\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nmodule.exports = {\n  2:      'need dictionary',     /* Z_NEED_DICT       2  */\n  1:      'stream end',          /* Z_STREAM_END      1  */\n  0:      '',                    /* Z_OK              0  */\n  '-1':   'file error',          /* Z_ERRNO         (-1) */\n  '-2':   'stream error',        /* Z_STREAM_ERROR  (-2) */\n  '-3':   'data error',          /* Z_DATA_ERROR    (-3) */\n  '-4':   'insufficient memory', /* Z_MEM_ERROR     (-4) */\n  '-5':   'buffer error',        /* Z_BUF_ERROR     (-5) */\n  '-6':   'incompatible version' /* Z_VERSION_ERROR (-6) */\n};\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n/* eslint-disable space-unary-ops */\n\nvar utils = require('../utils/common');\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\n\n//var Z_FILTERED          = 1;\n//var Z_HUFFMAN_ONLY      = 2;\n//var Z_RLE               = 3;\nvar Z_FIXED               = 4;\n//var Z_DEFAULT_STRATEGY  = 0;\n\n/* Possible values of the data_type field (though see inflate()) */\nvar Z_BINARY              = 0;\nvar Z_TEXT                = 1;\n//var Z_ASCII             = 1; // = Z_TEXT\nvar Z_UNKNOWN             = 2;\n\n/*============================================================================*/\n\n\nfunction zero(buf) { var len = buf.length; while (--len >= 0) { buf[len] = 0; } }\n\n// From zutil.h\n\nvar STORED_BLOCK = 0;\nvar STATIC_TREES = 1;\nvar DYN_TREES    = 2;\n/* The three kinds of block type */\n\nvar MIN_MATCH    = 3;\nvar MAX_MATCH    = 258;\n/* The minimum and maximum match lengths */\n\n// From deflate.h\n/* ===========================================================================\n * Internal compression state.\n */\n\nvar LENGTH_CODES  = 29;\n/* number of length codes, not counting the special END_BLOCK code */\n\nvar LITERALS      = 256;\n/* number of literal bytes 0..255 */\n\nvar L_CODES       = LITERALS + 1 + LENGTH_CODES;\n/* number of Literal or Length codes, including the END_BLOCK code */\n\nvar D_CODES       = 30;\n/* number of distance codes */\n\nvar BL_CODES      = 19;\n/* number of codes used to transfer the bit lengths */\n\nvar HEAP_SIZE     = 2 * L_CODES + 1;\n/* maximum heap size */\n\nvar MAX_BITS      = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nvar Buf_size      = 16;\n/* size of bit buffer in bi_buf */\n\n\n/* ===========================================================================\n * Constants\n */\n\nvar MAX_BL_BITS = 7;\n/* Bit length codes must not exceed MAX_BL_BITS bits */\n\nvar END_BLOCK   = 256;\n/* end of block literal code */\n\nvar REP_3_6     = 16;\n/* repeat previous bit length 3-6 times (2 bits of repeat count) */\n\nvar REPZ_3_10   = 17;\n/* repeat a zero length 3-10 times  (3 bits of repeat count) */\n\nvar REPZ_11_138 = 18;\n/* repeat a zero length 11-138 times  (7 bits of repeat count) */\n\n/* eslint-disable comma-spacing,array-bracket-spacing */\nvar extra_lbits =   /* extra bits for each length code */\n  [0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0];\n\nvar extra_dbits =   /* extra bits for each distance code */\n  [0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13];\n\nvar extra_blbits =  /* extra bits for each bit length code */\n  [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7];\n\nvar bl_order =\n  [16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];\n/* eslint-enable comma-spacing,array-bracket-spacing */\n\n/* The lengths of the bit length codes are sent in order of decreasing\n * probability, to avoid transmitting the lengths for unused bit length codes.\n */\n\n/* ===========================================================================\n * Local data. These are initialized only once.\n */\n\n// We pre-fill arrays with 0 to avoid uninitialized gaps\n\nvar DIST_CODE_LEN = 512; /* see definition of array dist_code below */\n\n// !!!! Use flat array instead of structure, Freq = i*2, Len = i*2+1\nvar static_ltree  = new Array((L_CODES + 2) * 2);\nzero(static_ltree);\n/* The static literal tree. Since the bit lengths are imposed, there is no\n * need for the L_CODES extra codes used during heap construction. However\n * The codes 286 and 287 are needed to build a canonical tree (see _tr_init\n * below).\n */\n\nvar static_dtree  = new Array(D_CODES * 2);\nzero(static_dtree);\n/* The static distance tree. (Actually a trivial tree since all codes use\n * 5 bits.)\n */\n\nvar _dist_code    = new Array(DIST_CODE_LEN);\nzero(_dist_code);\n/* Distance codes. The first 256 values correspond to the distances\n * 3 .. 258, the last 256 values correspond to the top 8 bits of\n * the 15 bit distances.\n */\n\nvar _length_code  = new Array(MAX_MATCH - MIN_MATCH + 1);\nzero(_length_code);\n/* length code for each normalized match length (0 == MIN_MATCH) */\n\nvar base_length   = new Array(LENGTH_CODES);\nzero(base_length);\n/* First normalized length for each code (0 = MIN_MATCH) */\n\nvar base_dist     = new Array(D_CODES);\nzero(base_dist);\n/* First normalized distance for each code (0 = distance of 1) */\n\n\nfunction StaticTreeDesc(static_tree, extra_bits, extra_base, elems, max_length) {\n\n  this.static_tree  = static_tree;  /* static tree or NULL */\n  this.extra_bits   = extra_bits;   /* extra bits for each code or NULL */\n  this.extra_base   = extra_base;   /* base index for extra_bits */\n  this.elems        = elems;        /* max number of elements in the tree */\n  this.max_length   = max_length;   /* max bit length for the codes */\n\n  // show if `static_tree` has data or dummy - needed for monomorphic objects\n  this.has_stree    = static_tree && static_tree.length;\n}\n\n\nvar static_l_desc;\nvar static_d_desc;\nvar static_bl_desc;\n\n\nfunction TreeDesc(dyn_tree, stat_desc) {\n  this.dyn_tree = dyn_tree;     /* the dynamic tree */\n  this.max_code = 0;            /* largest code with non zero frequency */\n  this.stat_desc = stat_desc;   /* the corresponding static tree */\n}\n\n\n\nfunction d_code(dist) {\n  return dist < 256 ? _dist_code[dist] : _dist_code[256 + (dist >>> 7)];\n}\n\n\n/* ===========================================================================\n * Output a short LSB first on the stream.\n * IN assertion: there is enough room in pendingBuf.\n */\nfunction put_short(s, w) {\n//    put_byte(s, (uch)((w) & 0xff));\n//    put_byte(s, (uch)((ush)(w) >> 8));\n  s.pending_buf[s.pending++] = (w) & 0xff;\n  s.pending_buf[s.pending++] = (w >>> 8) & 0xff;\n}\n\n\n/* ===========================================================================\n * Send a value on a given number of bits.\n * IN assertion: length <= 16 and value fits in length bits.\n */\nfunction send_bits(s, value, length) {\n  if (s.bi_valid > (Buf_size - length)) {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    put_short(s, s.bi_buf);\n    s.bi_buf = value >> (Buf_size - s.bi_valid);\n    s.bi_valid += length - Buf_size;\n  } else {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    s.bi_valid += length;\n  }\n}\n\n\nfunction send_code(s, c, tree) {\n  send_bits(s, tree[c * 2]/*.Code*/, tree[c * 2 + 1]/*.Len*/);\n}\n\n\n/* ===========================================================================\n * Reverse the first len bits of a code, using straightforward code (a faster\n * method would use a table)\n * IN assertion: 1 <= len <= 15\n */\nfunction bi_reverse(code, len) {\n  var res = 0;\n  do {\n    res |= code & 1;\n    code >>>= 1;\n    res <<= 1;\n  } while (--len > 0);\n  return res >>> 1;\n}\n\n\n/* ===========================================================================\n * Flush the bit buffer, keeping at most 7 bits in it.\n */\nfunction bi_flush(s) {\n  if (s.bi_valid === 16) {\n    put_short(s, s.bi_buf);\n    s.bi_buf = 0;\n    s.bi_valid = 0;\n\n  } else if (s.bi_valid >= 8) {\n    s.pending_buf[s.pending++] = s.bi_buf & 0xff;\n    s.bi_buf >>= 8;\n    s.bi_valid -= 8;\n  }\n}\n\n\n/* ===========================================================================\n * Compute the optimal bit lengths for a tree and update the total bit length\n * for the current block.\n * IN assertion: the fields freq and dad are set, heap[heap_max] and\n *    above are the tree nodes sorted by increasing frequency.\n * OUT assertions: the field len is set to the optimal bit length, the\n *     array bl_count contains the frequencies for each bit length.\n *     The length opt_len is updated; static_len is also updated if stree is\n *     not null.\n */\nfunction gen_bitlen(s, desc)\n//    deflate_state *s;\n//    tree_desc *desc;    /* the tree descriptor */\n{\n  var tree            = desc.dyn_tree;\n  var max_code        = desc.max_code;\n  var stree           = desc.stat_desc.static_tree;\n  var has_stree       = desc.stat_desc.has_stree;\n  var extra           = desc.stat_desc.extra_bits;\n  var base            = desc.stat_desc.extra_base;\n  var max_length      = desc.stat_desc.max_length;\n  var h;              /* heap index */\n  var n, m;           /* iterate over the tree elements */\n  var bits;           /* bit length */\n  var xbits;          /* extra bits */\n  var f;              /* frequency */\n  var overflow = 0;   /* number of elements with bit length too large */\n\n  for (bits = 0; bits <= MAX_BITS; bits++) {\n    s.bl_count[bits] = 0;\n  }\n\n  /* In a first pass, compute the optimal bit lengths (which may\n   * overflow in the case of the bit length tree).\n   */\n  tree[s.heap[s.heap_max] * 2 + 1]/*.Len*/ = 0; /* root of the heap */\n\n  for (h = s.heap_max + 1; h < HEAP_SIZE; h++) {\n    n = s.heap[h];\n    bits = tree[tree[n * 2 + 1]/*.Dad*/ * 2 + 1]/*.Len*/ + 1;\n    if (bits > max_length) {\n      bits = max_length;\n      overflow++;\n    }\n    tree[n * 2 + 1]/*.Len*/ = bits;\n    /* We overwrite tree[n].Dad which is no longer needed */\n\n    if (n > max_code) { continue; } /* not a leaf node */\n\n    s.bl_count[bits]++;\n    xbits = 0;\n    if (n >= base) {\n      xbits = extra[n - base];\n    }\n    f = tree[n * 2]/*.Freq*/;\n    s.opt_len += f * (bits + xbits);\n    if (has_stree) {\n      s.static_len += f * (stree[n * 2 + 1]/*.Len*/ + xbits);\n    }\n  }\n  if (overflow === 0) { return; }\n\n  // Trace((stderr,\"\\nbit length overflow\\n\"));\n  /* This happens for example on obj2 and pic of the Calgary corpus */\n\n  /* Find the first bit length which could increase: */\n  do {\n    bits = max_length - 1;\n    while (s.bl_count[bits] === 0) { bits--; }\n    s.bl_count[bits]--;      /* move one leaf down the tree */\n    s.bl_count[bits + 1] += 2; /* move one overflow item as its brother */\n    s.bl_count[max_length]--;\n    /* The brother of the overflow item also moves one step up,\n     * but this does not affect bl_count[max_length]\n     */\n    overflow -= 2;\n  } while (overflow > 0);\n\n  /* Now recompute all bit lengths, scanning in increasing frequency.\n   * h is still equal to HEAP_SIZE. (It is simpler to reconstruct all\n   * lengths instead of fixing only the wrong ones. This idea is taken\n   * from 'ar' written by Haruhiko Okumura.)\n   */\n  for (bits = max_length; bits !== 0; bits--) {\n    n = s.bl_count[bits];\n    while (n !== 0) {\n      m = s.heap[--h];\n      if (m > max_code) { continue; }\n      if (tree[m * 2 + 1]/*.Len*/ !== bits) {\n        // Trace((stderr,\"code %d bits %d->%d\\n\", m, tree[m].Len, bits));\n        s.opt_len += (bits - tree[m * 2 + 1]/*.Len*/) * tree[m * 2]/*.Freq*/;\n        tree[m * 2 + 1]/*.Len*/ = bits;\n      }\n      n--;\n    }\n  }\n}\n\n\n/* ===========================================================================\n * Generate the codes for a given tree and bit counts (which need not be\n * optimal).\n * IN assertion: the array bl_count contains the bit length statistics for\n * the given tree and the field len is set for all tree elements.\n * OUT assertion: the field code is set for all tree elements of non\n *     zero code length.\n */\nfunction gen_codes(tree, max_code, bl_count)\n//    ct_data *tree;             /* the tree to decorate */\n//    int max_code;              /* largest code with non zero frequency */\n//    ushf *bl_count;            /* number of codes at each bit length */\n{\n  var next_code = new Array(MAX_BITS + 1); /* next code value for each bit length */\n  var code = 0;              /* running code value */\n  var bits;                  /* bit index */\n  var n;                     /* code index */\n\n  /* The distribution counts are first used to generate the code values\n   * without bit reversal.\n   */\n  for (bits = 1; bits <= MAX_BITS; bits++) {\n    next_code[bits] = code = (code + bl_count[bits - 1]) << 1;\n  }\n  /* Check that the bit counts in bl_count are consistent. The last code\n   * must be all ones.\n   */\n  //Assert (code + bl_count[MAX_BITS]-1 == (1<<MAX_BITS)-1,\n  //        \"inconsistent bit counts\");\n  //Tracev((stderr,\"\\ngen_codes: max_code %d \", max_code));\n\n  for (n = 0;  n <= max_code; n++) {\n    var len = tree[n * 2 + 1]/*.Len*/;\n    if (len === 0) { continue; }\n    /* Now reverse the bits */\n    tree[n * 2]/*.Code*/ = bi_reverse(next_code[len]++, len);\n\n    //Tracecv(tree != static_ltree, (stderr,\"\\nn %3d %c l %2d c %4x (%x) \",\n    //     n, (isgraph(n) ? n : ' '), len, tree[n].Code, next_code[len]-1));\n  }\n}\n\n\n/* ===========================================================================\n * Initialize the various 'constant' tables.\n */\nfunction tr_static_init() {\n  var n;        /* iterates over tree elements */\n  var bits;     /* bit counter */\n  var length;   /* length value */\n  var code;     /* code value */\n  var dist;     /* distance index */\n  var bl_count = new Array(MAX_BITS + 1);\n  /* number of codes at each bit length for an optimal tree */\n\n  // do check in _tr_init()\n  //if (static_init_done) return;\n\n  /* For some embedded targets, global variables are not initialized: */\n/*#ifdef NO_INIT_GLOBAL_POINTERS\n  static_l_desc.static_tree = static_ltree;\n  static_l_desc.extra_bits = extra_lbits;\n  static_d_desc.static_tree = static_dtree;\n  static_d_desc.extra_bits = extra_dbits;\n  static_bl_desc.extra_bits = extra_blbits;\n#endif*/\n\n  /* Initialize the mapping length (0..255) -> length code (0..28) */\n  length = 0;\n  for (code = 0; code < LENGTH_CODES - 1; code++) {\n    base_length[code] = length;\n    for (n = 0; n < (1 << extra_lbits[code]); n++) {\n      _length_code[length++] = code;\n    }\n  }\n  //Assert (length == 256, \"tr_static_init: length != 256\");\n  /* Note that the length 255 (match length 258) can be represented\n   * in two different ways: code 284 + 5 bits or code 285, so we\n   * overwrite length_code[255] to use the best encoding:\n   */\n  _length_code[length - 1] = code;\n\n  /* Initialize the mapping dist (0..32K) -> dist code (0..29) */\n  dist = 0;\n  for (code = 0; code < 16; code++) {\n    base_dist[code] = dist;\n    for (n = 0; n < (1 << extra_dbits[code]); n++) {\n      _dist_code[dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: dist != 256\");\n  dist >>= 7; /* from now on, all distances are divided by 128 */\n  for (; code < D_CODES; code++) {\n    base_dist[code] = dist << 7;\n    for (n = 0; n < (1 << (extra_dbits[code] - 7)); n++) {\n      _dist_code[256 + dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: 256+dist != 512\");\n\n  /* Construct the codes of the static literal tree */\n  for (bits = 0; bits <= MAX_BITS; bits++) {\n    bl_count[bits] = 0;\n  }\n\n  n = 0;\n  while (n <= 143) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  while (n <= 255) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 9;\n    n++;\n    bl_count[9]++;\n  }\n  while (n <= 279) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 7;\n    n++;\n    bl_count[7]++;\n  }\n  while (n <= 287) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  /* Codes 286 and 287 do not exist, but we must include them in the\n   * tree construction to get a canonical Huffman tree (longest code\n   * all ones)\n   */\n  gen_codes(static_ltree, L_CODES + 1, bl_count);\n\n  /* The static distance tree is trivial: */\n  for (n = 0; n < D_CODES; n++) {\n    static_dtree[n * 2 + 1]/*.Len*/ = 5;\n    static_dtree[n * 2]/*.Code*/ = bi_reverse(n, 5);\n  }\n\n  // Now data ready and we can init static trees\n  static_l_desc = new StaticTreeDesc(static_ltree, extra_lbits, LITERALS + 1, L_CODES, MAX_BITS);\n  static_d_desc = new StaticTreeDesc(static_dtree, extra_dbits, 0,          D_CODES, MAX_BITS);\n  static_bl_desc = new StaticTreeDesc(new Array(0), extra_blbits, 0,         BL_CODES, MAX_BL_BITS);\n\n  //static_init_done = true;\n}\n\n\n/* ===========================================================================\n * Initialize a new block.\n */\nfunction init_block(s) {\n  var n; /* iterates over tree elements */\n\n  /* Initialize the trees. */\n  for (n = 0; n < L_CODES;  n++) { s.dyn_ltree[n * 2]/*.Freq*/ = 0; }\n  for (n = 0; n < D_CODES;  n++) { s.dyn_dtree[n * 2]/*.Freq*/ = 0; }\n  for (n = 0; n < BL_CODES; n++) { s.bl_tree[n * 2]/*.Freq*/ = 0; }\n\n  s.dyn_ltree[END_BLOCK * 2]/*.Freq*/ = 1;\n  s.opt_len = s.static_len = 0;\n  s.last_lit = s.matches = 0;\n}\n\n\n/* ===========================================================================\n * Flush the bit buffer and align the output on a byte boundary\n */\nfunction bi_windup(s)\n{\n  if (s.bi_valid > 8) {\n    put_short(s, s.bi_buf);\n  } else if (s.bi_valid > 0) {\n    //put_byte(s, (Byte)s->bi_buf);\n    s.pending_buf[s.pending++] = s.bi_buf;\n  }\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n}\n\n/* ===========================================================================\n * Copy a stored block, storing first the length and its\n * one's complement if requested.\n */\nfunction copy_block(s, buf, len, header)\n//DeflateState *s;\n//charf    *buf;    /* the input data */\n//unsigned len;     /* its length */\n//int      header;  /* true if block header must be written */\n{\n  bi_windup(s);        /* align on byte boundary */\n\n  if (header) {\n    put_short(s, len);\n    put_short(s, ~len);\n  }\n//  while (len--) {\n//    put_byte(s, *buf++);\n//  }\n  utils.arraySet(s.pending_buf, s.window, buf, len, s.pending);\n  s.pending += len;\n}\n\n/* ===========================================================================\n * Compares to subtrees, using the tree depth as tie breaker when\n * the subtrees have equal frequency. This minimizes the worst case length.\n */\nfunction smaller(tree, n, m, depth) {\n  var _n2 = n * 2;\n  var _m2 = m * 2;\n  return (tree[_n2]/*.Freq*/ < tree[_m2]/*.Freq*/ ||\n         (tree[_n2]/*.Freq*/ === tree[_m2]/*.Freq*/ && depth[n] <= depth[m]));\n}\n\n/* ===========================================================================\n * Restore the heap property by moving down the tree starting at node k,\n * exchanging a node with the smallest of its two sons if necessary, stopping\n * when the heap property is re-established (each father smaller than its\n * two sons).\n */\nfunction pqdownheap(s, tree, k)\n//    deflate_state *s;\n//    ct_data *tree;  /* the tree to restore */\n//    int k;               /* node to move down */\n{\n  var v = s.heap[k];\n  var j = k << 1;  /* left son of k */\n  while (j <= s.heap_len) {\n    /* Set j to the smallest of the two sons: */\n    if (j < s.heap_len &&\n      smaller(tree, s.heap[j + 1], s.heap[j], s.depth)) {\n      j++;\n    }\n    /* Exit if v is smaller than both sons */\n    if (smaller(tree, v, s.heap[j], s.depth)) { break; }\n\n    /* Exchange v with the smallest son */\n    s.heap[k] = s.heap[j];\n    k = j;\n\n    /* And continue down the tree, setting j to the left son of k */\n    j <<= 1;\n  }\n  s.heap[k] = v;\n}\n\n\n// inlined manually\n// var SMALLEST = 1;\n\n/* ===========================================================================\n * Send the block data compressed using the given Huffman trees\n */\nfunction compress_block(s, ltree, dtree)\n//    deflate_state *s;\n//    const ct_data *ltree; /* literal tree */\n//    const ct_data *dtree; /* distance tree */\n{\n  var dist;           /* distance of matched string */\n  var lc;             /* match length or unmatched char (if dist == 0) */\n  var lx = 0;         /* running index in l_buf */\n  var code;           /* the code to send */\n  var extra;          /* number of extra bits to send */\n\n  if (s.last_lit !== 0) {\n    do {\n      dist = (s.pending_buf[s.d_buf + lx * 2] << 8) | (s.pending_buf[s.d_buf + lx * 2 + 1]);\n      lc = s.pending_buf[s.l_buf + lx];\n      lx++;\n\n      if (dist === 0) {\n        send_code(s, lc, ltree); /* send a literal byte */\n        //Tracecv(isgraph(lc), (stderr,\" '%c' \", lc));\n      } else {\n        /* Here, lc is the match length - MIN_MATCH */\n        code = _length_code[lc];\n        send_code(s, code + LITERALS + 1, ltree); /* send the length code */\n        extra = extra_lbits[code];\n        if (extra !== 0) {\n          lc -= base_length[code];\n          send_bits(s, lc, extra);       /* send the extra length bits */\n        }\n        dist--; /* dist is now the match distance - 1 */\n        code = d_code(dist);\n        //Assert (code < D_CODES, \"bad d_code\");\n\n        send_code(s, code, dtree);       /* send the distance code */\n        extra = extra_dbits[code];\n        if (extra !== 0) {\n          dist -= base_dist[code];\n          send_bits(s, dist, extra);   /* send the extra distance bits */\n        }\n      } /* literal or match pair ? */\n\n      /* Check that the overlay between pending_buf and d_buf+l_buf is ok: */\n      //Assert((uInt)(s->pending) < s->lit_bufsize + 2*lx,\n      //       \"pendingBuf overflow\");\n\n    } while (lx < s.last_lit);\n  }\n\n  send_code(s, END_BLOCK, ltree);\n}\n\n\n/* ===========================================================================\n * Construct one Huffman tree and assigns the code bit strings and lengths.\n * Update the total bit length for the current block.\n * IN assertion: the field freq is set for all tree elements.\n * OUT assertions: the fields len and code are set to the optimal bit length\n *     and corresponding code. The length opt_len is updated; static_len is\n *     also updated if stree is not null. The field max_code is set.\n */\nfunction build_tree(s, desc)\n//    deflate_state *s;\n//    tree_desc *desc; /* the tree descriptor */\n{\n  var tree     = desc.dyn_tree;\n  var stree    = desc.stat_desc.static_tree;\n  var has_stree = desc.stat_desc.has_stree;\n  var elems    = desc.stat_desc.elems;\n  var n, m;          /* iterate over heap elements */\n  var max_code = -1; /* largest code with non zero frequency */\n  var node;          /* new node being created */\n\n  /* Construct the initial heap, with least frequent element in\n   * heap[SMALLEST]. The sons of heap[n] are heap[2*n] and heap[2*n+1].\n   * heap[0] is not used.\n   */\n  s.heap_len = 0;\n  s.heap_max = HEAP_SIZE;\n\n  for (n = 0; n < elems; n++) {\n    if (tree[n * 2]/*.Freq*/ !== 0) {\n      s.heap[++s.heap_len] = max_code = n;\n      s.depth[n] = 0;\n\n    } else {\n      tree[n * 2 + 1]/*.Len*/ = 0;\n    }\n  }\n\n  /* The pkzip format requires that at least one distance code exists,\n   * and that at least one bit should be sent even if there is only one\n   * possible code. So to avoid special checks later on we force at least\n   * two codes of non zero frequency.\n   */\n  while (s.heap_len < 2) {\n    node = s.heap[++s.heap_len] = (max_code < 2 ? ++max_code : 0);\n    tree[node * 2]/*.Freq*/ = 1;\n    s.depth[node] = 0;\n    s.opt_len--;\n\n    if (has_stree) {\n      s.static_len -= stree[node * 2 + 1]/*.Len*/;\n    }\n    /* node is 0 or 1 so it does not have extra bits */\n  }\n  desc.max_code = max_code;\n\n  /* The elements heap[heap_len/2+1 .. heap_len] are leaves of the tree,\n   * establish sub-heaps of increasing lengths:\n   */\n  for (n = (s.heap_len >> 1/*int /2*/); n >= 1; n--) { pqdownheap(s, tree, n); }\n\n  /* Construct the Huffman tree by repeatedly combining the least two\n   * frequent nodes.\n   */\n  node = elems;              /* next internal node of the tree */\n  do {\n    //pqremove(s, tree, n);  /* n = node of least frequency */\n    /*** pqremove ***/\n    n = s.heap[1/*SMALLEST*/];\n    s.heap[1/*SMALLEST*/] = s.heap[s.heap_len--];\n    pqdownheap(s, tree, 1/*SMALLEST*/);\n    /***/\n\n    m = s.heap[1/*SMALLEST*/]; /* m = node of next least frequency */\n\n    s.heap[--s.heap_max] = n; /* keep the nodes sorted by frequency */\n    s.heap[--s.heap_max] = m;\n\n    /* Create a new node father of n and m */\n    tree[node * 2]/*.Freq*/ = tree[n * 2]/*.Freq*/ + tree[m * 2]/*.Freq*/;\n    s.depth[node] = (s.depth[n] >= s.depth[m] ? s.depth[n] : s.depth[m]) + 1;\n    tree[n * 2 + 1]/*.Dad*/ = tree[m * 2 + 1]/*.Dad*/ = node;\n\n    /* and insert the new node in the heap */\n    s.heap[1/*SMALLEST*/] = node++;\n    pqdownheap(s, tree, 1/*SMALLEST*/);\n\n  } while (s.heap_len >= 2);\n\n  s.heap[--s.heap_max] = s.heap[1/*SMALLEST*/];\n\n  /* At this point, the fields freq and dad are set. We can now\n   * generate the bit lengths.\n   */\n  gen_bitlen(s, desc);\n\n  /* The field len is now set, we can generate the bit codes */\n  gen_codes(tree, max_code, s.bl_count);\n}\n\n\n/* ===========================================================================\n * Scan a literal or distance tree to determine the frequencies of the codes\n * in the bit length tree.\n */\nfunction scan_tree(s, tree, max_code)\n//    deflate_state *s;\n//    ct_data *tree;   /* the tree to be scanned */\n//    int max_code;    /* and its largest code of non zero frequency */\n{\n  var n;                     /* iterates over all tree elements */\n  var prevlen = -1;          /* last emitted length */\n  var curlen;                /* length of current code */\n\n  var nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */\n\n  var count = 0;             /* repeat count of the current code */\n  var max_count = 7;         /* max repeat count */\n  var min_count = 4;         /* min repeat count */\n\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n  tree[(max_code + 1) * 2 + 1]/*.Len*/ = 0xffff; /* guard */\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      s.bl_tree[curlen * 2]/*.Freq*/ += count;\n\n    } else if (curlen !== 0) {\n\n      if (curlen !== prevlen) { s.bl_tree[curlen * 2]/*.Freq*/++; }\n      s.bl_tree[REP_3_6 * 2]/*.Freq*/++;\n\n    } else if (count <= 10) {\n      s.bl_tree[REPZ_3_10 * 2]/*.Freq*/++;\n\n    } else {\n      s.bl_tree[REPZ_11_138 * 2]/*.Freq*/++;\n    }\n\n    count = 0;\n    prevlen = curlen;\n\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n}\n\n\n/* ===========================================================================\n * Send a literal or distance tree in compressed form, using the codes in\n * bl_tree.\n */\nfunction send_tree(s, tree, max_code)\n//    deflate_state *s;\n//    ct_data *tree; /* the tree to be scanned */\n//    int max_code;       /* and its largest code of non zero frequency */\n{\n  var n;                     /* iterates over all tree elements */\n  var prevlen = -1;          /* last emitted length */\n  var curlen;                /* length of current code */\n\n  var nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */\n\n  var count = 0;             /* repeat count of the current code */\n  var max_count = 7;         /* max repeat count */\n  var min_count = 4;         /* min repeat count */\n\n  /* tree[max_code+1].Len = -1; */  /* guard already set */\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      do { send_code(s, curlen, s.bl_tree); } while (--count !== 0);\n\n    } else if (curlen !== 0) {\n      if (curlen !== prevlen) {\n        send_code(s, curlen, s.bl_tree);\n        count--;\n      }\n      //Assert(count >= 3 && count <= 6, \" 3_6?\");\n      send_code(s, REP_3_6, s.bl_tree);\n      send_bits(s, count - 3, 2);\n\n    } else if (count <= 10) {\n      send_code(s, REPZ_3_10, s.bl_tree);\n      send_bits(s, count - 3, 3);\n\n    } else {\n      send_code(s, REPZ_11_138, s.bl_tree);\n      send_bits(s, count - 11, 7);\n    }\n\n    count = 0;\n    prevlen = curlen;\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n}\n\n\n/* ===========================================================================\n * Construct the Huffman tree for the bit lengths and return the index in\n * bl_order of the last bit length code to send.\n */\nfunction build_bl_tree(s) {\n  var max_blindex;  /* index of last bit length code of non zero freq */\n\n  /* Determine the bit length frequencies for literal and distance trees */\n  scan_tree(s, s.dyn_ltree, s.l_desc.max_code);\n  scan_tree(s, s.dyn_dtree, s.d_desc.max_code);\n\n  /* Build the bit length tree: */\n  build_tree(s, s.bl_desc);\n  /* opt_len now includes the length of the tree representations, except\n   * the lengths of the bit lengths codes and the 5+5+4 bits for the counts.\n   */\n\n  /* Determine the number of bit length codes to send. The pkzip format\n   * requires that at least 4 bit length codes be sent. (appnote.txt says\n   * 3 but the actual value used is 4.)\n   */\n  for (max_blindex = BL_CODES - 1; max_blindex >= 3; max_blindex--) {\n    if (s.bl_tree[bl_order[max_blindex] * 2 + 1]/*.Len*/ !== 0) {\n      break;\n    }\n  }\n  /* Update opt_len to include the bit length tree and counts */\n  s.opt_len += 3 * (max_blindex + 1) + 5 + 5 + 4;\n  //Tracev((stderr, \"\\ndyn trees: dyn %ld, stat %ld\",\n  //        s->opt_len, s->static_len));\n\n  return max_blindex;\n}\n\n\n/* ===========================================================================\n * Send the header for a block using dynamic Huffman trees: the counts, the\n * lengths of the bit length codes, the literal tree and the distance tree.\n * IN assertion: lcodes >= 257, dcodes >= 1, blcodes >= 4.\n */\nfunction send_all_trees(s, lcodes, dcodes, blcodes)\n//    deflate_state *s;\n//    int lcodes, dcodes, blcodes; /* number of codes for each tree */\n{\n  var rank;                    /* index in bl_order */\n\n  //Assert (lcodes >= 257 && dcodes >= 1 && blcodes >= 4, \"not enough codes\");\n  //Assert (lcodes <= L_CODES && dcodes <= D_CODES && blcodes <= BL_CODES,\n  //        \"too many codes\");\n  //Tracev((stderr, \"\\nbl counts: \"));\n  send_bits(s, lcodes - 257, 5); /* not +255 as stated in appnote.txt */\n  send_bits(s, dcodes - 1,   5);\n  send_bits(s, blcodes - 4,  4); /* not -3 as stated in appnote.txt */\n  for (rank = 0; rank < blcodes; rank++) {\n    //Tracev((stderr, \"\\nbl code %2d \", bl_order[rank]));\n    send_bits(s, s.bl_tree[bl_order[rank] * 2 + 1]/*.Len*/, 3);\n  }\n  //Tracev((stderr, \"\\nbl tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_ltree, lcodes - 1); /* literal tree */\n  //Tracev((stderr, \"\\nlit tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_dtree, dcodes - 1); /* distance tree */\n  //Tracev((stderr, \"\\ndist tree: sent %ld\", s->bits_sent));\n}\n\n\n/* ===========================================================================\n * Check if the data type is TEXT or BINARY, using the following algorithm:\n * - TEXT if the two conditions below are satisfied:\n *    a) There are no non-portable control characters belonging to the\n *       \"black list\" (0..6, 14..25, 28..31).\n *    b) There is at least one printable character belonging to the\n *       \"white list\" (9 {TAB}, 10 {LF}, 13 {CR}, 32..255).\n * - BINARY otherwise.\n * - The following partially-portable control characters form a\n *   \"gray list\" that is ignored in this detection algorithm:\n *   (7 {BEL}, 8 {BS}, 11 {VT}, 12 {FF}, 26 {SUB}, 27 {ESC}).\n * IN assertion: the fields Freq of dyn_ltree are set.\n */\nfunction detect_data_type(s) {\n  /* black_mask is the bit mask of black-listed bytes\n   * set bits 0..6, 14..25, and 28..31\n   * 0xf3ffc07f = binary 11110011111111111100000001111111\n   */\n  var black_mask = 0xf3ffc07f;\n  var n;\n\n  /* Check for non-textual (\"black-listed\") bytes. */\n  for (n = 0; n <= 31; n++, black_mask >>>= 1) {\n    if ((black_mask & 1) && (s.dyn_ltree[n * 2]/*.Freq*/ !== 0)) {\n      return Z_BINARY;\n    }\n  }\n\n  /* Check for textual (\"white-listed\") bytes. */\n  if (s.dyn_ltree[9 * 2]/*.Freq*/ !== 0 || s.dyn_ltree[10 * 2]/*.Freq*/ !== 0 ||\n      s.dyn_ltree[13 * 2]/*.Freq*/ !== 0) {\n    return Z_TEXT;\n  }\n  for (n = 32; n < LITERALS; n++) {\n    if (s.dyn_ltree[n * 2]/*.Freq*/ !== 0) {\n      return Z_TEXT;\n    }\n  }\n\n  /* There are no \"black-listed\" or \"white-listed\" bytes:\n   * this stream either is empty or has tolerated (\"gray-listed\") bytes only.\n   */\n  return Z_BINARY;\n}\n\n\nvar static_init_done = false;\n\n/* ===========================================================================\n * Initialize the tree data structures for a new zlib stream.\n */\nfunction _tr_init(s)\n{\n\n  if (!static_init_done) {\n    tr_static_init();\n    static_init_done = true;\n  }\n\n  s.l_desc  = new TreeDesc(s.dyn_ltree, static_l_desc);\n  s.d_desc  = new TreeDesc(s.dyn_dtree, static_d_desc);\n  s.bl_desc = new TreeDesc(s.bl_tree, static_bl_desc);\n\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n\n  /* Initialize the first block of the first file: */\n  init_block(s);\n}\n\n\n/* ===========================================================================\n * Send a stored block\n */\nfunction _tr_stored_block(s, buf, stored_len, last)\n//DeflateState *s;\n//charf *buf;       /* input block */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n{\n  send_bits(s, (STORED_BLOCK << 1) + (last ? 1 : 0), 3);    /* send block type */\n  copy_block(s, buf, stored_len, true); /* with header */\n}\n\n\n/* ===========================================================================\n * Send one empty static block to give enough lookahead for inflate.\n * This takes 10 bits, of which 7 may remain in the bit buffer.\n */\nfunction _tr_align(s) {\n  send_bits(s, STATIC_TREES << 1, 3);\n  send_code(s, END_BLOCK, static_ltree);\n  bi_flush(s);\n}\n\n\n/* ===========================================================================\n * Determine the best encoding for the current block: dynamic trees, static\n * trees or store, and output the encoded block to the zip file.\n */\nfunction _tr_flush_block(s, buf, stored_len, last)\n//DeflateState *s;\n//charf *buf;       /* input block, or NULL if too old */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n{\n  var opt_lenb, static_lenb;  /* opt_len and static_len in bytes */\n  var max_blindex = 0;        /* index of last bit length code of non zero freq */\n\n  /* Build the Huffman trees unless a stored block is forced */\n  if (s.level > 0) {\n\n    /* Check if the file is binary or text */\n    if (s.strm.data_type === Z_UNKNOWN) {\n      s.strm.data_type = detect_data_type(s);\n    }\n\n    /* Construct the literal and distance trees */\n    build_tree(s, s.l_desc);\n    // Tracev((stderr, \"\\nlit data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n\n    build_tree(s, s.d_desc);\n    // Tracev((stderr, \"\\ndist data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n    /* At this point, opt_len and static_len are the total bit lengths of\n     * the compressed block data, excluding the tree representations.\n     */\n\n    /* Build the bit length tree for the above two trees, and get the index\n     * in bl_order of the last bit length code to send.\n     */\n    max_blindex = build_bl_tree(s);\n\n    /* Determine the best encoding. Compute the block lengths in bytes. */\n    opt_lenb = (s.opt_len + 3 + 7) >>> 3;\n    static_lenb = (s.static_len + 3 + 7) >>> 3;\n\n    // Tracev((stderr, \"\\nopt %lu(%lu) stat %lu(%lu) stored %lu lit %u \",\n    //        opt_lenb, s->opt_len, static_lenb, s->static_len, stored_len,\n    //        s->last_lit));\n\n    if (static_lenb <= opt_lenb) { opt_lenb = static_lenb; }\n\n  } else {\n    // Assert(buf != (char*)0, \"lost buf\");\n    opt_lenb = static_lenb = stored_len + 5; /* force a stored block */\n  }\n\n  if ((stored_len + 4 <= opt_lenb) && (buf !== -1)) {\n    /* 4: two words for the lengths */\n\n    /* The test buf != NULL is only necessary if LIT_BUFSIZE > WSIZE.\n     * Otherwise we can't have processed more than WSIZE input bytes since\n     * the last block flush, because compression would have been\n     * successful. If LIT_BUFSIZE <= WSIZE, it is never too late to\n     * transform a block into a stored block.\n     */\n    _tr_stored_block(s, buf, stored_len, last);\n\n  } else if (s.strategy === Z_FIXED || static_lenb === opt_lenb) {\n\n    send_bits(s, (STATIC_TREES << 1) + (last ? 1 : 0), 3);\n    compress_block(s, static_ltree, static_dtree);\n\n  } else {\n    send_bits(s, (DYN_TREES << 1) + (last ? 1 : 0), 3);\n    send_all_trees(s, s.l_desc.max_code + 1, s.d_desc.max_code + 1, max_blindex + 1);\n    compress_block(s, s.dyn_ltree, s.dyn_dtree);\n  }\n  // Assert (s->compressed_len == s->bits_sent, \"bad compressed size\");\n  /* The above check is made mod 2^32, for files larger than 512 MB\n   * and uLong implemented on 32 bits.\n   */\n  init_block(s);\n\n  if (last) {\n    bi_windup(s);\n  }\n  // Tracev((stderr,\"\\ncomprlen %lu(%lu) \", s->compressed_len>>3,\n  //       s->compressed_len-7*last));\n}\n\n/* ===========================================================================\n * Save the match info and tally the frequency counts. Return true if\n * the current block must be flushed.\n */\nfunction _tr_tally(s, dist, lc)\n//    deflate_state *s;\n//    unsigned dist;  /* distance of matched string */\n//    unsigned lc;    /* match length-MIN_MATCH or unmatched char (if dist==0) */\n{\n  //var out_length, in_length, dcode;\n\n  s.pending_buf[s.d_buf + s.last_lit * 2]     = (dist >>> 8) & 0xff;\n  s.pending_buf[s.d_buf + s.last_lit * 2 + 1] = dist & 0xff;\n\n  s.pending_buf[s.l_buf + s.last_lit] = lc & 0xff;\n  s.last_lit++;\n\n  if (dist === 0) {\n    /* lc is the unmatched char */\n    s.dyn_ltree[lc * 2]/*.Freq*/++;\n  } else {\n    s.matches++;\n    /* Here, lc is the match length - MIN_MATCH */\n    dist--;             /* dist = match distance - 1 */\n    //Assert((ush)dist < (ush)MAX_DIST(s) &&\n    //       (ush)lc <= (ush)(MAX_MATCH-MIN_MATCH) &&\n    //       (ush)d_code(dist) < (ush)D_CODES,  \"_tr_tally: bad match\");\n\n    s.dyn_ltree[(_length_code[lc] + LITERALS + 1) * 2]/*.Freq*/++;\n    s.dyn_dtree[d_code(dist) * 2]/*.Freq*/++;\n  }\n\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n\n//#ifdef TRUNCATE_BLOCK\n//  /* Try to guess if it is profitable to stop the current block here */\n//  if ((s.last_lit & 0x1fff) === 0 && s.level > 2) {\n//    /* Compute an upper bound for the compressed length */\n//    out_length = s.last_lit*8;\n//    in_length = s.strstart - s.block_start;\n//\n//    for (dcode = 0; dcode < D_CODES; dcode++) {\n//      out_length += s.dyn_dtree[dcode*2]/*.Freq*/ * (5 + extra_dbits[dcode]);\n//    }\n//    out_length >>>= 3;\n//    //Tracev((stderr,\"\\nlast_lit %u, in %ld, out ~%ld(%ld%%) \",\n//    //       s->last_lit, in_length, out_length,\n//    //       100L - out_length*100L/in_length));\n//    if (s.matches < (s.last_lit>>1)/*int /2*/ && out_length < (in_length>>1)/*int /2*/) {\n//      return true;\n//    }\n//  }\n//#endif\n\n  return (s.last_lit === s.lit_bufsize - 1);\n  /* We avoid equality with lit_bufsize because of wraparound at 64K\n   * on 16 bit machines and because stored blocks are restricted to\n   * 64K-1 bytes.\n   */\n}\n\nexports._tr_init  = _tr_init;\nexports._tr_stored_block = _tr_stored_block;\nexports._tr_flush_block  = _tr_flush_block;\nexports._tr_tally = _tr_tally;\nexports._tr_align = _tr_align;\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction ZStream() {\n  /* next input byte */\n  this.input = null; // JS specific, because we have no pointers\n  this.next_in = 0;\n  /* number of bytes available at input */\n  this.avail_in = 0;\n  /* total number of input bytes read so far */\n  this.total_in = 0;\n  /* next output byte should be put there */\n  this.output = null; // JS specific, because we have no pointers\n  this.next_out = 0;\n  /* remaining free space at output */\n  this.avail_out = 0;\n  /* total number of bytes output so far */\n  this.total_out = 0;\n  /* last error message, NULL if no error */\n  this.msg = ''/*Z_NULL*/;\n  /* not visible by applications */\n  this.state = null;\n  /* best guess about the data type: binary or text */\n  this.data_type = 2/*Z_UNKNOWN*/;\n  /* adler32 value of the uncompressed data */\n  this.adler = 0;\n}\n\nmodule.exports = ZStream;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\n/**\n * A data structure which is a combination of an array and a set. Adding a new\n * member is O(1), testing for membership is O(1), and finding the index of an\n * element is O(1). Removing elements from the set is not supported. Only\n * strings are supported for membership.\n */\nclass ArraySet {\n  constructor() {\n    this._array = [];\n    this._set = new Map();\n  }\n\n  /**\n   * Static method for creating ArraySet instances from an existing array.\n   */\n  static fromArray(aArray, aAllowDuplicates) {\n    const set = new ArraySet();\n    for (let i = 0, len = aArray.length; i < len; i++) {\n      set.add(aArray[i], aAllowDuplicates);\n    }\n    return set;\n  }\n\n  /**\n   * Return how many unique items are in this ArraySet. If duplicates have been\n   * added, than those do not count towards the size.\n   *\n   * @returns Number\n   */\n  size() {\n    return this._set.size;\n  }\n\n  /**\n   * Add the given string to this set.\n   *\n   * @param String aStr\n   */\n  add(aStr, aAllowDuplicates) {\n    const isDuplicate = this.has(aStr);\n    const idx = this._array.length;\n    if (!isDuplicate || aAllowDuplicates) {\n      this._array.push(aStr);\n    }\n    if (!isDuplicate) {\n      this._set.set(aStr, idx);\n    }\n  }\n\n  /**\n   * Is the given string a member of this set?\n   *\n   * @param String aStr\n   */\n  has(aStr) {\n      return this._set.has(aStr);\n  }\n\n  /**\n   * What is the index of the given string in the array?\n   *\n   * @param String aStr\n   */\n  indexOf(aStr) {\n    const idx = this._set.get(aStr);\n    if (idx >= 0) {\n        return idx;\n    }\n    throw new Error('\"' + aStr + '\" is not in the set.');\n  }\n\n  /**\n   * What is the element at the given index?\n   *\n   * @param Number aIdx\n   */\n  at(aIdx) {\n    if (aIdx >= 0 && aIdx < this._array.length) {\n      return this._array[aIdx];\n    }\n    throw new Error(\"No element indexed by \" + aIdx);\n  }\n\n  /**\n   * Returns the array representation of this set (which has the proper indices\n   * indicated by indexOf). Note that this is a copy of the internal array used\n   * for storing the members so that no one can mess with internal state.\n   */\n  toArray() {\n    return this._array.slice();\n  }\n}\nexports.ArraySet = ArraySet;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n *\n * Based on the Base 64 VLQ implementation in Closure Compiler:\n * https://code.google.com/p/closure-compiler/source/browse/trunk/src/com/google/debugging/sourcemap/Base64VLQ.java\n *\n * Copyright 2011 The Closure Compiler Authors. All rights reserved.\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *  * Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above\n *    copyright notice, this list of conditions and the following\n *    disclaimer in the documentation and/or other materials provided\n *    with the distribution.\n *  * Neither the name of Google Inc. nor the names of its\n *    contributors may be used to endorse or promote products derived\n *    from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nconst base64 = require(\"./base64\");\n\n// A single base 64 digit can contain 6 bits of data. For the base 64 variable\n// length quantities we use in the source map spec, the first bit is the sign,\n// the next four bits are the actual value, and the 6th bit is the\n// continuation bit. The continuation bit tells us whether there are more\n// digits in this value following this digit.\n//\n//   Continuation\n//   |    Sign\n//   |    |\n//   V    V\n//   101011\n\nconst VLQ_BASE_SHIFT = 5;\n\n// binary: 100000\nconst VLQ_BASE = 1 << VLQ_BASE_SHIFT;\n\n// binary: 011111\nconst VLQ_BASE_MASK = VLQ_BASE - 1;\n\n// binary: 100000\nconst VLQ_CONTINUATION_BIT = VLQ_BASE;\n\n/**\n * Converts from a two-complement value to a value where the sign bit is\n * placed in the least significant bit.  For example, as decimals:\n *   1 becomes 2 (10 binary), -1 becomes 3 (11 binary)\n *   2 becomes 4 (100 binary), -2 becomes 5 (101 binary)\n */\nfunction toVLQSigned(aValue) {\n  return aValue < 0\n    ? ((-aValue) << 1) + 1\n    : (aValue << 1) + 0;\n}\n\n/**\n * Converts to a two-complement value from a value where the sign bit is\n * placed in the least significant bit.  For example, as decimals:\n *   2 (10 binary) becomes 1, 3 (11 binary) becomes -1\n *   4 (100 binary) becomes 2, 5 (101 binary) becomes -2\n */\n// eslint-disable-next-line no-unused-vars\nfunction fromVLQSigned(aValue) {\n  const isNegative = (aValue & 1) === 1;\n  const shifted = aValue >> 1;\n  return isNegative\n    ? -shifted\n    : shifted;\n}\n\n/**\n * Returns the base 64 VLQ encoded value.\n */\nexports.encode = function base64VLQ_encode(aValue) {\n  let encoded = \"\";\n  let digit;\n\n  let vlq = toVLQSigned(aValue);\n\n  do {\n    digit = vlq & VLQ_BASE_MASK;\n    vlq >>>= VLQ_BASE_SHIFT;\n    if (vlq > 0) {\n      // There are still more digits in this value, so we must make sure the\n      // continuation bit is marked.\n      digit |= VLQ_CONTINUATION_BIT;\n    }\n    encoded += base64.encode(digit);\n  } while (vlq > 0);\n\n  return encoded;\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nconst intToCharMap = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\".split(\"\");\n\n/**\n * Encode an integer in the range of 0 to 63 to a single base 64 digit.\n */\nexports.encode = function(number) {\n  if (0 <= number && number < intToCharMap.length) {\n    return intToCharMap[number];\n  }\n  throw new TypeError(\"Must be between 0 and 63: \" + number);\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nexports.GREATEST_LOWER_BOUND = 1;\nexports.LEAST_UPPER_BOUND = 2;\n\n/**\n * Recursive implementation of binary search.\n *\n * @param aLow Indices here and lower do not contain the needle.\n * @param aHigh Indices here and higher do not contain the needle.\n * @param aNeedle The element being searched for.\n * @param aHaystack The non-empty array being searched.\n * @param aCompare Function which takes two elements and returns -1, 0, or 1.\n * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or\n *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n */\nfunction recursiveSearch(aLow, aHigh, aNeedle, aHaystack, aCompare, aBias) {\n  // This function terminates when one of the following is true:\n  //\n  //   1. We find the exact element we are looking for.\n  //\n  //   2. We did not find the exact element, but we can return the index of\n  //      the next-closest element.\n  //\n  //   3. We did not find the exact element, and there is no next-closest\n  //      element than the one we are searching for, so we return -1.\n  const mid = Math.floor((aHigh - aLow) / 2) + aLow;\n  const cmp = aCompare(aNeedle, aHaystack[mid], true);\n  if (cmp === 0) {\n    // Found the element we are looking for.\n    return mid;\n  } else if (cmp > 0) {\n    // Our needle is greater than aHaystack[mid].\n    if (aHigh - mid > 1) {\n      // The element is in the upper half.\n      return recursiveSearch(mid, aHigh, aNeedle, aHaystack, aCompare, aBias);\n    }\n\n    // The exact needle element was not found in this haystack. Determine if\n    // we are in termination case (3) or (2) and return the appropriate thing.\n    if (aBias == exports.LEAST_UPPER_BOUND) {\n      return aHigh < aHaystack.length ? aHigh : -1;\n    }\n    return mid;\n  }\n\n  // Our needle is less than aHaystack[mid].\n  if (mid - aLow > 1) {\n    // The element is in the lower half.\n    return recursiveSearch(aLow, mid, aNeedle, aHaystack, aCompare, aBias);\n  }\n\n  // we are in termination case (3) or (2) and return the appropriate thing.\n  if (aBias == exports.LEAST_UPPER_BOUND) {\n    return mid;\n  }\n  return aLow < 0 ? -1 : aLow;\n}\n\n/**\n * This is an implementation of binary search which will always try and return\n * the index of the closest element if there is no exact hit. This is because\n * mappings between original and generated line/col pairs are single points,\n * and there is an implicit region between each of them, so a miss just means\n * that you aren't on the very start of a region.\n *\n * @param aNeedle The element you are looking for.\n * @param aHaystack The array that is being searched.\n * @param aCompare A function which takes the needle and an element in the\n *     array and returns -1, 0, or 1 depending on whether the needle is less\n *     than, equal to, or greater than the element, respectively.\n * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or\n *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'binarySearch.GREATEST_LOWER_BOUND'.\n */\nexports.search = function search(aNeedle, aHaystack, aCompare, aBias) {\n  if (aHaystack.length === 0) {\n    return -1;\n  }\n\n  let index = recursiveSearch(-1, aHaystack.length, aNeedle, aHaystack,\n                              aCompare, aBias || exports.GREATEST_LOWER_BOUND);\n  if (index < 0) {\n    return -1;\n  }\n\n  // We have found either the exact element, or the next-closest element than\n  // the one we are searching for. However, there may be more than one such\n  // element. Make sure we always return the smallest of these.\n  while (index - 1 >= 0) {\n    if (aCompare(aHaystack[index], aHaystack[index - 1], true) !== 0) {\n      break;\n    }\n    --index;\n  }\n\n  return index;\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2014 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nconst util = require(\"./util\");\n\n/**\n * Determine whether mappingB is after mappingA with respect to generated\n * position.\n */\nfunction generatedPositionAfter(mappingA, mappingB) {\n  // Optimized for most common case\n  const lineA = mappingA.generatedLine;\n  const lineB = mappingB.generatedLine;\n  const columnA = mappingA.generatedColumn;\n  const columnB = mappingB.generatedColumn;\n  return lineB > lineA || lineB == lineA && columnB >= columnA ||\n         util.compareByGeneratedPositionsInflated(mappingA, mappingB) <= 0;\n}\n\n/**\n * A data structure to provide a sorted view of accumulated mappings in a\n * performance conscious manner. It trades a negligible overhead in general\n * case for a large speedup in case of mappings being added in order.\n */\nclass MappingList {\n  constructor() {\n    this._array = [];\n    this._sorted = true;\n    // Serves as infimum\n    this._last = {generatedLine: -1, generatedColumn: 0};\n  }\n\n  /**\n   * Iterate through internal items. This method takes the same arguments that\n   * `Array.prototype.forEach` takes.\n   *\n   * NOTE: The order of the mappings is NOT guaranteed.\n   */\n  unsortedForEach(aCallback, aThisArg) {\n    this._array.forEach(aCallback, aThisArg);\n  }\n\n  /**\n   * Add the given source mapping.\n   *\n   * @param Object aMapping\n   */\n  add(aMapping) {\n    if (generatedPositionAfter(this._last, aMapping)) {\n      this._last = aMapping;\n      this._array.push(aMapping);\n    } else {\n      this._sorted = false;\n      this._array.push(aMapping);\n    }\n  }\n\n  /**\n   * Returns the flat, sorted array of mappings. The mappings are sorted by\n   * generated position.\n   *\n   * WARNING: This method returns internal data without copying, for\n   * performance. The return value must NOT be mutated, and should be treated as\n   * an immutable borrow. If you want to take ownership, you must make your own\n   * copy.\n   */\n  toArray() {\n    if (!this._sorted) {\n      this._array.sort(util.compareByGeneratedPositionsInflated);\n      this._sorted = true;\n    }\n    return this._array;\n  }\n}\n\nexports.MappingList = MappingList;\n","if (typeof fetch === \"function\") {\n  // Web version of reading a wasm file into an array buffer.\n\n  let mappingsWasmUrl = null;\n\n  module.exports = function readWasm() {\n    if (typeof mappingsWasmUrl !== \"string\") {\n      throw new Error(\"You must provide the URL of lib/mappings.wasm by calling \" +\n                      \"SourceMapConsumer.initialize({ 'lib/mappings.wasm': ... }) \" +\n                      \"before using SourceMapConsumer\");\n    }\n\n    return fetch(mappingsWasmUrl)\n      .then(response => response.arrayBuffer());\n  };\n\n  module.exports.initialize = url => mappingsWasmUrl = url;\n} else {\n  // Node version of reading a wasm file into an array buffer.\n  const fs = require(\"fs\");\n  const path = require(\"path\");\n\n  module.exports = function readWasm() {\n    return new Promise((resolve, reject) => {\n      const wasmPath = path.join(__dirname, \"mappings.wasm\");\n      fs.readFile(wasmPath, null, (error, data) => {\n        if (error) {\n          reject(error);\n          return;\n        }\n\n        resolve(data.buffer);\n      });\n    });\n  };\n\n  module.exports.initialize = _ => {\n    console.debug(\"SourceMapConsumer.initialize is a no-op when running in node.js\");\n  };\n}\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nconst util = require(\"./util\");\nconst binarySearch = require(\"./binary-search\");\nconst ArraySet = require(\"./array-set\").ArraySet;\nconst base64VLQ = require(\"./base64-vlq\"); // eslint-disable-line no-unused-vars\nconst readWasm = require(\"../lib/read-wasm\");\nconst wasm = require(\"./wasm\");\n\nconst INTERNAL = Symbol(\"smcInternal\");\n\nclass SourceMapConsumer {\n  constructor(aSourceMap, aSourceMapURL) {\n    // If the constructor was called by super(), just return Promise<this>.\n    // Yes, this is a hack to retain the pre-existing API of the base-class\n    // constructor also being an async factory function.\n    if (aSourceMap == INTERNAL) {\n      return Promise.resolve(this);\n    }\n\n    return _factory(aSourceMap, aSourceMapURL);\n  }\n\n  static initialize(opts) {\n    readWasm.initialize(opts[\"lib/mappings.wasm\"]);\n  }\n\n  static fromSourceMap(aSourceMap, aSourceMapURL) {\n    return _factoryBSM(aSourceMap, aSourceMapURL);\n  }\n\n  /**\n   * Construct a new `SourceMapConsumer` from `rawSourceMap` and `sourceMapUrl`\n   * (see the `SourceMapConsumer` constructor for details. Then, invoke the `async\n   * function f(SourceMapConsumer) -> T` with the newly constructed consumer, wait\n   * for `f` to complete, call `destroy` on the consumer, and return `f`'s return\n   * value.\n   *\n   * You must not use the consumer after `f` completes!\n   *\n   * By using `with`, you do not have to remember to manually call `destroy` on\n   * the consumer, since it will be called automatically once `f` completes.\n   *\n   * ```js\n   * const xSquared = await SourceMapConsumer.with(\n   *   myRawSourceMap,\n   *   null,\n   *   async function (consumer) {\n   *     // Use `consumer` inside here and don't worry about remembering\n   *     // to call `destroy`.\n   *\n   *     const x = await whatever(consumer);\n   *     return x * x;\n   *   }\n   * );\n   *\n   * // You may not use that `consumer` anymore out here; it has\n   * // been destroyed. But you can use `xSquared`.\n   * console.log(xSquared);\n   * ```\n   */\n  static with(rawSourceMap, sourceMapUrl, f) {\n    // Note: The `acorn` version that `webpack` currently depends on doesn't\n    // support `async` functions, and the nodes that we support don't all have\n    // `.finally`. Therefore, this is written a bit more convolutedly than it\n    // should really be.\n\n    let consumer = null;\n    const promise = new SourceMapConsumer(rawSourceMap, sourceMapUrl);\n    return promise\n      .then(c => {\n        consumer = c;\n        return f(c);\n      })\n      .then(x => {\n        if (consumer) {\n          consumer.destroy();\n        }\n        return x;\n      }, e => {\n        if (consumer) {\n          consumer.destroy();\n        }\n        throw e;\n      });\n  }\n\n  /**\n   * Parse the mappings in a string in to a data structure which we can easily\n   * query (the ordered arrays in the `this.__generatedMappings` and\n   * `this.__originalMappings` properties).\n   */\n  _parseMappings(aStr, aSourceRoot) {\n    throw new Error(\"Subclasses must implement _parseMappings\");\n  }\n\n  /**\n   * Iterate over each mapping between an original source/line/column and a\n   * generated line/column in this source map.\n   *\n   * @param Function aCallback\n   *        The function that is called with each mapping.\n   * @param Object aContext\n   *        Optional. If specified, this object will be the value of `this` every\n   *        time that `aCallback` is called.\n   * @param aOrder\n   *        Either `SourceMapConsumer.GENERATED_ORDER` or\n   *        `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to\n   *        iterate over the mappings sorted by the generated file's line/column\n   *        order or the original's source/line/column order, respectively. Defaults to\n   *        `SourceMapConsumer.GENERATED_ORDER`.\n   */\n  eachMapping(aCallback, aContext, aOrder) {\n    throw new Error(\"Subclasses must implement eachMapping\");\n  }\n\n  /**\n   * Returns all generated line and column information for the original source,\n   * line, and column provided. If no column is provided, returns all mappings\n   * corresponding to a either the line we are searching for or the next\n   * closest line that has any mappings. Otherwise, returns all mappings\n   * corresponding to the given line and either the column we are searching for\n   * or the next closest column that has any offsets.\n   *\n   * The only argument is an object with the following properties:\n   *\n   *   - source: The filename of the original source.\n   *   - line: The line number in the original source.  The line number is 1-based.\n   *   - column: Optional. the column number in the original source.\n   *    The column number is 0-based.\n   *\n   * and an array of objects is returned, each with the following properties:\n   *\n   *   - line: The line number in the generated source, or null.  The\n   *    line number is 1-based.\n   *   - column: The column number in the generated source, or null.\n   *    The column number is 0-based.\n   */\n  allGeneratedPositionsFor(aArgs) {\n    throw new Error(\"Subclasses must implement allGeneratedPositionsFor\");\n  }\n\n  destroy() {\n    throw new Error(\"Subclasses must implement destroy\");\n  }\n}\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nSourceMapConsumer.prototype._version = 3;\nSourceMapConsumer.GENERATED_ORDER = 1;\nSourceMapConsumer.ORIGINAL_ORDER = 2;\n\nSourceMapConsumer.GREATEST_LOWER_BOUND = 1;\nSourceMapConsumer.LEAST_UPPER_BOUND = 2;\n\nexports.SourceMapConsumer = SourceMapConsumer;\n\n/**\n * A BasicSourceMapConsumer instance represents a parsed source map which we can\n * query for information about the original file positions by giving it a file\n * position in the generated source.\n *\n * The first parameter is the raw source map (either as a JSON string, or\n * already parsed to an object). According to the spec, source maps have the\n * following attributes:\n *\n *   - version: Which version of the source map spec this map is following.\n *   - sources: An array of URLs to the original source files.\n *   - names: An array of identifiers which can be referenced by individual mappings.\n *   - sourceRoot: Optional. The URL root from which all sources are relative.\n *   - sourcesContent: Optional. An array of contents of the original source files.\n *   - mappings: A string of base64 VLQs which contain the actual mappings.\n *   - file: Optional. The generated file this source map is associated with.\n *\n * Here is an example source map, taken from the source map spec[0]:\n *\n *     {\n *       version : 3,\n *       file: \"out.js\",\n *       sourceRoot : \"\",\n *       sources: [\"foo.js\", \"bar.js\"],\n *       names: [\"src\", \"maps\", \"are\", \"fun\"],\n *       mappings: \"AA,AB;;ABCDE;\"\n *     }\n *\n * The second parameter, if given, is a string whose value is the URL\n * at which the source map was found.  This URL is used to compute the\n * sources array.\n *\n * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit?pli=1#\n */\nclass BasicSourceMapConsumer extends SourceMapConsumer {\n  constructor(aSourceMap, aSourceMapURL) {\n    return super(INTERNAL).then(that => {\n      let sourceMap = aSourceMap;\n      if (typeof aSourceMap === \"string\") {\n        sourceMap = util.parseSourceMapInput(aSourceMap);\n      }\n\n      const version = util.getArg(sourceMap, \"version\");\n      let sources = util.getArg(sourceMap, \"sources\");\n      // Sass 3.3 leaves out the 'names' array, so we deviate from the spec (which\n      // requires the array) to play nice here.\n      const names = util.getArg(sourceMap, \"names\", []);\n      let sourceRoot = util.getArg(sourceMap, \"sourceRoot\", null);\n      const sourcesContent = util.getArg(sourceMap, \"sourcesContent\", null);\n      const mappings = util.getArg(sourceMap, \"mappings\");\n      const file = util.getArg(sourceMap, \"file\", null);\n\n      // Once again, Sass deviates from the spec and supplies the version as a\n      // string rather than a number, so we use loose equality checking here.\n      if (version != that._version) {\n        throw new Error(\"Unsupported version: \" + version);\n      }\n\n      if (sourceRoot) {\n        sourceRoot = util.normalize(sourceRoot);\n      }\n\n      sources = sources\n        .map(String)\n        // Some source maps produce relative source paths like \"./foo.js\" instead of\n        // \"foo.js\".  Normalize these first so that future comparisons will succeed.\n        // See bugzil.la/1090768.\n        .map(util.normalize)\n        // Always ensure that absolute sources are internally stored relative to\n        // the source root, if the source root is absolute. Not doing this would\n        // be particularly problematic when the source root is a prefix of the\n        // source (valid, but why??). See github issue #199 and bugzil.la/1188982.\n        .map(function(source) {\n          return sourceRoot && util.isAbsolute(sourceRoot) && util.isAbsolute(source)\n            ? util.relative(sourceRoot, source)\n            : source;\n        });\n\n      // Pass `true` below to allow duplicate names and sources. While source maps\n      // are intended to be compressed and deduplicated, the TypeScript compiler\n      // sometimes generates source maps with duplicates in them. See Github issue\n      // #72 and bugzil.la/889492.\n      that._names = ArraySet.fromArray(names.map(String), true);\n      that._sources = ArraySet.fromArray(sources, true);\n\n      that._absoluteSources = that._sources.toArray().map(function(s) {\n        return util.computeSourceURL(sourceRoot, s, aSourceMapURL);\n      });\n\n      that.sourceRoot = sourceRoot;\n      that.sourcesContent = sourcesContent;\n      that._mappings = mappings;\n      that._sourceMapURL = aSourceMapURL;\n      that.file = file;\n\n      that._computedColumnSpans = false;\n      that._mappingsPtr = 0;\n      that._wasm = null;\n\n      return wasm().then(w => {\n        that._wasm = w;\n        return that;\n      });\n    });\n  }\n\n  /**\n   * Utility function to find the index of a source.  Returns -1 if not\n   * found.\n   */\n  _findSourceIndex(aSource) {\n    let relativeSource = aSource;\n    if (this.sourceRoot != null) {\n      relativeSource = util.relative(this.sourceRoot, relativeSource);\n    }\n\n    if (this._sources.has(relativeSource)) {\n      return this._sources.indexOf(relativeSource);\n    }\n\n    // Maybe aSource is an absolute URL as returned by |sources|.  In\n    // this case we can't simply undo the transform.\n    for (let i = 0; i < this._absoluteSources.length; ++i) {\n      if (this._absoluteSources[i] == aSource) {\n        return i;\n      }\n    }\n\n    return -1;\n  }\n\n  /**\n   * Create a BasicSourceMapConsumer from a SourceMapGenerator.\n   *\n   * @param SourceMapGenerator aSourceMap\n   *        The source map that will be consumed.\n   * @param String aSourceMapURL\n   *        The URL at which the source map can be found (optional)\n   * @returns BasicSourceMapConsumer\n   */\n  static fromSourceMap(aSourceMap, aSourceMapURL) {\n    return new BasicSourceMapConsumer(aSourceMap.toString());\n  }\n\n  get sources() {\n    return this._absoluteSources.slice();\n  }\n\n  _getMappingsPtr() {\n    if (this._mappingsPtr === 0) {\n      this._parseMappings(this._mappings, this.sourceRoot);\n    }\n\n    return this._mappingsPtr;\n  }\n\n  /**\n   * Parse the mappings in a string in to a data structure which we can easily\n   * query (the ordered arrays in the `this.__generatedMappings` and\n   * `this.__originalMappings` properties).\n   */\n  _parseMappings(aStr, aSourceRoot) {\n    const size = aStr.length;\n\n    const mappingsBufPtr = this._wasm.exports.allocate_mappings(size);\n    const mappingsBuf = new Uint8Array(this._wasm.exports.memory.buffer, mappingsBufPtr, size);\n    for (let i = 0; i < size; i++) {\n      mappingsBuf[i] = aStr.charCodeAt(i);\n    }\n\n    const mappingsPtr = this._wasm.exports.parse_mappings(mappingsBufPtr);\n\n    if (!mappingsPtr) {\n      const error = this._wasm.exports.get_last_error();\n      let msg = `Error parsing mappings (code ${error}): `;\n\n      // XXX: keep these error codes in sync with `fitzgen/source-map-mappings`.\n      switch (error) {\n        case 1:\n          msg += \"the mappings contained a negative line, column, source index, or name index\";\n          break;\n        case 2:\n          msg += \"the mappings contained a number larger than 2**32\";\n          break;\n        case 3:\n          msg += \"reached EOF while in the middle of parsing a VLQ\";\n          break;\n        case 4:\n          msg += \"invalid base 64 character while parsing a VLQ\";\n          break;\n        default:\n          msg += \"unknown error code\";\n          break;\n      }\n\n      throw new Error(msg);\n    }\n\n    this._mappingsPtr = mappingsPtr;\n  }\n\n  eachMapping(aCallback, aContext, aOrder) {\n    const context = aContext || null;\n    const order = aOrder || SourceMapConsumer.GENERATED_ORDER;\n    const sourceRoot = this.sourceRoot;\n\n    this._wasm.withMappingCallback(\n      mapping => {\n        if (mapping.source !== null) {\n          mapping.source = this._sources.at(mapping.source);\n          mapping.source = util.computeSourceURL(sourceRoot, mapping.source, this._sourceMapURL);\n\n          if (mapping.name !== null) {\n            mapping.name = this._names.at(mapping.name);\n          }\n        }\n\n        aCallback.call(context, mapping);\n      },\n      () => {\n        switch (order) {\n        case SourceMapConsumer.GENERATED_ORDER:\n          this._wasm.exports.by_generated_location(this._getMappingsPtr());\n          break;\n        case SourceMapConsumer.ORIGINAL_ORDER:\n          this._wasm.exports.by_original_location(this._getMappingsPtr());\n          break;\n        default:\n          throw new Error(\"Unknown order of iteration.\");\n        }\n      }\n    );\n  }\n\n  allGeneratedPositionsFor(aArgs) {\n    let source = util.getArg(aArgs, \"source\");\n    const originalLine = util.getArg(aArgs, \"line\");\n    const originalColumn = aArgs.column || 0;\n\n    source = this._findSourceIndex(source);\n    if (source < 0) {\n      return [];\n    }\n\n    if (originalLine < 1) {\n      throw new Error(\"Line numbers must be >= 1\");\n    }\n\n    if (originalColumn < 0) {\n      throw new Error(\"Column numbers must be >= 0\");\n    }\n\n    const mappings = [];\n\n    this._wasm.withMappingCallback(\n      m => {\n        let lastColumn = m.lastGeneratedColumn;\n        if (this._computedColumnSpans && lastColumn === null) {\n          lastColumn = Infinity;\n        }\n        mappings.push({\n          line: m.generatedLine,\n          column: m.generatedColumn,\n          lastColumn,\n        });\n      }, () => {\n        this._wasm.exports.all_generated_locations_for(\n          this._getMappingsPtr(),\n          source,\n          originalLine - 1,\n          \"column\" in aArgs,\n          originalColumn\n        );\n      }\n    );\n\n    return mappings;\n  }\n\n  destroy() {\n    if (this._mappingsPtr !== 0) {\n      this._wasm.exports.free_mappings(this._mappingsPtr);\n      this._mappingsPtr = 0;\n    }\n  }\n\n  /**\n   * Compute the last column for each generated mapping. The last column is\n   * inclusive.\n   */\n  computeColumnSpans() {\n    if (this._computedColumnSpans) {\n      return;\n    }\n\n    this._wasm.exports.compute_column_spans(this._getMappingsPtr());\n    this._computedColumnSpans = true;\n  }\n\n  /**\n   * Returns the original source, line, and column information for the generated\n   * source's line and column positions provided. The only argument is an object\n   * with the following properties:\n   *\n   *   - line: The line number in the generated source.  The line number\n   *     is 1-based.\n   *   - column: The column number in the generated source.  The column\n   *     number is 0-based.\n   *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or\n   *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the\n   *     closest element that is smaller than or greater than the one we are\n   *     searching for, respectively, if the exact element cannot be found.\n   *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.\n   *\n   * and an object is returned with the following properties:\n   *\n   *   - source: The original source file, or null.\n   *   - line: The line number in the original source, or null.  The\n   *     line number is 1-based.\n   *   - column: The column number in the original source, or null.  The\n   *     column number is 0-based.\n   *   - name: The original identifier, or null.\n   */\n  originalPositionFor(aArgs) {\n    const needle = {\n      generatedLine: util.getArg(aArgs, \"line\"),\n      generatedColumn: util.getArg(aArgs, \"column\")\n    };\n\n    if (needle.generatedLine < 1) {\n      throw new Error(\"Line numbers must be >= 1\");\n    }\n\n    if (needle.generatedColumn < 0) {\n      throw new Error(\"Column numbers must be >= 0\");\n    }\n\n    let bias = util.getArg(aArgs, \"bias\", SourceMapConsumer.GREATEST_LOWER_BOUND);\n    if (bias == null) {\n      bias = SourceMapConsumer.GREATEST_LOWER_BOUND;\n    }\n\n    let mapping;\n    this._wasm.withMappingCallback(m => mapping = m, () => {\n      this._wasm.exports.original_location_for(\n        this._getMappingsPtr(),\n        needle.generatedLine - 1,\n        needle.generatedColumn,\n        bias\n      );\n    });\n\n    if (mapping) {\n      if (mapping.generatedLine === needle.generatedLine) {\n        let source = util.getArg(mapping, \"source\", null);\n        if (source !== null) {\n          source = this._sources.at(source);\n          source = util.computeSourceURL(this.sourceRoot, source, this._sourceMapURL);\n        }\n\n        let name = util.getArg(mapping, \"name\", null);\n        if (name !== null) {\n          name = this._names.at(name);\n        }\n\n        return {\n          source,\n          line: util.getArg(mapping, \"originalLine\", null),\n          column: util.getArg(mapping, \"originalColumn\", null),\n          name\n        };\n      }\n    }\n\n    return {\n      source: null,\n      line: null,\n      column: null,\n      name: null\n    };\n  }\n\n  /**\n   * Return true if we have the source content for every source in the source\n   * map, false otherwise.\n   */\n  hasContentsOfAllSources() {\n    if (!this.sourcesContent) {\n      return false;\n    }\n    return this.sourcesContent.length >= this._sources.size() &&\n      !this.sourcesContent.some(function(sc) { return sc == null; });\n  }\n\n  /**\n   * Returns the original source content. The only argument is the url of the\n   * original source file. Returns null if no original source content is\n   * available.\n   */\n  sourceContentFor(aSource, nullOnMissing) {\n    if (!this.sourcesContent) {\n      return null;\n    }\n\n    const index = this._findSourceIndex(aSource);\n    if (index >= 0) {\n      return this.sourcesContent[index];\n    }\n\n    let relativeSource = aSource;\n    if (this.sourceRoot != null) {\n      relativeSource = util.relative(this.sourceRoot, relativeSource);\n    }\n\n    let url;\n    if (this.sourceRoot != null\n        && (url = util.urlParse(this.sourceRoot))) {\n      // XXX: file:// URIs and absolute paths lead to unexpected behavior for\n      // many users. We can help them out when they expect file:// URIs to\n      // behave like it would if they were running a local HTTP server. See\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=885597.\n      const fileUriAbsPath = relativeSource.replace(/^file:\\/\\//, \"\");\n      if (url.scheme == \"file\"\n          && this._sources.has(fileUriAbsPath)) {\n        return this.sourcesContent[this._sources.indexOf(fileUriAbsPath)];\n      }\n\n      if ((!url.path || url.path == \"/\")\n          && this._sources.has(\"/\" + relativeSource)) {\n        return this.sourcesContent[this._sources.indexOf(\"/\" + relativeSource)];\n      }\n    }\n\n    // This function is used recursively from\n    // IndexedSourceMapConsumer.prototype.sourceContentFor. In that case, we\n    // don't want to throw if we can't find the source - we just want to\n    // return null, so we provide a flag to exit gracefully.\n    if (nullOnMissing) {\n      return null;\n    }\n\n    throw new Error('\"' + relativeSource + '\" is not in the SourceMap.');\n  }\n\n  /**\n   * Returns the generated line and column information for the original source,\n   * line, and column positions provided. The only argument is an object with\n   * the following properties:\n   *\n   *   - source: The filename of the original source.\n   *   - line: The line number in the original source.  The line number\n   *     is 1-based.\n   *   - column: The column number in the original source.  The column\n   *     number is 0-based.\n   *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or\n   *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the\n   *     closest element that is smaller than or greater than the one we are\n   *     searching for, respectively, if the exact element cannot be found.\n   *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.\n   *\n   * and an object is returned with the following properties:\n   *\n   *   - line: The line number in the generated source, or null.  The\n   *     line number is 1-based.\n   *   - column: The column number in the generated source, or null.\n   *     The column number is 0-based.\n   */\n  generatedPositionFor(aArgs) {\n    let source = util.getArg(aArgs, \"source\");\n    source = this._findSourceIndex(source);\n    if (source < 0) {\n      return {\n        line: null,\n        column: null,\n        lastColumn: null\n      };\n    }\n\n    const needle = {\n      source,\n      originalLine: util.getArg(aArgs, \"line\"),\n      originalColumn: util.getArg(aArgs, \"column\")\n    };\n\n    if (needle.originalLine < 1) {\n      throw new Error(\"Line numbers must be >= 1\");\n    }\n\n    if (needle.originalColumn < 0) {\n      throw new Error(\"Column numbers must be >= 0\");\n    }\n\n    let bias = util.getArg(aArgs, \"bias\", SourceMapConsumer.GREATEST_LOWER_BOUND);\n    if (bias == null) {\n      bias = SourceMapConsumer.GREATEST_LOWER_BOUND;\n    }\n\n    let mapping;\n    this._wasm.withMappingCallback(m => mapping = m, () => {\n      this._wasm.exports.generated_location_for(\n        this._getMappingsPtr(),\n        needle.source,\n        needle.originalLine - 1,\n        needle.originalColumn,\n        bias\n      );\n    });\n\n    if (mapping) {\n      if (mapping.source === needle.source) {\n        let lastColumn = mapping.lastGeneratedColumn;\n        if (this._computedColumnSpans && lastColumn === null) {\n          lastColumn = Infinity;\n        }\n        return {\n          line: util.getArg(mapping, \"generatedLine\", null),\n          column: util.getArg(mapping, \"generatedColumn\", null),\n          lastColumn,\n        };\n      }\n    }\n\n    return {\n      line: null,\n      column: null,\n      lastColumn: null\n    };\n  }\n}\n\nBasicSourceMapConsumer.prototype.consumer = SourceMapConsumer;\nexports.BasicSourceMapConsumer = BasicSourceMapConsumer;\n\n/**\n * An IndexedSourceMapConsumer instance represents a parsed source map which\n * we can query for information. It differs from BasicSourceMapConsumer in\n * that it takes \"indexed\" source maps (i.e. ones with a \"sections\" field) as\n * input.\n *\n * The first parameter is a raw source map (either as a JSON string, or already\n * parsed to an object). According to the spec for indexed source maps, they\n * have the following attributes:\n *\n *   - version: Which version of the source map spec this map is following.\n *   - file: Optional. The generated file this source map is associated with.\n *   - sections: A list of section definitions.\n *\n * Each value under the \"sections\" field has two fields:\n *   - offset: The offset into the original specified at which this section\n *       begins to apply, defined as an object with a \"line\" and \"column\"\n *       field.\n *   - map: A source map definition. This source map could also be indexed,\n *       but doesn't have to be.\n *\n * Instead of the \"map\" field, it's also possible to have a \"url\" field\n * specifying a URL to retrieve a source map from, but that's currently\n * unsupported.\n *\n * Here's an example source map, taken from the source map spec[0], but\n * modified to omit a section which uses the \"url\" field.\n *\n *  {\n *    version : 3,\n *    file: \"app.js\",\n *    sections: [{\n *      offset: {line:100, column:10},\n *      map: {\n *        version : 3,\n *        file: \"section.js\",\n *        sources: [\"foo.js\", \"bar.js\"],\n *        names: [\"src\", \"maps\", \"are\", \"fun\"],\n *        mappings: \"AAAA,E;;ABCDE;\"\n *      }\n *    }],\n *  }\n *\n * The second parameter, if given, is a string whose value is the URL\n * at which the source map was found.  This URL is used to compute the\n * sources array.\n *\n * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit#heading=h.535es3xeprgt\n */\nclass IndexedSourceMapConsumer extends SourceMapConsumer {\n  constructor(aSourceMap, aSourceMapURL) {\n    return super(INTERNAL).then(that => {\n      let sourceMap = aSourceMap;\n      if (typeof aSourceMap === \"string\") {\n        sourceMap = util.parseSourceMapInput(aSourceMap);\n      }\n\n      const version = util.getArg(sourceMap, \"version\");\n      const sections = util.getArg(sourceMap, \"sections\");\n\n      if (version != that._version) {\n        throw new Error(\"Unsupported version: \" + version);\n      }\n\n      that._sources = new ArraySet();\n      that._names = new ArraySet();\n      that.__generatedMappings = null;\n      that.__originalMappings = null;\n      that.__generatedMappingsUnsorted = null;\n      that.__originalMappingsUnsorted = null;\n\n      let lastOffset = {\n        line: -1,\n        column: 0\n      };\n      return Promise.all(sections.map(s => {\n        if (s.url) {\n          // The url field will require support for asynchronicity.\n          // See https://github.com/mozilla/source-map/issues/16\n          throw new Error(\"Support for url field in sections not implemented.\");\n        }\n        const offset = util.getArg(s, \"offset\");\n        const offsetLine = util.getArg(offset, \"line\");\n        const offsetColumn = util.getArg(offset, \"column\");\n\n        if (offsetLine < lastOffset.line ||\n            (offsetLine === lastOffset.line && offsetColumn < lastOffset.column)) {\n          throw new Error(\"Section offsets must be ordered and non-overlapping.\");\n        }\n        lastOffset = offset;\n\n        const cons = new SourceMapConsumer(util.getArg(s, \"map\"), aSourceMapURL);\n        return cons.then(consumer => {\n          return {\n            generatedOffset: {\n              // The offset fields are 0-based, but we use 1-based indices when\n              // encoding/decoding from VLQ.\n              generatedLine: offsetLine + 1,\n              generatedColumn: offsetColumn + 1\n            },\n            consumer\n          };\n        });\n      })).then(s => {\n        that._sections = s;\n        return that;\n      });\n    });\n  }\n\n  // `__generatedMappings` and `__originalMappings` are arrays that hold the\n  // parsed mapping coordinates from the source map's \"mappings\" attribute. They\n  // are lazily instantiated, accessed via the `_generatedMappings` and\n  // `_originalMappings` getters respectively, and we only parse the mappings\n  // and create these arrays once queried for a source location. We jump through\n  // these hoops because there can be many thousands of mappings, and parsing\n  // them is expensive, so we only want to do it if we must.\n  //\n  // Each object in the arrays is of the form:\n  //\n  //     {\n  //       generatedLine: The line number in the generated code,\n  //       generatedColumn: The column number in the generated code,\n  //       source: The path to the original source file that generated this\n  //               chunk of code,\n  //       originalLine: The line number in the original source that\n  //                     corresponds to this chunk of generated code,\n  //       originalColumn: The column number in the original source that\n  //                       corresponds to this chunk of generated code,\n  //       name: The name of the original symbol which generated this chunk of\n  //             code.\n  //     }\n  //\n  // All properties except for `generatedLine` and `generatedColumn` can be\n  // `null`.\n  //\n  // `_generatedMappings` is ordered by the generated positions.\n  //\n  // `_originalMappings` is ordered by the original positions.\n  get _generatedMappings() {\n    if (!this.__generatedMappings) {\n      this._sortGeneratedMappings();\n    }\n\n    return this.__generatedMappings;\n  }\n\n  get _originalMappings() {\n    if (!this.__originalMappings) {\n      this._sortOriginalMappings();\n    }\n\n    return this.__originalMappings;\n  }\n\n  get _generatedMappingsUnsorted() {\n    if (!this.__generatedMappingsUnsorted) {\n      this._parseMappings(this._mappings, this.sourceRoot);\n    }\n\n    return this.__generatedMappingsUnsorted;\n  }\n\n  get _originalMappingsUnsorted() {\n    if (!this.__originalMappingsUnsorted) {\n      this._parseMappings(this._mappings, this.sourceRoot);\n    }\n\n    return this.__originalMappingsUnsorted;\n  }\n\n  _sortGeneratedMappings() {\n    const mappings = this._generatedMappingsUnsorted;\n    mappings.sort(util.compareByGeneratedPositionsDeflated);\n    this.__generatedMappings = mappings;\n  }\n\n  _sortOriginalMappings() {\n    const mappings = this._originalMappingsUnsorted;\n    mappings.sort(util.compareByOriginalPositions);\n    this.__originalMappings = mappings;\n  }\n\n  /**\n   * The list of original sources.\n   */\n  get sources() {\n    const sources = [];\n    for (let i = 0; i < this._sections.length; i++) {\n      for (let j = 0; j < this._sections[i].consumer.sources.length; j++) {\n        sources.push(this._sections[i].consumer.sources[j]);\n      }\n    }\n    return sources;\n  }\n\n  /**\n   * Returns the original source, line, and column information for the generated\n   * source's line and column positions provided. The only argument is an object\n   * with the following properties:\n   *\n   *   - line: The line number in the generated source.  The line number\n   *     is 1-based.\n   *   - column: The column number in the generated source.  The column\n   *     number is 0-based.\n   *\n   * and an object is returned with the following properties:\n   *\n   *   - source: The original source file, or null.\n   *   - line: The line number in the original source, or null.  The\n   *     line number is 1-based.\n   *   - column: The column number in the original source, or null.  The\n   *     column number is 0-based.\n   *   - name: The original identifier, or null.\n   */\n  originalPositionFor(aArgs) {\n    const needle = {\n      generatedLine: util.getArg(aArgs, \"line\"),\n      generatedColumn: util.getArg(aArgs, \"column\")\n    };\n\n    // Find the section containing the generated position we're trying to map\n    // to an original position.\n    const sectionIndex = binarySearch.search(needle, this._sections,\n      function(aNeedle, section) {\n        const cmp = aNeedle.generatedLine - section.generatedOffset.generatedLine;\n        if (cmp) {\n          return cmp;\n        }\n\n        return (aNeedle.generatedColumn -\n                section.generatedOffset.generatedColumn);\n      });\n    const section = this._sections[sectionIndex];\n\n    if (!section) {\n      return {\n        source: null,\n        line: null,\n        column: null,\n        name: null\n      };\n    }\n\n    return section.consumer.originalPositionFor({\n      line: needle.generatedLine -\n        (section.generatedOffset.generatedLine - 1),\n      column: needle.generatedColumn -\n        (section.generatedOffset.generatedLine === needle.generatedLine\n         ? section.generatedOffset.generatedColumn - 1\n         : 0),\n      bias: aArgs.bias\n    });\n  }\n\n  /**\n   * Return true if we have the source content for every source in the source\n   * map, false otherwise.\n   */\n  hasContentsOfAllSources() {\n    return this._sections.every(function(s) {\n      return s.consumer.hasContentsOfAllSources();\n    });\n  }\n\n  /**\n   * Returns the original source content. The only argument is the url of the\n   * original source file. Returns null if no original source content is\n   * available.\n   */\n  sourceContentFor(aSource, nullOnMissing) {\n    for (let i = 0; i < this._sections.length; i++) {\n      const section = this._sections[i];\n\n      const content = section.consumer.sourceContentFor(aSource, true);\n      if (content) {\n        return content;\n      }\n    }\n    if (nullOnMissing) {\n      return null;\n    }\n    throw new Error('\"' + aSource + '\" is not in the SourceMap.');\n  }\n\n  /**\n   * Returns the generated line and column information for the original source,\n   * line, and column positions provided. The only argument is an object with\n   * the following properties:\n   *\n   *   - source: The filename of the original source.\n   *   - line: The line number in the original source.  The line number\n   *     is 1-based.\n   *   - column: The column number in the original source.  The column\n   *     number is 0-based.\n   *\n   * and an object is returned with the following properties:\n   *\n   *   - line: The line number in the generated source, or null.  The\n   *     line number is 1-based.\n   *   - column: The column number in the generated source, or null.\n   *     The column number is 0-based.\n   */\n  generatedPositionFor(aArgs) {\n    for (let i = 0; i < this._sections.length; i++) {\n      const section = this._sections[i];\n\n      // Only consider this section if the requested source is in the list of\n      // sources of the consumer.\n      if (section.consumer._findSourceIndex(util.getArg(aArgs, \"source\")) === -1) {\n        continue;\n      }\n      const generatedPosition = section.consumer.generatedPositionFor(aArgs);\n      if (generatedPosition) {\n        const ret = {\n          line: generatedPosition.line +\n            (section.generatedOffset.generatedLine - 1),\n          column: generatedPosition.column +\n            (section.generatedOffset.generatedLine === generatedPosition.line\n             ? section.generatedOffset.generatedColumn - 1\n             : 0)\n        };\n        return ret;\n      }\n    }\n\n    return {\n      line: null,\n      column: null\n    };\n  }\n\n  /**\n   * Parse the mappings in a string in to a data structure which we can easily\n   * query (the ordered arrays in the `this.__generatedMappings` and\n   * `this.__originalMappings` properties).\n   */\n  _parseMappings(aStr, aSourceRoot) {\n    const generatedMappings = this.__generatedMappingsUnsorted = [];\n    const originalMappings = this.__originalMappingsUnsorted = [];\n    for (let i = 0; i < this._sections.length; i++) {\n      const section = this._sections[i];\n\n      const sectionMappings = [];\n      section.consumer.eachMapping(m => sectionMappings.push(m));\n\n      for (let j = 0; j < sectionMappings.length; j++) {\n        const mapping = sectionMappings[j];\n\n        // TODO: test if null is correct here.  The original code used\n        // `source`, which would actually have gotten used as null because\n        // var's get hoisted.\n        // See: https://github.com/mozilla/source-map/issues/333\n        let source = util.computeSourceURL(section.consumer.sourceRoot, null, this._sourceMapURL);\n        this._sources.add(source);\n        source = this._sources.indexOf(source);\n\n        let name = null;\n        if (mapping.name) {\n          this._names.add(mapping.name);\n          name = this._names.indexOf(mapping.name);\n        }\n\n        // The mappings coming from the consumer for the section have\n        // generated positions relative to the start of the section, so we\n        // need to offset them to be relative to the start of the concatenated\n        // generated file.\n        const adjustedMapping = {\n          source,\n          generatedLine: mapping.generatedLine +\n            (section.generatedOffset.generatedLine - 1),\n          generatedColumn: mapping.generatedColumn +\n            (section.generatedOffset.generatedLine === mapping.generatedLine\n            ? section.generatedOffset.generatedColumn - 1\n            : 0),\n          originalLine: mapping.originalLine,\n          originalColumn: mapping.originalColumn,\n          name\n        };\n\n        generatedMappings.push(adjustedMapping);\n        if (typeof adjustedMapping.originalLine === \"number\") {\n          originalMappings.push(adjustedMapping);\n        }\n      }\n    }\n  }\n\n  eachMapping(aCallback, aContext, aOrder) {\n    const context = aContext || null;\n    const order = aOrder || SourceMapConsumer.GENERATED_ORDER;\n\n    let mappings;\n    switch (order) {\n    case SourceMapConsumer.GENERATED_ORDER:\n      mappings = this._generatedMappings;\n      break;\n    case SourceMapConsumer.ORIGINAL_ORDER:\n      mappings = this._originalMappings;\n      break;\n    default:\n      throw new Error(\"Unknown order of iteration.\");\n    }\n\n    const sourceRoot = this.sourceRoot;\n    mappings.map(function(mapping) {\n      let source = null;\n      if (mapping.source !== null) {\n        source = this._sources.at(mapping.source);\n        source = util.computeSourceURL(sourceRoot, source, this._sourceMapURL);\n      }\n      return {\n        source,\n        generatedLine: mapping.generatedLine,\n        generatedColumn: mapping.generatedColumn,\n        originalLine: mapping.originalLine,\n        originalColumn: mapping.originalColumn,\n        name: mapping.name === null ? null : this._names.at(mapping.name)\n      };\n    }, this).forEach(aCallback, context);\n  }\n\n  /**\n   * Find the mapping that best matches the hypothetical \"needle\" mapping that\n   * we are searching for in the given \"haystack\" of mappings.\n   */\n  _findMapping(aNeedle, aMappings, aLineName,\n              aColumnName, aComparator, aBias) {\n    // To return the position we are searching for, we must first find the\n    // mapping for the given position and then return the opposite position it\n    // points to. Because the mappings are sorted, we can use binary search to\n    // find the best mapping.\n\n    if (aNeedle[aLineName] <= 0) {\n      throw new TypeError(\"Line must be greater than or equal to 1, got \"\n                          + aNeedle[aLineName]);\n    }\n    if (aNeedle[aColumnName] < 0) {\n      throw new TypeError(\"Column must be greater than or equal to 0, got \"\n                          + aNeedle[aColumnName]);\n    }\n\n    return binarySearch.search(aNeedle, aMappings, aComparator, aBias);\n  }\n\n  allGeneratedPositionsFor(aArgs) {\n    const line = util.getArg(aArgs, \"line\");\n\n    // When there is no exact match, BasicSourceMapConsumer.prototype._findMapping\n    // returns the index of the closest mapping less than the needle. By\n    // setting needle.originalColumn to 0, we thus find the last mapping for\n    // the given line, provided such a mapping exists.\n    const needle = {\n      source: util.getArg(aArgs, \"source\"),\n      originalLine: line,\n      originalColumn: util.getArg(aArgs, \"column\", 0)\n    };\n\n    needle.source = this._findSourceIndex(needle.source);\n    if (needle.source < 0) {\n      return [];\n    }\n\n    if (needle.originalLine < 1) {\n      throw new Error(\"Line numbers must be >= 1\");\n    }\n\n    if (needle.originalColumn < 0) {\n      throw new Error(\"Column numbers must be >= 0\");\n    }\n\n    const mappings = [];\n\n    let index = this._findMapping(needle,\n                                  this._originalMappings,\n                                  \"originalLine\",\n                                  \"originalColumn\",\n                                  util.compareByOriginalPositions,\n                                  binarySearch.LEAST_UPPER_BOUND);\n    if (index >= 0) {\n      let mapping = this._originalMappings[index];\n\n      if (aArgs.column === undefined) {\n        const originalLine = mapping.originalLine;\n\n        // Iterate until either we run out of mappings, or we run into\n        // a mapping for a different line than the one we found. Since\n        // mappings are sorted, this is guaranteed to find all mappings for\n        // the line we found.\n        while (mapping && mapping.originalLine === originalLine) {\n          let lastColumn = mapping.lastGeneratedColumn;\n          if (this._computedColumnSpans && lastColumn === null) {\n            lastColumn = Infinity;\n          }\n          mappings.push({\n            line: util.getArg(mapping, \"generatedLine\", null),\n            column: util.getArg(mapping, \"generatedColumn\", null),\n            lastColumn,\n          });\n\n          mapping = this._originalMappings[++index];\n        }\n      } else {\n        const originalColumn = mapping.originalColumn;\n\n        // Iterate until either we run out of mappings, or we run into\n        // a mapping for a different line than the one we were searching for.\n        // Since mappings are sorted, this is guaranteed to find all mappings for\n        // the line we are searching for.\n        while (mapping &&\n               mapping.originalLine === line &&\n               mapping.originalColumn == originalColumn) {\n          let lastColumn = mapping.lastGeneratedColumn;\n          if (this._computedColumnSpans && lastColumn === null) {\n            lastColumn = Infinity;\n          }\n          mappings.push({\n            line: util.getArg(mapping, \"generatedLine\", null),\n            column: util.getArg(mapping, \"generatedColumn\", null),\n            lastColumn,\n          });\n\n          mapping = this._originalMappings[++index];\n        }\n      }\n    }\n\n    return mappings;\n  }\n\n  destroy() {\n    for (let i = 0; i < this._sections.length; i++) {\n      this._sections[i].consumer.destroy();\n    }\n  }\n}\nexports.IndexedSourceMapConsumer = IndexedSourceMapConsumer;\n\n/*\n * Cheat to get around inter-twingled classes.  `factory()` can be at the end\n * where it has access to non-hoisted classes, but it gets hoisted itself.\n */\nfunction _factory(aSourceMap, aSourceMapURL) {\n  let sourceMap = aSourceMap;\n  if (typeof aSourceMap === \"string\") {\n    sourceMap = util.parseSourceMapInput(aSourceMap);\n  }\n\n  const consumer = sourceMap.sections != null\n      ? new IndexedSourceMapConsumer(sourceMap, aSourceMapURL)\n      : new BasicSourceMapConsumer(sourceMap, aSourceMapURL);\n  return Promise.resolve(consumer);\n}\n\nfunction _factoryBSM(aSourceMap, aSourceMapURL) {\n  return BasicSourceMapConsumer.fromSourceMap(aSourceMap, aSourceMapURL);\n}\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nconst base64VLQ = require(\"./base64-vlq\");\nconst util = require(\"./util\");\nconst ArraySet = require(\"./array-set\").ArraySet;\nconst MappingList = require(\"./mapping-list\").MappingList;\n\n/**\n * An instance of the SourceMapGenerator represents a source map which is\n * being built incrementally. You may pass an object with the following\n * properties:\n *\n *   - file: The filename of the generated source.\n *   - sourceRoot: A root for all relative URLs in this source map.\n */\nclass SourceMapGenerator {\n  constructor(aArgs) {\n    if (!aArgs) {\n      aArgs = {};\n    }\n    this._file = util.getArg(aArgs, \"file\", null);\n    this._sourceRoot = util.getArg(aArgs, \"sourceRoot\", null);\n    this._skipValidation = util.getArg(aArgs, \"skipValidation\", false);\n    this._sources = new ArraySet();\n    this._names = new ArraySet();\n    this._mappings = new MappingList();\n    this._sourcesContents = null;\n  }\n\n  /**\n   * Creates a new SourceMapGenerator based on a SourceMapConsumer\n   *\n   * @param aSourceMapConsumer The SourceMap.\n   */\n  static fromSourceMap(aSourceMapConsumer) {\n    const sourceRoot = aSourceMapConsumer.sourceRoot;\n    const generator = new SourceMapGenerator({\n      file: aSourceMapConsumer.file,\n      sourceRoot\n    });\n    aSourceMapConsumer.eachMapping(function(mapping) {\n      const newMapping = {\n        generated: {\n          line: mapping.generatedLine,\n          column: mapping.generatedColumn\n        }\n      };\n\n      if (mapping.source != null) {\n        newMapping.source = mapping.source;\n        if (sourceRoot != null) {\n          newMapping.source = util.relative(sourceRoot, newMapping.source);\n        }\n\n        newMapping.original = {\n          line: mapping.originalLine,\n          column: mapping.originalColumn\n        };\n\n        if (mapping.name != null) {\n          newMapping.name = mapping.name;\n        }\n      }\n\n      generator.addMapping(newMapping);\n    });\n    aSourceMapConsumer.sources.forEach(function(sourceFile) {\n      let sourceRelative = sourceFile;\n      if (sourceRoot !== null) {\n        sourceRelative = util.relative(sourceRoot, sourceFile);\n      }\n\n      if (!generator._sources.has(sourceRelative)) {\n        generator._sources.add(sourceRelative);\n      }\n\n      const content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        generator.setSourceContent(sourceFile, content);\n      }\n    });\n    return generator;\n  }\n\n  /**\n   * Add a single mapping from original source line and column to the generated\n   * source's line and column for this source map being created. The mapping\n   * object should have the following properties:\n   *\n   *   - generated: An object with the generated line and column positions.\n   *   - original: An object with the original line and column positions.\n   *   - source: The original source file (relative to the sourceRoot).\n   *   - name: An optional original token name for this mapping.\n   */\n  addMapping(aArgs) {\n    const generated = util.getArg(aArgs, \"generated\");\n    const original = util.getArg(aArgs, \"original\", null);\n    let source = util.getArg(aArgs, \"source\", null);\n    let name = util.getArg(aArgs, \"name\", null);\n\n    if (!this._skipValidation) {\n      this._validateMapping(generated, original, source, name);\n    }\n\n    if (source != null) {\n      source = String(source);\n      if (!this._sources.has(source)) {\n        this._sources.add(source);\n      }\n    }\n\n    if (name != null) {\n      name = String(name);\n      if (!this._names.has(name)) {\n        this._names.add(name);\n      }\n    }\n\n    this._mappings.add({\n      generatedLine: generated.line,\n      generatedColumn: generated.column,\n      originalLine: original != null && original.line,\n      originalColumn: original != null && original.column,\n      source,\n      name\n    });\n  }\n\n  /**\n   * Set the source content for a source file.\n   */\n  setSourceContent(aSourceFile, aSourceContent) {\n    let source = aSourceFile;\n    if (this._sourceRoot != null) {\n      source = util.relative(this._sourceRoot, source);\n    }\n\n    if (aSourceContent != null) {\n      // Add the source content to the _sourcesContents map.\n      // Create a new _sourcesContents map if the property is null.\n      if (!this._sourcesContents) {\n        this._sourcesContents = Object.create(null);\n      }\n      this._sourcesContents[util.toSetString(source)] = aSourceContent;\n    } else if (this._sourcesContents) {\n      // Remove the source file from the _sourcesContents map.\n      // If the _sourcesContents map is empty, set the property to null.\n      delete this._sourcesContents[util.toSetString(source)];\n      if (Object.keys(this._sourcesContents).length === 0) {\n        this._sourcesContents = null;\n      }\n    }\n  }\n\n  /**\n   * Applies the mappings of a sub-source-map for a specific source file to the\n   * source map being generated. Each mapping to the supplied source file is\n   * rewritten using the supplied source map. Note: The resolution for the\n   * resulting mappings is the minimium of this map and the supplied map.\n   *\n   * @param aSourceMapConsumer The source map to be applied.\n   * @param aSourceFile Optional. The filename of the source file.\n   *        If omitted, SourceMapConsumer's file property will be used.\n   * @param aSourceMapPath Optional. The dirname of the path to the source map\n   *        to be applied. If relative, it is relative to the SourceMapConsumer.\n   *        This parameter is needed when the two source maps aren't in the same\n   *        directory, and the source map to be applied contains relative source\n   *        paths. If so, those relative source paths need to be rewritten\n   *        relative to the SourceMapGenerator.\n   */\n  applySourceMap(aSourceMapConsumer, aSourceFile, aSourceMapPath) {\n    let sourceFile = aSourceFile;\n    // If aSourceFile is omitted, we will use the file property of the SourceMap\n    if (aSourceFile == null) {\n      if (aSourceMapConsumer.file == null) {\n        throw new Error(\n          \"SourceMapGenerator.prototype.applySourceMap requires either an explicit source file, \" +\n          'or the source map\\'s \"file\" property. Both were omitted.'\n        );\n      }\n      sourceFile = aSourceMapConsumer.file;\n    }\n    const sourceRoot = this._sourceRoot;\n    // Make \"sourceFile\" relative if an absolute Url is passed.\n    if (sourceRoot != null) {\n      sourceFile = util.relative(sourceRoot, sourceFile);\n    }\n    // Applying the SourceMap can add and remove items from the sources and\n    // the names array.\n    const newSources = this._mappings.toArray().length > 0\n      ? new ArraySet()\n      : this._sources;\n    const newNames = new ArraySet();\n\n    // Find mappings for the \"sourceFile\"\n    this._mappings.unsortedForEach(function(mapping) {\n      if (mapping.source === sourceFile && mapping.originalLine != null) {\n        // Check if it can be mapped by the source map, then update the mapping.\n        const original = aSourceMapConsumer.originalPositionFor({\n          line: mapping.originalLine,\n          column: mapping.originalColumn\n        });\n        if (original.source != null) {\n          // Copy mapping\n          mapping.source = original.source;\n          if (aSourceMapPath != null) {\n            mapping.source = util.join(aSourceMapPath, mapping.source);\n          }\n          if (sourceRoot != null) {\n            mapping.source = util.relative(sourceRoot, mapping.source);\n          }\n          mapping.originalLine = original.line;\n          mapping.originalColumn = original.column;\n          if (original.name != null) {\n            mapping.name = original.name;\n          }\n        }\n      }\n\n      const source = mapping.source;\n      if (source != null && !newSources.has(source)) {\n        newSources.add(source);\n      }\n\n      const name = mapping.name;\n      if (name != null && !newNames.has(name)) {\n        newNames.add(name);\n      }\n\n    }, this);\n    this._sources = newSources;\n    this._names = newNames;\n\n    // Copy sourcesContents of applied map.\n    aSourceMapConsumer.sources.forEach(function(srcFile) {\n      const content = aSourceMapConsumer.sourceContentFor(srcFile);\n      if (content != null) {\n        if (aSourceMapPath != null) {\n          srcFile = util.join(aSourceMapPath, srcFile);\n        }\n        if (sourceRoot != null) {\n          srcFile = util.relative(sourceRoot, srcFile);\n        }\n        this.setSourceContent(srcFile, content);\n      }\n    }, this);\n  }\n\n  /**\n   * A mapping can have one of the three levels of data:\n   *\n   *   1. Just the generated position.\n   *   2. The Generated position, original position, and original source.\n   *   3. Generated and original position, original source, as well as a name\n   *      token.\n   *\n   * To maintain consistency, we validate that any new mapping being added falls\n   * in to one of these categories.\n   */\n  _validateMapping(aGenerated, aOriginal, aSource, aName) {\n    // When aOriginal is truthy but has empty values for .line and .column,\n    // it is most likely a programmer error. In this case we throw a very\n    // specific error message to try to guide them the right way.\n    // For example: https://github.com/Polymer/polymer-bundler/pull/519\n    if (aOriginal && typeof aOriginal.line !== \"number\" && typeof aOriginal.column !== \"number\") {\n        throw new Error(\n            \"original.line and original.column are not numbers -- you probably meant to omit \" +\n            \"the original mapping entirely and only map the generated position. If so, pass \" +\n            \"null for the original mapping instead of an object with empty or null values.\"\n        );\n    }\n\n    if (aGenerated && \"line\" in aGenerated && \"column\" in aGenerated\n        && aGenerated.line > 0 && aGenerated.column >= 0\n        && !aOriginal && !aSource && !aName) {\n      // Case 1.\n\n    } else if (aGenerated && \"line\" in aGenerated && \"column\" in aGenerated\n             && aOriginal && \"line\" in aOriginal && \"column\" in aOriginal\n             && aGenerated.line > 0 && aGenerated.column >= 0\n             && aOriginal.line > 0 && aOriginal.column >= 0\n             && aSource) {\n      // Cases 2 and 3.\n\n    } else {\n      throw new Error(\"Invalid mapping: \" + JSON.stringify({\n        generated: aGenerated,\n        source: aSource,\n        original: aOriginal,\n        name: aName\n      }));\n    }\n  }\n\n  /**\n   * Serialize the accumulated mappings in to the stream of base 64 VLQs\n   * specified by the source map format.\n   */\n  _serializeMappings() {\n    let previousGeneratedColumn = 0;\n    let previousGeneratedLine = 1;\n    let previousOriginalColumn = 0;\n    let previousOriginalLine = 0;\n    let previousName = 0;\n    let previousSource = 0;\n    let result = \"\";\n    let next;\n    let mapping;\n    let nameIdx;\n    let sourceIdx;\n\n    const mappings = this._mappings.toArray();\n    for (let i = 0, len = mappings.length; i < len; i++) {\n      mapping = mappings[i];\n      next = \"\";\n\n      if (mapping.generatedLine !== previousGeneratedLine) {\n        previousGeneratedColumn = 0;\n        while (mapping.generatedLine !== previousGeneratedLine) {\n          next += \";\";\n          previousGeneratedLine++;\n        }\n      } else if (i > 0) {\n        if (!util.compareByGeneratedPositionsInflated(mapping, mappings[i - 1])) {\n          continue;\n        }\n        next += \",\";\n      }\n\n      next += base64VLQ.encode(mapping.generatedColumn\n                                 - previousGeneratedColumn);\n      previousGeneratedColumn = mapping.generatedColumn;\n\n      if (mapping.source != null) {\n        sourceIdx = this._sources.indexOf(mapping.source);\n        next += base64VLQ.encode(sourceIdx - previousSource);\n        previousSource = sourceIdx;\n\n        // lines are stored 0-based in SourceMap spec version 3\n        next += base64VLQ.encode(mapping.originalLine - 1\n                                   - previousOriginalLine);\n        previousOriginalLine = mapping.originalLine - 1;\n\n        next += base64VLQ.encode(mapping.originalColumn\n                                   - previousOriginalColumn);\n        previousOriginalColumn = mapping.originalColumn;\n\n        if (mapping.name != null) {\n          nameIdx = this._names.indexOf(mapping.name);\n          next += base64VLQ.encode(nameIdx - previousName);\n          previousName = nameIdx;\n        }\n      }\n\n      result += next;\n    }\n\n    return result;\n  }\n\n  _generateSourcesContent(aSources, aSourceRoot) {\n    return aSources.map(function(source) {\n      if (!this._sourcesContents) {\n        return null;\n      }\n      if (aSourceRoot != null) {\n        source = util.relative(aSourceRoot, source);\n      }\n      const key = util.toSetString(source);\n      return Object.prototype.hasOwnProperty.call(this._sourcesContents, key)\n        ? this._sourcesContents[key]\n        : null;\n    }, this);\n  }\n\n  /**\n   * Externalize the source map.\n   */\n  toJSON() {\n    const map = {\n      version: this._version,\n      sources: this._sources.toArray(),\n      names: this._names.toArray(),\n      mappings: this._serializeMappings()\n    };\n    if (this._file != null) {\n      map.file = this._file;\n    }\n    if (this._sourceRoot != null) {\n      map.sourceRoot = this._sourceRoot;\n    }\n    if (this._sourcesContents) {\n      map.sourcesContent = this._generateSourcesContent(map.sources, map.sourceRoot);\n    }\n\n    return map;\n  }\n\n  /**\n   * Render the source map being generated to a string.\n   */\n  toString() {\n    return JSON.stringify(this.toJSON());\n  }\n}\n\nSourceMapGenerator.prototype._version = 3;\nexports.SourceMapGenerator = SourceMapGenerator;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nconst SourceMapGenerator = require(\"./source-map-generator\").SourceMapGenerator;\nconst util = require(\"./util\");\n\n// Matches a Windows-style `\\r\\n` newline or a `\\n` newline used by all other\n// operating systems these days (capturing the result).\nconst REGEX_NEWLINE = /(\\r?\\n)/;\n\n// Newline character code for charCodeAt() comparisons\nconst NEWLINE_CODE = 10;\n\n// Private symbol for identifying `SourceNode`s when multiple versions of\n// the source-map library are loaded. This MUST NOT CHANGE across\n// versions!\nconst isSourceNode = \"$$$isSourceNode$$$\";\n\n/**\n * SourceNodes provide a way to abstract over interpolating/concatenating\n * snippets of generated JavaScript source code while maintaining the line and\n * column information associated with the original source code.\n *\n * @param aLine The original line number.\n * @param aColumn The original column number.\n * @param aSource The original source's filename.\n * @param aChunks Optional. An array of strings which are snippets of\n *        generated JS, or other SourceNodes.\n * @param aName The original identifier.\n */\nclass SourceNode {\n  constructor(aLine, aColumn, aSource, aChunks, aName) {\n    this.children = [];\n    this.sourceContents = {};\n    this.line = aLine == null ? null : aLine;\n    this.column = aColumn == null ? null : aColumn;\n    this.source = aSource == null ? null : aSource;\n    this.name = aName == null ? null : aName;\n    this[isSourceNode] = true;\n    if (aChunks != null) this.add(aChunks);\n  }\n\n  /**\n   * Creates a SourceNode from generated code and a SourceMapConsumer.\n   *\n   * @param aGeneratedCode The generated code\n   * @param aSourceMapConsumer The SourceMap for the generated code\n   * @param aRelativePath Optional. The path that relative sources in the\n   *        SourceMapConsumer should be relative to.\n   */\n  static fromStringWithSourceMap(aGeneratedCode, aSourceMapConsumer, aRelativePath) {\n    // The SourceNode we want to fill with the generated code\n    // and the SourceMap\n    const node = new SourceNode();\n\n    // All even indices of this array are one line of the generated code,\n    // while all odd indices are the newlines between two adjacent lines\n    // (since `REGEX_NEWLINE` captures its match).\n    // Processed fragments are accessed by calling `shiftNextLine`.\n    const remainingLines = aGeneratedCode.split(REGEX_NEWLINE);\n    let remainingLinesIndex = 0;\n    const shiftNextLine = function() {\n      const lineContents = getNextLine();\n      // The last line of a file might not have a newline.\n      const newLine = getNextLine() || \"\";\n      return lineContents + newLine;\n\n      function getNextLine() {\n        return remainingLinesIndex < remainingLines.length ?\n            remainingLines[remainingLinesIndex++] : undefined;\n      }\n    };\n\n    // We need to remember the position of \"remainingLines\"\n    let lastGeneratedLine = 1, lastGeneratedColumn = 0;\n\n    // The generate SourceNodes we need a code range.\n    // To extract it current and last mapping is used.\n    // Here we store the last mapping.\n    let lastMapping = null;\n    let nextLine;\n\n    aSourceMapConsumer.eachMapping(function(mapping) {\n      if (lastMapping !== null) {\n        // We add the code from \"lastMapping\" to \"mapping\":\n        // First check if there is a new line in between.\n        if (lastGeneratedLine < mapping.generatedLine) {\n          // Associate first line with \"lastMapping\"\n          addMappingWithCode(lastMapping, shiftNextLine());\n          lastGeneratedLine++;\n          lastGeneratedColumn = 0;\n          // The remaining code is added without mapping\n        } else {\n          // There is no new line in between.\n          // Associate the code between \"lastGeneratedColumn\" and\n          // \"mapping.generatedColumn\" with \"lastMapping\"\n          nextLine = remainingLines[remainingLinesIndex] || \"\";\n          const code = nextLine.substr(0, mapping.generatedColumn -\n                                        lastGeneratedColumn);\n          remainingLines[remainingLinesIndex] = nextLine.substr(mapping.generatedColumn -\n                                              lastGeneratedColumn);\n          lastGeneratedColumn = mapping.generatedColumn;\n          addMappingWithCode(lastMapping, code);\n          // No more remaining code, continue\n          lastMapping = mapping;\n          return;\n        }\n      }\n      // We add the generated code until the first mapping\n      // to the SourceNode without any mapping.\n      // Each line is added as separate string.\n      while (lastGeneratedLine < mapping.generatedLine) {\n        node.add(shiftNextLine());\n        lastGeneratedLine++;\n      }\n      if (lastGeneratedColumn < mapping.generatedColumn) {\n        nextLine = remainingLines[remainingLinesIndex] || \"\";\n        node.add(nextLine.substr(0, mapping.generatedColumn));\n        remainingLines[remainingLinesIndex] = nextLine.substr(mapping.generatedColumn);\n        lastGeneratedColumn = mapping.generatedColumn;\n      }\n      lastMapping = mapping;\n    }, this);\n    // We have processed all mappings.\n    if (remainingLinesIndex < remainingLines.length) {\n      if (lastMapping) {\n        // Associate the remaining code in the current line with \"lastMapping\"\n        addMappingWithCode(lastMapping, shiftNextLine());\n      }\n      // and add the remaining lines without any mapping\n      node.add(remainingLines.splice(remainingLinesIndex).join(\"\"));\n    }\n\n    // Copy sourcesContent into SourceNode\n    aSourceMapConsumer.sources.forEach(function(sourceFile) {\n      const content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        if (aRelativePath != null) {\n          sourceFile = util.join(aRelativePath, sourceFile);\n        }\n        node.setSourceContent(sourceFile, content);\n      }\n    });\n\n    return node;\n\n    function addMappingWithCode(mapping, code) {\n      if (mapping === null || mapping.source === undefined) {\n        node.add(code);\n      } else {\n        const source = aRelativePath\n          ? util.join(aRelativePath, mapping.source)\n          : mapping.source;\n        node.add(new SourceNode(mapping.originalLine,\n                                mapping.originalColumn,\n                                source,\n                                code,\n                                mapping.name));\n      }\n    }\n  }\n\n  /**\n   * Add a chunk of generated JS to this source node.\n   *\n   * @param aChunk A string snippet of generated JS code, another instance of\n   *        SourceNode, or an array where each member is one of those things.\n   */\n  add(aChunk) {\n    if (Array.isArray(aChunk)) {\n      aChunk.forEach(function(chunk) {\n        this.add(chunk);\n      }, this);\n    } else if (aChunk[isSourceNode] || typeof aChunk === \"string\") {\n      if (aChunk) {\n        this.children.push(aChunk);\n      }\n    } else {\n      throw new TypeError(\n        \"Expected a SourceNode, string, or an array of SourceNodes and strings. Got \" + aChunk\n      );\n    }\n    return this;\n  }\n\n  /**\n   * Add a chunk of generated JS to the beginning of this source node.\n   *\n   * @param aChunk A string snippet of generated JS code, another instance of\n   *        SourceNode, or an array where each member is one of those things.\n   */\n  prepend(aChunk) {\n    if (Array.isArray(aChunk)) {\n      for (let i = aChunk.length - 1; i >= 0; i--) {\n        this.prepend(aChunk[i]);\n      }\n    } else if (aChunk[isSourceNode] || typeof aChunk === \"string\") {\n      this.children.unshift(aChunk);\n    } else {\n      throw new TypeError(\n        \"Expected a SourceNode, string, or an array of SourceNodes and strings. Got \" + aChunk\n      );\n    }\n    return this;\n  }\n\n  /**\n   * Walk over the tree of JS snippets in this node and its children. The\n   * walking function is called once for each snippet of JS and is passed that\n   * snippet and the its original associated source's line/column location.\n   *\n   * @param aFn The traversal function.\n   */\n  walk(aFn) {\n    let chunk;\n    for (let i = 0, len = this.children.length; i < len; i++) {\n      chunk = this.children[i];\n      if (chunk[isSourceNode]) {\n        chunk.walk(aFn);\n      } else if (chunk !== \"\") {\n        aFn(chunk, { source: this.source,\n                      line: this.line,\n                      column: this.column,\n                      name: this.name });\n      }\n    }\n  }\n\n  /**\n   * Like `String.prototype.join` except for SourceNodes. Inserts `aStr` between\n   * each of `this.children`.\n   *\n   * @param aSep The separator.\n   */\n  join(aSep) {\n    let newChildren;\n    let i;\n    const len = this.children.length;\n    if (len > 0) {\n      newChildren = [];\n      for (i = 0; i < len - 1; i++) {\n        newChildren.push(this.children[i]);\n        newChildren.push(aSep);\n      }\n      newChildren.push(this.children[i]);\n      this.children = newChildren;\n    }\n    return this;\n  }\n\n  /**\n   * Call String.prototype.replace on the very right-most source snippet. Useful\n   * for trimming whitespace from the end of a source node, etc.\n   *\n   * @param aPattern The pattern to replace.\n   * @param aReplacement The thing to replace the pattern with.\n   */\n  replaceRight(aPattern, aReplacement) {\n    const lastChild = this.children[this.children.length - 1];\n    if (lastChild[isSourceNode]) {\n      lastChild.replaceRight(aPattern, aReplacement);\n    } else if (typeof lastChild === \"string\") {\n      this.children[this.children.length - 1] = lastChild.replace(aPattern, aReplacement);\n    } else {\n      this.children.push(\"\".replace(aPattern, aReplacement));\n    }\n    return this;\n  }\n\n  /**\n   * Set the source content for a source file. This will be added to the SourceMapGenerator\n   * in the sourcesContent field.\n   *\n   * @param aSourceFile The filename of the source file\n   * @param aSourceContent The content of the source file\n   */\n  setSourceContent(aSourceFile, aSourceContent) {\n    this.sourceContents[util.toSetString(aSourceFile)] = aSourceContent;\n  }\n\n  /**\n   * Walk over the tree of SourceNodes. The walking function is called for each\n   * source file content and is passed the filename and source content.\n   *\n   * @param aFn The traversal function.\n   */\n  walkSourceContents(aFn) {\n    for (let i = 0, len = this.children.length; i < len; i++) {\n      if (this.children[i][isSourceNode]) {\n        this.children[i].walkSourceContents(aFn);\n      }\n    }\n\n    const sources = Object.keys(this.sourceContents);\n    for (let i = 0, len = sources.length; i < len; i++) {\n      aFn(util.fromSetString(sources[i]), this.sourceContents[sources[i]]);\n    }\n  }\n\n  /**\n   * Return the string representation of this source node. Walks over the tree\n   * and concatenates all the various snippets together to one string.\n   */\n  toString() {\n    let str = \"\";\n    this.walk(function(chunk) {\n      str += chunk;\n    });\n    return str;\n  }\n\n  /**\n   * Returns the string representation of this source node along with a source\n   * map.\n   */\n  toStringWithSourceMap(aArgs) {\n    const generated = {\n      code: \"\",\n      line: 1,\n      column: 0\n    };\n    const map = new SourceMapGenerator(aArgs);\n    let sourceMappingActive = false;\n    let lastOriginalSource = null;\n    let lastOriginalLine = null;\n    let lastOriginalColumn = null;\n    let lastOriginalName = null;\n    this.walk(function(chunk, original) {\n      generated.code += chunk;\n      if (original.source !== null\n          && original.line !== null\n          && original.column !== null) {\n        if (lastOriginalSource !== original.source\n          || lastOriginalLine !== original.line\n          || lastOriginalColumn !== original.column\n          || lastOriginalName !== original.name) {\n          map.addMapping({\n            source: original.source,\n            original: {\n              line: original.line,\n              column: original.column\n            },\n            generated: {\n              line: generated.line,\n              column: generated.column\n            },\n            name: original.name\n          });\n        }\n        lastOriginalSource = original.source;\n        lastOriginalLine = original.line;\n        lastOriginalColumn = original.column;\n        lastOriginalName = original.name;\n        sourceMappingActive = true;\n      } else if (sourceMappingActive) {\n        map.addMapping({\n          generated: {\n            line: generated.line,\n            column: generated.column\n          }\n        });\n        lastOriginalSource = null;\n        sourceMappingActive = false;\n      }\n      for (let idx = 0, length = chunk.length; idx < length; idx++) {\n        if (chunk.charCodeAt(idx) === NEWLINE_CODE) {\n          generated.line++;\n          generated.column = 0;\n          // Mappings end at eol\n          if (idx + 1 === length) {\n            lastOriginalSource = null;\n            sourceMappingActive = false;\n          } else if (sourceMappingActive) {\n            map.addMapping({\n              source: original.source,\n              original: {\n                line: original.line,\n                column: original.column\n              },\n              generated: {\n                line: generated.line,\n                column: generated.column\n              },\n              name: original.name\n            });\n          }\n        } else {\n          generated.column++;\n        }\n      }\n    });\n    this.walkSourceContents(function(sourceFile, sourceContent) {\n      map.setSourceContent(sourceFile, sourceContent);\n    });\n\n    return { code: generated.code, map };\n  }\n}\n\nexports.SourceNode = SourceNode;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\n/**\n * This is a helper function for getting values from parameter/options\n * objects.\n *\n * @param args The object we are extracting values from\n * @param name The name of the property we are getting.\n * @param defaultValue An optional value to return if the property is missing\n * from the object. If this is not specified and the property is missing, an\n * error will be thrown.\n */\nfunction getArg(aArgs, aName, aDefaultValue) {\n  if (aName in aArgs) {\n    return aArgs[aName];\n  } else if (arguments.length === 3) {\n    return aDefaultValue;\n  }\n    throw new Error('\"' + aName + '\" is a required argument.');\n\n}\nexports.getArg = getArg;\n\nconst urlRegexp = /^(?:([\\w+\\-.]+):)?\\/\\/(?:(\\w+:\\w+)@)?([\\w.-]*)(?::(\\d+))?(.*)$/;\nconst dataUrlRegexp = /^data:.+\\,.+$/;\n\nfunction urlParse(aUrl) {\n  const match = aUrl.match(urlRegexp);\n  if (!match) {\n    return null;\n  }\n  return {\n    scheme: match[1],\n    auth: match[2],\n    host: match[3],\n    port: match[4],\n    path: match[5]\n  };\n}\nexports.urlParse = urlParse;\n\nfunction urlGenerate(aParsedUrl) {\n  let url = \"\";\n  if (aParsedUrl.scheme) {\n    url += aParsedUrl.scheme + \":\";\n  }\n  url += \"//\";\n  if (aParsedUrl.auth) {\n    url += aParsedUrl.auth + \"@\";\n  }\n  if (aParsedUrl.host) {\n    url += aParsedUrl.host;\n  }\n  if (aParsedUrl.port) {\n    url += \":\" + aParsedUrl.port;\n  }\n  if (aParsedUrl.path) {\n    url += aParsedUrl.path;\n  }\n  return url;\n}\nexports.urlGenerate = urlGenerate;\n\nconst MAX_CACHED_INPUTS = 32;\n\n/**\n * Takes some function `f(input) -> result` and returns a memoized version of\n * `f`.\n *\n * We keep at most `MAX_CACHED_INPUTS` memoized results of `f` alive. The\n * memoization is a dumb-simple, linear least-recently-used cache.\n */\nfunction lruMemoize(f) {\n  const cache = [];\n\n  return function(input) {\n    for (let i = 0; i < cache.length; i++) {\n      if (cache[i].input === input) {\n        const temp = cache[0];\n        cache[0] = cache[i];\n        cache[i] = temp;\n        return cache[0].result;\n      }\n    }\n\n    const result = f(input);\n\n    cache.unshift({\n      input,\n      result,\n    });\n\n    if (cache.length > MAX_CACHED_INPUTS) {\n      cache.pop();\n    }\n\n    return result;\n  };\n}\n\n/**\n * Normalizes a path, or the path portion of a URL:\n *\n * - Replaces consecutive slashes with one slash.\n * - Removes unnecessary '.' parts.\n * - Removes unnecessary '<dir>/..' parts.\n *\n * Based on code in the Node.js 'path' core module.\n *\n * @param aPath The path or url to normalize.\n */\nconst normalize = lruMemoize(function normalize(aPath) {\n  let path = aPath;\n  const url = urlParse(aPath);\n  if (url) {\n    if (!url.path) {\n      return aPath;\n    }\n    path = url.path;\n  }\n  const isAbsolute = exports.isAbsolute(path);\n\n  // Split the path into parts between `/` characters. This is much faster than\n  // using `.split(/\\/+/g)`.\n  const parts = [];\n  let start = 0;\n  let i = 0;\n  while (true) {\n    start = i;\n    i = path.indexOf(\"/\", start);\n    if (i === -1) {\n      parts.push(path.slice(start));\n      break;\n    } else {\n      parts.push(path.slice(start, i));\n      while (i < path.length && path[i] === \"/\") {\n        i++;\n      }\n    }\n  }\n\n  let up = 0;\n  for (i = parts.length - 1; i >= 0; i--) {\n    const part = parts[i];\n    if (part === \".\") {\n      parts.splice(i, 1);\n    } else if (part === \"..\") {\n      up++;\n    } else if (up > 0) {\n      if (part === \"\") {\n        // The first part is blank if the path is absolute. Trying to go\n        // above the root is a no-op. Therefore we can remove all '..' parts\n        // directly after the root.\n        parts.splice(i + 1, up);\n        up = 0;\n      } else {\n        parts.splice(i, 2);\n        up--;\n      }\n    }\n  }\n  path = parts.join(\"/\");\n\n  if (path === \"\") {\n    path = isAbsolute ? \"/\" : \".\";\n  }\n\n  if (url) {\n    url.path = path;\n    return urlGenerate(url);\n  }\n  return path;\n});\nexports.normalize = normalize;\n\n/**\n * Joins two paths/URLs.\n *\n * @param aRoot The root path or URL.\n * @param aPath The path or URL to be joined with the root.\n *\n * - If aPath is a URL or a data URI, aPath is returned, unless aPath is a\n *   scheme-relative URL: Then the scheme of aRoot, if any, is prepended\n *   first.\n * - Otherwise aPath is a path. If aRoot is a URL, then its path portion\n *   is updated with the result and aRoot is returned. Otherwise the result\n *   is returned.\n *   - If aPath is absolute, the result is aPath.\n *   - Otherwise the two paths are joined with a slash.\n * - Joining for example 'http://' and 'www.example.com' is also supported.\n */\nfunction join(aRoot, aPath) {\n  if (aRoot === \"\") {\n    aRoot = \".\";\n  }\n  if (aPath === \"\") {\n    aPath = \".\";\n  }\n  const aPathUrl = urlParse(aPath);\n  const aRootUrl = urlParse(aRoot);\n  if (aRootUrl) {\n    aRoot = aRootUrl.path || \"/\";\n  }\n\n  // `join(foo, '//www.example.org')`\n  if (aPathUrl && !aPathUrl.scheme) {\n    if (aRootUrl) {\n      aPathUrl.scheme = aRootUrl.scheme;\n    }\n    return urlGenerate(aPathUrl);\n  }\n\n  if (aPathUrl || aPath.match(dataUrlRegexp)) {\n    return aPath;\n  }\n\n  // `join('http://', 'www.example.com')`\n  if (aRootUrl && !aRootUrl.host && !aRootUrl.path) {\n    aRootUrl.host = aPath;\n    return urlGenerate(aRootUrl);\n  }\n\n  const joined = aPath.charAt(0) === \"/\"\n    ? aPath\n    : normalize(aRoot.replace(/\\/+$/, \"\") + \"/\" + aPath);\n\n  if (aRootUrl) {\n    aRootUrl.path = joined;\n    return urlGenerate(aRootUrl);\n  }\n  return joined;\n}\nexports.join = join;\n\nexports.isAbsolute = function(aPath) {\n  return aPath.charAt(0) === \"/\" || urlRegexp.test(aPath);\n};\n\n/**\n * Make a path relative to a URL or another path.\n *\n * @param aRoot The root path or URL.\n * @param aPath The path or URL to be made relative to aRoot.\n */\nfunction relative(aRoot, aPath) {\n  if (aRoot === \"\") {\n    aRoot = \".\";\n  }\n\n  aRoot = aRoot.replace(/\\/$/, \"\");\n\n  // It is possible for the path to be above the root. In this case, simply\n  // checking whether the root is a prefix of the path won't work. Instead, we\n  // need to remove components from the root one by one, until either we find\n  // a prefix that fits, or we run out of components to remove.\n  let level = 0;\n  while (aPath.indexOf(aRoot + \"/\") !== 0) {\n    const index = aRoot.lastIndexOf(\"/\");\n    if (index < 0) {\n      return aPath;\n    }\n\n    // If the only part of the root that is left is the scheme (i.e. http://,\n    // file:///, etc.), one or more slashes (/), or simply nothing at all, we\n    // have exhausted all components, so the path is not relative to the root.\n    aRoot = aRoot.slice(0, index);\n    if (aRoot.match(/^([^\\/]+:\\/)?\\/*$/)) {\n      return aPath;\n    }\n\n    ++level;\n  }\n\n  // Make sure we add a \"../\" for each component we removed from the root.\n  return Array(level + 1).join(\"../\") + aPath.substr(aRoot.length + 1);\n}\nexports.relative = relative;\n\nconst supportsNullProto = (function() {\n  const obj = Object.create(null);\n  return !(\"__proto__\" in obj);\n}());\n\nfunction identity(s) {\n  return s;\n}\n\n/**\n * Because behavior goes wacky when you set `__proto__` on objects, we\n * have to prefix all the strings in our set with an arbitrary character.\n *\n * See https://github.com/mozilla/source-map/pull/31 and\n * https://github.com/mozilla/source-map/issues/30\n *\n * @param String aStr\n */\nfunction toSetString(aStr) {\n  if (isProtoString(aStr)) {\n    return \"$\" + aStr;\n  }\n\n  return aStr;\n}\nexports.toSetString = supportsNullProto ? identity : toSetString;\n\nfunction fromSetString(aStr) {\n  if (isProtoString(aStr)) {\n    return aStr.slice(1);\n  }\n\n  return aStr;\n}\nexports.fromSetString = supportsNullProto ? identity : fromSetString;\n\nfunction isProtoString(s) {\n  if (!s) {\n    return false;\n  }\n\n  const length = s.length;\n\n  if (length < 9 /* \"__proto__\".length */) {\n    return false;\n  }\n\n  /* eslint-disable no-multi-spaces */\n  if (s.charCodeAt(length - 1) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 2) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 3) !== 111 /* 'o' */ ||\n      s.charCodeAt(length - 4) !== 116 /* 't' */ ||\n      s.charCodeAt(length - 5) !== 111 /* 'o' */ ||\n      s.charCodeAt(length - 6) !== 114 /* 'r' */ ||\n      s.charCodeAt(length - 7) !== 112 /* 'p' */ ||\n      s.charCodeAt(length - 8) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 9) !== 95  /* '_' */) {\n    return false;\n  }\n  /* eslint-enable no-multi-spaces */\n\n  for (let i = length - 10; i >= 0; i--) {\n    if (s.charCodeAt(i) !== 36 /* '$' */) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Comparator between two mappings where the original positions are compared.\n *\n * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n * mappings with the same original source/line/column, but different generated\n * line and column the same. Useful when searching for a mapping with a\n * stubbed out mapping.\n */\nfunction compareByOriginalPositions(mappingA, mappingB, onlyCompareOriginal) {\n  let cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0 || onlyCompareOriginal) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByOriginalPositions = compareByOriginalPositions;\n\n/**\n * Comparator between two mappings with deflated source and name indices where\n * the generated positions are compared.\n *\n * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n * mappings with the same generated line and column, but different\n * source/name/original line and column the same. Useful when searching for a\n * mapping with a stubbed out mapping.\n */\nfunction compareByGeneratedPositionsDeflated(mappingA, mappingB, onlyCompareGenerated) {\n  let cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0 || onlyCompareGenerated) {\n    return cmp;\n  }\n\n  cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByGeneratedPositionsDeflated = compareByGeneratedPositionsDeflated;\n\nfunction strcmp(aStr1, aStr2) {\n  if (aStr1 === aStr2) {\n    return 0;\n  }\n\n  if (aStr1 === null) {\n    return 1; // aStr2 !== null\n  }\n\n  if (aStr2 === null) {\n    return -1; // aStr1 !== null\n  }\n\n  if (aStr1 > aStr2) {\n    return 1;\n  }\n\n  return -1;\n}\n\n/**\n * Comparator between two mappings with inflated source and name strings where\n * the generated positions are compared.\n */\nfunction compareByGeneratedPositionsInflated(mappingA, mappingB) {\n  let cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByGeneratedPositionsInflated = compareByGeneratedPositionsInflated;\n\n/**\n * Strip any JSON XSSI avoidance prefix from the string (as documented\n * in the source maps specification), and then parse the string as\n * JSON.\n */\nfunction parseSourceMapInput(str) {\n  return JSON.parse(str.replace(/^\\)]}'[^\\n]*\\n/, \"\"));\n}\nexports.parseSourceMapInput = parseSourceMapInput;\n\n/**\n * Compute the URL of a source given the the source root, the source's\n * URL, and the source map's URL.\n */\nfunction computeSourceURL(sourceRoot, sourceURL, sourceMapURL) {\n  sourceURL = sourceURL || \"\";\n\n  if (sourceRoot) {\n    // This follows what Chrome does.\n    if (sourceRoot[sourceRoot.length - 1] !== \"/\" && sourceURL[0] !== \"/\") {\n      sourceRoot += \"/\";\n    }\n    // The spec says:\n    //   Line 4: An optional source root, useful for relocating source\n    //   files on a server or removing repeated values in the\n    //   “sources” entry.  This value is prepended to the individual\n    //   entries in the “source” field.\n    sourceURL = sourceRoot + sourceURL;\n  }\n\n  // Historically, SourceMapConsumer did not take the sourceMapURL as\n  // a parameter.  This mode is still somewhat supported, which is why\n  // this code block is conditional.  However, it's preferable to pass\n  // the source map URL to SourceMapConsumer, so that this function\n  // can implement the source URL resolution algorithm as outlined in\n  // the spec.  This block is basically the equivalent of:\n  //    new URL(sourceURL, sourceMapURL).toString()\n  // ... except it avoids using URL, which wasn't available in the\n  // older releases of node still supported by this library.\n  //\n  // The spec says:\n  //   If the sources are not absolute URLs after prepending of the\n  //   “sourceRoot”, the sources are resolved relative to the\n  //   SourceMap (like resolving script src in a html document).\n  if (sourceMapURL) {\n    const parsed = urlParse(sourceMapURL);\n    if (!parsed) {\n      throw new Error(\"sourceMapURL could not be parsed\");\n    }\n    if (parsed.path) {\n      // Strip the last path component, but keep the \"/\".\n      const index = parsed.path.lastIndexOf(\"/\");\n      if (index >= 0) {\n        parsed.path = parsed.path.substring(0, index + 1);\n      }\n    }\n    sourceURL = join(urlGenerate(parsed), sourceURL);\n  }\n\n  return normalize(sourceURL);\n}\nexports.computeSourceURL = computeSourceURL;\n","const readWasm = require(\"../lib/read-wasm\");\n\n/**\n * Provide the JIT with a nice shape / hidden class.\n */\nfunction Mapping() {\n  this.generatedLine = 0;\n  this.generatedColumn = 0;\n  this.lastGeneratedColumn = null;\n  this.source = null;\n  this.originalLine = null;\n  this.originalColumn = null;\n  this.name = null;\n}\n\nlet cachedWasm = null;\n\nmodule.exports = function wasm() {\n  if (cachedWasm) {\n    return cachedWasm;\n  }\n\n  const callbackStack = [];\n\n  cachedWasm = readWasm().then(buffer => {\n      return WebAssembly.instantiate(buffer, {\n        env: {\n          mapping_callback(\n            generatedLine,\n            generatedColumn,\n\n            hasLastGeneratedColumn,\n            lastGeneratedColumn,\n\n            hasOriginal,\n            source,\n            originalLine,\n            originalColumn,\n\n            hasName,\n            name\n          ) {\n            const mapping = new Mapping();\n            // JS uses 1-based line numbers, wasm uses 0-based.\n            mapping.generatedLine = generatedLine + 1;\n            mapping.generatedColumn = generatedColumn;\n\n            if (hasLastGeneratedColumn) {\n              // JS uses inclusive last generated column, wasm uses exclusive.\n              mapping.lastGeneratedColumn = lastGeneratedColumn - 1;\n            }\n\n            if (hasOriginal) {\n              mapping.source = source;\n              // JS uses 1-based line numbers, wasm uses 0-based.\n              mapping.originalLine = originalLine + 1;\n              mapping.originalColumn = originalColumn;\n\n              if (hasName) {\n                mapping.name = name;\n              }\n            }\n\n            callbackStack[callbackStack.length - 1](mapping);\n          },\n\n          start_all_generated_locations_for() { console.time(\"all_generated_locations_for\"); },\n          end_all_generated_locations_for() { console.timeEnd(\"all_generated_locations_for\"); },\n\n          start_compute_column_spans() { console.time(\"compute_column_spans\"); },\n          end_compute_column_spans() { console.timeEnd(\"compute_column_spans\"); },\n\n          start_generated_location_for() { console.time(\"generated_location_for\"); },\n          end_generated_location_for() { console.timeEnd(\"generated_location_for\"); },\n\n          start_original_location_for() { console.time(\"original_location_for\"); },\n          end_original_location_for() { console.timeEnd(\"original_location_for\"); },\n\n          start_parse_mappings() { console.time(\"parse_mappings\"); },\n          end_parse_mappings() { console.timeEnd(\"parse_mappings\"); },\n\n          start_sort_by_generated_location() { console.time(\"sort_by_generated_location\"); },\n          end_sort_by_generated_location() { console.timeEnd(\"sort_by_generated_location\"); },\n\n          start_sort_by_original_location() { console.time(\"sort_by_original_location\"); },\n          end_sort_by_original_location() { console.timeEnd(\"sort_by_original_location\"); },\n        }\n      });\n  }).then(Wasm => {\n    return {\n      exports: Wasm.instance.exports,\n      withMappingCallback: (mappingCallback, f) => {\n        callbackStack.push(mappingCallback);\n        try {\n          f();\n        } finally {\n          callbackStack.pop();\n        }\n      }\n    };\n  }).then(null, e => {\n    cachedWasm = null;\n    throw e;\n  });\n\n  return cachedWasm;\n};\n","/*\n * Copyright 2009-2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE.txt or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\nexports.SourceMapGenerator = require(\"./lib/source-map-generator\").SourceMapGenerator;\nexports.SourceMapConsumer = require(\"./lib/source-map-consumer\").SourceMapConsumer;\nexports.SourceNode = require(\"./lib/source-node\").SourceNode;\n","/**\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *     http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Endpoint,\n  EventSource,\n  Message,\n  MessageType,\n  PostMessageWithOrigin,\n  WireValue,\n  WireValueType,\n} from \"./protocol\";\nexport { Endpoint };\n\nexport const proxyMarker = Symbol(\"Comlink.proxy\");\nexport const createEndpoint = Symbol(\"Comlink.endpoint\");\nexport const releaseProxy = Symbol(\"Comlink.releaseProxy\");\n\nconst throwMarker = Symbol(\"Comlink.thrown\");\n\n/**\n * Interface of values that were marked to be proxied with `comlink.proxy()`.\n * Can also be implemented by classes.\n */\nexport interface ProxyMarked {\n  [proxyMarker]: true;\n}\n\n/**\n * Takes a type and wraps it in a Promise, if it not already is one.\n * This is to avoid `Promise<Promise<T>>`.\n *\n * This is the inverse of `Unpromisify<T>`.\n */\ntype Promisify<T> = T extends Promise<unknown> ? T : Promise<T>;\n/**\n * Takes a type that may be Promise and unwraps the Promise type.\n * If `P` is not a Promise, it returns `P`.\n *\n * This is the inverse of `Promisify<T>`.\n */\ntype Unpromisify<P> = P extends Promise<infer T> ? T : P;\n\n/**\n * Takes the raw type of a remote property and returns the type that is visible to the local thread on the proxy.\n *\n * Note: This needs to be its own type alias, otherwise it will not distribute over unions.\n * See https://www.typescriptlang.org/docs/handbook/advanced-types.html#distributive-conditional-types\n */\ntype RemoteProperty<T> =\n  // If the value is a method, comlink will proxy it automatically.\n  // Objects are only proxied if they are marked to be proxied.\n  // Otherwise, the property is converted to a Promise that resolves the cloned value.\n  T extends Function | ProxyMarked ? Remote<T> : Promisify<T>;\n\n/**\n * Takes the raw type of a property as a remote thread would see it through a proxy (e.g. when passed in as a function\n * argument) and returns the type that the local thread has to supply.\n *\n * This is the inverse of `RemoteProperty<T>`.\n *\n * Note: This needs to be its own type alias, otherwise it will not distribute over unions. See\n * https://www.typescriptlang.org/docs/handbook/advanced-types.html#distributive-conditional-types\n */\ntype LocalProperty<T> = T extends Function | ProxyMarked\n  ? Local<T>\n  : Unpromisify<T>;\n\n/**\n * Proxies `T` if it is a `ProxyMarked`, clones it otherwise (as handled by structured cloning and transfer handlers).\n */\nexport type ProxyOrClone<T> = T extends ProxyMarked ? Remote<T> : T;\n/**\n * Inverse of `ProxyOrClone<T>`.\n */\nexport type UnproxyOrClone<T> = T extends RemoteObject<ProxyMarked>\n  ? Local<T>\n  : T;\n\n/**\n * Takes the raw type of a remote object in the other thread and returns the type as it is visible to the local thread\n * when proxied with `Comlink.proxy()`.\n *\n * This does not handle call signatures, which is handled by the more general `Remote<T>` type.\n *\n * @template T The raw type of a remote object as seen in the other thread.\n */\nexport type RemoteObject<T> = { [P in keyof T]: RemoteProperty<T[P]> };\n/**\n * Takes the type of an object as a remote thread would see it through a proxy (e.g. when passed in as a function\n * argument) and returns the type that the local thread has to supply.\n *\n * This does not handle call signatures, which is handled by the more general `Local<T>` type.\n *\n * This is the inverse of `RemoteObject<T>`.\n *\n * @template T The type of a proxied object.\n */\nexport type LocalObject<T> = { [P in keyof T]: LocalProperty<T[P]> };\n\n/**\n * Additional special comlink methods available on each proxy returned by `Comlink.wrap()`.\n */\nexport interface ProxyMethods {\n  [createEndpoint]: () => Promise<MessagePort>;\n  [releaseProxy]: () => void;\n}\n\n/**\n * Takes the raw type of a remote object, function or class in the other thread and returns the type as it is visible to\n * the local thread from the proxy return value of `Comlink.wrap()` or `Comlink.proxy()`.\n */\nexport type Remote<T> =\n  // Handle properties\n  RemoteObject<T> &\n    // Handle call signature (if present)\n    (T extends (...args: infer TArguments) => infer TReturn\n      ? (\n          ...args: { [I in keyof TArguments]: UnproxyOrClone<TArguments[I]> }\n        ) => Promisify<ProxyOrClone<Unpromisify<TReturn>>>\n      : unknown) &\n    // Handle construct signature (if present)\n    // The return of construct signatures is always proxied (whether marked or not)\n    (T extends { new (...args: infer TArguments): infer TInstance }\n      ? {\n          new (\n            ...args: {\n              [I in keyof TArguments]: UnproxyOrClone<TArguments[I]>;\n            }\n          ): Promisify<Remote<TInstance>>;\n        }\n      : unknown) &\n    // Include additional special comlink methods available on the proxy.\n    ProxyMethods;\n\n/**\n * Expresses that a type can be either a sync or async.\n */\ntype MaybePromise<T> = Promise<T> | T;\n\n/**\n * Takes the raw type of a remote object, function or class as a remote thread would see it through a proxy (e.g. when\n * passed in as a function argument) and returns the type the local thread has to supply.\n *\n * This is the inverse of `Remote<T>`. It takes a `Remote<T>` and returns its original input `T`.\n */\nexport type Local<T> =\n  // Omit the special proxy methods (they don't need to be supplied, comlink adds them)\n  Omit<LocalObject<T>, keyof ProxyMethods> &\n    // Handle call signatures (if present)\n    (T extends (...args: infer TArguments) => infer TReturn\n      ? (\n          ...args: { [I in keyof TArguments]: ProxyOrClone<TArguments[I]> }\n        ) => // The raw function could either be sync or async, but is always proxied automatically\n        MaybePromise<UnproxyOrClone<Unpromisify<TReturn>>>\n      : unknown) &\n    // Handle construct signature (if present)\n    // The return of construct signatures is always proxied (whether marked or not)\n    (T extends { new (...args: infer TArguments): infer TInstance }\n      ? {\n          new (\n            ...args: {\n              [I in keyof TArguments]: ProxyOrClone<TArguments[I]>;\n            }\n          ): // The raw constructor could either be sync or async, but is always proxied automatically\n          MaybePromise<Local<Unpromisify<TInstance>>>;\n        }\n      : unknown);\n\nconst isObject = (val: unknown): val is object =>\n  (typeof val === \"object\" && val !== null) || typeof val === \"function\";\n\n/**\n * Customizes the serialization of certain values as determined by `canHandle()`.\n *\n * @template T The input type being handled by this transfer handler.\n * @template S The serialized type sent over the wire.\n */\nexport interface TransferHandler<T, S> {\n  /**\n   * Gets called for every value to determine whether this transfer handler\n   * should serialize the value, which includes checking that it is of the right\n   * type (but can perform checks beyond that as well).\n   */\n  canHandle(value: unknown): value is T;\n\n  /**\n   * Gets called with the value if `canHandle()` returned `true` to produce a\n   * value that can be sent in a message, consisting of structured-cloneable\n   * values and/or transferrable objects.\n   */\n  serialize(value: T): [S, Transferable[]];\n\n  /**\n   * Gets called to deserialize an incoming value that was serialized in the\n   * other thread with this transfer handler (known through the name it was\n   * registered under).\n   */\n  deserialize(value: S): T;\n}\n\n/**\n * Internal transfer handle to handle objects marked to proxy.\n */\nconst proxyTransferHandler: TransferHandler<object, MessagePort> = {\n  canHandle: (val): val is ProxyMarked =>\n    isObject(val) && (val as ProxyMarked)[proxyMarker],\n  serialize(obj) {\n    const { port1, port2 } = new MessageChannel();\n    expose(obj, port1);\n    return [port2, [port2]];\n  },\n  deserialize(port) {\n    port.start();\n    return wrap(port);\n  },\n};\n\ninterface ThrownValue {\n  [throwMarker]: unknown; // just needs to be present\n  value: unknown;\n}\ntype SerializedThrownValue =\n  | { isError: true; value: Error }\n  | { isError: false; value: unknown };\n\n/**\n * Internal transfer handler to handle thrown exceptions.\n */\nconst throwTransferHandler: TransferHandler<\n  ThrownValue,\n  SerializedThrownValue\n> = {\n  canHandle: (value): value is ThrownValue =>\n    isObject(value) && throwMarker in value,\n  serialize({ value }) {\n    let serialized: SerializedThrownValue;\n    if (value instanceof Error) {\n      serialized = {\n        isError: true,\n        value: {\n          message: value.message,\n          name: value.name,\n          stack: value.stack,\n        },\n      };\n    } else {\n      serialized = { isError: false, value };\n    }\n    return [serialized, []];\n  },\n  deserialize(serialized) {\n    if (serialized.isError) {\n      throw Object.assign(\n        new Error(serialized.value.message),\n        serialized.value\n      );\n    }\n    throw serialized.value;\n  },\n};\n\n/**\n * Allows customizing the serialization of certain values.\n */\nexport const transferHandlers = new Map<\n  string,\n  TransferHandler<unknown, unknown>\n>([\n  [\"proxy\", proxyTransferHandler],\n  [\"throw\", throwTransferHandler],\n]);\n\nexport function expose(obj: any, ep: Endpoint = self as any) {\n  ep.addEventListener(\"message\", function callback(ev: MessageEvent) {\n    if (!ev || !ev.data) {\n      return;\n    }\n    const { id, type, path } = {\n      path: [] as string[],\n      ...(ev.data as Message),\n    };\n    const argumentList = (ev.data.argumentList || []).map(fromWireValue);\n    let returnValue;\n    try {\n      const parent = path.slice(0, -1).reduce((obj, prop) => obj[prop], obj);\n      const rawValue = path.reduce((obj, prop) => obj[prop], obj);\n      switch (type) {\n        case MessageType.GET:\n          {\n            returnValue = rawValue;\n          }\n          break;\n        case MessageType.SET:\n          {\n            parent[path.slice(-1)[0]] = fromWireValue(ev.data.value);\n            returnValue = true;\n          }\n          break;\n        case MessageType.APPLY:\n          {\n            returnValue = rawValue.apply(parent, argumentList);\n          }\n          break;\n        case MessageType.CONSTRUCT:\n          {\n            const value = new rawValue(...argumentList);\n            returnValue = proxy(value);\n          }\n          break;\n        case MessageType.ENDPOINT:\n          {\n            const { port1, port2 } = new MessageChannel();\n            expose(obj, port2);\n            returnValue = transfer(port1, [port1]);\n          }\n          break;\n        case MessageType.RELEASE:\n          {\n            returnValue = undefined;\n          }\n          break;\n        default:\n          return;\n      }\n    } catch (value) {\n      returnValue = { value, [throwMarker]: 0 };\n    }\n    Promise.resolve(returnValue)\n      .catch((value) => {\n        return { value, [throwMarker]: 0 };\n      })\n      .then((returnValue) => {\n        const [wireValue, transferables] = toWireValue(returnValue);\n        ep.postMessage({ ...wireValue, id }, transferables);\n        if (type === MessageType.RELEASE) {\n          // detach and deactive after sending release response above.\n          ep.removeEventListener(\"message\", callback as any);\n          closeEndPoint(ep);\n        }\n      });\n  } as any);\n  if (ep.start) {\n    ep.start();\n  }\n}\n\nfunction isMessagePort(endpoint: Endpoint): endpoint is MessagePort {\n  return endpoint.constructor.name === \"MessagePort\";\n}\n\nfunction closeEndPoint(endpoint: Endpoint) {\n  if (isMessagePort(endpoint)) endpoint.close();\n}\n\nexport function wrap<T>(ep: Endpoint, target?: any): Remote<T> {\n  return createProxy<T>(ep, [], target) as any;\n}\n\nfunction throwIfProxyReleased(isReleased: boolean) {\n  if (isReleased) {\n    throw new Error(\"Proxy has been released and is not useable\");\n  }\n}\n\nfunction createProxy<T>(\n  ep: Endpoint,\n  path: (string | number | symbol)[] = [],\n  target: object = function () {}\n): Remote<T> {\n  let isProxyReleased = false;\n  const proxy = new Proxy(target, {\n    get(_target, prop) {\n      throwIfProxyReleased(isProxyReleased);\n      if (prop === releaseProxy) {\n        return () => {\n          return requestResponseMessage(ep, {\n            type: MessageType.RELEASE,\n            path: path.map((p) => p.toString()),\n          }).then(() => {\n            closeEndPoint(ep);\n            isProxyReleased = true;\n          });\n        };\n      }\n      if (prop === \"then\") {\n        if (path.length === 0) {\n          return { then: () => proxy };\n        }\n        const r = requestResponseMessage(ep, {\n          type: MessageType.GET,\n          path: path.map((p) => p.toString()),\n        }).then(fromWireValue);\n        return r.then.bind(r);\n      }\n      return createProxy(ep, [...path, prop]);\n    },\n    set(_target, prop, rawValue) {\n      throwIfProxyReleased(isProxyReleased);\n      // FIXME: ES6 Proxy Handler `set` methods are supposed to return a\n      // boolean. To show good will, we return true asynchronously ¯\\_(ツ)_/¯\n      const [value, transferables] = toWireValue(rawValue);\n      return requestResponseMessage(\n        ep,\n        {\n          type: MessageType.SET,\n          path: [...path, prop].map((p) => p.toString()),\n          value,\n        },\n        transferables\n      ).then(fromWireValue) as any;\n    },\n    apply(_target, _thisArg, rawArgumentList) {\n      throwIfProxyReleased(isProxyReleased);\n      const last = path[path.length - 1];\n      if ((last as any) === createEndpoint) {\n        return requestResponseMessage(ep, {\n          type: MessageType.ENDPOINT,\n        }).then(fromWireValue);\n      }\n      // We just pretend that `bind()` didn’t happen.\n      if (last === \"bind\") {\n        return createProxy(ep, path.slice(0, -1));\n      }\n      const [argumentList, transferables] = processArguments(rawArgumentList);\n      return requestResponseMessage(\n        ep,\n        {\n          type: MessageType.APPLY,\n          path: path.map((p) => p.toString()),\n          argumentList,\n        },\n        transferables\n      ).then(fromWireValue);\n    },\n    construct(_target, rawArgumentList) {\n      throwIfProxyReleased(isProxyReleased);\n      const [argumentList, transferables] = processArguments(rawArgumentList);\n      return requestResponseMessage(\n        ep,\n        {\n          type: MessageType.CONSTRUCT,\n          path: path.map((p) => p.toString()),\n          argumentList,\n        },\n        transferables\n      ).then(fromWireValue);\n    },\n  });\n  return proxy as any;\n}\n\nfunction myFlat<T>(arr: (T | T[])[]): T[] {\n  return Array.prototype.concat.apply([], arr);\n}\n\nfunction processArguments(argumentList: any[]): [WireValue[], Transferable[]] {\n  const processed = argumentList.map(toWireValue);\n  return [processed.map((v) => v[0]), myFlat(processed.map((v) => v[1]))];\n}\n\nconst transferCache = new WeakMap<any, Transferable[]>();\nexport function transfer<T>(obj: T, transfers: Transferable[]): T {\n  transferCache.set(obj, transfers);\n  return obj;\n}\n\nexport function proxy<T>(obj: T): T & ProxyMarked {\n  return Object.assign(obj, { [proxyMarker]: true }) as any;\n}\n\nexport function windowEndpoint(\n  w: PostMessageWithOrigin,\n  context: EventSource = self,\n  targetOrigin = \"*\"\n): Endpoint {\n  return {\n    postMessage: (msg: any, transferables: Transferable[]) =>\n      w.postMessage(msg, targetOrigin, transferables),\n    addEventListener: context.addEventListener.bind(context),\n    removeEventListener: context.removeEventListener.bind(context),\n  };\n}\n\nfunction toWireValue(value: any): [WireValue, Transferable[]] {\n  for (const [name, handler] of transferHandlers) {\n    if (handler.canHandle(value)) {\n      const [serializedValue, transferables] = handler.serialize(value);\n      return [\n        {\n          type: WireValueType.HANDLER,\n          name,\n          value: serializedValue,\n        },\n        transferables,\n      ];\n    }\n  }\n  return [\n    {\n      type: WireValueType.RAW,\n      value,\n    },\n    transferCache.get(value) || [],\n  ];\n}\n\nfunction fromWireValue(value: WireValue): any {\n  switch (value.type) {\n    case WireValueType.HANDLER:\n      return transferHandlers.get(value.name)!.deserialize(value.value);\n    case WireValueType.RAW:\n      return value.value;\n  }\n}\n\nfunction requestResponseMessage(\n  ep: Endpoint,\n  msg: Message,\n  transfers?: Transferable[]\n): Promise<WireValue> {\n  return new Promise((resolve) => {\n    const id = generateUUID();\n    ep.addEventListener(\"message\", function l(ev: MessageEvent) {\n      if (!ev.data || !ev.data.id || ev.data.id !== id) {\n        return;\n      }\n      ep.removeEventListener(\"message\", l as any);\n      resolve(ev.data);\n    } as any);\n    if (ep.start) {\n      ep.start();\n    }\n    ep.postMessage({ id, ...msg }, transfers);\n  });\n}\n\nfunction generateUUID(): string {\n  return new Array(4)\n    .fill(0)\n    .map(() => Math.floor(Math.random() * Number.MAX_SAFE_INTEGER).toString(16))\n    .join(\"-\");\n}\n","/***********************************************************************\n\n  A JavaScript tokenizer / parser / beautifier / compressor.\n  https://github.com/mishoo/UglifyJS2\n\n  -------------------------------- (C) ---------------------------------\n\n                           Author: Mihai Bazon\n                         <mihai.bazon@gmail.com>\n                       http://mihai.bazon.net/blog\n\n  Distributed under the BSD license:\n\n    Copyright 2012 (c) Mihai Bazon <mihai.bazon@gmail.com>\n\n    Redistribution and use in source and binary forms, with or without\n    modification, are permitted provided that the following conditions\n    are met:\n\n        * Redistributions of source code must retain the above\n          copyright notice, this list of conditions and the following\n          disclaimer.\n\n        * Redistributions in binary form must reproduce the above\n          copyright notice, this list of conditions and the following\n          disclaimer in the documentation and/or other materials\n          provided with the distribution.\n\n    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER “AS IS” AND ANY\n    EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n    PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER BE\n    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,\n    OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n    PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n    PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n    THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR\n    TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF\n    THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n    SUCH DAMAGE.\n\n ***********************************************************************/\n\n\"use strict\";\n\nfunction characters(str) {\n    return str.split(\"\");\n}\n\nfunction member(name, array) {\n    return array.includes(name);\n}\n\nclass DefaultsError extends Error {\n    constructor(msg, defs) {\n        super();\n\n        this.name = \"DefaultsError\";\n        this.message = msg;\n        this.defs = defs;\n    }\n}\n\nfunction defaults(args, defs, croak) {\n    if (args === true) {\n        args = {};\n    } else if (args != null && typeof args === \"object\") {\n        args = {...args};\n    }\n\n    const ret = args || {};\n\n    if (croak) for (const i in ret) if (HOP(ret, i) && !HOP(defs, i)) {\n        throw new DefaultsError(\"`\" + i + \"` is not a supported option\", defs);\n    }\n\n    for (const i in defs) if (HOP(defs, i)) {\n        if (!args || !HOP(args, i)) {\n            ret[i] = defs[i];\n        } else if (i === \"ecma\") {\n            let ecma = args[i] | 0;\n            if (ecma > 5 && ecma < 2015) ecma += 2009;\n            ret[i] = ecma;\n        } else {\n            ret[i] = (args && HOP(args, i)) ? args[i] : defs[i];\n        }\n    }\n\n    return ret;\n}\n\nfunction noop() {}\nfunction return_false() { return false; }\nfunction return_true() { return true; }\nfunction return_this() { return this; }\nfunction return_null() { return null; }\n\nvar MAP = (function() {\n    function MAP(a, f, backwards) {\n        var ret = [], top = [], i;\n        function doit() {\n            var val = f(a[i], i);\n            var is_last = val instanceof Last;\n            if (is_last) val = val.v;\n            if (val instanceof AtTop) {\n                val = val.v;\n                if (val instanceof Splice) {\n                    top.push.apply(top, backwards ? val.v.slice().reverse() : val.v);\n                } else {\n                    top.push(val);\n                }\n            } else if (val !== skip) {\n                if (val instanceof Splice) {\n                    ret.push.apply(ret, backwards ? val.v.slice().reverse() : val.v);\n                } else {\n                    ret.push(val);\n                }\n            }\n            return is_last;\n        }\n        if (Array.isArray(a)) {\n            if (backwards) {\n                for (i = a.length; --i >= 0;) if (doit()) break;\n                ret.reverse();\n                top.reverse();\n            } else {\n                for (i = 0; i < a.length; ++i) if (doit()) break;\n            }\n        } else {\n            for (i in a) if (HOP(a, i)) if (doit()) break;\n        }\n        return top.concat(ret);\n    }\n    MAP.at_top = function(val) { return new AtTop(val); };\n    MAP.splice = function(val) { return new Splice(val); };\n    MAP.last = function(val) { return new Last(val); };\n    var skip = MAP.skip = {};\n    function AtTop(val) { this.v = val; }\n    function Splice(val) { this.v = val; }\n    function Last(val) { this.v = val; }\n    return MAP;\n})();\n\nfunction make_node(ctor, orig, props) {\n    if (!props) props = {};\n    if (orig) {\n        if (!props.start) props.start = orig.start;\n        if (!props.end) props.end = orig.end;\n    }\n    return new ctor(props);\n}\n\nfunction push_uniq(array, el) {\n    if (!array.includes(el))\n        array.push(el);\n}\n\nfunction string_template(text, props) {\n    return text.replace(/{(.+?)}/g, function(str, p) {\n        return props && props[p];\n    });\n}\n\nfunction remove(array, el) {\n    for (var i = array.length; --i >= 0;) {\n        if (array[i] === el) array.splice(i, 1);\n    }\n}\n\nfunction mergeSort(array, cmp) {\n    if (array.length < 2) return array.slice();\n    function merge(a, b) {\n        var r = [], ai = 0, bi = 0, i = 0;\n        while (ai < a.length && bi < b.length) {\n            cmp(a[ai], b[bi]) <= 0\n                ? r[i++] = a[ai++]\n                : r[i++] = b[bi++];\n        }\n        if (ai < a.length) r.push.apply(r, a.slice(ai));\n        if (bi < b.length) r.push.apply(r, b.slice(bi));\n        return r;\n    }\n    function _ms(a) {\n        if (a.length <= 1)\n            return a;\n        var m = Math.floor(a.length / 2), left = a.slice(0, m), right = a.slice(m);\n        left = _ms(left);\n        right = _ms(right);\n        return merge(left, right);\n    }\n    return _ms(array);\n}\n\nfunction makePredicate(words) {\n    if (!Array.isArray(words)) words = words.split(\" \");\n\n    return new Set(words.sort());\n}\n\nfunction map_add(map, key, value) {\n    if (map.has(key)) {\n        map.get(key).push(value);\n    } else {\n        map.set(key, [ value ]);\n    }\n}\n\nfunction map_from_object(obj) {\n    var map = new Map();\n    for (var key in obj) {\n        if (HOP(obj, key) && key.charAt(0) === \"$\") {\n            map.set(key.substr(1), obj[key]);\n        }\n    }\n    return map;\n}\n\nfunction map_to_object(map) {\n    var obj = Object.create(null);\n    map.forEach(function (value, key) {\n        obj[\"$\" + key] = value;\n    });\n    return obj;\n}\n\nfunction HOP(obj, prop) {\n    return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nfunction keep_name(keep_setting, name) {\n    return keep_setting === true\n        || (keep_setting instanceof RegExp && keep_setting.test(name));\n}\n\nvar lineTerminatorEscape = {\n    \"\\0\": \"0\",\n    \"\\n\": \"n\",\n    \"\\r\": \"r\",\n    \"\\u2028\": \"u2028\",\n    \"\\u2029\": \"u2029\",\n};\nfunction regexp_source_fix(source) {\n    // V8 does not escape line terminators in regexp patterns in node 12\n    // We'll also remove literal \\0\n    return source.replace(/[\\0\\n\\r\\u2028\\u2029]/g, function (match, offset) {\n        var escaped = source[offset - 1] == \"\\\\\"\n            && (source[offset - 2] != \"\\\\\"\n            || /(?:^|[^\\\\])(?:\\\\{2})*$/.test(source.slice(0, offset - 1)));\n        return (escaped ? \"\" : \"\\\\\") + lineTerminatorEscape[match];\n    });\n}\nconst all_flags = \"gimuy\";\nfunction sort_regexp_flags(flags) {\n    const existing_flags = new Set(flags.split(\"\"));\n    let out = \"\";\n    for (const flag of all_flags) {\n        if (existing_flags.has(flag)) {\n            out += flag;\n            existing_flags.delete(flag);\n        }\n    }\n    if (existing_flags.size) {\n        // Flags Terser doesn't know about\n        existing_flags.forEach(flag => { out += flag; });\n    }\n    return out;\n}\n\nfunction has_annotation(node, annotation) {\n    return node._annotations & annotation;\n}\n\nfunction set_annotation(node, annotation) {\n    node._annotations |= annotation;\n}\n\nexport {\n    characters,\n    defaults,\n    HOP,\n    keep_name,\n    make_node,\n    makePredicate,\n    map_add,\n    map_from_object,\n    map_to_object,\n    MAP,\n    member,\n    mergeSort,\n    noop,\n    push_uniq,\n    regexp_source_fix,\n    remove,\n    return_false,\n    return_null,\n    return_this,\n    return_true,\n    sort_regexp_flags,\n    string_template,\n    has_annotation,\n    set_annotation\n};\n","/***********************************************************************\n\n  A JavaScript tokenizer / parser / beautifier / compressor.\n  https://github.com/mishoo/UglifyJS2\n\n  -------------------------------- (C) ---------------------------------\n\n                           Author: Mihai Bazon\n                         <mihai.bazon@gmail.com>\n                       http://mihai.bazon.net/blog\n\n  Distributed under the BSD license:\n\n    Copyright 2012 (c) Mihai Bazon <mihai.bazon@gmail.com>\n    Parser based on parse-js (http://marijn.haverbeke.nl/parse-js/).\n\n    Redistribution and use in source and binary forms, with or without\n    modification, are permitted provided that the following conditions\n    are met:\n\n        * Redistributions of source code must retain the above\n          copyright notice, this list of conditions and the following\n          disclaimer.\n\n        * Redistributions in binary form must reproduce the above\n          copyright notice, this list of conditions and the following\n          disclaimer in the documentation and/or other materials\n          provided with the distribution.\n\n    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER “AS IS” AND ANY\n    EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n    PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER BE\n    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,\n    OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n    PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n    PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n    THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR\n    TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF\n    THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n    SUCH DAMAGE.\n\n ***********************************************************************/\n\n\"use strict\";\n\nimport {\n    characters,\n    defaults,\n    makePredicate,\n    set_annotation,\n} from \"./utils/index.js\";\nimport {\n    AST_Accessor,\n    AST_Array,\n    AST_Arrow,\n    AST_Assign,\n    AST_Await,\n    AST_BigInt,\n    AST_Binary,\n    AST_BlockStatement,\n    AST_Break,\n    AST_Call,\n    AST_Case,\n    AST_Catch,\n    AST_Chain,\n    AST_ClassExpression,\n    AST_ClassPrivateProperty,\n    AST_ClassProperty,\n    AST_ConciseMethod,\n    AST_PrivateGetter,\n    AST_PrivateMethod,\n    AST_PrivateSetter,\n    AST_Conditional,\n    AST_Const,\n    AST_Continue,\n    AST_Debugger,\n    AST_Default,\n    AST_DefaultAssign,\n    AST_DefClass,\n    AST_Definitions,\n    AST_Defun,\n    AST_Destructuring,\n    AST_Directive,\n    AST_Do,\n    AST_Dot,\n    AST_DotHash,\n    AST_EmptyStatement,\n    AST_Expansion,\n    AST_Export,\n    AST_False,\n    AST_Finally,\n    AST_For,\n    AST_ForIn,\n    AST_ForOf,\n    AST_Function,\n    AST_Hole,\n    AST_If,\n    AST_Import,\n    AST_ImportMeta,\n    AST_IterationStatement,\n    AST_Label,\n    AST_LabeledStatement,\n    AST_LabelRef,\n    AST_Let,\n    AST_NameMapping,\n    AST_New,\n    AST_NewTarget,\n    AST_Node,\n    AST_Null,\n    AST_Number,\n    AST_Object,\n    AST_ObjectGetter,\n    AST_ObjectKeyVal,\n    AST_ObjectProperty,\n    AST_ObjectSetter,\n    AST_PrefixedTemplateString,\n    AST_PropAccess,\n    AST_RegExp,\n    AST_Return,\n    AST_Sequence,\n    AST_SimpleStatement,\n    AST_String,\n    AST_Sub,\n    AST_Super,\n    AST_Switch,\n    AST_SymbolCatch,\n    AST_SymbolClass,\n    AST_SymbolClassProperty,\n    AST_SymbolConst,\n    AST_SymbolDeclaration,\n    AST_SymbolDefClass,\n    AST_SymbolDefun,\n    AST_SymbolExport,\n    AST_SymbolExportForeign,\n    AST_SymbolFunarg,\n    AST_SymbolImport,\n    AST_SymbolImportForeign,\n    AST_SymbolLambda,\n    AST_SymbolLet,\n    AST_SymbolMethod,\n    AST_SymbolRef,\n    AST_SymbolVar,\n    AST_TemplateSegment,\n    AST_TemplateString,\n    AST_This,\n    AST_Throw,\n    AST_Token,\n    AST_Toplevel,\n    AST_True,\n    AST_Try,\n    AST_UnaryPostfix,\n    AST_UnaryPrefix,\n    AST_Var,\n    AST_VarDef,\n    AST_While,\n    AST_With,\n    AST_Yield,\n    _INLINE,\n    _NOINLINE,\n    _PURE\n} from \"./ast.js\";\n\nvar LATEST_RAW = \"\";  // Only used for numbers and template strings\nvar LATEST_TEMPLATE_END = true;\n\nvar KEYWORDS = \"break case catch class const continue debugger default delete do else export extends finally for function if in instanceof let new return switch throw try typeof var void while with\";\nvar KEYWORDS_ATOM = \"false null true\";\nvar RESERVED_WORDS = \"enum import super this \" + KEYWORDS_ATOM + \" \" + KEYWORDS;\nvar ALL_RESERVED_WORDS = \"implements interface package private protected public static \" + RESERVED_WORDS;\nvar KEYWORDS_BEFORE_EXPRESSION = \"return new delete throw else case yield await\";\n\nKEYWORDS = makePredicate(KEYWORDS);\nRESERVED_WORDS = makePredicate(RESERVED_WORDS);\nKEYWORDS_BEFORE_EXPRESSION = makePredicate(KEYWORDS_BEFORE_EXPRESSION);\nKEYWORDS_ATOM = makePredicate(KEYWORDS_ATOM);\nALL_RESERVED_WORDS = makePredicate(ALL_RESERVED_WORDS);\n\nvar OPERATOR_CHARS = makePredicate(characters(\"+-*&%=<>!?|~^\"));\n\nvar RE_NUM_LITERAL = /[0-9a-f]/i;\nvar RE_HEX_NUMBER = /^0x[0-9a-f]+$/i;\nvar RE_OCT_NUMBER = /^0[0-7]+$/;\nvar RE_ES6_OCT_NUMBER = /^0o[0-7]+$/i;\nvar RE_BIN_NUMBER = /^0b[01]+$/i;\nvar RE_DEC_NUMBER = /^\\d*\\.?\\d*(?:e[+-]?\\d*(?:\\d\\.?|\\.?\\d)\\d*)?$/i;\nvar RE_BIG_INT = /^(0[xob])?[0-9a-f]+n$/i;\n\nvar OPERATORS = makePredicate([\n    \"in\",\n    \"instanceof\",\n    \"typeof\",\n    \"new\",\n    \"void\",\n    \"delete\",\n    \"++\",\n    \"--\",\n    \"+\",\n    \"-\",\n    \"!\",\n    \"~\",\n    \"&\",\n    \"|\",\n    \"^\",\n    \"*\",\n    \"**\",\n    \"/\",\n    \"%\",\n    \">>\",\n    \"<<\",\n    \">>>\",\n    \"<\",\n    \">\",\n    \"<=\",\n    \">=\",\n    \"==\",\n    \"===\",\n    \"!=\",\n    \"!==\",\n    \"?\",\n    \"=\",\n    \"+=\",\n    \"-=\",\n    \"||=\",\n    \"&&=\",\n    \"??=\",\n    \"/=\",\n    \"*=\",\n    \"**=\",\n    \"%=\",\n    \">>=\",\n    \"<<=\",\n    \">>>=\",\n    \"|=\",\n    \"^=\",\n    \"&=\",\n    \"&&\",\n    \"??\",\n    \"||\",\n]);\n\nvar WHITESPACE_CHARS = makePredicate(characters(\" \\u00a0\\n\\r\\t\\f\\u000b\\u200b\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000\\uFEFF\"));\n\nvar NEWLINE_CHARS = makePredicate(characters(\"\\n\\r\\u2028\\u2029\"));\n\nvar PUNC_AFTER_EXPRESSION = makePredicate(characters(\";]),:\"));\n\nvar PUNC_BEFORE_EXPRESSION = makePredicate(characters(\"[{(,;:\"));\n\nvar PUNC_CHARS = makePredicate(characters(\"[]{}(),;:\"));\n\n/* -----[ Tokenizer ]----- */\n\n// surrogate safe regexps adapted from https://github.com/mathiasbynens/unicode-8.0.0/tree/89b412d8a71ecca9ed593d9e9fa073ab64acfebe/Binary_Property\nvar UNICODE = {\n    ID_Start: /[$A-Z_a-z\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0-\\u08B4\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2118-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309B-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FD5\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AD\\uA7B0-\\uA7B7\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD40-\\uDD74\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDF00-\\uDF1F\\uDF30-\\uDF4A\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2]|\\uD804[\\uDC03-\\uDC37\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDD03-\\uDD26\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD805[\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE80-\\uDEAA\\uDF00-\\uDF19]|\\uD806[\\uDCA0-\\uDCDF\\uDCFF\\uDEC0-\\uDEF8]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF40-\\uDF43\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDF00-\\uDF44\\uDF50\\uDF93-\\uDF9F]|\\uD82C[\\uDC00\\uDC01]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB]|\\uD83A[\\uDC00-\\uDCC4]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1]|\\uD87E[\\uDC00-\\uDE1D]/,\n    ID_Continue: /(?:[$0-9A-Z_a-z\\xAA\\xB5\\xB7\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0300-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u0483-\\u0487\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0610-\\u061A\\u0620-\\u0669\\u066E-\\u06D3\\u06D5-\\u06DC\\u06DF-\\u06E8\\u06EA-\\u06FC\\u06FF\\u0710-\\u074A\\u074D-\\u07B1\\u07C0-\\u07F5\\u07FA\\u0800-\\u082D\\u0840-\\u085B\\u08A0-\\u08B4\\u08E3-\\u0963\\u0966-\\u096F\\u0971-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09F1\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A75\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AEF\\u0AF9\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B66-\\u0B6F\\u0B71\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-\\u0BEF\\u0C00-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C58-\\u0C5A\\u0C60-\\u0C63\\u0C66-\\u0C6F\\u0C81-\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDE\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D01-\\u0D03\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4E\\u0D57\\u0D5F-\\u0D63\\u0D66-\\u0D6F\\u0D7A-\\u0D7F\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2\\u0DF3\\u0E01-\\u0E3A\\u0E40-\\u0E4E\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB9\\u0EBB-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F84\\u0F86-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u1000-\\u1049\\u1050-\\u109D\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135D-\\u135F\\u1369-\\u1371\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773\\u1780-\\u17D3\\u17D7\\u17DC\\u17DD\\u17E0-\\u17E9\\u180B-\\u180D\\u1810-\\u1819\\u1820-\\u1877\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19DA\\u1A00-\\u1A1B\\u1A20-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1AB0-\\u1ABD\\u1B00-\\u1B4B\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1BF3\\u1C00-\\u1C37\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1CD0-\\u1CD2\\u1CD4-\\u1CF6\\u1CF8\\u1CF9\\u1D00-\\u1DF5\\u1DFC-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u200C\\u200D\\u203F\\u2040\\u2054\\u2071\\u207F\\u2090-\\u209C\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2118-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D7F-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2DE0-\\u2DFF\\u3005-\\u3007\\u3021-\\u302F\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u3099-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FD5\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66F\\uA674-\\uA67D\\uA67F-\\uA6F1\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AD\\uA7B0-\\uA7B7\\uA7F7-\\uA827\\uA840-\\uA873\\uA880-\\uA8C4\\uA8D0-\\uA8D9\\uA8E0-\\uA8F7\\uA8FB\\uA8FD\\uA900-\\uA92D\\uA930-\\uA953\\uA960-\\uA97C\\uA980-\\uA9C0\\uA9CF-\\uA9D9\\uA9E0-\\uA9FE\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A-\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEF\\uAAF2-\\uAAF6\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF3F\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD40-\\uDD74\\uDDFD\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDEE0\\uDF00-\\uDF1F\\uDF30-\\uDF4A\\uDF50-\\uDF7A\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCA0-\\uDCA9\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00-\\uDE03\\uDE05\\uDE06\\uDE0C-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE38-\\uDE3A\\uDE3F\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE6\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2]|\\uD804[\\uDC00-\\uDC46\\uDC66-\\uDC6F\\uDC7F-\\uDCBA\\uDCD0-\\uDCE8\\uDCF0-\\uDCF9\\uDD00-\\uDD34\\uDD36-\\uDD3F\\uDD50-\\uDD73\\uDD76\\uDD80-\\uDDC4\\uDDCA-\\uDDCC\\uDDD0-\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE37\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEEA\\uDEF0-\\uDEF9\\uDF00-\\uDF03\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3C-\\uDF44\\uDF47\\uDF48\\uDF4B-\\uDF4D\\uDF50\\uDF57\\uDF5D-\\uDF63\\uDF66-\\uDF6C\\uDF70-\\uDF74]|\\uD805[\\uDC80-\\uDCC5\\uDCC7\\uDCD0-\\uDCD9\\uDD80-\\uDDB5\\uDDB8-\\uDDC0\\uDDD8-\\uDDDD\\uDE00-\\uDE40\\uDE44\\uDE50-\\uDE59\\uDE80-\\uDEB7\\uDEC0-\\uDEC9\\uDF00-\\uDF19\\uDF1D-\\uDF2B\\uDF30-\\uDF39]|\\uD806[\\uDCA0-\\uDCE9\\uDCFF\\uDEC0-\\uDEF8]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDE60-\\uDE69\\uDED0-\\uDEED\\uDEF0-\\uDEF4\\uDF00-\\uDF36\\uDF40-\\uDF43\\uDF50-\\uDF59\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDF00-\\uDF44\\uDF50-\\uDF7E\\uDF8F-\\uDF9F]|\\uD82C[\\uDC00\\uDC01]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99\\uDC9D\\uDC9E]|\\uD834[\\uDD65-\\uDD69\\uDD6D-\\uDD72\\uDD7B-\\uDD82\\uDD85-\\uDD8B\\uDDAA-\\uDDAD\\uDE42-\\uDE44]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB\\uDFCE-\\uDFFF]|\\uD836[\\uDE00-\\uDE36\\uDE3B-\\uDE6C\\uDE75\\uDE84\\uDE9B-\\uDE9F\\uDEA1-\\uDEAF]|\\uD83A[\\uDC00-\\uDCC4\\uDCD0-\\uDCD6]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1]|\\uD87E[\\uDC00-\\uDE1D]|\\uDB40[\\uDD00-\\uDDEF])+/,\n};\n\nfunction get_full_char(str, pos) {\n    if (is_surrogate_pair_head(str.charCodeAt(pos))) {\n        if (is_surrogate_pair_tail(str.charCodeAt(pos + 1))) {\n            return str.charAt(pos) + str.charAt(pos + 1);\n        }\n    } else if (is_surrogate_pair_tail(str.charCodeAt(pos))) {\n        if (is_surrogate_pair_head(str.charCodeAt(pos - 1))) {\n            return str.charAt(pos - 1) + str.charAt(pos);\n        }\n    }\n    return str.charAt(pos);\n}\n\nfunction get_full_char_code(str, pos) {\n    // https://en.wikipedia.org/wiki/Universal_Character_Set_characters#Surrogates\n    if (is_surrogate_pair_head(str.charCodeAt(pos))) {\n        return 0x10000 + (str.charCodeAt(pos) - 0xd800 << 10) + str.charCodeAt(pos + 1) - 0xdc00;\n    }\n    return str.charCodeAt(pos);\n}\n\nfunction get_full_char_length(str) {\n    var surrogates = 0;\n\n    for (var i = 0; i < str.length; i++) {\n        if (is_surrogate_pair_head(str.charCodeAt(i)) && is_surrogate_pair_tail(str.charCodeAt(i + 1))) {\n            surrogates++;\n            i++;\n        }\n    }\n\n    return str.length - surrogates;\n}\n\nfunction from_char_code(code) {\n    // Based on https://github.com/mathiasbynens/String.fromCodePoint/blob/master/fromcodepoint.js\n    if (code > 0xFFFF) {\n        code -= 0x10000;\n        return (String.fromCharCode((code >> 10) + 0xD800) +\n            String.fromCharCode((code % 0x400) + 0xDC00));\n    }\n    return String.fromCharCode(code);\n}\n\nfunction is_surrogate_pair_head(code) {\n    return code >= 0xd800 && code <= 0xdbff;\n}\n\nfunction is_surrogate_pair_tail(code) {\n    return code >= 0xdc00 && code <= 0xdfff;\n}\n\nfunction is_digit(code) {\n    return code >= 48 && code <= 57;\n}\n\nfunction is_identifier_start(ch) {\n    return UNICODE.ID_Start.test(ch);\n}\n\nfunction is_identifier_char(ch) {\n    return UNICODE.ID_Continue.test(ch);\n}\n\nconst BASIC_IDENT = /^[a-z_$][a-z0-9_$]*$/i;\n\nfunction is_basic_identifier_string(str) {\n    return BASIC_IDENT.test(str);\n}\n\nfunction is_identifier_string(str, allow_surrogates) {\n    if (BASIC_IDENT.test(str)) {\n        return true;\n    }\n    if (!allow_surrogates && /[\\ud800-\\udfff]/.test(str)) {\n        return false;\n    }\n    var match = UNICODE.ID_Start.exec(str);\n    if (!match || match.index !== 0) {\n        return false;\n    }\n\n    str = str.slice(match[0].length);\n    if (!str) {\n        return true;\n    }\n\n    match = UNICODE.ID_Continue.exec(str);\n    return !!match && match[0].length === str.length;\n}\n\nfunction parse_js_number(num, allow_e = true) {\n    if (!allow_e && num.includes(\"e\")) {\n        return NaN;\n    }\n    if (RE_HEX_NUMBER.test(num)) {\n        return parseInt(num.substr(2), 16);\n    } else if (RE_OCT_NUMBER.test(num)) {\n        return parseInt(num.substr(1), 8);\n    } else if (RE_ES6_OCT_NUMBER.test(num)) {\n        return parseInt(num.substr(2), 8);\n    } else if (RE_BIN_NUMBER.test(num)) {\n        return parseInt(num.substr(2), 2);\n    } else if (RE_DEC_NUMBER.test(num)) {\n        return parseFloat(num);\n    } else {\n        var val = parseFloat(num);\n        if (val == num) return val;\n    }\n}\n\nclass JS_Parse_Error extends Error {\n    constructor(message, filename, line, col, pos) {\n        super();\n\n        this.name = \"SyntaxError\";\n        this.message = message;\n        this.filename = filename;\n        this.line = line;\n        this.col = col;\n        this.pos = pos;\n    }\n}\n\nfunction js_error(message, filename, line, col, pos) {\n    throw new JS_Parse_Error(message, filename, line, col, pos);\n}\n\nfunction is_token(token, type, val) {\n    return token.type == type && (val == null || token.value == val);\n}\n\nvar EX_EOF = {};\n\nfunction tokenizer($TEXT, filename, html5_comments, shebang) {\n    var S = {\n        text            : $TEXT,\n        filename        : filename,\n        pos             : 0,\n        tokpos          : 0,\n        line            : 1,\n        tokline         : 0,\n        col             : 0,\n        tokcol          : 0,\n        newline_before  : false,\n        regex_allowed   : false,\n        brace_counter   : 0,\n        template_braces : [],\n        comments_before : [],\n        directives      : {},\n        directive_stack : []\n    };\n\n    function peek() { return get_full_char(S.text, S.pos); }\n\n    // Used because parsing ?. involves a lookahead for a digit\n    function is_option_chain_op() {\n        const must_be_dot = S.text.charCodeAt(S.pos + 1) === 46;\n        if (!must_be_dot) return false;\n\n        const cannot_be_digit = S.text.charCodeAt(S.pos + 2);\n        return cannot_be_digit < 48 || cannot_be_digit > 57;\n    }\n\n    function next(signal_eof, in_string) {\n        var ch = get_full_char(S.text, S.pos++);\n        if (signal_eof && !ch)\n            throw EX_EOF;\n        if (NEWLINE_CHARS.has(ch)) {\n            S.newline_before = S.newline_before || !in_string;\n            ++S.line;\n            S.col = 0;\n            if (ch == \"\\r\" && peek() == \"\\n\") {\n                // treat a \\r\\n sequence as a single \\n\n                ++S.pos;\n                ch = \"\\n\";\n            }\n        } else {\n            if (ch.length > 1) {\n                ++S.pos;\n                ++S.col;\n            }\n            ++S.col;\n        }\n        return ch;\n    }\n\n    function forward(i) {\n        while (i--) next();\n    }\n\n    function looking_at(str) {\n        return S.text.substr(S.pos, str.length) == str;\n    }\n\n    function find_eol() {\n        var text = S.text;\n        for (var i = S.pos, n = S.text.length; i < n; ++i) {\n            var ch = text[i];\n            if (NEWLINE_CHARS.has(ch))\n                return i;\n        }\n        return -1;\n    }\n\n    function find(what, signal_eof) {\n        var pos = S.text.indexOf(what, S.pos);\n        if (signal_eof && pos == -1) throw EX_EOF;\n        return pos;\n    }\n\n    function start_token() {\n        S.tokline = S.line;\n        S.tokcol = S.col;\n        S.tokpos = S.pos;\n    }\n\n    var prev_was_dot = false;\n    var previous_token = null;\n    function token(type, value, is_comment) {\n        S.regex_allowed = ((type == \"operator\" && !UNARY_POSTFIX.has(value)) ||\n                           (type == \"keyword\" && KEYWORDS_BEFORE_EXPRESSION.has(value)) ||\n                           (type == \"punc\" && PUNC_BEFORE_EXPRESSION.has(value))) ||\n                           (type == \"arrow\");\n        if (type == \"punc\" && (value == \".\" || value == \"?.\")) {\n            prev_was_dot = true;\n        } else if (!is_comment) {\n            prev_was_dot = false;\n        }\n        const line     = S.tokline;\n        const col      = S.tokcol;\n        const pos      = S.tokpos;\n        const nlb      = S.newline_before;\n        const file     = filename;\n        let comments_before = [];\n        let comments_after  = [];\n\n        if (!is_comment) {\n            comments_before = S.comments_before;\n            comments_after = S.comments_before = [];\n        }\n        S.newline_before = false;\n        const tok = new AST_Token(type, value, line, col, pos, nlb, comments_before, comments_after, file);\n\n        if (!is_comment) previous_token = tok;\n        return tok;\n    }\n\n    function skip_whitespace() {\n        while (WHITESPACE_CHARS.has(peek()))\n            next();\n    }\n\n    function read_while(pred) {\n        var ret = \"\", ch, i = 0;\n        while ((ch = peek()) && pred(ch, i++))\n            ret += next();\n        return ret;\n    }\n\n    function parse_error(err) {\n        js_error(err, filename, S.tokline, S.tokcol, S.tokpos);\n    }\n\n    function read_num(prefix) {\n        var has_e = false, after_e = false, has_x = false, has_dot = prefix == \".\", is_big_int = false, numeric_separator = false;\n        var num = read_while(function(ch, i) {\n            if (is_big_int) return false;\n\n            var code = ch.charCodeAt(0);\n            switch (code) {\n              case 95: // _\n                return (numeric_separator = true);\n              case 98: case 66: // bB\n                return (has_x = true); // Can occur in hex sequence, don't return false yet\n              case 111: case 79: // oO\n              case 120: case 88: // xX\n                return has_x ? false : (has_x = true);\n              case 101: case 69: // eE\n                return has_x ? true : has_e ? false : (has_e = after_e = true);\n              case 45: // -\n                return after_e || (i == 0 && !prefix);\n              case 43: // +\n                return after_e;\n              case (after_e = false, 46): // .\n                return (!has_dot && !has_x && !has_e) ? (has_dot = true) : false;\n            }\n\n            if (ch === \"n\") {\n                is_big_int = true;\n\n                return true;\n            }\n\n            return RE_NUM_LITERAL.test(ch);\n        });\n        if (prefix) num = prefix + num;\n\n        LATEST_RAW = num;\n\n        if (RE_OCT_NUMBER.test(num) && next_token.has_directive(\"use strict\")) {\n            parse_error(\"Legacy octal literals are not allowed in strict mode\");\n        }\n        if (numeric_separator) {\n            if (num.endsWith(\"_\")) {\n                parse_error(\"Numeric separators are not allowed at the end of numeric literals\");\n            } else if (num.includes(\"__\")) {\n                parse_error(\"Only one underscore is allowed as numeric separator\");\n            }\n            num = num.replace(/_/g, \"\");\n        }\n        if (num.endsWith(\"n\")) {\n            const without_n = num.slice(0, -1);\n            const allow_e = RE_HEX_NUMBER.test(without_n);\n            const valid = parse_js_number(without_n, allow_e);\n            if (!has_dot && RE_BIG_INT.test(num) && !isNaN(valid))\n                return token(\"big_int\", without_n);\n            parse_error(\"Invalid or unexpected token\");\n        }\n        var valid = parse_js_number(num);\n        if (!isNaN(valid)) {\n            return token(\"num\", valid);\n        } else {\n            parse_error(\"Invalid syntax: \" + num);\n        }\n    }\n\n    function is_octal(ch) {\n        return ch >= \"0\" && ch <= \"7\";\n    }\n\n    function read_escaped_char(in_string, strict_hex, template_string) {\n        var ch = next(true, in_string);\n        switch (ch.charCodeAt(0)) {\n          case 110 : return \"\\n\";\n          case 114 : return \"\\r\";\n          case 116 : return \"\\t\";\n          case 98  : return \"\\b\";\n          case 118 : return \"\\u000b\"; // \\v\n          case 102 : return \"\\f\";\n          case 120 : return String.fromCharCode(hex_bytes(2, strict_hex)); // \\x\n          case 117 : // \\u\n            if (peek() == \"{\") {\n                next(true);\n                if (peek() === \"}\")\n                    parse_error(\"Expecting hex-character between {}\");\n                while (peek() == \"0\") next(true); // No significance\n                var result, length = find(\"}\", true) - S.pos;\n                // Avoid 32 bit integer overflow (1 << 32 === 1)\n                // We know first character isn't 0 and thus out of range anyway\n                if (length > 6 || (result = hex_bytes(length, strict_hex)) > 0x10FFFF) {\n                    parse_error(\"Unicode reference out of bounds\");\n                }\n                next(true);\n                return from_char_code(result);\n            }\n            return String.fromCharCode(hex_bytes(4, strict_hex));\n          case 10  : return \"\"; // newline\n          case 13  :            // \\r\n            if (peek() == \"\\n\") { // DOS newline\n                next(true, in_string);\n                return \"\";\n            }\n        }\n        if (is_octal(ch)) {\n            if (template_string && strict_hex) {\n                const represents_null_character = ch === \"0\" && !is_octal(peek());\n                if (!represents_null_character) {\n                    parse_error(\"Octal escape sequences are not allowed in template strings\");\n                }\n            }\n            return read_octal_escape_sequence(ch, strict_hex);\n        }\n        return ch;\n    }\n\n    function read_octal_escape_sequence(ch, strict_octal) {\n        // Read\n        var p = peek();\n        if (p >= \"0\" && p <= \"7\") {\n            ch += next(true);\n            if (ch[0] <= \"3\" && (p = peek()) >= \"0\" && p <= \"7\")\n                ch += next(true);\n        }\n\n        // Parse\n        if (ch === \"0\") return \"\\0\";\n        if (ch.length > 0 && next_token.has_directive(\"use strict\") && strict_octal)\n            parse_error(\"Legacy octal escape sequences are not allowed in strict mode\");\n        return String.fromCharCode(parseInt(ch, 8));\n    }\n\n    function hex_bytes(n, strict_hex) {\n        var num = 0;\n        for (; n > 0; --n) {\n            if (!strict_hex && isNaN(parseInt(peek(), 16))) {\n                return parseInt(num, 16) || \"\";\n            }\n            var digit = next(true);\n            if (isNaN(parseInt(digit, 16)))\n                parse_error(\"Invalid hex-character pattern in string\");\n            num += digit;\n        }\n        return parseInt(num, 16);\n    }\n\n    var read_string = with_eof_error(\"Unterminated string constant\", function() {\n        const start_pos = S.pos;\n        var quote = next(), ret = [];\n        for (;;) {\n            var ch = next(true, true);\n            if (ch == \"\\\\\") ch = read_escaped_char(true, true);\n            else if (ch == \"\\r\" || ch == \"\\n\") parse_error(\"Unterminated string constant\");\n            else if (ch == quote) break;\n            ret.push(ch);\n        }\n        var tok = token(\"string\", ret.join(\"\"));\n        LATEST_RAW = S.text.slice(start_pos, S.pos);\n        tok.quote = quote;\n        return tok;\n    });\n\n    var read_template_characters = with_eof_error(\"Unterminated template\", function(begin) {\n        if (begin) {\n            S.template_braces.push(S.brace_counter);\n        }\n        var content = \"\", raw = \"\", ch, tok;\n        next(true, true);\n        while ((ch = next(true, true)) != \"`\") {\n            if (ch == \"\\r\") {\n                if (peek() == \"\\n\") ++S.pos;\n                ch = \"\\n\";\n            } else if (ch == \"$\" && peek() == \"{\") {\n                next(true, true);\n                S.brace_counter++;\n                tok = token(begin ? \"template_head\" : \"template_substitution\", content);\n                LATEST_RAW = raw;\n                LATEST_TEMPLATE_END = false;\n                return tok;\n            }\n\n            raw += ch;\n            if (ch == \"\\\\\") {\n                var tmp = S.pos;\n                var prev_is_tag = previous_token && (previous_token.type === \"name\" || previous_token.type === \"punc\" && (previous_token.value === \")\" || previous_token.value === \"]\"));\n                ch = read_escaped_char(true, !prev_is_tag, true);\n                raw += S.text.substr(tmp, S.pos - tmp);\n            }\n\n            content += ch;\n        }\n        S.template_braces.pop();\n        tok = token(begin ? \"template_head\" : \"template_substitution\", content);\n        LATEST_RAW = raw;\n        LATEST_TEMPLATE_END = true;\n        return tok;\n    });\n\n    function skip_line_comment(type) {\n        var regex_allowed = S.regex_allowed;\n        var i = find_eol(), ret;\n        if (i == -1) {\n            ret = S.text.substr(S.pos);\n            S.pos = S.text.length;\n        } else {\n            ret = S.text.substring(S.pos, i);\n            S.pos = i;\n        }\n        S.col = S.tokcol + (S.pos - S.tokpos);\n        S.comments_before.push(token(type, ret, true));\n        S.regex_allowed = regex_allowed;\n        return next_token;\n    }\n\n    var skip_multiline_comment = with_eof_error(\"Unterminated multiline comment\", function() {\n        var regex_allowed = S.regex_allowed;\n        var i = find(\"*/\", true);\n        var text = S.text.substring(S.pos, i).replace(/\\r\\n|\\r|\\u2028|\\u2029/g, \"\\n\");\n        // update stream position\n        forward(get_full_char_length(text) /* text length doesn't count \\r\\n as 2 char while S.pos - i does */ + 2);\n        S.comments_before.push(token(\"comment2\", text, true));\n        S.newline_before = S.newline_before || text.includes(\"\\n\");\n        S.regex_allowed = regex_allowed;\n        return next_token;\n    });\n\n    var read_name = with_eof_error(\"Unterminated identifier name\", function() {\n        var name = [], ch, escaped = false;\n        var read_escaped_identifier_char = function() {\n            escaped = true;\n            next();\n            if (peek() !== \"u\") {\n                parse_error(\"Expecting UnicodeEscapeSequence -- uXXXX or u{XXXX}\");\n            }\n            return read_escaped_char(false, true);\n        };\n\n        // Read first character (ID_Start)\n        if ((ch = peek()) === \"\\\\\") {\n            ch = read_escaped_identifier_char();\n            if (!is_identifier_start(ch)) {\n                parse_error(\"First identifier char is an invalid identifier char\");\n            }\n        } else if (is_identifier_start(ch)) {\n            next();\n        } else {\n            return \"\";\n        }\n\n        name.push(ch);\n\n        // Read ID_Continue\n        while ((ch = peek()) != null) {\n            if ((ch = peek()) === \"\\\\\") {\n                ch = read_escaped_identifier_char();\n                if (!is_identifier_char(ch)) {\n                    parse_error(\"Invalid escaped identifier char\");\n                }\n            } else {\n                if (!is_identifier_char(ch)) {\n                    break;\n                }\n                next();\n            }\n            name.push(ch);\n        }\n        const name_str = name.join(\"\");\n        if (RESERVED_WORDS.has(name_str) && escaped) {\n            parse_error(\"Escaped characters are not allowed in keywords\");\n        }\n        return name_str;\n    });\n\n    var read_regexp = with_eof_error(\"Unterminated regular expression\", function(source) {\n        var prev_backslash = false, ch, in_class = false;\n        while ((ch = next(true))) if (NEWLINE_CHARS.has(ch)) {\n            parse_error(\"Unexpected line terminator\");\n        } else if (prev_backslash) {\n            source += \"\\\\\" + ch;\n            prev_backslash = false;\n        } else if (ch == \"[\") {\n            in_class = true;\n            source += ch;\n        } else if (ch == \"]\" && in_class) {\n            in_class = false;\n            source += ch;\n        } else if (ch == \"/\" && !in_class) {\n            break;\n        } else if (ch == \"\\\\\") {\n            prev_backslash = true;\n        } else {\n            source += ch;\n        }\n        const flags = read_name();\n        return token(\"regexp\", \"/\" + source + \"/\" + flags);\n    });\n\n    function read_operator(prefix) {\n        function grow(op) {\n            if (!peek()) return op;\n            var bigger = op + peek();\n            if (OPERATORS.has(bigger)) {\n                next();\n                return grow(bigger);\n            } else {\n                return op;\n            }\n        }\n        return token(\"operator\", grow(prefix || next()));\n    }\n\n    function handle_slash() {\n        next();\n        switch (peek()) {\n          case \"/\":\n            next();\n            return skip_line_comment(\"comment1\");\n          case \"*\":\n            next();\n            return skip_multiline_comment();\n        }\n        return S.regex_allowed ? read_regexp(\"\") : read_operator(\"/\");\n    }\n\n    function handle_eq_sign() {\n        next();\n        if (peek() === \">\") {\n            next();\n            return token(\"arrow\", \"=>\");\n        } else {\n            return read_operator(\"=\");\n        }\n    }\n\n    function handle_dot() {\n        next();\n        if (is_digit(peek().charCodeAt(0))) {\n            return read_num(\".\");\n        }\n        if (peek() === \".\") {\n            next();  // Consume second dot\n            next();  // Consume third dot\n            return token(\"expand\", \"...\");\n        }\n\n        return token(\"punc\", \".\");\n    }\n\n    function read_word() {\n        var word = read_name();\n        if (prev_was_dot) return token(\"name\", word);\n        return KEYWORDS_ATOM.has(word) ? token(\"atom\", word)\n            : !KEYWORDS.has(word) ? token(\"name\", word)\n            : OPERATORS.has(word) ? token(\"operator\", word)\n            : token(\"keyword\", word);\n    }\n\n    function read_private_word() {\n        next();\n        return token(\"privatename\", read_name());\n    }\n\n    function with_eof_error(eof_error, cont) {\n        return function(x) {\n            try {\n                return cont(x);\n            } catch(ex) {\n                if (ex === EX_EOF) parse_error(eof_error);\n                else throw ex;\n            }\n        };\n    }\n\n    function next_token(force_regexp) {\n        if (force_regexp != null)\n            return read_regexp(force_regexp);\n        if (shebang && S.pos == 0 && looking_at(\"#!\")) {\n            start_token();\n            forward(2);\n            skip_line_comment(\"comment5\");\n        }\n        for (;;) {\n            skip_whitespace();\n            start_token();\n            if (html5_comments) {\n                if (looking_at(\"<!--\")) {\n                    forward(4);\n                    skip_line_comment(\"comment3\");\n                    continue;\n                }\n                if (looking_at(\"-->\") && S.newline_before) {\n                    forward(3);\n                    skip_line_comment(\"comment4\");\n                    continue;\n                }\n            }\n            var ch = peek();\n            if (!ch) return token(\"eof\");\n            var code = ch.charCodeAt(0);\n            switch (code) {\n              case 34: case 39: return read_string();\n              case 46: return handle_dot();\n              case 47: {\n                  var tok = handle_slash();\n                  if (tok === next_token) continue;\n                  return tok;\n              }\n              case 61: return handle_eq_sign();\n              case 63: {\n                  if (!is_option_chain_op()) break;  // Handled below\n\n                  next(); // ?\n                  next(); // .\n\n                  return token(\"punc\", \"?.\");\n              }\n              case 96: return read_template_characters(true);\n              case 123:\n                S.brace_counter++;\n                break;\n              case 125:\n                S.brace_counter--;\n                if (S.template_braces.length > 0\n                    && S.template_braces[S.template_braces.length - 1] === S.brace_counter)\n                    return read_template_characters(false);\n                break;\n            }\n            if (is_digit(code)) return read_num();\n            if (PUNC_CHARS.has(ch)) return token(\"punc\", next());\n            if (OPERATOR_CHARS.has(ch)) return read_operator();\n            if (code == 92 || is_identifier_start(ch)) return read_word();\n            if (code == 35) return read_private_word();\n            break;\n        }\n        parse_error(\"Unexpected character '\" + ch + \"'\");\n    }\n\n    next_token.next = next;\n    next_token.peek = peek;\n\n    next_token.context = function(nc) {\n        if (nc) S = nc;\n        return S;\n    };\n\n    next_token.add_directive = function(directive) {\n        S.directive_stack[S.directive_stack.length - 1].push(directive);\n\n        if (S.directives[directive] === undefined) {\n            S.directives[directive] = 1;\n        } else {\n            S.directives[directive]++;\n        }\n    };\n\n    next_token.push_directives_stack = function() {\n        S.directive_stack.push([]);\n    };\n\n    next_token.pop_directives_stack = function() {\n        var directives = S.directive_stack[S.directive_stack.length - 1];\n\n        for (var i = 0; i < directives.length; i++) {\n            S.directives[directives[i]]--;\n        }\n\n        S.directive_stack.pop();\n    };\n\n    next_token.has_directive = function(directive) {\n        return S.directives[directive] > 0;\n    };\n\n    return next_token;\n\n}\n\n/* -----[ Parser (constants) ]----- */\n\nvar UNARY_PREFIX = makePredicate([\n    \"typeof\",\n    \"void\",\n    \"delete\",\n    \"--\",\n    \"++\",\n    \"!\",\n    \"~\",\n    \"-\",\n    \"+\"\n]);\n\nvar UNARY_POSTFIX = makePredicate([ \"--\", \"++\" ]);\n\nvar ASSIGNMENT = makePredicate([ \"=\", \"+=\", \"-=\", \"??=\", \"&&=\", \"||=\", \"/=\", \"*=\", \"**=\", \"%=\", \">>=\", \"<<=\", \">>>=\", \"|=\", \"^=\", \"&=\" ]);\n\nvar LOGICAL_ASSIGNMENT = makePredicate([ \"??=\", \"&&=\", \"||=\" ]);\n\nvar PRECEDENCE = (function(a, ret) {\n    for (var i = 0; i < a.length; ++i) {\n        var b = a[i];\n        for (var j = 0; j < b.length; ++j) {\n            ret[b[j]] = i + 1;\n        }\n    }\n    return ret;\n})(\n    [\n        [\"||\"],\n        [\"??\"],\n        [\"&&\"],\n        [\"|\"],\n        [\"^\"],\n        [\"&\"],\n        [\"==\", \"===\", \"!=\", \"!==\"],\n        [\"<\", \">\", \"<=\", \">=\", \"in\", \"instanceof\"],\n        [\">>\", \"<<\", \">>>\"],\n        [\"+\", \"-\"],\n        [\"*\", \"/\", \"%\"],\n        [\"**\"]\n    ],\n    {}\n);\n\nvar ATOMIC_START_TOKEN = makePredicate([ \"atom\", \"num\", \"big_int\", \"string\", \"regexp\", \"name\" ]);\n\n/* -----[ Parser ]----- */\n\nfunction parse($TEXT, options) {\n    // maps start tokens to count of comments found outside of their parens\n    // Example: /* I count */ ( /* I don't */ foo() )\n    // Useful because comments_before property of call with parens outside\n    // contains both comments inside and outside these parens. Used to find the\n    // right #__PURE__ comments for an expression\n    const outer_comments_before_counts = new WeakMap();\n\n    options = defaults(options, {\n        bare_returns   : false,\n        ecma           : null,  // Legacy\n        expression     : false,\n        filename       : null,\n        html5_comments : true,\n        module         : false,\n        shebang        : true,\n        strict         : false,\n        toplevel       : null,\n    }, true);\n\n    var S = {\n        input         : (typeof $TEXT == \"string\"\n                         ? tokenizer($TEXT, options.filename,\n                                     options.html5_comments, options.shebang)\n                         : $TEXT),\n        token         : null,\n        prev          : null,\n        peeked        : null,\n        in_function   : 0,\n        in_async      : -1,\n        in_generator  : -1,\n        in_directives : true,\n        in_loop       : 0,\n        labels        : []\n    };\n\n    S.token = next();\n\n    function is(type, value) {\n        return is_token(S.token, type, value);\n    }\n\n    function peek() { return S.peeked || (S.peeked = S.input()); }\n\n    function next() {\n        S.prev = S.token;\n\n        if (!S.peeked) peek();\n        S.token = S.peeked;\n        S.peeked = null;\n        S.in_directives = S.in_directives && (\n            S.token.type == \"string\" || is(\"punc\", \";\")\n        );\n        return S.token;\n    }\n\n    function prev() {\n        return S.prev;\n    }\n\n    function croak(msg, line, col, pos) {\n        var ctx = S.input.context();\n        js_error(msg,\n                 ctx.filename,\n                 line != null ? line : ctx.tokline,\n                 col != null ? col : ctx.tokcol,\n                 pos != null ? pos : ctx.tokpos);\n    }\n\n    function token_error(token, msg) {\n        croak(msg, token.line, token.col);\n    }\n\n    function unexpected(token) {\n        if (token == null)\n            token = S.token;\n        token_error(token, \"Unexpected token: \" + token.type + \" (\" + token.value + \")\");\n    }\n\n    function expect_token(type, val) {\n        if (is(type, val)) {\n            return next();\n        }\n        token_error(S.token, \"Unexpected token \" + S.token.type + \" «\" + S.token.value + \"»\" + \", expected \" + type + \" «\" + val + \"»\");\n    }\n\n    function expect(punc) { return expect_token(\"punc\", punc); }\n\n    function has_newline_before(token) {\n        return token.nlb || !token.comments_before.every((comment) => !comment.nlb);\n    }\n\n    function can_insert_semicolon() {\n        return !options.strict\n            && (is(\"eof\") || is(\"punc\", \"}\") || has_newline_before(S.token));\n    }\n\n    function is_in_generator() {\n        return S.in_generator === S.in_function;\n    }\n\n    function is_in_async() {\n        return S.in_async === S.in_function;\n    }\n\n    function can_await() {\n        return (\n            S.in_async === S.in_function\n            || S.in_function === 0 && S.input.has_directive(\"use strict\")\n        );\n    }\n\n    function semicolon(optional) {\n        if (is(\"punc\", \";\")) next();\n        else if (!optional && !can_insert_semicolon()) unexpected();\n    }\n\n    function parenthesised() {\n        expect(\"(\");\n        var exp = expression(true);\n        expect(\")\");\n        return exp;\n    }\n\n    function embed_tokens(parser) {\n        return function _embed_tokens_wrapper(...args) {\n            const start = S.token;\n            const expr = parser(...args);\n            expr.start = start;\n            expr.end = prev();\n            return expr;\n        };\n    }\n\n    function handle_regexp() {\n        if (is(\"operator\", \"/\") || is(\"operator\", \"/=\")) {\n            S.peeked = null;\n            S.token = S.input(S.token.value.substr(1)); // force regexp\n        }\n    }\n\n    var statement = embed_tokens(function statement(is_export_default, is_for_body, is_if_body) {\n        handle_regexp();\n        switch (S.token.type) {\n          case \"string\":\n            if (S.in_directives) {\n                var token = peek();\n                if (!LATEST_RAW.includes(\"\\\\\")\n                    && (is_token(token, \"punc\", \";\")\n                        || is_token(token, \"punc\", \"}\")\n                        || has_newline_before(token)\n                        || is_token(token, \"eof\"))) {\n                    S.input.add_directive(S.token.value);\n                } else {\n                    S.in_directives = false;\n                }\n            }\n            var dir = S.in_directives, stat = simple_statement();\n            return dir && stat.body instanceof AST_String ? new AST_Directive(stat.body) : stat;\n          case \"template_head\":\n          case \"num\":\n          case \"big_int\":\n          case \"regexp\":\n          case \"operator\":\n          case \"atom\":\n            return simple_statement();\n\n          case \"name\":\n            if (S.token.value == \"async\" && is_token(peek(), \"keyword\", \"function\")) {\n                next();\n                next();\n                if (is_for_body) {\n                    croak(\"functions are not allowed as the body of a loop\");\n                }\n                return function_(AST_Defun, false, true, is_export_default);\n            }\n            if (S.token.value == \"import\" && !is_token(peek(), \"punc\", \"(\") && !is_token(peek(), \"punc\", \".\")) {\n                next();\n                var node = import_statement();\n                semicolon();\n                return node;\n            }\n            return is_token(peek(), \"punc\", \":\")\n                ? labeled_statement()\n                : simple_statement();\n\n          case \"punc\":\n            switch (S.token.value) {\n              case \"{\":\n                return new AST_BlockStatement({\n                    start : S.token,\n                    body  : block_(),\n                    end   : prev()\n                });\n              case \"[\":\n              case \"(\":\n                return simple_statement();\n              case \";\":\n                S.in_directives = false;\n                next();\n                return new AST_EmptyStatement();\n              default:\n                unexpected();\n            }\n\n          case \"keyword\":\n            switch (S.token.value) {\n              case \"break\":\n                next();\n                return break_cont(AST_Break);\n\n              case \"continue\":\n                next();\n                return break_cont(AST_Continue);\n\n              case \"debugger\":\n                next();\n                semicolon();\n                return new AST_Debugger();\n\n              case \"do\":\n                next();\n                var body = in_loop(statement);\n                expect_token(\"keyword\", \"while\");\n                var condition = parenthesised();\n                semicolon(true);\n                return new AST_Do({\n                    body      : body,\n                    condition : condition\n                });\n\n              case \"while\":\n                next();\n                return new AST_While({\n                    condition : parenthesised(),\n                    body      : in_loop(function() { return statement(false, true); })\n                });\n\n              case \"for\":\n                next();\n                return for_();\n\n              case \"class\":\n                next();\n                if (is_for_body) {\n                    croak(\"classes are not allowed as the body of a loop\");\n                }\n                if (is_if_body) {\n                    croak(\"classes are not allowed as the body of an if\");\n                }\n                return class_(AST_DefClass, is_export_default);\n\n              case \"function\":\n                next();\n                if (is_for_body) {\n                    croak(\"functions are not allowed as the body of a loop\");\n                }\n                return function_(AST_Defun, false, false, is_export_default);\n\n              case \"if\":\n                next();\n                return if_();\n\n              case \"return\":\n                if (S.in_function == 0 && !options.bare_returns)\n                    croak(\"'return' outside of function\");\n                next();\n                var value = null;\n                if (is(\"punc\", \";\")) {\n                    next();\n                } else if (!can_insert_semicolon()) {\n                    value = expression(true);\n                    semicolon();\n                }\n                return new AST_Return({\n                    value: value\n                });\n\n              case \"switch\":\n                next();\n                return new AST_Switch({\n                    expression : parenthesised(),\n                    body       : in_loop(switch_body_)\n                });\n\n              case \"throw\":\n                next();\n                if (has_newline_before(S.token))\n                    croak(\"Illegal newline after 'throw'\");\n                var value = expression(true);\n                semicolon();\n                return new AST_Throw({\n                    value: value\n                });\n\n              case \"try\":\n                next();\n                return try_();\n\n              case \"var\":\n                next();\n                var node = var_();\n                semicolon();\n                return node;\n\n              case \"let\":\n                next();\n                var node = let_();\n                semicolon();\n                return node;\n\n              case \"const\":\n                next();\n                var node = const_();\n                semicolon();\n                return node;\n\n              case \"with\":\n                if (S.input.has_directive(\"use strict\")) {\n                    croak(\"Strict mode may not include a with statement\");\n                }\n                next();\n                return new AST_With({\n                    expression : parenthesised(),\n                    body       : statement()\n                });\n\n              case \"export\":\n                if (!is_token(peek(), \"punc\", \"(\")) {\n                    next();\n                    var node = export_statement();\n                    if (is(\"punc\", \";\")) semicolon();\n                    return node;\n                }\n            }\n        }\n        unexpected();\n    });\n\n    function labeled_statement() {\n        var label = as_symbol(AST_Label);\n        if (label.name === \"await\" && is_in_async()) {\n            token_error(S.prev, \"await cannot be used as label inside async function\");\n        }\n        if (S.labels.some((l) => l.name === label.name)) {\n            // ECMA-262, 12.12: An ECMAScript program is considered\n            // syntactically incorrect if it contains a\n            // LabelledStatement that is enclosed by a\n            // LabelledStatement with the same Identifier as label.\n            croak(\"Label \" + label.name + \" defined twice\");\n        }\n        expect(\":\");\n        S.labels.push(label);\n        var stat = statement();\n        S.labels.pop();\n        if (!(stat instanceof AST_IterationStatement)) {\n            // check for `continue` that refers to this label.\n            // those should be reported as syntax errors.\n            // https://github.com/mishoo/UglifyJS2/issues/287\n            label.references.forEach(function(ref) {\n                if (ref instanceof AST_Continue) {\n                    ref = ref.label.start;\n                    croak(\"Continue label `\" + label.name + \"` refers to non-IterationStatement.\",\n                          ref.line, ref.col, ref.pos);\n                }\n            });\n        }\n        return new AST_LabeledStatement({ body: stat, label: label });\n    }\n\n    function simple_statement(tmp) {\n        return new AST_SimpleStatement({ body: (tmp = expression(true), semicolon(), tmp) });\n    }\n\n    function break_cont(type) {\n        var label = null, ldef;\n        if (!can_insert_semicolon()) {\n            label = as_symbol(AST_LabelRef, true);\n        }\n        if (label != null) {\n            ldef = S.labels.find((l) => l.name === label.name);\n            if (!ldef)\n                croak(\"Undefined label \" + label.name);\n            label.thedef = ldef;\n        } else if (S.in_loop == 0)\n            croak(type.TYPE + \" not inside a loop or switch\");\n        semicolon();\n        var stat = new type({ label: label });\n        if (ldef) ldef.references.push(stat);\n        return stat;\n    }\n\n    function for_() {\n        var for_await_error = \"`for await` invalid in this context\";\n        var await_tok = S.token;\n        if (await_tok.type == \"name\" && await_tok.value == \"await\") {\n            if (!can_await()) {\n                token_error(await_tok, for_await_error);\n            }\n            next();\n        } else {\n            await_tok = false;\n        }\n        expect(\"(\");\n        var init = null;\n        if (!is(\"punc\", \";\")) {\n            init =\n                is(\"keyword\", \"var\") ? (next(), var_(true)) :\n                is(\"keyword\", \"let\") ? (next(), let_(true)) :\n                is(\"keyword\", \"const\") ? (next(), const_(true)) :\n                                       expression(true, true);\n            var is_in = is(\"operator\", \"in\");\n            var is_of = is(\"name\", \"of\");\n            if (await_tok && !is_of) {\n                token_error(await_tok, for_await_error);\n            }\n            if (is_in || is_of) {\n                if (init instanceof AST_Definitions) {\n                    if (init.definitions.length > 1)\n                        token_error(init.start, \"Only one variable declaration allowed in for..in loop\");\n                } else if (!(is_assignable(init) || (init = to_destructuring(init)) instanceof AST_Destructuring)) {\n                    token_error(init.start, \"Invalid left-hand side in for..in loop\");\n                }\n                next();\n                if (is_in) {\n                    return for_in(init);\n                } else {\n                    return for_of(init, !!await_tok);\n                }\n            }\n        } else if (await_tok) {\n            token_error(await_tok, for_await_error);\n        }\n        return regular_for(init);\n    }\n\n    function regular_for(init) {\n        expect(\";\");\n        var test = is(\"punc\", \";\") ? null : expression(true);\n        expect(\";\");\n        var step = is(\"punc\", \")\") ? null : expression(true);\n        expect(\")\");\n        return new AST_For({\n            init      : init,\n            condition : test,\n            step      : step,\n            body      : in_loop(function() { return statement(false, true); })\n        });\n    }\n\n    function for_of(init, is_await) {\n        var lhs = init instanceof AST_Definitions ? init.definitions[0].name : null;\n        var obj = expression(true);\n        expect(\")\");\n        return new AST_ForOf({\n            await  : is_await,\n            init   : init,\n            name   : lhs,\n            object : obj,\n            body   : in_loop(function() { return statement(false, true); })\n        });\n    }\n\n    function for_in(init) {\n        var obj = expression(true);\n        expect(\")\");\n        return new AST_ForIn({\n            init   : init,\n            object : obj,\n            body   : in_loop(function() { return statement(false, true); })\n        });\n    }\n\n    var arrow_function = function(start, argnames, is_async) {\n        if (has_newline_before(S.token)) {\n            croak(\"Unexpected newline before arrow (=>)\");\n        }\n\n        expect_token(\"arrow\", \"=>\");\n\n        var body = _function_body(is(\"punc\", \"{\"), false, is_async);\n\n        var end =\n            body instanceof Array && body.length ? body[body.length - 1].end :\n            body instanceof Array ? start :\n                body.end;\n\n        return new AST_Arrow({\n            start    : start,\n            end      : end,\n            async    : is_async,\n            argnames : argnames,\n            body     : body\n        });\n    };\n\n    var function_ = function(ctor, is_generator_property, is_async, is_export_default) {\n        var in_statement = ctor === AST_Defun;\n        var is_generator = is(\"operator\", \"*\");\n        if (is_generator) {\n            next();\n        }\n\n        var name = is(\"name\") ? as_symbol(in_statement ? AST_SymbolDefun : AST_SymbolLambda) : null;\n        if (in_statement && !name) {\n            if (is_export_default) {\n                ctor = AST_Function;\n            } else {\n                unexpected();\n            }\n        }\n\n        if (name && ctor !== AST_Accessor && !(name instanceof AST_SymbolDeclaration))\n            unexpected(prev());\n\n        var args = [];\n        var body = _function_body(true, is_generator || is_generator_property, is_async, name, args);\n        return new ctor({\n            start : args.start,\n            end   : body.end,\n            is_generator: is_generator,\n            async : is_async,\n            name  : name,\n            argnames: args,\n            body  : body\n        });\n    };\n\n    function track_used_binding_identifiers(is_parameter, strict) {\n        var parameters = new Set();\n        var duplicate = false;\n        var default_assignment = false;\n        var spread = false;\n        var strict_mode = !!strict;\n        var tracker = {\n            add_parameter: function(token) {\n                if (parameters.has(token.value)) {\n                    if (duplicate === false) {\n                        duplicate = token;\n                    }\n                    tracker.check_strict();\n                } else {\n                    parameters.add(token.value);\n                    if (is_parameter) {\n                        switch (token.value) {\n                          case \"arguments\":\n                          case \"eval\":\n                          case \"yield\":\n                            if (strict_mode) {\n                                token_error(token, \"Unexpected \" + token.value + \" identifier as parameter inside strict mode\");\n                            }\n                            break;\n                          default:\n                            if (RESERVED_WORDS.has(token.value)) {\n                                unexpected();\n                            }\n                        }\n                    }\n                }\n            },\n            mark_default_assignment: function(token) {\n                if (default_assignment === false) {\n                    default_assignment = token;\n                }\n            },\n            mark_spread: function(token) {\n                if (spread === false) {\n                    spread = token;\n                }\n            },\n            mark_strict_mode: function() {\n                strict_mode = true;\n            },\n            is_strict: function() {\n                return default_assignment !== false || spread !== false || strict_mode;\n            },\n            check_strict: function() {\n                if (tracker.is_strict() && duplicate !== false) {\n                    token_error(duplicate, \"Parameter \" + duplicate.value + \" was used already\");\n                }\n            }\n        };\n\n        return tracker;\n    }\n\n    function parameters(params) {\n        var used_parameters = track_used_binding_identifiers(true, S.input.has_directive(\"use strict\"));\n\n        expect(\"(\");\n\n        while (!is(\"punc\", \")\")) {\n            var param = parameter(used_parameters);\n            params.push(param);\n\n            if (!is(\"punc\", \")\")) {\n                expect(\",\");\n            }\n\n            if (param instanceof AST_Expansion) {\n                break;\n            }\n        }\n\n        next();\n    }\n\n    function parameter(used_parameters, symbol_type) {\n        var param;\n        var expand = false;\n        if (used_parameters === undefined) {\n            used_parameters = track_used_binding_identifiers(true, S.input.has_directive(\"use strict\"));\n        }\n        if (is(\"expand\", \"...\")) {\n            expand = S.token;\n            used_parameters.mark_spread(S.token);\n            next();\n        }\n        param = binding_element(used_parameters, symbol_type);\n\n        if (is(\"operator\", \"=\") && expand === false) {\n            used_parameters.mark_default_assignment(S.token);\n            next();\n            param = new AST_DefaultAssign({\n                start: param.start,\n                left: param,\n                operator: \"=\",\n                right: expression(false),\n                end: S.token\n            });\n        }\n\n        if (expand !== false) {\n            if (!is(\"punc\", \")\")) {\n                unexpected();\n            }\n            param = new AST_Expansion({\n                start: expand,\n                expression: param,\n                end: expand\n            });\n        }\n        used_parameters.check_strict();\n\n        return param;\n    }\n\n    function binding_element(used_parameters, symbol_type) {\n        var elements = [];\n        var first = true;\n        var is_expand = false;\n        var expand_token;\n        var first_token = S.token;\n        if (used_parameters === undefined) {\n            used_parameters = track_used_binding_identifiers(false, S.input.has_directive(\"use strict\"));\n        }\n        symbol_type = symbol_type === undefined ? AST_SymbolFunarg : symbol_type;\n        if (is(\"punc\", \"[\")) {\n            next();\n            while (!is(\"punc\", \"]\")) {\n                if (first) {\n                    first = false;\n                } else {\n                    expect(\",\");\n                }\n\n                if (is(\"expand\", \"...\")) {\n                    is_expand = true;\n                    expand_token = S.token;\n                    used_parameters.mark_spread(S.token);\n                    next();\n                }\n                if (is(\"punc\")) {\n                    switch (S.token.value) {\n                      case \",\":\n                        elements.push(new AST_Hole({\n                            start: S.token,\n                            end: S.token\n                        }));\n                        continue;\n                      case \"]\": // Trailing comma after last element\n                        break;\n                      case \"[\":\n                      case \"{\":\n                        elements.push(binding_element(used_parameters, symbol_type));\n                        break;\n                      default:\n                        unexpected();\n                    }\n                } else if (is(\"name\")) {\n                    used_parameters.add_parameter(S.token);\n                    elements.push(as_symbol(symbol_type));\n                } else {\n                    croak(\"Invalid function parameter\");\n                }\n                if (is(\"operator\", \"=\") && is_expand === false) {\n                    used_parameters.mark_default_assignment(S.token);\n                    next();\n                    elements[elements.length - 1] = new AST_DefaultAssign({\n                        start: elements[elements.length - 1].start,\n                        left: elements[elements.length - 1],\n                        operator: \"=\",\n                        right: expression(false),\n                        end: S.token\n                    });\n                }\n                if (is_expand) {\n                    if (!is(\"punc\", \"]\")) {\n                        croak(\"Rest element must be last element\");\n                    }\n                    elements[elements.length - 1] = new AST_Expansion({\n                        start: expand_token,\n                        expression: elements[elements.length - 1],\n                        end: expand_token\n                    });\n                }\n            }\n            expect(\"]\");\n            used_parameters.check_strict();\n            return new AST_Destructuring({\n                start: first_token,\n                names: elements,\n                is_array: true,\n                end: prev()\n            });\n        } else if (is(\"punc\", \"{\")) {\n            next();\n            while (!is(\"punc\", \"}\")) {\n                if (first) {\n                    first = false;\n                } else {\n                    expect(\",\");\n                }\n                if (is(\"expand\", \"...\")) {\n                    is_expand = true;\n                    expand_token = S.token;\n                    used_parameters.mark_spread(S.token);\n                    next();\n                }\n                if (is(\"name\") && (is_token(peek(), \"punc\") || is_token(peek(), \"operator\")) && [\",\", \"}\", \"=\"].includes(peek().value)) {\n                    used_parameters.add_parameter(S.token);\n                    var start = prev();\n                    var value = as_symbol(symbol_type);\n                    if (is_expand) {\n                        elements.push(new AST_Expansion({\n                            start: expand_token,\n                            expression: value,\n                            end: value.end,\n                        }));\n                    } else {\n                        elements.push(new AST_ObjectKeyVal({\n                            start: start,\n                            key: value.name,\n                            value: value,\n                            end: value.end,\n                        }));\n                    }\n                } else if (is(\"punc\", \"}\")) {\n                    continue; // Allow trailing hole\n                } else {\n                    var property_token = S.token;\n                    var property = as_property_name();\n                    if (property === null) {\n                        unexpected(prev());\n                    } else if (prev().type === \"name\" && !is(\"punc\", \":\")) {\n                        elements.push(new AST_ObjectKeyVal({\n                            start: prev(),\n                            key: property,\n                            value: new symbol_type({\n                                start: prev(),\n                                name: property,\n                                end: prev()\n                            }),\n                            end: prev()\n                        }));\n                    } else {\n                        expect(\":\");\n                        elements.push(new AST_ObjectKeyVal({\n                            start: property_token,\n                            quote: property_token.quote,\n                            key: property,\n                            value: binding_element(used_parameters, symbol_type),\n                            end: prev()\n                        }));\n                    }\n                }\n                if (is_expand) {\n                    if (!is(\"punc\", \"}\")) {\n                        croak(\"Rest element must be last element\");\n                    }\n                } else if (is(\"operator\", \"=\")) {\n                    used_parameters.mark_default_assignment(S.token);\n                    next();\n                    elements[elements.length - 1].value = new AST_DefaultAssign({\n                        start: elements[elements.length - 1].value.start,\n                        left: elements[elements.length - 1].value,\n                        operator: \"=\",\n                        right: expression(false),\n                        end: S.token\n                    });\n                }\n            }\n            expect(\"}\");\n            used_parameters.check_strict();\n            return new AST_Destructuring({\n                start: first_token,\n                names: elements,\n                is_array: false,\n                end: prev()\n            });\n        } else if (is(\"name\")) {\n            used_parameters.add_parameter(S.token);\n            return as_symbol(symbol_type);\n        } else {\n            croak(\"Invalid function parameter\");\n        }\n    }\n\n    function params_or_seq_(allow_arrows, maybe_sequence) {\n        var spread_token;\n        var invalid_sequence;\n        var trailing_comma;\n        var a = [];\n        expect(\"(\");\n        while (!is(\"punc\", \")\")) {\n            if (spread_token) unexpected(spread_token);\n            if (is(\"expand\", \"...\")) {\n                spread_token = S.token;\n                if (maybe_sequence) invalid_sequence = S.token;\n                next();\n                a.push(new AST_Expansion({\n                    start: prev(),\n                    expression: expression(),\n                    end: S.token,\n                }));\n            } else {\n                a.push(expression());\n            }\n            if (!is(\"punc\", \")\")) {\n                expect(\",\");\n                if (is(\"punc\", \")\")) {\n                    trailing_comma = prev();\n                    if (maybe_sequence) invalid_sequence = trailing_comma;\n                }\n            }\n        }\n        expect(\")\");\n        if (allow_arrows && is(\"arrow\", \"=>\")) {\n            if (spread_token && trailing_comma) unexpected(trailing_comma);\n        } else if (invalid_sequence) {\n            unexpected(invalid_sequence);\n        }\n        return a;\n    }\n\n    function _function_body(block, generator, is_async, name, args) {\n        var loop = S.in_loop;\n        var labels = S.labels;\n        var current_generator = S.in_generator;\n        var current_async = S.in_async;\n        ++S.in_function;\n        if (generator)\n            S.in_generator = S.in_function;\n        if (is_async)\n            S.in_async = S.in_function;\n        if (args) parameters(args);\n        if (block)\n            S.in_directives = true;\n        S.in_loop = 0;\n        S.labels = [];\n        if (block) {\n            S.input.push_directives_stack();\n            var a = block_();\n            if (name) _verify_symbol(name);\n            if (args) args.forEach(_verify_symbol);\n            S.input.pop_directives_stack();\n        } else {\n            var a = [new AST_Return({\n                start: S.token,\n                value: expression(false),\n                end: S.token\n            })];\n        }\n        --S.in_function;\n        S.in_loop = loop;\n        S.labels = labels;\n        S.in_generator = current_generator;\n        S.in_async = current_async;\n        return a;\n    }\n\n    function _await_expression() {\n        // Previous token must be \"await\" and not be interpreted as an identifier\n        if (!can_await()) {\n            croak(\"Unexpected await expression outside async function\",\n                S.prev.line, S.prev.col, S.prev.pos);\n        }\n        // the await expression is parsed as a unary expression in Babel\n        return new AST_Await({\n            start: prev(),\n            end: S.token,\n            expression : maybe_unary(true),\n        });\n    }\n\n    function _yield_expression() {\n        // Previous token must be keyword yield and not be interpret as an identifier\n        if (!is_in_generator()) {\n            croak(\"Unexpected yield expression outside generator function\",\n                S.prev.line, S.prev.col, S.prev.pos);\n        }\n        var start = S.token;\n        var star = false;\n        var has_expression = true;\n\n        // Attempt to get expression or star (and then the mandatory expression)\n        // behind yield on the same line.\n        //\n        // If nothing follows on the same line of the yieldExpression,\n        // it should default to the value `undefined` for yield to return.\n        // In that case, the `undefined` stored as `null` in ast.\n        //\n        // Note 1: It isn't allowed for yield* to close without an expression\n        // Note 2: If there is a nlb between yield and star, it is interpret as\n        //         yield <explicit undefined> <inserted automatic semicolon> *\n        if (can_insert_semicolon() ||\n            (is(\"punc\") && PUNC_AFTER_EXPRESSION.has(S.token.value))) {\n            has_expression = false;\n\n        } else if (is(\"operator\", \"*\")) {\n            star = true;\n            next();\n        }\n\n        return new AST_Yield({\n            start      : start,\n            is_star    : star,\n            expression : has_expression ? expression() : null,\n            end        : prev()\n        });\n    }\n\n    function if_() {\n        var cond = parenthesised(), body = statement(false, false, true), belse = null;\n        if (is(\"keyword\", \"else\")) {\n            next();\n            belse = statement(false, false, true);\n        }\n        return new AST_If({\n            condition   : cond,\n            body        : body,\n            alternative : belse\n        });\n    }\n\n    function block_() {\n        expect(\"{\");\n        var a = [];\n        while (!is(\"punc\", \"}\")) {\n            if (is(\"eof\")) unexpected();\n            a.push(statement());\n        }\n        next();\n        return a;\n    }\n\n    function switch_body_() {\n        expect(\"{\");\n        var a = [], cur = null, branch = null, tmp;\n        while (!is(\"punc\", \"}\")) {\n            if (is(\"eof\")) unexpected();\n            if (is(\"keyword\", \"case\")) {\n                if (branch) branch.end = prev();\n                cur = [];\n                branch = new AST_Case({\n                    start      : (tmp = S.token, next(), tmp),\n                    expression : expression(true),\n                    body       : cur\n                });\n                a.push(branch);\n                expect(\":\");\n            } else if (is(\"keyword\", \"default\")) {\n                if (branch) branch.end = prev();\n                cur = [];\n                branch = new AST_Default({\n                    start : (tmp = S.token, next(), expect(\":\"), tmp),\n                    body  : cur\n                });\n                a.push(branch);\n            } else {\n                if (!cur) unexpected();\n                cur.push(statement());\n            }\n        }\n        if (branch) branch.end = prev();\n        next();\n        return a;\n    }\n\n    function try_() {\n        var body = block_(), bcatch = null, bfinally = null;\n        if (is(\"keyword\", \"catch\")) {\n            var start = S.token;\n            next();\n            if (is(\"punc\", \"{\")) {\n                var name = null;\n            } else {\n                expect(\"(\");\n                var name = parameter(undefined, AST_SymbolCatch);\n                expect(\")\");\n            }\n            bcatch = new AST_Catch({\n                start   : start,\n                argname : name,\n                body    : block_(),\n                end     : prev()\n            });\n        }\n        if (is(\"keyword\", \"finally\")) {\n            var start = S.token;\n            next();\n            bfinally = new AST_Finally({\n                start : start,\n                body  : block_(),\n                end   : prev()\n            });\n        }\n        if (!bcatch && !bfinally)\n            croak(\"Missing catch/finally blocks\");\n        return new AST_Try({\n            body     : body,\n            bcatch   : bcatch,\n            bfinally : bfinally\n        });\n    }\n\n    function vardefs(no_in, kind) {\n        var a = [];\n        var def;\n        for (;;) {\n            var sym_type =\n                kind === \"var\" ? AST_SymbolVar :\n                kind === \"const\" ? AST_SymbolConst :\n                kind === \"let\" ? AST_SymbolLet : null;\n            if (is(\"punc\", \"{\") || is(\"punc\", \"[\")) {\n                def = new AST_VarDef({\n                    start: S.token,\n                    name: binding_element(undefined ,sym_type),\n                    value: is(\"operator\", \"=\") ? (expect_token(\"operator\", \"=\"), expression(false, no_in)) : null,\n                    end: prev()\n                });\n            } else {\n                def = new AST_VarDef({\n                    start : S.token,\n                    name  : as_symbol(sym_type),\n                    value : is(\"operator\", \"=\")\n                        ? (next(), expression(false, no_in))\n                        : !no_in && kind === \"const\"\n                            ? croak(\"Missing initializer in const declaration\") : null,\n                    end   : prev()\n                });\n                if (def.name.name == \"import\") croak(\"Unexpected token: import\");\n            }\n            a.push(def);\n            if (!is(\"punc\", \",\"))\n                break;\n            next();\n        }\n        return a;\n    }\n\n    var var_ = function(no_in) {\n        return new AST_Var({\n            start       : prev(),\n            definitions : vardefs(no_in, \"var\"),\n            end         : prev()\n        });\n    };\n\n    var let_ = function(no_in) {\n        return new AST_Let({\n            start       : prev(),\n            definitions : vardefs(no_in, \"let\"),\n            end         : prev()\n        });\n    };\n\n    var const_ = function(no_in) {\n        return new AST_Const({\n            start       : prev(),\n            definitions : vardefs(no_in, \"const\"),\n            end         : prev()\n        });\n    };\n\n    var new_ = function(allow_calls) {\n        var start = S.token;\n        expect_token(\"operator\", \"new\");\n        if (is(\"punc\", \".\")) {\n            next();\n            expect_token(\"name\", \"target\");\n            return subscripts(new AST_NewTarget({\n                start : start,\n                end   : prev()\n            }), allow_calls);\n        }\n        var newexp = expr_atom(false), args;\n        if (is(\"punc\", \"(\")) {\n            next();\n            args = expr_list(\")\", true);\n        } else {\n            args = [];\n        }\n        var call = new AST_New({\n            start      : start,\n            expression : newexp,\n            args       : args,\n            end        : prev()\n        });\n        annotate(call);\n        return subscripts(call, allow_calls);\n    };\n\n    function as_atom_node() {\n        var tok = S.token, ret;\n        switch (tok.type) {\n          case \"name\":\n            ret = _make_symbol(AST_SymbolRef);\n            break;\n          case \"num\":\n            ret = new AST_Number({\n                start: tok,\n                end: tok,\n                value: tok.value,\n                raw: LATEST_RAW\n            });\n            break;\n          case \"big_int\":\n            ret = new AST_BigInt({ start: tok, end: tok, value: tok.value });\n            break;\n          case \"string\":\n            ret = new AST_String({\n                start : tok,\n                end   : tok,\n                value : tok.value,\n                quote : tok.quote\n            });\n            break;\n          case \"regexp\":\n            const [_, source, flags] = tok.value.match(/^\\/(.*)\\/(\\w*)$/);\n\n            ret = new AST_RegExp({ start: tok, end: tok, value: { source, flags } });\n            break;\n          case \"atom\":\n            switch (tok.value) {\n              case \"false\":\n                ret = new AST_False({ start: tok, end: tok });\n                break;\n              case \"true\":\n                ret = new AST_True({ start: tok, end: tok });\n                break;\n              case \"null\":\n                ret = new AST_Null({ start: tok, end: tok });\n                break;\n            }\n            break;\n        }\n        next();\n        return ret;\n    }\n\n    function to_fun_args(ex, default_seen_above) {\n        var insert_default = function(ex, default_value) {\n            if (default_value) {\n                return new AST_DefaultAssign({\n                    start: ex.start,\n                    left: ex,\n                    operator: \"=\",\n                    right: default_value,\n                    end: default_value.end\n                });\n            }\n            return ex;\n        };\n        if (ex instanceof AST_Object) {\n            return insert_default(new AST_Destructuring({\n                start: ex.start,\n                end: ex.end,\n                is_array: false,\n                names: ex.properties.map(prop => to_fun_args(prop))\n            }), default_seen_above);\n        } else if (ex instanceof AST_ObjectKeyVal) {\n            ex.value = to_fun_args(ex.value);\n            return insert_default(ex, default_seen_above);\n        } else if (ex instanceof AST_Hole) {\n            return ex;\n        } else if (ex instanceof AST_Destructuring) {\n            ex.names = ex.names.map(name => to_fun_args(name));\n            return insert_default(ex, default_seen_above);\n        } else if (ex instanceof AST_SymbolRef) {\n            return insert_default(new AST_SymbolFunarg({\n                name: ex.name,\n                start: ex.start,\n                end: ex.end\n            }), default_seen_above);\n        } else if (ex instanceof AST_Expansion) {\n            ex.expression = to_fun_args(ex.expression);\n            return insert_default(ex, default_seen_above);\n        } else if (ex instanceof AST_Array) {\n            return insert_default(new AST_Destructuring({\n                start: ex.start,\n                end: ex.end,\n                is_array: true,\n                names: ex.elements.map(elm => to_fun_args(elm))\n            }), default_seen_above);\n        } else if (ex instanceof AST_Assign) {\n            return insert_default(to_fun_args(ex.left, ex.right), default_seen_above);\n        } else if (ex instanceof AST_DefaultAssign) {\n            ex.left = to_fun_args(ex.left);\n            return ex;\n        } else {\n            croak(\"Invalid function parameter\", ex.start.line, ex.start.col);\n        }\n    }\n\n    var expr_atom = function(allow_calls, allow_arrows) {\n        if (is(\"operator\", \"new\")) {\n            return new_(allow_calls);\n        }\n        if (is(\"operator\", \"import\")) {\n            return import_meta();\n        }\n        var start = S.token;\n        var peeked;\n        var async = is(\"name\", \"async\")\n            && (peeked = peek()).value != \"[\"\n            && peeked.type != \"arrow\"\n            && as_atom_node();\n        if (is(\"punc\")) {\n            switch (S.token.value) {\n              case \"(\":\n                if (async && !allow_calls) break;\n                var exprs = params_or_seq_(allow_arrows, !async);\n                if (allow_arrows && is(\"arrow\", \"=>\")) {\n                    return arrow_function(start, exprs.map(e => to_fun_args(e)), !!async);\n                }\n                var ex = async ? new AST_Call({\n                    expression: async,\n                    args: exprs\n                }) : exprs.length == 1 ? exprs[0] : new AST_Sequence({\n                    expressions: exprs\n                });\n                if (ex.start) {\n                    const outer_comments_before = start.comments_before.length;\n                    outer_comments_before_counts.set(start, outer_comments_before);\n                    ex.start.comments_before.unshift(...start.comments_before);\n                    start.comments_before = ex.start.comments_before;\n                    if (outer_comments_before == 0 && start.comments_before.length > 0) {\n                        var comment = start.comments_before[0];\n                        if (!comment.nlb) {\n                            comment.nlb = start.nlb;\n                            start.nlb = false;\n                        }\n                    }\n                    start.comments_after = ex.start.comments_after;\n                }\n                ex.start = start;\n                var end = prev();\n                if (ex.end) {\n                    end.comments_before = ex.end.comments_before;\n                    ex.end.comments_after.push(...end.comments_after);\n                    end.comments_after = ex.end.comments_after;\n                }\n                ex.end = end;\n                if (ex instanceof AST_Call) annotate(ex);\n                return subscripts(ex, allow_calls);\n              case \"[\":\n                return subscripts(array_(), allow_calls);\n              case \"{\":\n                return subscripts(object_or_destructuring_(), allow_calls);\n            }\n            if (!async) unexpected();\n        }\n        if (allow_arrows && is(\"name\") && is_token(peek(), \"arrow\")) {\n            var param = new AST_SymbolFunarg({\n                name: S.token.value,\n                start: start,\n                end: start,\n            });\n            next();\n            return arrow_function(start, [param], !!async);\n        }\n        if (is(\"keyword\", \"function\")) {\n            next();\n            var func = function_(AST_Function, false, !!async);\n            func.start = start;\n            func.end = prev();\n            return subscripts(func, allow_calls);\n        }\n        if (async) return subscripts(async, allow_calls);\n        if (is(\"keyword\", \"class\")) {\n            next();\n            var cls = class_(AST_ClassExpression);\n            cls.start = start;\n            cls.end = prev();\n            return subscripts(cls, allow_calls);\n        }\n        if (is(\"template_head\")) {\n            return subscripts(template_string(), allow_calls);\n        }\n        if (ATOMIC_START_TOKEN.has(S.token.type)) {\n            return subscripts(as_atom_node(), allow_calls);\n        }\n        unexpected();\n    };\n\n    function template_string() {\n        var segments = [], start = S.token;\n\n        segments.push(new AST_TemplateSegment({\n            start: S.token,\n            raw: LATEST_RAW,\n            value: S.token.value,\n            end: S.token\n        }));\n\n        while (!LATEST_TEMPLATE_END) {\n            next();\n            handle_regexp();\n            segments.push(expression(true));\n\n            segments.push(new AST_TemplateSegment({\n                start: S.token,\n                raw: LATEST_RAW,\n                value: S.token.value,\n                end: S.token\n            }));\n        }\n        next();\n\n        return new AST_TemplateString({\n            start: start,\n            segments: segments,\n            end: S.token\n        });\n    }\n\n    function expr_list(closing, allow_trailing_comma, allow_empty) {\n        var first = true, a = [];\n        while (!is(\"punc\", closing)) {\n            if (first) first = false; else expect(\",\");\n            if (allow_trailing_comma && is(\"punc\", closing)) break;\n            if (is(\"punc\", \",\") && allow_empty) {\n                a.push(new AST_Hole({ start: S.token, end: S.token }));\n            } else if (is(\"expand\", \"...\")) {\n                next();\n                a.push(new AST_Expansion({start: prev(), expression: expression(),end: S.token}));\n            } else {\n                a.push(expression(false));\n            }\n        }\n        next();\n        return a;\n    }\n\n    var array_ = embed_tokens(function() {\n        expect(\"[\");\n        return new AST_Array({\n            elements: expr_list(\"]\", !options.strict, true)\n        });\n    });\n\n    var create_accessor = embed_tokens((is_generator, is_async) => {\n        return function_(AST_Accessor, is_generator, is_async);\n    });\n\n    var object_or_destructuring_ = embed_tokens(function object_or_destructuring_() {\n        var start = S.token, first = true, a = [];\n        expect(\"{\");\n        while (!is(\"punc\", \"}\")) {\n            if (first) first = false; else expect(\",\");\n            if (!options.strict && is(\"punc\", \"}\"))\n                // allow trailing comma\n                break;\n\n            start = S.token;\n            if (start.type == \"expand\") {\n                next();\n                a.push(new AST_Expansion({\n                    start: start,\n                    expression: expression(false),\n                    end: prev(),\n                }));\n                continue;\n            }\n\n            var name = as_property_name();\n            var value;\n\n            // Check property and fetch value\n            if (!is(\"punc\", \":\")) {\n                var concise = concise_method_or_getset(name, start);\n                if (concise) {\n                    a.push(concise);\n                    continue;\n                }\n\n                value = new AST_SymbolRef({\n                    start: prev(),\n                    name: name,\n                    end: prev()\n                });\n            } else if (name === null) {\n                unexpected(prev());\n            } else {\n                next(); // `:` - see first condition\n                value = expression(false);\n            }\n\n            // Check for default value and alter value accordingly if necessary\n            if (is(\"operator\", \"=\")) {\n                next();\n                value = new AST_Assign({\n                    start: start,\n                    left: value,\n                    operator: \"=\",\n                    right: expression(false),\n                    logical: false,\n                    end: prev()\n                });\n            }\n\n            // Create property\n            a.push(new AST_ObjectKeyVal({\n                start: start,\n                quote: start.quote,\n                key: name instanceof AST_Node ? name : \"\" + name,\n                value: value,\n                end: prev()\n            }));\n        }\n        next();\n        return new AST_Object({ properties: a });\n    });\n\n    function class_(KindOfClass, is_export_default) {\n        var start, method, class_name, extends_, a = [];\n\n        S.input.push_directives_stack(); // Push directive stack, but not scope stack\n        S.input.add_directive(\"use strict\");\n\n        if (S.token.type == \"name\" && S.token.value != \"extends\") {\n            class_name = as_symbol(KindOfClass === AST_DefClass ? AST_SymbolDefClass : AST_SymbolClass);\n        }\n\n        if (KindOfClass === AST_DefClass && !class_name) {\n            if (is_export_default) {\n                KindOfClass = AST_ClassExpression;\n            } else {\n                unexpected();\n            }\n        }\n\n        if (S.token.value == \"extends\") {\n            next();\n            extends_ = expression(true);\n        }\n\n        expect(\"{\");\n\n        while (is(\"punc\", \";\")) { next(); }  // Leading semicolons are okay in class bodies.\n        while (!is(\"punc\", \"}\")) {\n            start = S.token;\n            method = concise_method_or_getset(as_property_name(), start, true);\n            if (!method) { unexpected(); }\n            a.push(method);\n            while (is(\"punc\", \";\")) { next(); }\n        }\n\n        S.input.pop_directives_stack();\n\n        next();\n\n        return new KindOfClass({\n            start: start,\n            name: class_name,\n            extends: extends_,\n            properties: a,\n            end: prev(),\n        });\n    }\n\n    function concise_method_or_getset(name, start, is_class) {\n        const get_symbol_ast = (name, SymbolClass = AST_SymbolMethod) => {\n            if (typeof name === \"string\" || typeof name === \"number\") {\n                return new SymbolClass({\n                    start,\n                    name: \"\" + name,\n                    end: prev()\n                });\n            } else if (name === null) {\n                unexpected();\n            }\n            return name;\n        };\n\n        const is_not_method_start = () =>\n            !is(\"punc\", \"(\") && !is(\"punc\", \",\") && !is(\"punc\", \"}\") && !is(\"punc\", \";\") && !is(\"operator\", \"=\");\n\n        var is_async = false;\n        var is_static = false;\n        var is_generator = false;\n        var is_private = false;\n        var accessor_type = null;\n\n        if (is_class && name === \"static\" && is_not_method_start()) {\n            is_static = true;\n            name = as_property_name();\n        }\n        if (name === \"async\" && is_not_method_start()) {\n            is_async = true;\n            name = as_property_name();\n        }\n        if (prev().type === \"operator\" && prev().value === \"*\") {\n            is_generator = true;\n            name = as_property_name();\n        }\n        if ((name === \"get\" || name === \"set\") && is_not_method_start()) {\n            accessor_type = name;\n            name = as_property_name();\n        }\n        if (prev().type === \"privatename\") {\n            is_private = true;\n        }\n\n        const property_token = prev();\n\n        if (accessor_type != null) {\n            if (!is_private) {\n                const AccessorClass = accessor_type === \"get\"\n                    ? AST_ObjectGetter\n                    : AST_ObjectSetter;\n\n                name = get_symbol_ast(name);\n                return new AccessorClass({\n                    start,\n                    static: is_static,\n                    key: name,\n                    quote: name instanceof AST_SymbolMethod ? property_token.quote : undefined,\n                    value: create_accessor(),\n                    end: prev()\n                });\n            } else {\n                const AccessorClass = accessor_type === \"get\"\n                    ? AST_PrivateGetter\n                    : AST_PrivateSetter;\n\n                return new AccessorClass({\n                    start,\n                    static: is_static,\n                    key: get_symbol_ast(name),\n                    value: create_accessor(),\n                    end: prev(),\n                });\n            }\n        }\n\n        if (is(\"punc\", \"(\")) {\n            name = get_symbol_ast(name);\n            const AST_MethodVariant = is_private\n                ? AST_PrivateMethod\n                : AST_ConciseMethod;\n            var node = new AST_MethodVariant({\n                start       : start,\n                static      : is_static,\n                is_generator: is_generator,\n                async       : is_async,\n                key         : name,\n                quote       : name instanceof AST_SymbolMethod ?\n                              property_token.quote : undefined,\n                value       : create_accessor(is_generator, is_async),\n                end         : prev()\n            });\n            return node;\n        }\n\n        if (is_class) {\n            const key = get_symbol_ast(name, AST_SymbolClassProperty);\n            const quote = key instanceof AST_SymbolClassProperty\n                ? property_token.quote\n                : undefined;\n            const AST_ClassPropertyVariant = is_private\n                ? AST_ClassPrivateProperty\n                : AST_ClassProperty;\n            if (is(\"operator\", \"=\")) {\n                next();\n                return new AST_ClassPropertyVariant({\n                    start,\n                    static: is_static,\n                    quote,\n                    key,\n                    value: expression(false),\n                    end: prev()\n                });\n            } else if (\n                is(\"name\")\n                || is(\"privatename\")\n                || is(\"operator\", \"*\")\n                || is(\"punc\", \";\")\n                || is(\"punc\", \"}\")\n            ) {\n                return new AST_ClassPropertyVariant({\n                    start,\n                    static: is_static,\n                    quote,\n                    key,\n                    end: prev()\n                });\n            }\n        }\n    }\n\n    function maybe_import_assertion() {\n        if (is(\"name\", \"assert\") && !has_newline_before(S.token)) {\n            next();\n            return object_or_destructuring_();\n        }\n        return null;\n    }\n\n    function import_statement() {\n        var start = prev();\n\n        var imported_name;\n        var imported_names;\n        if (is(\"name\")) {\n            imported_name = as_symbol(AST_SymbolImport);\n        }\n\n        if (is(\"punc\", \",\")) {\n            next();\n        }\n\n        imported_names = map_names(true);\n\n        if (imported_names || imported_name) {\n            expect_token(\"name\", \"from\");\n        }\n        var mod_str = S.token;\n        if (mod_str.type !== \"string\") {\n            unexpected();\n        }\n        next();\n\n        const assert_clause = maybe_import_assertion();\n\n        return new AST_Import({\n            start,\n            imported_name,\n            imported_names,\n            module_name: new AST_String({\n                start: mod_str,\n                value: mod_str.value,\n                quote: mod_str.quote,\n                end: mod_str,\n            }),\n            assert_clause,\n            end: S.token,\n        });\n    }\n\n    function import_meta() {\n        var start = S.token;\n        expect_token(\"operator\", \"import\");\n        expect_token(\"punc\", \".\");\n        expect_token(\"name\", \"meta\");\n        return subscripts(new AST_ImportMeta({\n            start: start,\n            end: prev()\n        }), false);\n    }\n\n    function map_name(is_import) {\n        function make_symbol(type) {\n            return new type({\n                name: as_property_name(),\n                start: prev(),\n                end: prev()\n            });\n        }\n\n        var foreign_type = is_import ? AST_SymbolImportForeign : AST_SymbolExportForeign;\n        var type = is_import ? AST_SymbolImport : AST_SymbolExport;\n        var start = S.token;\n        var foreign_name;\n        var name;\n\n        if (is_import) {\n            foreign_name = make_symbol(foreign_type);\n        } else {\n            name = make_symbol(type);\n        }\n        if (is(\"name\", \"as\")) {\n            next();  // The \"as\" word\n            if (is_import) {\n                name = make_symbol(type);\n            } else {\n                foreign_name = make_symbol(foreign_type);\n            }\n        } else if (is_import) {\n            name = new type(foreign_name);\n        } else {\n            foreign_name = new foreign_type(name);\n        }\n\n        return new AST_NameMapping({\n            start: start,\n            foreign_name: foreign_name,\n            name: name,\n            end: prev(),\n        });\n    }\n\n    function map_nameAsterisk(is_import, name) {\n        var foreign_type = is_import ? AST_SymbolImportForeign : AST_SymbolExportForeign;\n        var type = is_import ? AST_SymbolImport : AST_SymbolExport;\n        var start = S.token;\n        var foreign_name;\n        var end = prev();\n\n        name = name || new type({\n            name: \"*\",\n            start: start,\n            end: end,\n        });\n\n        foreign_name = new foreign_type({\n            name: \"*\",\n            start: start,\n            end: end,\n        });\n\n        return new AST_NameMapping({\n            start: start,\n            foreign_name: foreign_name,\n            name: name,\n            end: end,\n        });\n    }\n\n    function map_names(is_import) {\n        var names;\n        if (is(\"punc\", \"{\")) {\n            next();\n            names = [];\n            while (!is(\"punc\", \"}\")) {\n                names.push(map_name(is_import));\n                if (is(\"punc\", \",\")) {\n                    next();\n                }\n            }\n            next();\n        } else if (is(\"operator\", \"*\")) {\n            var name;\n            next();\n            if (is_import && is(\"name\", \"as\")) {\n                next();  // The \"as\" word\n                name = as_symbol(is_import ? AST_SymbolImport : AST_SymbolExportForeign);\n            }\n            names = [map_nameAsterisk(is_import, name)];\n        }\n        return names;\n    }\n\n    function export_statement() {\n        var start = S.token;\n        var is_default;\n        var exported_names;\n\n        if (is(\"keyword\", \"default\")) {\n            is_default = true;\n            next();\n        } else if (exported_names = map_names(false)) {\n            if (is(\"name\", \"from\")) {\n                next();\n\n                var mod_str = S.token;\n                if (mod_str.type !== \"string\") {\n                    unexpected();\n                }\n                next();\n\n                const assert_clause = maybe_import_assertion();\n\n                return new AST_Export({\n                    start: start,\n                    is_default: is_default,\n                    exported_names: exported_names,\n                    module_name: new AST_String({\n                        start: mod_str,\n                        value: mod_str.value,\n                        quote: mod_str.quote,\n                        end: mod_str,\n                    }),\n                    end: prev(),\n                    assert_clause\n                });\n            } else {\n                return new AST_Export({\n                    start: start,\n                    is_default: is_default,\n                    exported_names: exported_names,\n                    end: prev(),\n                });\n            }\n        }\n\n        var node;\n        var exported_value;\n        var exported_definition;\n        if (is(\"punc\", \"{\")\n            || is_default\n                && (is(\"keyword\", \"class\") || is(\"keyword\", \"function\"))\n                && is_token(peek(), \"punc\")) {\n            exported_value = expression(false);\n            semicolon();\n        } else if ((node = statement(is_default)) instanceof AST_Definitions && is_default) {\n            unexpected(node.start);\n        } else if (\n            node instanceof AST_Definitions\n            || node instanceof AST_Defun\n            || node instanceof AST_DefClass\n        ) {\n            exported_definition = node;\n        } else if (\n            node instanceof AST_ClassExpression\n            || node instanceof AST_Function\n        ) {\n            exported_value = node;\n        } else if (node instanceof AST_SimpleStatement) {\n            exported_value = node.body;\n        } else {\n            unexpected(node.start);\n        }\n\n        return new AST_Export({\n            start: start,\n            is_default: is_default,\n            exported_value: exported_value,\n            exported_definition: exported_definition,\n            end: prev(),\n            assert_clause: null\n        });\n    }\n\n    function as_property_name() {\n        var tmp = S.token;\n        switch (tmp.type) {\n          case \"punc\":\n            if (tmp.value === \"[\") {\n                next();\n                var ex = expression(false);\n                expect(\"]\");\n                return ex;\n            } else unexpected(tmp);\n          case \"operator\":\n            if (tmp.value === \"*\") {\n                next();\n                return null;\n            }\n            if (![\"delete\", \"in\", \"instanceof\", \"new\", \"typeof\", \"void\"].includes(tmp.value)) {\n                unexpected(tmp);\n            }\n            /* falls through */\n          case \"name\":\n          case \"privatename\":\n          case \"string\":\n          case \"num\":\n          case \"big_int\":\n          case \"keyword\":\n          case \"atom\":\n            next();\n            return tmp.value;\n          default:\n            unexpected(tmp);\n        }\n    }\n\n    function as_name() {\n        var tmp = S.token;\n        if (tmp.type != \"name\" && tmp.type != \"privatename\") unexpected();\n        next();\n        return tmp.value;\n    }\n\n    function _make_symbol(type) {\n        var name = S.token.value;\n        return new (name == \"this\" ? AST_This :\n                    name == \"super\" ? AST_Super :\n                    type)({\n            name  : String(name),\n            start : S.token,\n            end   : S.token\n        });\n    }\n\n    function _verify_symbol(sym) {\n        var name = sym.name;\n        if (is_in_generator() && name == \"yield\") {\n            token_error(sym.start, \"Yield cannot be used as identifier inside generators\");\n        }\n        if (S.input.has_directive(\"use strict\")) {\n            if (name == \"yield\") {\n                token_error(sym.start, \"Unexpected yield identifier inside strict mode\");\n            }\n            if (sym instanceof AST_SymbolDeclaration && (name == \"arguments\" || name == \"eval\")) {\n                token_error(sym.start, \"Unexpected \" + name + \" in strict mode\");\n            }\n        }\n    }\n\n    function as_symbol(type, noerror) {\n        if (!is(\"name\")) {\n            if (!noerror) croak(\"Name expected\");\n            return null;\n        }\n        var sym = _make_symbol(type);\n        _verify_symbol(sym);\n        next();\n        return sym;\n    }\n\n    // Annotate AST_Call, AST_Lambda or AST_New with the special comments\n    function annotate(node) {\n        var start = node.start;\n        var comments = start.comments_before;\n        const comments_outside_parens = outer_comments_before_counts.get(start);\n        var i = comments_outside_parens != null ? comments_outside_parens : comments.length;\n        while (--i >= 0) {\n            var comment = comments[i];\n            if (/[@#]__/.test(comment.value)) {\n                if (/[@#]__PURE__/.test(comment.value)) {\n                    set_annotation(node, _PURE);\n                    break;\n                }\n                if (/[@#]__INLINE__/.test(comment.value)) {\n                    set_annotation(node, _INLINE);\n                    break;\n                }\n                if (/[@#]__NOINLINE__/.test(comment.value)) {\n                    set_annotation(node, _NOINLINE);\n                    break;\n                }\n            }\n        }\n    }\n\n    var subscripts = function(expr, allow_calls, is_chain) {\n        var start = expr.start;\n        if (is(\"punc\", \".\")) {\n            next();\n            const AST_DotVariant = is(\"privatename\") ? AST_DotHash : AST_Dot;\n            return subscripts(new AST_DotVariant({\n                start      : start,\n                expression : expr,\n                optional   : false,\n                property   : as_name(),\n                end        : prev()\n            }), allow_calls, is_chain);\n        }\n        if (is(\"punc\", \"[\")) {\n            next();\n            var prop = expression(true);\n            expect(\"]\");\n            return subscripts(new AST_Sub({\n                start      : start,\n                expression : expr,\n                optional   : false,\n                property   : prop,\n                end        : prev()\n            }), allow_calls, is_chain);\n        }\n        if (allow_calls && is(\"punc\", \"(\")) {\n            next();\n            var call = new AST_Call({\n                start      : start,\n                expression : expr,\n                optional   : false,\n                args       : call_args(),\n                end        : prev()\n            });\n            annotate(call);\n            return subscripts(call, true, is_chain);\n        }\n\n        if (is(\"punc\", \"?.\")) {\n            next();\n\n            let chain_contents;\n\n            if (allow_calls && is(\"punc\", \"(\")) {\n                next();\n\n                const call = new AST_Call({\n                    start,\n                    optional: true,\n                    expression: expr,\n                    args: call_args(),\n                    end: prev()\n                });\n                annotate(call);\n\n                chain_contents = subscripts(call, true, true);\n            } else if (is(\"name\") || is(\"privatename\")) {\n                const AST_DotVariant = is(\"privatename\") ? AST_DotHash : AST_Dot;\n                chain_contents = subscripts(new AST_DotVariant({\n                    start,\n                    expression: expr,\n                    optional: true,\n                    property: as_name(),\n                    end: prev()\n                }), allow_calls, true);\n            } else if (is(\"punc\", \"[\")) {\n                next();\n                const property = expression(true);\n                expect(\"]\");\n                chain_contents = subscripts(new AST_Sub({\n                    start,\n                    expression: expr,\n                    optional: true,\n                    property,\n                    end: prev()\n                }), allow_calls, true);\n            }\n\n            if (!chain_contents) unexpected();\n\n            if (chain_contents instanceof AST_Chain) return chain_contents;\n\n            return new AST_Chain({\n                start,\n                expression: chain_contents,\n                end: prev()\n            });\n        }\n\n        if (is(\"template_head\")) {\n            if (is_chain) {\n                // a?.b`c` is a syntax error\n                unexpected();\n            }\n\n            return subscripts(new AST_PrefixedTemplateString({\n                start: start,\n                prefix: expr,\n                template_string: template_string(),\n                end: prev()\n            }), allow_calls);\n        }\n\n        return expr;\n    };\n\n    function call_args() {\n        var args = [];\n        while (!is(\"punc\", \")\")) {\n            if (is(\"expand\", \"...\")) {\n                next();\n                args.push(new AST_Expansion({\n                    start: prev(),\n                    expression: expression(false),\n                    end: prev()\n                }));\n            } else {\n                args.push(expression(false));\n            }\n            if (!is(\"punc\", \")\")) {\n                expect(\",\");\n            }\n        }\n        next();\n        return args;\n    }\n\n    var maybe_unary = function(allow_calls, allow_arrows) {\n        var start = S.token;\n        if (start.type == \"name\" && start.value == \"await\" && can_await()) {\n            next();\n            return _await_expression();\n        }\n        if (is(\"operator\") && UNARY_PREFIX.has(start.value)) {\n            next();\n            handle_regexp();\n            var ex = make_unary(AST_UnaryPrefix, start, maybe_unary(allow_calls));\n            ex.start = start;\n            ex.end = prev();\n            return ex;\n        }\n        var val = expr_atom(allow_calls, allow_arrows);\n        while (is(\"operator\") && UNARY_POSTFIX.has(S.token.value) && !has_newline_before(S.token)) {\n            if (val instanceof AST_Arrow) unexpected();\n            val = make_unary(AST_UnaryPostfix, S.token, val);\n            val.start = start;\n            val.end = S.token;\n            next();\n        }\n        return val;\n    };\n\n    function make_unary(ctor, token, expr) {\n        var op = token.value;\n        switch (op) {\n          case \"++\":\n          case \"--\":\n            if (!is_assignable(expr))\n                croak(\"Invalid use of \" + op + \" operator\", token.line, token.col, token.pos);\n            break;\n          case \"delete\":\n            if (expr instanceof AST_SymbolRef && S.input.has_directive(\"use strict\"))\n                croak(\"Calling delete on expression not allowed in strict mode\", expr.start.line, expr.start.col, expr.start.pos);\n            break;\n        }\n        return new ctor({ operator: op, expression: expr });\n    }\n\n    var expr_op = function(left, min_prec, no_in) {\n        var op = is(\"operator\") ? S.token.value : null;\n        if (op == \"in\" && no_in) op = null;\n        if (op == \"**\" && left instanceof AST_UnaryPrefix\n            /* unary token in front not allowed - parenthesis required */\n            && !is_token(left.start, \"punc\", \"(\")\n            && left.operator !== \"--\" && left.operator !== \"++\")\n                unexpected(left.start);\n        var prec = op != null ? PRECEDENCE[op] : null;\n        if (prec != null && (prec > min_prec || (op === \"**\" && min_prec === prec))) {\n            next();\n            var right = expr_op(maybe_unary(true), prec, no_in);\n            return expr_op(new AST_Binary({\n                start    : left.start,\n                left     : left,\n                operator : op,\n                right    : right,\n                end      : right.end\n            }), min_prec, no_in);\n        }\n        return left;\n    };\n\n    function expr_ops(no_in) {\n        return expr_op(maybe_unary(true, true), 0, no_in);\n    }\n\n    var maybe_conditional = function(no_in) {\n        var start = S.token;\n        var expr = expr_ops(no_in);\n        if (is(\"operator\", \"?\")) {\n            next();\n            var yes = expression(false);\n            expect(\":\");\n            return new AST_Conditional({\n                start       : start,\n                condition   : expr,\n                consequent  : yes,\n                alternative : expression(false, no_in),\n                end         : prev()\n            });\n        }\n        return expr;\n    };\n\n    function is_assignable(expr) {\n        return expr instanceof AST_PropAccess || expr instanceof AST_SymbolRef;\n    }\n\n    function to_destructuring(node) {\n        if (node instanceof AST_Object) {\n            node = new AST_Destructuring({\n                start: node.start,\n                names: node.properties.map(to_destructuring),\n                is_array: false,\n                end: node.end\n            });\n        } else if (node instanceof AST_Array) {\n            var names = [];\n\n            for (var i = 0; i < node.elements.length; i++) {\n                // Only allow expansion as last element\n                if (node.elements[i] instanceof AST_Expansion) {\n                    if (i + 1 !== node.elements.length) {\n                        token_error(node.elements[i].start, \"Spread must the be last element in destructuring array\");\n                    }\n                    node.elements[i].expression = to_destructuring(node.elements[i].expression);\n                }\n\n                names.push(to_destructuring(node.elements[i]));\n            }\n\n            node = new AST_Destructuring({\n                start: node.start,\n                names: names,\n                is_array: true,\n                end: node.end\n            });\n        } else if (node instanceof AST_ObjectProperty) {\n            node.value = to_destructuring(node.value);\n        } else if (node instanceof AST_Assign) {\n            node = new AST_DefaultAssign({\n                start: node.start,\n                left: node.left,\n                operator: \"=\",\n                right: node.right,\n                end: node.end\n            });\n        }\n        return node;\n    }\n\n    // In ES6, AssignmentExpression can also be an ArrowFunction\n    var maybe_assign = function(no_in) {\n        handle_regexp();\n        var start = S.token;\n\n        if (start.type == \"name\" && start.value == \"yield\") {\n            if (is_in_generator()) {\n                next();\n                return _yield_expression();\n            } else if (S.input.has_directive(\"use strict\")) {\n                token_error(S.token, \"Unexpected yield identifier inside strict mode\");\n            }\n        }\n\n        var left = maybe_conditional(no_in);\n        var val = S.token.value;\n\n        if (is(\"operator\") && ASSIGNMENT.has(val)) {\n            if (is_assignable(left) || (left = to_destructuring(left)) instanceof AST_Destructuring) {\n                next();\n\n                return new AST_Assign({\n                    start    : start,\n                    left     : left,\n                    operator : val,\n                    right    : maybe_assign(no_in),\n                    logical  : LOGICAL_ASSIGNMENT.has(val),\n                    end      : prev()\n                });\n            }\n            croak(\"Invalid assignment\");\n        }\n        return left;\n    };\n\n    var expression = function(commas, no_in) {\n        var start = S.token;\n        var exprs = [];\n        while (true) {\n            exprs.push(maybe_assign(no_in));\n            if (!commas || !is(\"punc\", \",\")) break;\n            next();\n            commas = true;\n        }\n        return exprs.length == 1 ? exprs[0] : new AST_Sequence({\n            start       : start,\n            expressions : exprs,\n            end         : peek()\n        });\n    };\n\n    function in_loop(cont) {\n        ++S.in_loop;\n        var ret = cont();\n        --S.in_loop;\n        return ret;\n    }\n\n    if (options.expression) {\n        return expression(true);\n    }\n\n    return (function parse_toplevel() {\n        var start = S.token;\n        var body = [];\n        S.input.push_directives_stack();\n        if (options.module) S.input.add_directive(\"use strict\");\n        while (!is(\"eof\")) {\n            body.push(statement());\n        }\n        S.input.pop_directives_stack();\n        var end = prev();\n        var toplevel = options.toplevel;\n        if (toplevel) {\n            toplevel.body = toplevel.body.concat(body);\n            toplevel.end = end;\n        } else {\n            toplevel = new AST_Toplevel({ start: start, body: body, end: end });\n        }\n        return toplevel;\n    })();\n\n}\n\nexport {\n    get_full_char_code,\n    get_full_char,\n    is_identifier_char,\n    is_basic_identifier_string,\n    is_identifier_string,\n    is_surrogate_pair_head,\n    is_surrogate_pair_tail,\n    js_error,\n    JS_Parse_Error,\n    parse,\n    PRECEDENCE,\n    ALL_RESERVED_WORDS,\n    tokenizer,\n};\n","/***********************************************************************\n\n  A JavaScript tokenizer / parser / beautifier / compressor.\n  https://github.com/mishoo/UglifyJS2\n\n  -------------------------------- (C) ---------------------------------\n\n                           Author: Mihai Bazon\n                         <mihai.bazon@gmail.com>\n                       http://mihai.bazon.net/blog\n\n  Distributed under the BSD license:\n\n    Copyright 2012 (c) Mihai Bazon <mihai.bazon@gmail.com>\n\n    Redistribution and use in source and binary forms, with or without\n    modification, are permitted provided that the following conditions\n    are met:\n\n        * Redistributions of source code must retain the above\n          copyright notice, this list of conditions and the following\n          disclaimer.\n\n        * Redistributions in binary form must reproduce the above\n          copyright notice, this list of conditions and the following\n          disclaimer in the documentation and/or other materials\n          provided with the distribution.\n\n    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER “AS IS” AND ANY\n    EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n    PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER BE\n    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,\n    OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n    PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n    PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n    THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR\n    TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF\n    THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n    SUCH DAMAGE.\n\n ***********************************************************************/\n\nimport {\n    HOP,\n    MAP,\n    noop\n} from \"./utils/index.js\";\nimport { parse } from \"./parse.js\";\n\nfunction DEFNODE(type, props, methods, base = AST_Node) {\n    if (!props) props = [];\n    else props = props.split(/\\s+/);\n    var self_props = props;\n    if (base && base.PROPS)\n        props = props.concat(base.PROPS);\n    var code = \"return function AST_\" + type + \"(props){ if (props) { \";\n    for (var i = props.length; --i >= 0;) {\n        code += \"this.\" + props[i] + \" = props.\" + props[i] + \";\";\n    }\n    const proto = base && Object.create(base.prototype);\n    if (proto && proto.initialize || (methods && methods.initialize))\n        code += \"this.initialize();\";\n    code += \"}\";\n    code += \"this.flags = 0;\";\n    code += \"}\";\n    var ctor = new Function(code)();\n    if (proto) {\n        ctor.prototype = proto;\n        ctor.BASE = base;\n    }\n    if (base) base.SUBCLASSES.push(ctor);\n    ctor.prototype.CTOR = ctor;\n    ctor.prototype.constructor = ctor;\n    ctor.PROPS = props || null;\n    ctor.SELF_PROPS = self_props;\n    ctor.SUBCLASSES = [];\n    if (type) {\n        ctor.prototype.TYPE = ctor.TYPE = type;\n    }\n    if (methods) for (i in methods) if (HOP(methods, i)) {\n        if (i[0] === \"$\") {\n            ctor[i.substr(1)] = methods[i];\n        } else {\n            ctor.prototype[i] = methods[i];\n        }\n    }\n    ctor.DEFMETHOD = function(name, method) {\n        this.prototype[name] = method;\n    };\n    return ctor;\n}\n\nconst has_tok_flag = (tok, flag) => Boolean(tok.flags & flag);\nconst set_tok_flag = (tok, flag, truth) => {\n    if (truth) {\n        tok.flags |= flag;\n    } else {\n        tok.flags &= ~flag;\n    }\n};\n\nconst TOK_FLAG_NLB          = 0b0001;\nconst TOK_FLAG_QUOTE_SINGLE = 0b0010;\nconst TOK_FLAG_QUOTE_EXISTS = 0b0100;\n\nclass AST_Token {\n    constructor(type, value, line, col, pos, nlb, comments_before, comments_after, file) {\n        this.flags = (nlb ? 1 : 0);\n\n        this.type = type;\n        this.value = value;\n        this.line = line;\n        this.col = col;\n        this.pos = pos;\n        this.comments_before = comments_before;\n        this.comments_after = comments_after;\n        this.file = file;\n\n        Object.seal(this);\n    }\n\n    get nlb() {\n        return has_tok_flag(this, TOK_FLAG_NLB);\n    }\n\n    set nlb(new_nlb) {\n        set_tok_flag(this, TOK_FLAG_NLB, new_nlb);\n    }\n\n    get quote() {\n        return !has_tok_flag(this, TOK_FLAG_QUOTE_EXISTS)\n            ? \"\"\n            : (has_tok_flag(this, TOK_FLAG_QUOTE_SINGLE) ? \"'\" : '\"');\n    }\n\n    set quote(quote_type) {\n        set_tok_flag(this, TOK_FLAG_QUOTE_SINGLE, quote_type === \"'\");\n        set_tok_flag(this, TOK_FLAG_QUOTE_EXISTS, !!quote_type);\n    }\n}\n\nvar AST_Node = DEFNODE(\"Node\", \"start end\", {\n    _clone: function(deep) {\n        if (deep) {\n            var self = this.clone();\n            return self.transform(new TreeTransformer(function(node) {\n                if (node !== self) {\n                    return node.clone(true);\n                }\n            }));\n        }\n        return new this.CTOR(this);\n    },\n    clone: function(deep) {\n        return this._clone(deep);\n    },\n    $documentation: \"Base class of all AST nodes\",\n    $propdoc: {\n        start: \"[AST_Token] The first token of this node\",\n        end: \"[AST_Token] The last token of this node\"\n    },\n    _walk: function(visitor) {\n        return visitor._visit(this);\n    },\n    walk: function(visitor) {\n        return this._walk(visitor); // not sure the indirection will be any help\n    },\n    _children_backwards: () => {}\n}, null);\n\n/* -----[ statements ]----- */\n\nvar AST_Statement = DEFNODE(\"Statement\", null, {\n    $documentation: \"Base class of all statements\",\n});\n\nvar AST_Debugger = DEFNODE(\"Debugger\", null, {\n    $documentation: \"Represents a debugger statement\",\n}, AST_Statement);\n\nvar AST_Directive = DEFNODE(\"Directive\", \"value quote\", {\n    $documentation: \"Represents a directive, like \\\"use strict\\\";\",\n    $propdoc: {\n        value: \"[string] The value of this directive as a plain string (it's not an AST_String!)\",\n        quote: \"[string] the original quote character\"\n    },\n}, AST_Statement);\n\nvar AST_SimpleStatement = DEFNODE(\"SimpleStatement\", \"body\", {\n    $documentation: \"A statement consisting of an expression, i.e. a = 1 + 2\",\n    $propdoc: {\n        body: \"[AST_Node] an expression node (should not be instanceof AST_Statement)\"\n    },\n    _walk: function(visitor) {\n        return visitor._visit(this, function() {\n            this.body._walk(visitor);\n        });\n    },\n    _children_backwards(push) {\n        push(this.body);\n    }\n}, AST_Statement);\n\nfunction walk_body(node, visitor) {\n    const body = node.body;\n    for (var i = 0, len = body.length; i < len; i++) {\n        body[i]._walk(visitor);\n    }\n}\n\nfunction clone_block_scope(deep) {\n    var clone = this._clone(deep);\n    if (this.block_scope) {\n        clone.block_scope = this.block_scope.clone();\n    }\n    return clone;\n}\n\nvar AST_Block = DEFNODE(\"Block\", \"body block_scope\", {\n    $documentation: \"A body of statements (usually braced)\",\n    $propdoc: {\n        body: \"[AST_Statement*] an array of statements\",\n        block_scope: \"[AST_Scope] the block scope\"\n    },\n    _walk: function(visitor) {\n        return visitor._visit(this, function() {\n            walk_body(this, visitor);\n        });\n    },\n    _children_backwards(push) {\n        let i = this.body.length;\n        while (i--) push(this.body[i]);\n    },\n    clone: clone_block_scope\n}, AST_Statement);\n\nvar AST_BlockStatement = DEFNODE(\"BlockStatement\", null, {\n    $documentation: \"A block statement\",\n}, AST_Block);\n\nvar AST_EmptyStatement = DEFNODE(\"EmptyStatement\", null, {\n    $documentation: \"The empty statement (empty block or simply a semicolon)\"\n}, AST_Statement);\n\nvar AST_StatementWithBody = DEFNODE(\"StatementWithBody\", \"body\", {\n    $documentation: \"Base class for all statements that contain one nested body: `For`, `ForIn`, `Do`, `While`, `With`\",\n    $propdoc: {\n        body: \"[AST_Statement] the body; this should always be present, even if it's an AST_EmptyStatement\"\n    }\n}, AST_Statement);\n\nvar AST_LabeledStatement = DEFNODE(\"LabeledStatement\", \"label\", {\n    $documentation: \"Statement with a label\",\n    $propdoc: {\n        label: \"[AST_Label] a label definition\"\n    },\n    _walk: function(visitor) {\n        return visitor._visit(this, function() {\n            this.label._walk(visitor);\n            this.body._walk(visitor);\n        });\n    },\n    _children_backwards(push) {\n        push(this.body);\n        push(this.label);\n    },\n    clone: function(deep) {\n        var node = this._clone(deep);\n        if (deep) {\n            var label = node.label;\n            var def = this.label;\n            node.walk(new TreeWalker(function(node) {\n                if (node instanceof AST_LoopControl\n                    && node.label && node.label.thedef === def) {\n                    node.label.thedef = label;\n                    label.references.push(node);\n                }\n            }));\n        }\n        return node;\n    }\n}, AST_StatementWithBody);\n\nvar AST_IterationStatement = DEFNODE(\"IterationStatement\", \"block_scope\", {\n    $documentation: \"Internal class.  All loops inherit from it.\",\n    $propdoc: {\n        block_scope: \"[AST_Scope] the block scope for this iteration statement.\"\n    },\n    clone: clone_block_scope\n}, AST_StatementWithBody);\n\nvar AST_DWLoop = DEFNODE(\"DWLoop\", \"condition\", {\n    $documentation: \"Base class for do/while statements\",\n    $propdoc: {\n        condition: \"[AST_Node] the loop condition.  Should not be instanceof AST_Statement\"\n    }\n}, AST_IterationStatement);\n\nvar AST_Do = DEFNODE(\"Do\", null, {\n    $documentation: \"A `do` statement\",\n    _walk: function(visitor) {\n        return visitor._visit(this, function() {\n            this.body._walk(visitor);\n            this.condition._walk(visitor);\n        });\n    },\n    _children_backwards(push) {\n        push(this.condition);\n        push(this.body);\n    }\n}, AST_DWLoop);\n\nvar AST_While = DEFNODE(\"While\", null, {\n    $documentation: \"A `while` statement\",\n    _walk: function(visitor) {\n        return visitor._visit(this, function() {\n            this.condition._walk(visitor);\n            this.body._walk(visitor);\n        });\n    },\n    _children_backwards(push) {\n        push(this.body);\n        push(this.condition);\n    },\n}, AST_DWLoop);\n\nvar AST_For = DEFNODE(\"For\", \"init condition step\", {\n    $documentation: \"A `for` statement\",\n    $propdoc: {\n        init: \"[AST_Node?] the `for` initialization code, or null if empty\",\n        condition: \"[AST_Node?] the `for` termination clause, or null if empty\",\n        step: \"[AST_Node?] the `for` update clause, or null if empty\"\n    },\n    _walk: function(visitor) {\n        return visitor._visit(this, function() {\n            if (this.init) this.init._walk(visitor);\n            if (this.condition) this.condition._walk(visitor);\n            if (this.step) this.step._walk(visitor);\n            this.body._walk(visitor);\n        });\n    },\n    _children_backwards(push) {\n        push(this.body);\n        if (this.step) push(this.step);\n        if (this.condition) push(this.condition);\n        if (this.init) push(this.init);\n    },\n}, AST_IterationStatement);\n\nvar AST_ForIn = DEFNODE(\"ForIn\", \"init object\", {\n    $documentation: \"A `for ... in` statement\",\n    $propdoc: {\n        init: \"[AST_Node] the `for/in` initialization code\",\n        object: \"[AST_Node] the object that we're looping through\"\n    },\n    _walk: function(visitor) {\n        return visitor._visit(this, function() {\n            this.init._walk(visitor);\n            this.object._walk(visitor);\n            this.body._walk(visitor);\n        });\n    },\n    _children_backwards(push) {\n        push(this.body);\n        if (this.object) push(this.object);\n        if (this.init) push(this.init);\n    },\n}, AST_IterationStatement);\n\nvar AST_ForOf = DEFNODE(\"ForOf\", \"await\", {\n    $documentation: \"A `for ... of` statement\",\n}, AST_ForIn);\n\nvar AST_With = DEFNODE(\"With\", \"expression\", {\n    $documentation: \"A `with` statement\",\n    $propdoc: {\n        expression: \"[AST_Node] the `with` expression\"\n    },\n    _walk: function(visitor) {\n        return visitor._visit(this, function() {\n            this.expression._walk(visitor);\n            this.body._walk(visitor);\n        });\n    },\n    _children_backwards(push) {\n        push(this.body);\n        push(this.expression);\n    },\n}, AST_StatementWithBody);\n\n/* -----[ scope and functions ]----- */\n\nvar AST_Scope = DEFNODE(\"Scope\", \"variables functions uses_with uses_eval parent_scope enclosed cname\", {\n    $documentation: \"Base class for all statements introducing a lexical scope\",\n    $propdoc: {\n        variables: \"[Map/S] a map of name -> SymbolDef for all variables/functions defined in this scope\",\n        uses_with: \"[boolean/S] tells whether this scope uses the `with` statement\",\n        uses_eval: \"[boolean/S] tells whether this scope contains a direct call to the global `eval`\",\n        parent_scope: \"[AST_Scope?/S] link to the parent scope\",\n        enclosed: \"[SymbolDef*/S] a list of all symbol definitions that are accessed from this scope or any subscopes\",\n        cname: \"[integer/S] current index for mangling variables (used internally by the mangler)\",\n    },\n    get_defun_scope: function() {\n        var self = this;\n        while (self.is_block_scope()) {\n            self = self.parent_scope;\n        }\n        return self;\n    },\n    clone: function(deep, toplevel) {\n        var node = this._clone(deep);\n        if (deep && this.variables && toplevel && !this._block_scope) {\n            node.figure_out_scope({}, {\n                toplevel: toplevel,\n                parent_scope: this.parent_scope\n            });\n        } else {\n            if (this.variables) node.variables = new Map(this.variables);\n            if (this.enclosed) node.enclosed = this.enclosed.slice();\n            if (this._block_scope) node._block_scope = this._block_scope;\n        }\n        return node;\n    },\n    pinned: function() {\n        return this.uses_eval || this.uses_with;\n    }\n}, AST_Block);\n\nvar AST_Toplevel = DEFNODE(\"Toplevel\", \"globals\", {\n    $documentation: \"The toplevel scope\",\n    $propdoc: {\n        globals: \"[Map/S] a map of name -> SymbolDef for all undeclared names\",\n    },\n    wrap_commonjs: function(name) {\n        var body = this.body;\n        var wrapped_tl = \"(function(exports){'$ORIG';})(typeof \" + name + \"=='undefined'?(\" + name + \"={}):\" + name + \");\";\n        wrapped_tl = parse(wrapped_tl);\n        wrapped_tl = wrapped_tl.transform(new TreeTransformer(function(node) {\n            if (node instanceof AST_Directive && node.value == \"$ORIG\") {\n                return MAP.splice(body);\n            }\n        }));\n        return wrapped_tl;\n    },\n    wrap_enclose: function(args_values) {\n        if (typeof args_values != \"string\") args_values = \"\";\n        var index = args_values.indexOf(\":\");\n        if (index < 0) index = args_values.length;\n        var body = this.body;\n        return parse([\n            \"(function(\",\n            args_values.slice(0, index),\n            '){\"$ORIG\"})(',\n            args_values.slice(index + 1),\n            \")\"\n        ].join(\"\")).transform(new TreeTransformer(function(node) {\n            if (node instanceof AST_Directive && node.value == \"$ORIG\") {\n                return MAP.splice(body);\n            }\n        }));\n    }\n}, AST_Scope);\n\nvar AST_Expansion = DEFNODE(\"Expansion\", \"expression\", {\n    $documentation: \"An expandible argument, such as ...rest, a splat, such as [1,2,...all], or an expansion in a variable declaration, such as var [first, ...rest] = list\",\n    $propdoc: {\n        expression: \"[AST_Node] the thing to be expanded\"\n    },\n    _walk: function(visitor) {\n        return visitor._visit(this, function() {\n            this.expression.walk(visitor);\n        });\n    },\n    _children_backwards(push) {\n        push(this.expression);\n    },\n});\n\nvar AST_Lambda = DEFNODE(\"Lambda\", \"name argnames uses_arguments is_generator async\", {\n    $documentation: \"Base class for functions\",\n    $propdoc: {\n        name: \"[AST_SymbolDeclaration?] the name of this function\",\n        argnames: \"[AST_SymbolFunarg|AST_Destructuring|AST_Expansion|AST_DefaultAssign*] array of function arguments, destructurings, or expanding arguments\",\n        uses_arguments: \"[boolean/S] tells whether this function accesses the arguments array\",\n        is_generator: \"[boolean] is this a generator method\",\n        async: \"[boolean] is this method async\",\n    },\n    args_as_names: function () {\n        var out = [];\n        for (var i = 0; i < this.argnames.length; i++) {\n            if (this.argnames[i] instanceof AST_Destructuring) {\n                out.push(...this.argnames[i].all_symbols());\n            } else {\n                out.push(this.argnames[i]);\n            }\n        }\n        return out;\n    },\n    _walk: function(visitor) {\n        return visitor._visit(this, function() {\n            if (this.name) this.name._walk(visitor);\n            var argnames = this.argnames;\n            for (var i = 0, len = argnames.length; i < len; i++) {\n                argnames[i]._walk(visitor);\n            }\n            walk_body(this, visitor);\n        });\n    },\n    _children_backwards(push) {\n        let i = this.body.length;\n        while (i--) push(this.body[i]);\n\n        i = this.argnames.length;\n        while (i--) push(this.argnames[i]);\n\n        if (this.name) push(this.name);\n    },\n    is_braceless() {\n        return this.body[0] instanceof AST_Return && this.body[0].value;\n    },\n    // Default args and expansion don't count, so .argnames.length doesn't cut it\n    length_property() {\n        let length = 0;\n\n        for (const arg of this.argnames) {\n            if (arg instanceof AST_SymbolFunarg || arg instanceof AST_Destructuring) {\n                length++;\n            }\n        }\n\n        return length;\n    }\n}, AST_Scope);\n\nvar AST_Accessor = DEFNODE(\"Accessor\", null, {\n    $documentation: \"A setter/getter function.  The `name` property is always null.\"\n}, AST_Lambda);\n\nvar AST_Function = DEFNODE(\"Function\", null, {\n    $documentation: \"A function expression\"\n}, AST_Lambda);\n\nvar AST_Arrow = DEFNODE(\"Arrow\", null, {\n    $documentation: \"An ES6 Arrow function ((a) => b)\"\n}, AST_Lambda);\n\nvar AST_Defun = DEFNODE(\"Defun\", null, {\n    $documentation: \"A function definition\"\n}, AST_Lambda);\n\n/* -----[ DESTRUCTURING ]----- */\nvar AST_Destructuring = DEFNODE(\"Destructuring\", \"names is_array\", {\n    $documentation: \"A destructuring of several names. Used in destructuring assignment and with destructuring function argument names\",\n    $propdoc: {\n        \"names\": \"[AST_Node*] Array of properties or elements\",\n        \"is_array\": \"[Boolean] Whether the destructuring represents an object or array\"\n    },\n    _walk: function(visitor) {\n        return visitor._visit(this, function() {\n            this.names.forEach(function(name) {\n                name._walk(visitor);\n            });\n        });\n    },\n    _children_backwards(push) {\n        let i = this.names.length;\n        while (i--) push(this.names[i]);\n    },\n    all_symbols: function() {\n        var out = [];\n        this.walk(new TreeWalker(function (node) {\n            if (node instanceof AST_Symbol) {\n                out.push(node);\n            }\n        }));\n        return out;\n    }\n});\n\nvar AST_PrefixedTemplateString = DEFNODE(\"PrefixedTemplateString\", \"template_string prefix\", {\n    $documentation: \"A templatestring with a prefix, such as String.raw`foobarbaz`\",\n    $propdoc: {\n        template_string: \"[AST_TemplateString] The template string\",\n        prefix: \"[AST_Node] The prefix, which will get called.\"\n    },\n    _walk: function(visitor) {\n        return visitor._visit(this, function () {\n            this.prefix._walk(visitor);\n            this.template_string._walk(visitor);\n        });\n    },\n    _children_backwards(push) {\n        push(this.template_string);\n        push(this.prefix);\n    },\n});\n\nvar AST_TemplateString = DEFNODE(\"TemplateString\", \"segments\", {\n    $documentation: \"A template string literal\",\n    $propdoc: {\n        segments: \"[AST_Node*] One or more segments, starting with AST_TemplateSegment. AST_Node may follow AST_TemplateSegment, but each AST_Node must be followed by AST_TemplateSegment.\"\n    },\n    _walk: function(visitor) {\n        return visitor._visit(this, function() {\n            this.segments.forEach(function(seg) {\n                seg._walk(visitor);\n            });\n        });\n    },\n    _children_backwards(push) {\n        let i = this.segments.length;\n        while (i--) push(this.segments[i]);\n    }\n});\n\nvar AST_TemplateSegment = DEFNODE(\"TemplateSegment\", \"value raw\", {\n    $documentation: \"A segment of a template string literal\",\n    $propdoc: {\n        value: \"Content of the segment\",\n        raw: \"Raw source of the segment\",\n    }\n});\n\n/* -----[ JUMPS ]----- */\n\nvar AST_Jump = DEFNODE(\"Jump\", null, {\n    $documentation: \"Base class for “jumps” (for now that's `return`, `throw`, `break` and `continue`)\"\n}, AST_Statement);\n\nvar AST_Exit = DEFNODE(\"Exit\", \"value\", {\n    $documentation: \"Base class for “exits” (`return` and `throw`)\",\n    $propdoc: {\n        value: \"[AST_Node?] the value returned or thrown by this statement; could be null for AST_Return\"\n    },\n    _walk: function(visitor) {\n        return visitor._visit(this, this.value && function() {\n            this.value._walk(visitor);\n        });\n    },\n    _children_backwards(push) {\n        if (this.value) push(this.value);\n    },\n}, AST_Jump);\n\nvar AST_Return = DEFNODE(\"Return\", null, {\n    $documentation: \"A `return` statement\"\n}, AST_Exit);\n\nvar AST_Throw = DEFNODE(\"Throw\", null, {\n    $documentation: \"A `throw` statement\"\n}, AST_Exit);\n\nvar AST_LoopControl = DEFNODE(\"LoopControl\", \"label\", {\n    $documentation: \"Base class for loop control statements (`break` and `continue`)\",\n    $propdoc: {\n        label: \"[AST_LabelRef?] the label, or null if none\",\n    },\n    _walk: function(visitor) {\n        return visitor._visit(this, this.label && function() {\n            this.label._walk(visitor);\n        });\n    },\n    _children_backwards(push) {\n        if (this.label) push(this.label);\n    },\n}, AST_Jump);\n\nvar AST_Break = DEFNODE(\"Break\", null, {\n    $documentation: \"A `break` statement\"\n}, AST_LoopControl);\n\nvar AST_Continue = DEFNODE(\"Continue\", null, {\n    $documentation: \"A `continue` statement\"\n}, AST_LoopControl);\n\nvar AST_Await = DEFNODE(\"Await\", \"expression\", {\n    $documentation: \"An `await` statement\",\n    $propdoc: {\n        expression: \"[AST_Node] the mandatory expression being awaited\",\n    },\n    _walk: function(visitor) {\n        return visitor._visit(this, function() {\n            this.expression._walk(visitor);\n        });\n    },\n    _children_backwards(push) {\n        push(this.expression);\n    },\n});\n\nvar AST_Yield = DEFNODE(\"Yield\", \"expression is_star\", {\n    $documentation: \"A `yield` statement\",\n    $propdoc: {\n        expression: \"[AST_Node?] the value returned or thrown by this statement; could be null (representing undefined) but only when is_star is set to false\",\n        is_star: \"[Boolean] Whether this is a yield or yield* statement\"\n    },\n    _walk: function(visitor) {\n        return visitor._visit(this, this.expression && function() {\n            this.expression._walk(visitor);\n        });\n    },\n    _children_backwards(push) {\n        if (this.expression) push(this.expression);\n    }\n});\n\n/* -----[ IF ]----- */\n\nvar AST_If = DEFNODE(\"If\", \"condition alternative\", {\n    $documentation: \"A `if` statement\",\n    $propdoc: {\n        condition: \"[AST_Node] the `if` condition\",\n        alternative: \"[AST_Statement?] the `else` part, or null if not present\"\n    },\n    _walk: function(visitor) {\n        return visitor._visit(this, function() {\n            this.condition._walk(visitor);\n            this.body._walk(visitor);\n            if (this.alternative) this.alternative._walk(visitor);\n        });\n    },\n    _children_backwards(push) {\n        if (this.alternative) {\n            push(this.alternative);\n        }\n        push(this.body);\n        push(this.condition);\n    }\n}, AST_StatementWithBody);\n\n/* -----[ SWITCH ]----- */\n\nvar AST_Switch = DEFNODE(\"Switch\", \"expression\", {\n    $documentation: \"A `switch` statement\",\n    $propdoc: {\n        expression: \"[AST_Node] the `switch` “discriminant”\"\n    },\n    _walk: function(visitor) {\n        return visitor._visit(this, function() {\n            this.expression._walk(visitor);\n            walk_body(this, visitor);\n        });\n    },\n    _children_backwards(push) {\n        let i = this.body.length;\n        while (i--) push(this.body[i]);\n        push(this.expression);\n    }\n}, AST_Block);\n\nvar AST_SwitchBranch = DEFNODE(\"SwitchBranch\", null, {\n    $documentation: \"Base class for `switch` branches\",\n}, AST_Block);\n\nvar AST_Default = DEFNODE(\"Default\", null, {\n    $documentation: \"A `default` switch branch\",\n}, AST_SwitchBranch);\n\nvar AST_Case = DEFNODE(\"Case\", \"expression\", {\n    $documentation: \"A `case` switch branch\",\n    $propdoc: {\n        expression: \"[AST_Node] the `case` expression\"\n    },\n    _walk: function(visitor) {\n        return visitor._visit(this, function() {\n            this.expression._walk(visitor);\n            walk_body(this, visitor);\n        });\n    },\n    _children_backwards(push) {\n        let i = this.body.length;\n        while (i--) push(this.body[i]);\n        push(this.expression);\n    },\n}, AST_SwitchBranch);\n\n/* -----[ EXCEPTIONS ]----- */\n\nvar AST_Try = DEFNODE(\"Try\", \"bcatch bfinally\", {\n    $documentation: \"A `try` statement\",\n    $propdoc: {\n        bcatch: \"[AST_Catch?] the catch block, or null if not present\",\n        bfinally: \"[AST_Finally?] the finally block, or null if not present\"\n    },\n    _walk: function(visitor) {\n        return visitor._visit(this, function() {\n            walk_body(this, visitor);\n            if (this.bcatch) this.bcatch._walk(visitor);\n            if (this.bfinally) this.bfinally._walk(visitor);\n        });\n    },\n    _children_backwards(push) {\n        if (this.bfinally) push(this.bfinally);\n        if (this.bcatch) push(this.bcatch);\n        let i = this.body.length;\n        while (i--) push(this.body[i]);\n    },\n}, AST_Block);\n\nvar AST_Catch = DEFNODE(\"Catch\", \"argname\", {\n    $documentation: \"A `catch` node; only makes sense as part of a `try` statement\",\n    $propdoc: {\n        argname: \"[AST_SymbolCatch|AST_Destructuring|AST_Expansion|AST_DefaultAssign] symbol for the exception\"\n    },\n    _walk: function(visitor) {\n        return visitor._visit(this, function() {\n            if (this.argname) this.argname._walk(visitor);\n            walk_body(this, visitor);\n        });\n    },\n    _children_backwards(push) {\n        let i = this.body.length;\n        while (i--) push(this.body[i]);\n        if (this.argname) push(this.argname);\n    },\n}, AST_Block);\n\nvar AST_Finally = DEFNODE(\"Finally\", null, {\n    $documentation: \"A `finally` node; only makes sense as part of a `try` statement\"\n}, AST_Block);\n\n/* -----[ VAR/CONST ]----- */\n\nvar AST_Definitions = DEFNODE(\"Definitions\", \"definitions\", {\n    $documentation: \"Base class for `var` or `const` nodes (variable declarations/initializations)\",\n    $propdoc: {\n        definitions: \"[AST_VarDef*] array of variable definitions\"\n    },\n    _walk: function(visitor) {\n        return visitor._visit(this, function() {\n            var definitions = this.definitions;\n            for (var i = 0, len = definitions.length; i < len; i++) {\n                definitions[i]._walk(visitor);\n            }\n        });\n    },\n    _children_backwards(push) {\n        let i = this.definitions.length;\n        while (i--) push(this.definitions[i]);\n    },\n}, AST_Statement);\n\nvar AST_Var = DEFNODE(\"Var\", null, {\n    $documentation: \"A `var` statement\"\n}, AST_Definitions);\n\nvar AST_Let = DEFNODE(\"Let\", null, {\n    $documentation: \"A `let` statement\"\n}, AST_Definitions);\n\nvar AST_Const = DEFNODE(\"Const\", null, {\n    $documentation: \"A `const` statement\"\n}, AST_Definitions);\n\nvar AST_VarDef = DEFNODE(\"VarDef\", \"name value\", {\n    $documentation: \"A variable declaration; only appears in a AST_Definitions node\",\n    $propdoc: {\n        name: \"[AST_Destructuring|AST_SymbolConst|AST_SymbolLet|AST_SymbolVar] name of the variable\",\n        value: \"[AST_Node?] initializer, or null of there's no initializer\"\n    },\n    _walk: function(visitor) {\n        return visitor._visit(this, function() {\n            this.name._walk(visitor);\n            if (this.value) this.value._walk(visitor);\n        });\n    },\n    _children_backwards(push) {\n        if (this.value) push(this.value);\n        push(this.name);\n    },\n});\n\nvar AST_NameMapping = DEFNODE(\"NameMapping\", \"foreign_name name\", {\n    $documentation: \"The part of the export/import statement that declare names from a module.\",\n    $propdoc: {\n        foreign_name: \"[AST_SymbolExportForeign|AST_SymbolImportForeign] The name being exported/imported (as specified in the module)\",\n        name: \"[AST_SymbolExport|AST_SymbolImport] The name as it is visible to this module.\"\n    },\n    _walk: function (visitor) {\n        return visitor._visit(this, function() {\n            this.foreign_name._walk(visitor);\n            this.name._walk(visitor);\n        });\n    },\n    _children_backwards(push) {\n        push(this.name);\n        push(this.foreign_name);\n    },\n});\n\nvar AST_Import = DEFNODE(\"Import\", \"imported_name imported_names module_name assert_clause\", {\n    $documentation: \"An `import` statement\",\n    $propdoc: {\n        imported_name: \"[AST_SymbolImport] The name of the variable holding the module's default export.\",\n        imported_names: \"[AST_NameMapping*] The names of non-default imported variables\",\n        module_name: \"[AST_String] String literal describing where this module came from\",\n        assert_clause: \"[AST_Object?] The import assertion\"\n    },\n    _walk: function(visitor) {\n        return visitor._visit(this, function() {\n            if (this.imported_name) {\n                this.imported_name._walk(visitor);\n            }\n            if (this.imported_names) {\n                this.imported_names.forEach(function(name_import) {\n                    name_import._walk(visitor);\n                });\n            }\n            this.module_name._walk(visitor);\n        });\n    },\n    _children_backwards(push) {\n        push(this.module_name);\n        if (this.imported_names) {\n            let i = this.imported_names.length;\n            while (i--) push(this.imported_names[i]);\n        }\n        if (this.imported_name) push(this.imported_name);\n    },\n});\n\nvar AST_ImportMeta = DEFNODE(\"ImportMeta\", null, {\n    $documentation: \"A reference to import.meta\",\n});\n\nvar AST_Export = DEFNODE(\"Export\", \"exported_definition exported_value is_default exported_names module_name assert_clause\", {\n    $documentation: \"An `export` statement\",\n    $propdoc: {\n        exported_definition: \"[AST_Defun|AST_Definitions|AST_DefClass?] An exported definition\",\n        exported_value: \"[AST_Node?] An exported value\",\n        exported_names: \"[AST_NameMapping*?] List of exported names\",\n        module_name: \"[AST_String?] Name of the file to load exports from\",\n        is_default: \"[Boolean] Whether this is the default exported value of this module\",\n        assert_clause: \"[AST_Object?] The import assertion\"\n    },\n    _walk: function (visitor) {\n        return visitor._visit(this, function () {\n            if (this.exported_definition) {\n                this.exported_definition._walk(visitor);\n            }\n            if (this.exported_value) {\n                this.exported_value._walk(visitor);\n            }\n            if (this.exported_names) {\n                this.exported_names.forEach(function(name_export) {\n                    name_export._walk(visitor);\n                });\n            }\n            if (this.module_name) {\n                this.module_name._walk(visitor);\n            }\n        });\n    },\n    _children_backwards(push) {\n        if (this.module_name) push(this.module_name);\n        if (this.exported_names) {\n            let i = this.exported_names.length;\n            while (i--) push(this.exported_names[i]);\n        }\n        if (this.exported_value) push(this.exported_value);\n        if (this.exported_definition) push(this.exported_definition);\n    }\n}, AST_Statement);\n\n/* -----[ OTHER ]----- */\n\nvar AST_Call = DEFNODE(\"Call\", \"expression args optional _annotations\", {\n    $documentation: \"A function call expression\",\n    $propdoc: {\n        expression: \"[AST_Node] expression to invoke as function\",\n        args: \"[AST_Node*] array of arguments\",\n        optional: \"[boolean] whether this is an optional call (IE ?.() )\",\n        _annotations: \"[number] bitfield containing information about the call\"\n    },\n    initialize() {\n        if (this._annotations == null) this._annotations = 0;\n    },\n    _walk(visitor) {\n        return visitor._visit(this, function() {\n            var args = this.args;\n            for (var i = 0, len = args.length; i < len; i++) {\n                args[i]._walk(visitor);\n            }\n            this.expression._walk(visitor);  // TODO why do we need to crawl this last?\n        });\n    },\n    _children_backwards(push) {\n        let i = this.args.length;\n        while (i--) push(this.args[i]);\n        push(this.expression);\n    },\n});\n\nvar AST_New = DEFNODE(\"New\", null, {\n    $documentation: \"An object instantiation.  Derives from a function call since it has exactly the same properties\"\n}, AST_Call);\n\nvar AST_Sequence = DEFNODE(\"Sequence\", \"expressions\", {\n    $documentation: \"A sequence expression (comma-separated expressions)\",\n    $propdoc: {\n        expressions: \"[AST_Node*] array of expressions (at least two)\"\n    },\n    _walk: function(visitor) {\n        return visitor._visit(this, function() {\n            this.expressions.forEach(function(node) {\n                node._walk(visitor);\n            });\n        });\n    },\n    _children_backwards(push) {\n        let i = this.expressions.length;\n        while (i--) push(this.expressions[i]);\n    },\n});\n\nvar AST_PropAccess = DEFNODE(\"PropAccess\", \"expression property optional\", {\n    $documentation: \"Base class for property access expressions, i.e. `a.foo` or `a[\\\"foo\\\"]`\",\n    $propdoc: {\n        expression: \"[AST_Node] the “container” expression\",\n        property: \"[AST_Node|string] the property to access.  For AST_Dot & AST_DotHash this is always a plain string, while for AST_Sub it's an arbitrary AST_Node\",\n\n        optional: \"[boolean] whether this is an optional property access (IE ?.)\"\n    }\n});\n\nvar AST_Dot = DEFNODE(\"Dot\", \"quote\", {\n    $documentation: \"A dotted property access expression\",\n    $propdoc: {\n        quote: \"[string] the original quote character when transformed from AST_Sub\",\n    },\n    _walk: function(visitor) {\n        return visitor._visit(this, function() {\n            this.expression._walk(visitor);\n        });\n    },\n    _children_backwards(push) {\n        push(this.expression);\n    },\n}, AST_PropAccess);\n\nvar AST_DotHash = DEFNODE(\"DotHash\", \"\", {\n    $documentation: \"A dotted property access to a private property\",\n    _walk: function(visitor) {\n        return visitor._visit(this, function() {\n            this.expression._walk(visitor);\n        });\n    },\n    _children_backwards(push) {\n        push(this.expression);\n    },\n}, AST_PropAccess);\n\nvar AST_Sub = DEFNODE(\"Sub\", null, {\n    $documentation: \"Index-style property access, i.e. `a[\\\"foo\\\"]`\",\n    _walk: function(visitor) {\n        return visitor._visit(this, function() {\n            this.expression._walk(visitor);\n            this.property._walk(visitor);\n        });\n    },\n    _children_backwards(push) {\n        push(this.property);\n        push(this.expression);\n    },\n}, AST_PropAccess);\n\nvar AST_Chain = DEFNODE(\"Chain\", \"expression\", {\n    $documentation: \"A chain expression like a?.b?.(c)?.[d]\",\n    $propdoc: {\n        expression: \"[AST_Call|AST_Dot|AST_DotHash|AST_Sub] chain element.\"\n    },\n    _walk: function (visitor) {\n        return visitor._visit(this, function() {\n            this.expression._walk(visitor);\n        });\n    },\n    _children_backwards(push) {\n        push(this.expression);\n    },\n});\n\nvar AST_Unary = DEFNODE(\"Unary\", \"operator expression\", {\n    $documentation: \"Base class for unary expressions\",\n    $propdoc: {\n        operator: \"[string] the operator\",\n        expression: \"[AST_Node] expression that this unary operator applies to\"\n    },\n    _walk: function(visitor) {\n        return visitor._visit(this, function() {\n            this.expression._walk(visitor);\n        });\n    },\n    _children_backwards(push) {\n        push(this.expression);\n    },\n});\n\nvar AST_UnaryPrefix = DEFNODE(\"UnaryPrefix\", null, {\n    $documentation: \"Unary prefix expression, i.e. `typeof i` or `++i`\"\n}, AST_Unary);\n\nvar AST_UnaryPostfix = DEFNODE(\"UnaryPostfix\", null, {\n    $documentation: \"Unary postfix expression, i.e. `i++`\"\n}, AST_Unary);\n\nvar AST_Binary = DEFNODE(\"Binary\", \"operator left right\", {\n    $documentation: \"Binary expression, i.e. `a + b`\",\n    $propdoc: {\n        left: \"[AST_Node] left-hand side expression\",\n        operator: \"[string] the operator\",\n        right: \"[AST_Node] right-hand side expression\"\n    },\n    _walk: function(visitor) {\n        return visitor._visit(this, function() {\n            this.left._walk(visitor);\n            this.right._walk(visitor);\n        });\n    },\n    _children_backwards(push) {\n        push(this.right);\n        push(this.left);\n    },\n});\n\nvar AST_Conditional = DEFNODE(\"Conditional\", \"condition consequent alternative\", {\n    $documentation: \"Conditional expression using the ternary operator, i.e. `a ? b : c`\",\n    $propdoc: {\n        condition: \"[AST_Node]\",\n        consequent: \"[AST_Node]\",\n        alternative: \"[AST_Node]\"\n    },\n    _walk: function(visitor) {\n        return visitor._visit(this, function() {\n            this.condition._walk(visitor);\n            this.consequent._walk(visitor);\n            this.alternative._walk(visitor);\n        });\n    },\n    _children_backwards(push) {\n        push(this.alternative);\n        push(this.consequent);\n        push(this.condition);\n    },\n});\n\nvar AST_Assign = DEFNODE(\"Assign\", \"logical\", {\n    $documentation: \"An assignment expression — `a = b + 5`\",\n    $propdoc: {\n        logical: \"Whether it's a logical assignment\"\n    }\n}, AST_Binary);\n\nvar AST_DefaultAssign = DEFNODE(\"DefaultAssign\", null, {\n    $documentation: \"A default assignment expression like in `(a = 3) => a`\"\n}, AST_Binary);\n\n/* -----[ LITERALS ]----- */\n\nvar AST_Array = DEFNODE(\"Array\", \"elements\", {\n    $documentation: \"An array literal\",\n    $propdoc: {\n        elements: \"[AST_Node*] array of elements\"\n    },\n    _walk: function(visitor) {\n        return visitor._visit(this, function() {\n            var elements = this.elements;\n            for (var i = 0, len = elements.length; i < len; i++) {\n                elements[i]._walk(visitor);\n            }\n        });\n    },\n    _children_backwards(push) {\n        let i = this.elements.length;\n        while (i--) push(this.elements[i]);\n    },\n});\n\nvar AST_Object = DEFNODE(\"Object\", \"properties\", {\n    $documentation: \"An object literal\",\n    $propdoc: {\n        properties: \"[AST_ObjectProperty*] array of properties\"\n    },\n    _walk: function(visitor) {\n        return visitor._visit(this, function() {\n            var properties = this.properties;\n            for (var i = 0, len = properties.length; i < len; i++) {\n                properties[i]._walk(visitor);\n            }\n        });\n    },\n    _children_backwards(push) {\n        let i = this.properties.length;\n        while (i--) push(this.properties[i]);\n    },\n});\n\nvar AST_ObjectProperty = DEFNODE(\"ObjectProperty\", \"key value\", {\n    $documentation: \"Base class for literal object properties\",\n    $propdoc: {\n        key: \"[string|AST_Node] property name. For ObjectKeyVal this is a string. For getters, setters and computed property this is an AST_Node.\",\n        value: \"[AST_Node] property value.  For getters and setters this is an AST_Accessor.\"\n    },\n    _walk: function(visitor) {\n        return visitor._visit(this, function() {\n            if (this.key instanceof AST_Node)\n                this.key._walk(visitor);\n            this.value._walk(visitor);\n        });\n    },\n    _children_backwards(push) {\n        push(this.value);\n        if (this.key instanceof AST_Node) push(this.key);\n    }\n});\n\nvar AST_ObjectKeyVal = DEFNODE(\"ObjectKeyVal\", \"quote\", {\n    $documentation: \"A key: value object property\",\n    $propdoc: {\n        quote: \"[string] the original quote character\"\n    },\n    computed_key() {\n        return this.key instanceof AST_Node;\n    }\n}, AST_ObjectProperty);\n\nvar AST_PrivateSetter = DEFNODE(\"PrivateSetter\", \"static\", {\n    $propdoc: {\n        static: \"[boolean] whether this is a static private setter\"\n    },\n    $documentation: \"A private setter property\",\n    computed_key() {\n        return false;\n    }\n}, AST_ObjectProperty);\n\nvar AST_PrivateGetter = DEFNODE(\"PrivateGetter\", \"static\", {\n    $propdoc: {\n        static: \"[boolean] whether this is a static private getter\"\n    },\n    $documentation: \"A private getter property\",\n    computed_key() {\n        return false;\n    }\n}, AST_ObjectProperty);\n\nvar AST_ObjectSetter = DEFNODE(\"ObjectSetter\", \"quote static\", {\n    $propdoc: {\n        quote: \"[string|undefined] the original quote character, if any\",\n        static: \"[boolean] whether this is a static setter (classes only)\"\n    },\n    $documentation: \"An object setter property\",\n    computed_key() {\n        return !(this.key instanceof AST_SymbolMethod);\n    }\n}, AST_ObjectProperty);\n\nvar AST_ObjectGetter = DEFNODE(\"ObjectGetter\", \"quote static\", {\n    $propdoc: {\n        quote: \"[string|undefined] the original quote character, if any\",\n        static: \"[boolean] whether this is a static getter (classes only)\"\n    },\n    $documentation: \"An object getter property\",\n    computed_key() {\n        return !(this.key instanceof AST_SymbolMethod);\n    }\n}, AST_ObjectProperty);\n\nvar AST_ConciseMethod = DEFNODE(\"ConciseMethod\", \"quote static is_generator async\", {\n    $propdoc: {\n        quote: \"[string|undefined] the original quote character, if any\",\n        static: \"[boolean] is this method static (classes only)\",\n        is_generator: \"[boolean] is this a generator method\",\n        async: \"[boolean] is this method async\",\n    },\n    $documentation: \"An ES6 concise method inside an object or class\",\n    computed_key() {\n        return !(this.key instanceof AST_SymbolMethod);\n    }\n}, AST_ObjectProperty);\n\nvar AST_PrivateMethod = DEFNODE(\"PrivateMethod\", \"\", {\n    $documentation: \"A private class method inside a class\",\n}, AST_ConciseMethod);\n\nvar AST_Class = DEFNODE(\"Class\", \"name extends properties\", {\n    $propdoc: {\n        name: \"[AST_SymbolClass|AST_SymbolDefClass?] optional class name.\",\n        extends: \"[AST_Node]? optional parent class\",\n        properties: \"[AST_ObjectProperty*] array of properties\"\n    },\n    $documentation: \"An ES6 class\",\n    _walk: function(visitor) {\n        return visitor._visit(this, function() {\n            if (this.name) {\n                this.name._walk(visitor);\n            }\n            if (this.extends) {\n                this.extends._walk(visitor);\n            }\n            this.properties.forEach((prop) => prop._walk(visitor));\n        });\n    },\n    _children_backwards(push) {\n        let i = this.properties.length;\n        while (i--) push(this.properties[i]);\n        if (this.extends) push(this.extends);\n        if (this.name) push(this.name);\n    },\n}, AST_Scope /* TODO a class might have a scope but it's not a scope */);\n\nvar AST_ClassProperty = DEFNODE(\"ClassProperty\", \"static quote\", {\n    $documentation: \"A class property\",\n    $propdoc: {\n        static: \"[boolean] whether this is a static key\",\n        quote: \"[string] which quote is being used\"\n    },\n    _walk: function(visitor) {\n        return visitor._visit(this, function() {\n            if (this.key instanceof AST_Node)\n                this.key._walk(visitor);\n            if (this.value instanceof AST_Node)\n                this.value._walk(visitor);\n        });\n    },\n    _children_backwards(push) {\n        if (this.value instanceof AST_Node) push(this.value);\n        if (this.key instanceof AST_Node) push(this.key);\n    },\n    computed_key() {\n        return !(this.key instanceof AST_SymbolClassProperty);\n    }\n}, AST_ObjectProperty);\n\nvar AST_ClassPrivateProperty = DEFNODE(\"ClassPrivateProperty\", \"\", {\n    $documentation: \"A class property for a private property\",\n}, AST_ClassProperty);\n\nvar AST_DefClass = DEFNODE(\"DefClass\", null, {\n    $documentation: \"A class definition\",\n}, AST_Class);\n\nvar AST_ClassExpression = DEFNODE(\"ClassExpression\", null, {\n    $documentation: \"A class expression.\"\n}, AST_Class);\n\nvar AST_Symbol = DEFNODE(\"Symbol\", \"scope name thedef\", {\n    $propdoc: {\n        name: \"[string] name of this symbol\",\n        scope: \"[AST_Scope/S] the current scope (not necessarily the definition scope)\",\n        thedef: \"[SymbolDef/S] the definition of this symbol\"\n    },\n    $documentation: \"Base class for all symbols\"\n});\n\nvar AST_NewTarget = DEFNODE(\"NewTarget\", null, {\n    $documentation: \"A reference to new.target\"\n});\n\nvar AST_SymbolDeclaration = DEFNODE(\"SymbolDeclaration\", \"init\", {\n    $documentation: \"A declaration symbol (symbol in var/const, function name or argument, symbol in catch)\",\n}, AST_Symbol);\n\nvar AST_SymbolVar = DEFNODE(\"SymbolVar\", null, {\n    $documentation: \"Symbol defining a variable\",\n}, AST_SymbolDeclaration);\n\nvar AST_SymbolBlockDeclaration = DEFNODE(\"SymbolBlockDeclaration\", null, {\n    $documentation: \"Base class for block-scoped declaration symbols\"\n}, AST_SymbolDeclaration);\n\nvar AST_SymbolConst = DEFNODE(\"SymbolConst\", null, {\n    $documentation: \"A constant declaration\"\n}, AST_SymbolBlockDeclaration);\n\nvar AST_SymbolLet = DEFNODE(\"SymbolLet\", null, {\n    $documentation: \"A block-scoped `let` declaration\"\n}, AST_SymbolBlockDeclaration);\n\nvar AST_SymbolFunarg = DEFNODE(\"SymbolFunarg\", null, {\n    $documentation: \"Symbol naming a function argument\",\n}, AST_SymbolVar);\n\nvar AST_SymbolDefun = DEFNODE(\"SymbolDefun\", null, {\n    $documentation: \"Symbol defining a function\",\n}, AST_SymbolDeclaration);\n\nvar AST_SymbolMethod = DEFNODE(\"SymbolMethod\", null, {\n    $documentation: \"Symbol in an object defining a method\",\n}, AST_Symbol);\n\nvar AST_SymbolClassProperty = DEFNODE(\"SymbolClassProperty\", null, {\n    $documentation: \"Symbol for a class property\",\n}, AST_Symbol);\n\nvar AST_SymbolLambda = DEFNODE(\"SymbolLambda\", null, {\n    $documentation: \"Symbol naming a function expression\",\n}, AST_SymbolDeclaration);\n\nvar AST_SymbolDefClass = DEFNODE(\"SymbolDefClass\", null, {\n    $documentation: \"Symbol naming a class's name in a class declaration. Lexically scoped to its containing scope, and accessible within the class.\"\n}, AST_SymbolBlockDeclaration);\n\nvar AST_SymbolClass = DEFNODE(\"SymbolClass\", null, {\n    $documentation: \"Symbol naming a class's name. Lexically scoped to the class.\"\n}, AST_SymbolDeclaration);\n\nvar AST_SymbolCatch = DEFNODE(\"SymbolCatch\", null, {\n    $documentation: \"Symbol naming the exception in catch\",\n}, AST_SymbolBlockDeclaration);\n\nvar AST_SymbolImport = DEFNODE(\"SymbolImport\", null, {\n    $documentation: \"Symbol referring to an imported name\",\n}, AST_SymbolBlockDeclaration);\n\nvar AST_SymbolImportForeign = DEFNODE(\"SymbolImportForeign\", null, {\n    $documentation: \"A symbol imported from a module, but it is defined in the other module, and its real name is irrelevant for this module's purposes\",\n}, AST_Symbol);\n\nvar AST_Label = DEFNODE(\"Label\", \"references\", {\n    $documentation: \"Symbol naming a label (declaration)\",\n    $propdoc: {\n        references: \"[AST_LoopControl*] a list of nodes referring to this label\"\n    },\n    initialize: function() {\n        this.references = [];\n        this.thedef = this;\n    }\n}, AST_Symbol);\n\nvar AST_SymbolRef = DEFNODE(\"SymbolRef\", null, {\n    $documentation: \"Reference to some symbol (not definition/declaration)\",\n}, AST_Symbol);\n\nvar AST_SymbolExport = DEFNODE(\"SymbolExport\", null, {\n    $documentation: \"Symbol referring to a name to export\",\n}, AST_SymbolRef);\n\nvar AST_SymbolExportForeign = DEFNODE(\"SymbolExportForeign\", null, {\n    $documentation: \"A symbol exported from this module, but it is used in the other module, and its real name is irrelevant for this module's purposes\",\n}, AST_Symbol);\n\nvar AST_LabelRef = DEFNODE(\"LabelRef\", null, {\n    $documentation: \"Reference to a label symbol\",\n}, AST_Symbol);\n\nvar AST_This = DEFNODE(\"This\", null, {\n    $documentation: \"The `this` symbol\",\n}, AST_Symbol);\n\nvar AST_Super = DEFNODE(\"Super\", null, {\n    $documentation: \"The `super` symbol\",\n}, AST_This);\n\nvar AST_Constant = DEFNODE(\"Constant\", null, {\n    $documentation: \"Base class for all constants\",\n    getValue: function() {\n        return this.value;\n    }\n});\n\nvar AST_String = DEFNODE(\"String\", \"value quote\", {\n    $documentation: \"A string literal\",\n    $propdoc: {\n        value: \"[string] the contents of this string\",\n        quote: \"[string] the original quote character\"\n    }\n}, AST_Constant);\n\nvar AST_Number = DEFNODE(\"Number\", \"value raw\", {\n    $documentation: \"A number literal\",\n    $propdoc: {\n        value: \"[number] the numeric value\",\n        raw: \"[string] numeric value as string\"\n    }\n}, AST_Constant);\n\nvar AST_BigInt = DEFNODE(\"BigInt\", \"value\", {\n    $documentation: \"A big int literal\",\n    $propdoc: {\n        value: \"[string] big int value\"\n    }\n}, AST_Constant);\n\nvar AST_RegExp = DEFNODE(\"RegExp\", \"value\", {\n    $documentation: \"A regexp literal\",\n    $propdoc: {\n        value: \"[RegExp] the actual regexp\",\n    }\n}, AST_Constant);\n\nvar AST_Atom = DEFNODE(\"Atom\", null, {\n    $documentation: \"Base class for atoms\",\n}, AST_Constant);\n\nvar AST_Null = DEFNODE(\"Null\", null, {\n    $documentation: \"The `null` atom\",\n    value: null\n}, AST_Atom);\n\nvar AST_NaN = DEFNODE(\"NaN\", null, {\n    $documentation: \"The impossible value\",\n    value: 0/0\n}, AST_Atom);\n\nvar AST_Undefined = DEFNODE(\"Undefined\", null, {\n    $documentation: \"The `undefined` value\",\n    value: (function() {}())\n}, AST_Atom);\n\nvar AST_Hole = DEFNODE(\"Hole\", null, {\n    $documentation: \"A hole in an array\",\n    value: (function() {}())\n}, AST_Atom);\n\nvar AST_Infinity = DEFNODE(\"Infinity\", null, {\n    $documentation: \"The `Infinity` value\",\n    value: 1/0\n}, AST_Atom);\n\nvar AST_Boolean = DEFNODE(\"Boolean\", null, {\n    $documentation: \"Base class for booleans\",\n}, AST_Atom);\n\nvar AST_False = DEFNODE(\"False\", null, {\n    $documentation: \"The `false` atom\",\n    value: false\n}, AST_Boolean);\n\nvar AST_True = DEFNODE(\"True\", null, {\n    $documentation: \"The `true` atom\",\n    value: true\n}, AST_Boolean);\n\n/* -----[ Walk function ]---- */\n\n/**\n * Walk nodes in depth-first search fashion.\n * Callback can return `walk_abort` symbol to stop iteration.\n * It can also return `true` to stop iteration just for child nodes.\n * Iteration can be stopped and continued by passing the `to_visit` argument,\n * which is given to the callback in the second argument.\n **/\nfunction walk(node, cb, to_visit = [node]) {\n    const push = to_visit.push.bind(to_visit);\n    while (to_visit.length) {\n        const node = to_visit.pop();\n        const ret = cb(node, to_visit);\n\n        if (ret) {\n            if (ret === walk_abort) return true;\n            continue;\n        }\n\n        node._children_backwards(push);\n    }\n    return false;\n}\n\nfunction walk_parent(node, cb, initial_stack) {\n    const to_visit = [node];\n    const push = to_visit.push.bind(to_visit);\n    const stack = initial_stack ? initial_stack.slice() : [];\n    const parent_pop_indices = [];\n\n    let current;\n\n    const info = {\n        parent: (n = 0) => {\n            if (n === -1) {\n                return current;\n            }\n\n            // [ p1 p0 ] [ 1 0 ]\n            if (initial_stack && n >= stack.length) {\n                n -= stack.length;\n                return initial_stack[\n                    initial_stack.length - (n + 1)\n                ];\n            }\n\n            return stack[stack.length - (1 + n)];\n        },\n    };\n\n    while (to_visit.length) {\n        current = to_visit.pop();\n\n        while (\n            parent_pop_indices.length &&\n            to_visit.length == parent_pop_indices[parent_pop_indices.length - 1]\n        ) {\n            stack.pop();\n            parent_pop_indices.pop();\n        }\n\n        const ret = cb(current, info);\n\n        if (ret) {\n            if (ret === walk_abort) return true;\n            continue;\n        }\n\n        const visit_length = to_visit.length;\n\n        current._children_backwards(push);\n\n        // Push only if we're going to traverse the children\n        if (to_visit.length > visit_length) {\n            stack.push(current);\n            parent_pop_indices.push(visit_length - 1);\n        }\n    }\n\n    return false;\n}\n\nconst walk_abort = Symbol(\"abort walk\");\n\n/* -----[ TreeWalker ]----- */\n\nclass TreeWalker {\n    constructor(callback) {\n        this.visit = callback;\n        this.stack = [];\n        this.directives = Object.create(null);\n    }\n\n    _visit(node, descend) {\n        this.push(node);\n        var ret = this.visit(node, descend ? function() {\n            descend.call(node);\n        } : noop);\n        if (!ret && descend) {\n            descend.call(node);\n        }\n        this.pop();\n        return ret;\n    }\n\n    parent(n) {\n        return this.stack[this.stack.length - 2 - (n || 0)];\n    }\n\n    push(node) {\n        if (node instanceof AST_Lambda) {\n            this.directives = Object.create(this.directives);\n        } else if (node instanceof AST_Directive && !this.directives[node.value]) {\n            this.directives[node.value] = node;\n        } else if (node instanceof AST_Class) {\n            this.directives = Object.create(this.directives);\n            if (!this.directives[\"use strict\"]) {\n                this.directives[\"use strict\"] = node;\n            }\n        }\n        this.stack.push(node);\n    }\n\n    pop() {\n        var node = this.stack.pop();\n        if (node instanceof AST_Lambda || node instanceof AST_Class) {\n            this.directives = Object.getPrototypeOf(this.directives);\n        }\n    }\n\n    self() {\n        return this.stack[this.stack.length - 1];\n    }\n\n    find_parent(type) {\n        var stack = this.stack;\n        for (var i = stack.length; --i >= 0;) {\n            var x = stack[i];\n            if (x instanceof type) return x;\n        }\n    }\n\n    has_directive(type) {\n        var dir = this.directives[type];\n        if (dir) return dir;\n        var node = this.stack[this.stack.length - 1];\n        if (node instanceof AST_Scope && node.body) {\n            for (var i = 0; i < node.body.length; ++i) {\n                var st = node.body[i];\n                if (!(st instanceof AST_Directive)) break;\n                if (st.value == type) return st;\n            }\n        }\n    }\n\n    loopcontrol_target(node) {\n        var stack = this.stack;\n        if (node.label) for (var i = stack.length; --i >= 0;) {\n            var x = stack[i];\n            if (x instanceof AST_LabeledStatement && x.label.name == node.label.name)\n                return x.body;\n        } else for (var i = stack.length; --i >= 0;) {\n            var x = stack[i];\n            if (x instanceof AST_IterationStatement\n                || node instanceof AST_Break && x instanceof AST_Switch)\n                return x;\n        }\n    }\n}\n\n// Tree transformer helpers.\nclass TreeTransformer extends TreeWalker {\n    constructor(before, after) {\n        super();\n        this.before = before;\n        this.after = after;\n    }\n}\n\nconst _PURE     = 0b00000001;\nconst _INLINE   = 0b00000010;\nconst _NOINLINE = 0b00000100;\n\nexport {\n    AST_Accessor,\n    AST_Array,\n    AST_Arrow,\n    AST_Assign,\n    AST_Atom,\n    AST_Await,\n    AST_BigInt,\n    AST_Binary,\n    AST_Block,\n    AST_BlockStatement,\n    AST_Boolean,\n    AST_Break,\n    AST_Call,\n    AST_Case,\n    AST_Catch,\n    AST_Chain,\n    AST_Class,\n    AST_ClassExpression,\n    AST_ClassPrivateProperty,\n    AST_ClassProperty,\n    AST_ConciseMethod,\n    AST_Conditional,\n    AST_Const,\n    AST_Constant,\n    AST_Continue,\n    AST_Debugger,\n    AST_Default,\n    AST_DefaultAssign,\n    AST_DefClass,\n    AST_Definitions,\n    AST_Defun,\n    AST_Destructuring,\n    AST_Directive,\n    AST_Do,\n    AST_Dot,\n    AST_DotHash,\n    AST_DWLoop,\n    AST_EmptyStatement,\n    AST_Exit,\n    AST_Expansion,\n    AST_Export,\n    AST_False,\n    AST_Finally,\n    AST_For,\n    AST_ForIn,\n    AST_ForOf,\n    AST_Function,\n    AST_Hole,\n    AST_If,\n    AST_Import,\n    AST_ImportMeta,\n    AST_Infinity,\n    AST_IterationStatement,\n    AST_Jump,\n    AST_Label,\n    AST_LabeledStatement,\n    AST_LabelRef,\n    AST_Lambda,\n    AST_Let,\n    AST_LoopControl,\n    AST_NameMapping,\n    AST_NaN,\n    AST_New,\n    AST_NewTarget,\n    AST_Node,\n    AST_Null,\n    AST_Number,\n    AST_Object,\n    AST_ObjectGetter,\n    AST_ObjectKeyVal,\n    AST_ObjectProperty,\n    AST_ObjectSetter,\n    AST_PrefixedTemplateString,\n    AST_PrivateGetter,\n    AST_PrivateMethod,\n    AST_PrivateSetter,\n    AST_PropAccess,\n    AST_RegExp,\n    AST_Return,\n    AST_Scope,\n    AST_Sequence,\n    AST_SimpleStatement,\n    AST_Statement,\n    AST_StatementWithBody,\n    AST_String,\n    AST_Sub,\n    AST_Super,\n    AST_Switch,\n    AST_SwitchBranch,\n    AST_Symbol,\n    AST_SymbolBlockDeclaration,\n    AST_SymbolCatch,\n    AST_SymbolClass,\n    AST_SymbolClassProperty,\n    AST_SymbolConst,\n    AST_SymbolDeclaration,\n    AST_SymbolDefClass,\n    AST_SymbolDefun,\n    AST_SymbolExport,\n    AST_SymbolExportForeign,\n    AST_SymbolFunarg,\n    AST_SymbolImport,\n    AST_SymbolImportForeign,\n    AST_SymbolLambda,\n    AST_SymbolLet,\n    AST_SymbolMethod,\n    AST_SymbolRef,\n    AST_SymbolVar,\n    AST_TemplateSegment,\n    AST_TemplateString,\n    AST_This,\n    AST_Throw,\n    AST_Token,\n    AST_Toplevel,\n    AST_True,\n    AST_Try,\n    AST_Unary,\n    AST_UnaryPostfix,\n    AST_UnaryPrefix,\n    AST_Undefined,\n    AST_Var,\n    AST_VarDef,\n    AST_While,\n    AST_With,\n    AST_Yield,\n\n    // Walkers\n    TreeTransformer,\n    TreeWalker,\n    walk,\n    walk_abort,\n    walk_body,\n    walk_parent,\n\n    // annotations\n    _INLINE,\n    _NOINLINE,\n    _PURE,\n};\n","/***********************************************************************\n\n  A JavaScript tokenizer / parser / beautifier / compressor.\n  https://github.com/mishoo/UglifyJS2\n\n  -------------------------------- (C) ---------------------------------\n\n                           Author: Mihai Bazon\n                         <mihai.bazon@gmail.com>\n                       http://mihai.bazon.net/blog\n\n  Distributed under the BSD license:\n\n    Copyright 2012 (c) Mihai Bazon <mihai.bazon@gmail.com>\n\n    Redistribution and use in source and binary forms, with or without\n    modification, are permitted provided that the following conditions\n    are met:\n\n        * Redistributions of source code must retain the above\n          copyright notice, this list of conditions and the following\n          disclaimer.\n\n        * Redistributions in binary form must reproduce the above\n          copyright notice, this list of conditions and the following\n          disclaimer in the documentation and/or other materials\n          provided with the distribution.\n\n    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER “AS IS” AND ANY\n    EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n    PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER BE\n    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,\n    OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n    PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n    PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n    THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR\n    TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF\n    THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n    SUCH DAMAGE.\n\n ***********************************************************************/\n\n\"use strict\";\n\nimport {\n    AST_Array,\n    AST_Await,\n    AST_Binary,\n    AST_Block,\n    AST_Call,\n    AST_Case,\n    AST_Catch,\n    AST_Chain,\n    AST_Class,\n    AST_Conditional,\n    AST_Definitions,\n    AST_Destructuring,\n    AST_Do,\n    AST_Exit,\n    AST_Expansion,\n    AST_Export,\n    AST_For,\n    AST_ForIn,\n    AST_If,\n    AST_Import,\n    AST_LabeledStatement,\n    AST_Lambda,\n    AST_LoopControl,\n    AST_NameMapping,\n    AST_Node,\n    AST_Number,\n    AST_Object,\n    AST_ObjectProperty,\n    AST_PrefixedTemplateString,\n    AST_PropAccess,\n    AST_Sequence,\n    AST_SimpleStatement,\n    AST_Sub,\n    AST_Switch,\n    AST_TemplateString,\n    AST_Try,\n    AST_Unary,\n    AST_VarDef,\n    AST_While,\n    AST_With,\n    AST_Yield,\n} from \"./ast.js\";\nimport {\n    MAP,\n    noop,\n} from \"./utils/index.js\";\n\nfunction def_transform(node, descend) {\n    node.DEFMETHOD(\"transform\", function(tw, in_list) {\n        let transformed = undefined;\n        tw.push(this);\n        if (tw.before) transformed = tw.before(this, descend, in_list);\n        if (transformed === undefined) {\n            transformed = this;\n            descend(transformed, tw);\n            if (tw.after) {\n                const after_ret = tw.after(transformed, in_list);\n                if (after_ret !== undefined) transformed = after_ret;\n            }\n        }\n        tw.pop();\n        return transformed;\n    });\n}\n\nfunction do_list(list, tw) {\n    return MAP(list, function(node) {\n        return node.transform(tw, true);\n    });\n}\n\ndef_transform(AST_Node, noop);\n\ndef_transform(AST_LabeledStatement, function(self, tw) {\n    self.label = self.label.transform(tw);\n    self.body = self.body.transform(tw);\n});\n\ndef_transform(AST_SimpleStatement, function(self, tw) {\n    self.body = self.body.transform(tw);\n});\n\ndef_transform(AST_Block, function(self, tw) {\n    self.body = do_list(self.body, tw);\n});\n\ndef_transform(AST_Do, function(self, tw) {\n    self.body = self.body.transform(tw);\n    self.condition = self.condition.transform(tw);\n});\n\ndef_transform(AST_While, function(self, tw) {\n    self.condition = self.condition.transform(tw);\n    self.body = self.body.transform(tw);\n});\n\ndef_transform(AST_For, function(self, tw) {\n    if (self.init) self.init = self.init.transform(tw);\n    if (self.condition) self.condition = self.condition.transform(tw);\n    if (self.step) self.step = self.step.transform(tw);\n    self.body = self.body.transform(tw);\n});\n\ndef_transform(AST_ForIn, function(self, tw) {\n    self.init = self.init.transform(tw);\n    self.object = self.object.transform(tw);\n    self.body = self.body.transform(tw);\n});\n\ndef_transform(AST_With, function(self, tw) {\n    self.expression = self.expression.transform(tw);\n    self.body = self.body.transform(tw);\n});\n\ndef_transform(AST_Exit, function(self, tw) {\n    if (self.value) self.value = self.value.transform(tw);\n});\n\ndef_transform(AST_LoopControl, function(self, tw) {\n    if (self.label) self.label = self.label.transform(tw);\n});\n\ndef_transform(AST_If, function(self, tw) {\n    self.condition = self.condition.transform(tw);\n    self.body = self.body.transform(tw);\n    if (self.alternative) self.alternative = self.alternative.transform(tw);\n});\n\ndef_transform(AST_Switch, function(self, tw) {\n    self.expression = self.expression.transform(tw);\n    self.body = do_list(self.body, tw);\n});\n\ndef_transform(AST_Case, function(self, tw) {\n    self.expression = self.expression.transform(tw);\n    self.body = do_list(self.body, tw);\n});\n\ndef_transform(AST_Try, function(self, tw) {\n    self.body = do_list(self.body, tw);\n    if (self.bcatch) self.bcatch = self.bcatch.transform(tw);\n    if (self.bfinally) self.bfinally = self.bfinally.transform(tw);\n});\n\ndef_transform(AST_Catch, function(self, tw) {\n    if (self.argname) self.argname = self.argname.transform(tw);\n    self.body = do_list(self.body, tw);\n});\n\ndef_transform(AST_Definitions, function(self, tw) {\n    self.definitions = do_list(self.definitions, tw);\n});\n\ndef_transform(AST_VarDef, function(self, tw) {\n    self.name = self.name.transform(tw);\n    if (self.value) self.value = self.value.transform(tw);\n});\n\ndef_transform(AST_Destructuring, function(self, tw) {\n    self.names = do_list(self.names, tw);\n});\n\ndef_transform(AST_Lambda, function(self, tw) {\n    if (self.name) self.name = self.name.transform(tw);\n    self.argnames = do_list(self.argnames, tw);\n    if (self.body instanceof AST_Node) {\n        self.body = self.body.transform(tw);\n    } else {\n        self.body = do_list(self.body, tw);\n    }\n});\n\ndef_transform(AST_Call, function(self, tw) {\n    self.expression = self.expression.transform(tw);\n    self.args = do_list(self.args, tw);\n});\n\ndef_transform(AST_Sequence, function(self, tw) {\n    const result = do_list(self.expressions, tw);\n    self.expressions = result.length\n        ? result\n        : [new AST_Number({ value: 0 })];\n});\n\ndef_transform(AST_PropAccess, function(self, tw) {\n    self.expression = self.expression.transform(tw);\n});\n\ndef_transform(AST_Sub, function(self, tw) {\n    self.expression = self.expression.transform(tw);\n    self.property = self.property.transform(tw);\n});\n\ndef_transform(AST_Chain, function(self, tw) {\n    self.expression = self.expression.transform(tw);\n});\n\ndef_transform(AST_Yield, function(self, tw) {\n    if (self.expression) self.expression = self.expression.transform(tw);\n});\n\ndef_transform(AST_Await, function(self, tw) {\n    self.expression = self.expression.transform(tw);\n});\n\ndef_transform(AST_Unary, function(self, tw) {\n    self.expression = self.expression.transform(tw);\n});\n\ndef_transform(AST_Binary, function(self, tw) {\n    self.left = self.left.transform(tw);\n    self.right = self.right.transform(tw);\n});\n\ndef_transform(AST_Conditional, function(self, tw) {\n    self.condition = self.condition.transform(tw);\n    self.consequent = self.consequent.transform(tw);\n    self.alternative = self.alternative.transform(tw);\n});\n\ndef_transform(AST_Array, function(self, tw) {\n    self.elements = do_list(self.elements, tw);\n});\n\ndef_transform(AST_Object, function(self, tw) {\n    self.properties = do_list(self.properties, tw);\n});\n\ndef_transform(AST_ObjectProperty, function(self, tw) {\n    if (self.key instanceof AST_Node) {\n        self.key = self.key.transform(tw);\n    }\n    if (self.value) self.value = self.value.transform(tw);\n});\n\ndef_transform(AST_Class, function(self, tw) {\n    if (self.name) self.name = self.name.transform(tw);\n    if (self.extends) self.extends = self.extends.transform(tw);\n    self.properties = do_list(self.properties, tw);\n});\n\ndef_transform(AST_Expansion, function(self, tw) {\n    self.expression = self.expression.transform(tw);\n});\n\ndef_transform(AST_NameMapping, function(self, tw) {\n    self.foreign_name = self.foreign_name.transform(tw);\n    self.name = self.name.transform(tw);\n});\n\ndef_transform(AST_Import, function(self, tw) {\n    if (self.imported_name) self.imported_name = self.imported_name.transform(tw);\n    if (self.imported_names) do_list(self.imported_names, tw);\n    self.module_name = self.module_name.transform(tw);\n});\n\ndef_transform(AST_Export, function(self, tw) {\n    if (self.exported_definition) self.exported_definition = self.exported_definition.transform(tw);\n    if (self.exported_value) self.exported_value = self.exported_value.transform(tw);\n    if (self.exported_names) do_list(self.exported_names, tw);\n    if (self.module_name) self.module_name = self.module_name.transform(tw);\n});\n\ndef_transform(AST_TemplateString, function(self, tw) {\n    self.segments = do_list(self.segments, tw);\n});\n\ndef_transform(AST_PrefixedTemplateString, function(self, tw) {\n    self.prefix = self.prefix.transform(tw);\n    self.template_string = self.template_string.transform(tw);\n});\n\n","import {\n    AST_Binary,\n    AST_Conditional,\n    AST_Dot,\n    AST_Object,\n    AST_Sequence,\n    AST_Statement,\n    AST_Sub,\n    AST_UnaryPostfix,\n    AST_PrefixedTemplateString\n} from \"../ast.js\";\n\n// return true if the node at the top of the stack (that means the\n// innermost node in the current output) is lexically the first in\n// a statement.\nfunction first_in_statement(stack) {\n    let node = stack.parent(-1);\n    for (let i = 0, p; p = stack.parent(i); i++) {\n        if (p instanceof AST_Statement && p.body === node)\n            return true;\n        if ((p instanceof AST_Sequence && p.expressions[0] === node) ||\n            (p.TYPE === \"Call\" && p.expression === node) ||\n            (p instanceof AST_PrefixedTemplateString && p.prefix === node) ||\n            (p instanceof AST_Dot && p.expression === node) ||\n            (p instanceof AST_Sub && p.expression === node) ||\n            (p instanceof AST_Conditional && p.condition === node) ||\n            (p instanceof AST_Binary && p.left === node) ||\n            (p instanceof AST_UnaryPostfix && p.expression === node)\n        ) {\n            node = p;\n        } else {\n            return false;\n        }\n    }\n}\n\n// Returns whether the leftmost item in the expression is an object\nfunction left_is_object(node) {\n    if (node instanceof AST_Object) return true;\n    if (node instanceof AST_Sequence) return left_is_object(node.expressions[0]);\n    if (node.TYPE === \"Call\") return left_is_object(node.expression);\n    if (node instanceof AST_PrefixedTemplateString) return left_is_object(node.prefix);\n    if (node instanceof AST_Dot || node instanceof AST_Sub) return left_is_object(node.expression);\n    if (node instanceof AST_Conditional) return left_is_object(node.condition);\n    if (node instanceof AST_Binary) return left_is_object(node.left);\n    if (node instanceof AST_UnaryPostfix) return left_is_object(node.expression);\n    return false;\n}\n\nexport { first_in_statement, left_is_object };\n","/***********************************************************************\n\n  A JavaScript tokenizer / parser / beautifier / compressor.\n  https://github.com/mishoo/UglifyJS2\n\n  -------------------------------- (C) ---------------------------------\n\n                           Author: Mihai Bazon\n                         <mihai.bazon@gmail.com>\n                       http://mihai.bazon.net/blog\n\n  Distributed under the BSD license:\n\n    Copyright 2012 (c) Mihai Bazon <mihai.bazon@gmail.com>\n\n    Redistribution and use in source and binary forms, with or without\n    modification, are permitted provided that the following conditions\n    are met:\n\n        * Redistributions of source code must retain the above\n          copyright notice, this list of conditions and the following\n          disclaimer.\n\n        * Redistributions in binary form must reproduce the above\n          copyright notice, this list of conditions and the following\n          disclaimer in the documentation and/or other materials\n          provided with the distribution.\n\n    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER “AS IS” AND ANY\n    EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n    PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER BE\n    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,\n    OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n    PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n    PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n    THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR\n    TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF\n    THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n    SUCH DAMAGE.\n\n ***********************************************************************/\n\nimport * as ast from \"./ast.js\";\nimport { make_node } from \"./utils/index.js\";\nimport {\n    AST_Accessor,\n    AST_Array,\n    AST_Arrow,\n    AST_Assign,\n    AST_Atom,\n    AST_Await,\n    AST_BigInt,\n    AST_Binary,\n    AST_Block,\n    AST_BlockStatement,\n    AST_Boolean,\n    AST_Break,\n    AST_Call,\n    AST_Case,\n    AST_Catch,\n    AST_Chain,\n    AST_Class,\n    AST_ClassExpression,\n    AST_ClassProperty,\n    AST_ClassPrivateProperty,\n    AST_ConciseMethod,\n    AST_Conditional,\n    AST_Const,\n    AST_Constant,\n    AST_Continue,\n    AST_Debugger,\n    AST_Default,\n    AST_DefaultAssign,\n    AST_DefClass,\n    AST_Definitions,\n    AST_Defun,\n    AST_Destructuring,\n    AST_Directive,\n    AST_Do,\n    AST_Dot,\n    AST_DotHash,\n    AST_EmptyStatement,\n    AST_Expansion,\n    AST_Export,\n    AST_False,\n    AST_Finally,\n    AST_For,\n    AST_ForIn,\n    AST_ForOf,\n    AST_Function,\n    AST_Hole,\n    AST_If,\n    AST_Import,\n    AST_ImportMeta,\n    AST_Label,\n    AST_LabeledStatement,\n    AST_LabelRef,\n    AST_Lambda,\n    AST_Let,\n    AST_NameMapping,\n    AST_New,\n    AST_NewTarget,\n    AST_Node,\n    AST_Null,\n    AST_Number,\n    AST_Object,\n    AST_ObjectGetter,\n    AST_ObjectKeyVal,\n    AST_ObjectProperty,\n    AST_ObjectSetter,\n    AST_PrefixedTemplateString,\n    AST_PrivateGetter,\n    AST_PrivateMethod,\n    AST_PrivateSetter,\n    AST_PropAccess,\n    AST_RegExp,\n    AST_Return,\n    AST_Sequence,\n    AST_SimpleStatement,\n    AST_Statement,\n    AST_String,\n    AST_Sub,\n    AST_Super,\n    AST_Switch,\n    AST_SwitchBranch,\n    AST_Symbol,\n    AST_SymbolCatch,\n    AST_SymbolClass,\n    AST_SymbolClassProperty,\n    AST_SymbolConst,\n    AST_SymbolDefClass,\n    AST_SymbolDefun,\n    AST_SymbolExport,\n    AST_SymbolExportForeign,\n    AST_SymbolFunarg,\n    AST_SymbolImport,\n    AST_SymbolImportForeign,\n    AST_SymbolLambda,\n    AST_SymbolLet,\n    AST_SymbolMethod,\n    AST_SymbolRef,\n    AST_SymbolVar,\n    AST_TemplateSegment,\n    AST_TemplateString,\n    AST_This,\n    AST_Throw,\n    AST_Token,\n    AST_Toplevel,\n    AST_True,\n    AST_Try,\n    AST_Unary,\n    AST_UnaryPostfix,\n    AST_UnaryPrefix,\n    AST_Var,\n    AST_VarDef,\n    AST_While,\n    AST_With,\n    AST_Yield,\n} from \"./ast.js\";\nimport { is_basic_identifier_string } from \"./parse.js\";\n\n(function() {\n\n    var normalize_directives = function(body) {\n        var in_directive = true;\n\n        for (var i = 0; i < body.length; i++) {\n            if (in_directive && body[i] instanceof AST_Statement && body[i].body instanceof AST_String) {\n                body[i] = new AST_Directive({\n                    start: body[i].start,\n                    end: body[i].end,\n                    value: body[i].body.value\n                });\n            } else if (in_directive && !(body[i] instanceof AST_Statement && body[i].body instanceof AST_String)) {\n                in_directive = false;\n            }\n        }\n\n        return body;\n    };\n\n    const assert_clause_from_moz = (assertions) => {\n        if (assertions && assertions.length > 0) {\n            return new AST_Object({\n                start: my_start_token(assertions),\n                end: my_end_token(assertions),\n                properties: assertions.map((assertion_kv) =>\n                    new AST_ObjectKeyVal({\n                        start: my_start_token(assertion_kv),\n                        end: my_end_token(assertion_kv),\n                        key: assertion_kv.key.name || assertion_kv.key.value,\n                        value: from_moz(assertion_kv.value)\n                    })\n                )\n            });\n        }\n        return null;\n    };\n\n    var MOZ_TO_ME = {\n        Program: function(M) {\n            return new AST_Toplevel({\n                start: my_start_token(M),\n                end: my_end_token(M),\n                body: normalize_directives(M.body.map(from_moz))\n            });\n        },\n        ArrayPattern: function(M) {\n            return new AST_Destructuring({\n                start: my_start_token(M),\n                end: my_end_token(M),\n                names: M.elements.map(function(elm) {\n                    if (elm === null) {\n                        return new AST_Hole();\n                    }\n                    return from_moz(elm);\n                }),\n                is_array: true\n            });\n        },\n        ObjectPattern: function(M) {\n            return new AST_Destructuring({\n                start: my_start_token(M),\n                end: my_end_token(M),\n                names: M.properties.map(from_moz),\n                is_array: false\n            });\n        },\n        AssignmentPattern: function(M) {\n            return new AST_DefaultAssign({\n                start: my_start_token(M),\n                end: my_end_token(M),\n                left: from_moz(M.left),\n                operator: \"=\",\n                right: from_moz(M.right)\n            });\n        },\n        SpreadElement: function(M) {\n            return new AST_Expansion({\n                start: my_start_token(M),\n                end: my_end_token(M),\n                expression: from_moz(M.argument)\n            });\n        },\n        RestElement: function(M) {\n            return new AST_Expansion({\n                start: my_start_token(M),\n                end: my_end_token(M),\n                expression: from_moz(M.argument)\n            });\n        },\n        TemplateElement: function(M) {\n            return new AST_TemplateSegment({\n                start: my_start_token(M),\n                end: my_end_token(M),\n                value: M.value.cooked,\n                raw: M.value.raw\n            });\n        },\n        TemplateLiteral: function(M) {\n            var segments = [];\n            for (var i = 0; i < M.quasis.length; i++) {\n                segments.push(from_moz(M.quasis[i]));\n                if (M.expressions[i]) {\n                    segments.push(from_moz(M.expressions[i]));\n                }\n            }\n            return new AST_TemplateString({\n                start: my_start_token(M),\n                end: my_end_token(M),\n                segments: segments\n            });\n        },\n        TaggedTemplateExpression: function(M) {\n            return new AST_PrefixedTemplateString({\n                start: my_start_token(M),\n                end: my_end_token(M),\n                template_string: from_moz(M.quasi),\n                prefix: from_moz(M.tag)\n            });\n        },\n        FunctionDeclaration: function(M) {\n            return new AST_Defun({\n                start: my_start_token(M),\n                end: my_end_token(M),\n                name: from_moz(M.id),\n                argnames: M.params.map(from_moz),\n                is_generator: M.generator,\n                async: M.async,\n                body: normalize_directives(from_moz(M.body).body)\n            });\n        },\n        FunctionExpression: function(M) {\n            return new AST_Function({\n                start: my_start_token(M),\n                end: my_end_token(M),\n                name: from_moz(M.id),\n                argnames: M.params.map(from_moz),\n                is_generator: M.generator,\n                async: M.async,\n                body: normalize_directives(from_moz(M.body).body)\n            });\n        },\n        ArrowFunctionExpression: function(M) {\n            const body = M.body.type === \"BlockStatement\"\n                ? from_moz(M.body).body\n                : [make_node(AST_Return, {}, { value: from_moz(M.body) })];\n            return new AST_Arrow({\n                start: my_start_token(M),\n                end: my_end_token(M),\n                argnames: M.params.map(from_moz),\n                body,\n                async: M.async,\n            });\n        },\n        ExpressionStatement: function(M) {\n            return new AST_SimpleStatement({\n                start: my_start_token(M),\n                end: my_end_token(M),\n                body: from_moz(M.expression)\n            });\n        },\n        TryStatement: function(M) {\n            var handlers = M.handlers || [M.handler];\n            if (handlers.length > 1 || M.guardedHandlers && M.guardedHandlers.length) {\n                throw new Error(\"Multiple catch clauses are not supported.\");\n            }\n            return new AST_Try({\n                start    : my_start_token(M),\n                end      : my_end_token(M),\n                body     : from_moz(M.block).body,\n                bcatch   : from_moz(handlers[0]),\n                bfinally : M.finalizer ? new AST_Finally(from_moz(M.finalizer)) : null\n            });\n        },\n        Property: function(M) {\n            var key = M.key;\n            var args = {\n                start    : my_start_token(key || M.value),\n                end      : my_end_token(M.value),\n                key      : key.type == \"Identifier\" ? key.name : key.value,\n                value    : from_moz(M.value)\n            };\n            if (M.computed) {\n                args.key = from_moz(M.key);\n            }\n            if (M.method) {\n                args.is_generator = M.value.generator;\n                args.async = M.value.async;\n                if (!M.computed) {\n                    args.key = new AST_SymbolMethod({ name: args.key });\n                } else {\n                    args.key = from_moz(M.key);\n                }\n                return new AST_ConciseMethod(args);\n            }\n            if (M.kind == \"init\") {\n                if (key.type != \"Identifier\" && key.type != \"Literal\") {\n                    args.key = from_moz(key);\n                }\n                return new AST_ObjectKeyVal(args);\n            }\n            if (typeof args.key === \"string\" || typeof args.key === \"number\") {\n                args.key = new AST_SymbolMethod({\n                    name: args.key\n                });\n            }\n            args.value = new AST_Accessor(args.value);\n            if (M.kind == \"get\") return new AST_ObjectGetter(args);\n            if (M.kind == \"set\") return new AST_ObjectSetter(args);\n            if (M.kind == \"method\") {\n                args.async = M.value.async;\n                args.is_generator = M.value.generator;\n                args.quote = M.computed ? \"\\\"\" : null;\n                return new AST_ConciseMethod(args);\n            }\n        },\n        MethodDefinition: function(M) {\n            var args = {\n                start    : my_start_token(M),\n                end      : my_end_token(M),\n                key      : M.computed ? from_moz(M.key) : new AST_SymbolMethod({ name: M.key.name || M.key.value }),\n                value    : from_moz(M.value),\n                static   : M.static,\n            };\n            if (M.kind == \"get\") {\n                return new AST_ObjectGetter(args);\n            }\n            if (M.kind == \"set\") {\n                return new AST_ObjectSetter(args);\n            }\n            args.is_generator = M.value.generator;\n            args.async = M.value.async;\n            return new AST_ConciseMethod(args);\n        },\n        FieldDefinition: function(M) {\n            let key;\n            if (M.computed) {\n                key = from_moz(M.key);\n            } else {\n                if (M.key.type !== \"Identifier\") throw new Error(\"Non-Identifier key in FieldDefinition\");\n                key = from_moz(M.key);\n            }\n            return new AST_ClassProperty({\n                start    : my_start_token(M),\n                end      : my_end_token(M),\n                key,\n                value    : from_moz(M.value),\n                static   : M.static,\n            });\n        },\n        PropertyDefinition: function(M) {\n            let key;\n            if (M.computed) {\n                key = from_moz(M.key);\n            } else {\n                if (M.key.type !== \"Identifier\") throw new Error(\"Non-Identifier key in PropertyDefinition\");\n                key = from_moz(M.key);\n            }\n\n            return new AST_ClassProperty({\n                start    : my_start_token(M),\n                end      : my_end_token(M),\n                key,\n                value    : from_moz(M.value),\n                static   : M.static,\n            });\n        },\n        ArrayExpression: function(M) {\n            return new AST_Array({\n                start    : my_start_token(M),\n                end      : my_end_token(M),\n                elements : M.elements.map(function(elem) {\n                    return elem === null ? new AST_Hole() : from_moz(elem);\n                })\n            });\n        },\n        ObjectExpression: function(M) {\n            return new AST_Object({\n                start      : my_start_token(M),\n                end        : my_end_token(M),\n                properties : M.properties.map(function(prop) {\n                    if (prop.type === \"SpreadElement\") {\n                        return from_moz(prop);\n                    }\n                    prop.type = \"Property\";\n                    return from_moz(prop);\n                })\n            });\n        },\n        SequenceExpression: function(M) {\n            return new AST_Sequence({\n                start      : my_start_token(M),\n                end        : my_end_token(M),\n                expressions: M.expressions.map(from_moz)\n            });\n        },\n        MemberExpression: function(M) {\n            return new (M.computed ? AST_Sub : AST_Dot)({\n                start      : my_start_token(M),\n                end        : my_end_token(M),\n                property   : M.computed ? from_moz(M.property) : M.property.name,\n                expression : from_moz(M.object),\n                optional   : M.optional || false\n            });\n        },\n        ChainExpression: function(M) {\n            return new AST_Chain({\n                start      : my_start_token(M),\n                end        : my_end_token(M),\n                expression : from_moz(M.expression)\n            });\n        },\n        SwitchCase: function(M) {\n            return new (M.test ? AST_Case : AST_Default)({\n                start      : my_start_token(M),\n                end        : my_end_token(M),\n                expression : from_moz(M.test),\n                body       : M.consequent.map(from_moz)\n            });\n        },\n        VariableDeclaration: function(M) {\n            return new (M.kind === \"const\" ? AST_Const :\n                        M.kind === \"let\" ? AST_Let : AST_Var)({\n                start       : my_start_token(M),\n                end         : my_end_token(M),\n                definitions : M.declarations.map(from_moz)\n            });\n        },\n\n        ImportDeclaration: function(M) {\n            var imported_name = null;\n            var imported_names = null;\n            M.specifiers.forEach(function (specifier) {\n                if (specifier.type === \"ImportSpecifier\") {\n                    if (!imported_names) { imported_names = []; }\n                    imported_names.push(new AST_NameMapping({\n                        start: my_start_token(specifier),\n                        end: my_end_token(specifier),\n                        foreign_name: from_moz(specifier.imported),\n                        name: from_moz(specifier.local)\n                    }));\n                } else if (specifier.type === \"ImportDefaultSpecifier\") {\n                    imported_name = from_moz(specifier.local);\n                } else if (specifier.type === \"ImportNamespaceSpecifier\") {\n                    if (!imported_names) { imported_names = []; }\n                    imported_names.push(new AST_NameMapping({\n                        start: my_start_token(specifier),\n                        end: my_end_token(specifier),\n                        foreign_name: new AST_SymbolImportForeign({ name: \"*\" }),\n                        name: from_moz(specifier.local)\n                    }));\n                }\n            });\n            return new AST_Import({\n                start       : my_start_token(M),\n                end         : my_end_token(M),\n                imported_name: imported_name,\n                imported_names : imported_names,\n                module_name : from_moz(M.source),\n                assert_clause: assert_clause_from_moz(M.assertions)\n            });\n        },\n        ExportAllDeclaration: function(M) {\n            return new AST_Export({\n                start: my_start_token(M),\n                end: my_end_token(M),\n                exported_names: [\n                    new AST_NameMapping({\n                        name: new AST_SymbolExportForeign({ name: \"*\" }),\n                        foreign_name: new AST_SymbolExportForeign({ name: \"*\" })\n                    })\n                ],\n                module_name: from_moz(M.source),\n                assert_clause: assert_clause_from_moz(M.assertions)\n            });\n        },\n        ExportNamedDeclaration: function(M) {\n            return new AST_Export({\n                start: my_start_token(M),\n                end: my_end_token(M),\n                exported_definition: from_moz(M.declaration),\n                exported_names: M.specifiers && M.specifiers.length ? M.specifiers.map(function (specifier) {\n                    return new AST_NameMapping({\n                        foreign_name: from_moz(specifier.exported),\n                        name: from_moz(specifier.local)\n                    });\n                }) : null,\n                module_name: from_moz(M.source),\n                assert_clause: assert_clause_from_moz(M.assertions)\n            });\n        },\n        ExportDefaultDeclaration: function(M) {\n            return new AST_Export({\n                start: my_start_token(M),\n                end: my_end_token(M),\n                exported_value: from_moz(M.declaration),\n                is_default: true\n            });\n        },\n        Literal: function(M) {\n            var val = M.value, args = {\n                start  : my_start_token(M),\n                end    : my_end_token(M)\n            };\n            var rx = M.regex;\n            if (rx && rx.pattern) {\n                // RegExpLiteral as per ESTree AST spec\n                args.value = {\n                    source: rx.pattern,\n                    flags: rx.flags\n                };\n                return new AST_RegExp(args);\n            } else if (rx) {\n                // support legacy RegExp\n                const rx_source = M.raw || val;\n                const match = rx_source.match(/^\\/(.*)\\/(\\w*)$/);\n                if (!match) throw new Error(\"Invalid regex source \" + rx_source);\n                const [_, source, flags] = match;\n                args.value = { source, flags };\n                return new AST_RegExp(args);\n            }\n            if (val === null) return new AST_Null(args);\n            switch (typeof val) {\n              case \"string\":\n                args.value = val;\n                return new AST_String(args);\n              case \"number\":\n                args.value = val;\n                args.raw = M.raw || val.toString();\n                return new AST_Number(args);\n              case \"boolean\":\n                return new (val ? AST_True : AST_False)(args);\n            }\n        },\n        MetaProperty: function(M) {\n            if (M.meta.name === \"new\" && M.property.name === \"target\") {\n                return new AST_NewTarget({\n                    start: my_start_token(M),\n                    end: my_end_token(M)\n                });\n            } else if (M.meta.name === \"import\" && M.property.name === \"meta\") {\n                return new AST_ImportMeta({\n                    start: my_start_token(M),\n                    end: my_end_token(M)\n                });\n            }\n        },\n        Identifier: function(M) {\n            var p = FROM_MOZ_STACK[FROM_MOZ_STACK.length - 2];\n            return new (  p.type == \"LabeledStatement\" ? AST_Label\n                        : p.type == \"VariableDeclarator\" && p.id === M ? (p.kind == \"const\" ? AST_SymbolConst : p.kind == \"let\" ? AST_SymbolLet : AST_SymbolVar)\n                        : /Import.*Specifier/.test(p.type) ? (p.local === M ? AST_SymbolImport : AST_SymbolImportForeign)\n                        : p.type == \"ExportSpecifier\" ? (p.local === M ? AST_SymbolExport : AST_SymbolExportForeign)\n                        : p.type == \"FunctionExpression\" ? (p.id === M ? AST_SymbolLambda : AST_SymbolFunarg)\n                        : p.type == \"FunctionDeclaration\" ? (p.id === M ? AST_SymbolDefun : AST_SymbolFunarg)\n                        : p.type == \"ArrowFunctionExpression\" ? (p.params.includes(M)) ? AST_SymbolFunarg : AST_SymbolRef\n                        : p.type == \"ClassExpression\" ? (p.id === M ? AST_SymbolClass : AST_SymbolRef)\n                        : p.type == \"Property\" ? (p.key === M && p.computed || p.value === M ? AST_SymbolRef : AST_SymbolMethod)\n                        : p.type == \"PropertyDefinition\" || p.type === \"FieldDefinition\" ? (p.key === M && p.computed || p.value === M ? AST_SymbolRef : AST_SymbolClassProperty)\n                        : p.type == \"ClassDeclaration\" ? (p.id === M ? AST_SymbolDefClass : AST_SymbolRef)\n                        : p.type == \"MethodDefinition\" ? (p.computed ? AST_SymbolRef : AST_SymbolMethod)\n                        : p.type == \"CatchClause\" ? AST_SymbolCatch\n                        : p.type == \"BreakStatement\" || p.type == \"ContinueStatement\" ? AST_LabelRef\n                        : AST_SymbolRef)({\n                            start : my_start_token(M),\n                            end   : my_end_token(M),\n                            name  : M.name\n                        });\n        },\n        BigIntLiteral(M) {\n            return new AST_BigInt({\n                start : my_start_token(M),\n                end   : my_end_token(M),\n                value : M.value\n            });\n        }\n    };\n\n    MOZ_TO_ME.UpdateExpression =\n    MOZ_TO_ME.UnaryExpression = function To_Moz_Unary(M) {\n        var prefix = \"prefix\" in M ? M.prefix\n            : M.type == \"UnaryExpression\" ? true : false;\n        return new (prefix ? AST_UnaryPrefix : AST_UnaryPostfix)({\n            start      : my_start_token(M),\n            end        : my_end_token(M),\n            operator   : M.operator,\n            expression : from_moz(M.argument)\n        });\n    };\n\n    MOZ_TO_ME.ClassDeclaration =\n    MOZ_TO_ME.ClassExpression = function From_Moz_Class(M) {\n        return new (M.type === \"ClassDeclaration\" ? AST_DefClass : AST_ClassExpression)({\n            start    : my_start_token(M),\n            end      : my_end_token(M),\n            name     : from_moz(M.id),\n            extends  : from_moz(M.superClass),\n            properties: M.body.body.map(from_moz)\n        });\n    };\n\n    map(\"EmptyStatement\", AST_EmptyStatement);\n    map(\"BlockStatement\", AST_BlockStatement, \"body@body\");\n    map(\"IfStatement\", AST_If, \"test>condition, consequent>body, alternate>alternative\");\n    map(\"LabeledStatement\", AST_LabeledStatement, \"label>label, body>body\");\n    map(\"BreakStatement\", AST_Break, \"label>label\");\n    map(\"ContinueStatement\", AST_Continue, \"label>label\");\n    map(\"WithStatement\", AST_With, \"object>expression, body>body\");\n    map(\"SwitchStatement\", AST_Switch, \"discriminant>expression, cases@body\");\n    map(\"ReturnStatement\", AST_Return, \"argument>value\");\n    map(\"ThrowStatement\", AST_Throw, \"argument>value\");\n    map(\"WhileStatement\", AST_While, \"test>condition, body>body\");\n    map(\"DoWhileStatement\", AST_Do, \"test>condition, body>body\");\n    map(\"ForStatement\", AST_For, \"init>init, test>condition, update>step, body>body\");\n    map(\"ForInStatement\", AST_ForIn, \"left>init, right>object, body>body\");\n    map(\"ForOfStatement\", AST_ForOf, \"left>init, right>object, body>body, await=await\");\n    map(\"AwaitExpression\", AST_Await, \"argument>expression\");\n    map(\"YieldExpression\", AST_Yield, \"argument>expression, delegate=is_star\");\n    map(\"DebuggerStatement\", AST_Debugger);\n    map(\"VariableDeclarator\", AST_VarDef, \"id>name, init>value\");\n    map(\"CatchClause\", AST_Catch, \"param>argname, body%body\");\n\n    map(\"ThisExpression\", AST_This);\n    map(\"Super\", AST_Super);\n    map(\"BinaryExpression\", AST_Binary, \"operator=operator, left>left, right>right\");\n    map(\"LogicalExpression\", AST_Binary, \"operator=operator, left>left, right>right\");\n    map(\"AssignmentExpression\", AST_Assign, \"operator=operator, left>left, right>right\");\n    map(\"ConditionalExpression\", AST_Conditional, \"test>condition, consequent>consequent, alternate>alternative\");\n    map(\"NewExpression\", AST_New, \"callee>expression, arguments@args\");\n    map(\"CallExpression\", AST_Call, \"callee>expression, optional=optional, arguments@args\");\n\n    def_to_moz(AST_Toplevel, function To_Moz_Program(M) {\n        return to_moz_scope(\"Program\", M);\n    });\n\n    def_to_moz(AST_Expansion, function To_Moz_Spread(M) {\n        return {\n            type: to_moz_in_destructuring() ? \"RestElement\" : \"SpreadElement\",\n            argument: to_moz(M.expression)\n        };\n    });\n\n    def_to_moz(AST_PrefixedTemplateString, function To_Moz_TaggedTemplateExpression(M) {\n        return {\n            type: \"TaggedTemplateExpression\",\n            tag: to_moz(M.prefix),\n            quasi: to_moz(M.template_string)\n        };\n    });\n\n    def_to_moz(AST_TemplateString, function To_Moz_TemplateLiteral(M) {\n        var quasis = [];\n        var expressions = [];\n        for (var i = 0; i < M.segments.length; i++) {\n            if (i % 2 !== 0) {\n                expressions.push(to_moz(M.segments[i]));\n            } else {\n                quasis.push({\n                    type: \"TemplateElement\",\n                    value: {\n                        raw: M.segments[i].raw,\n                        cooked: M.segments[i].value\n                    },\n                    tail: i === M.segments.length - 1\n                });\n            }\n        }\n        return {\n            type: \"TemplateLiteral\",\n            quasis: quasis,\n            expressions: expressions\n        };\n    });\n\n    def_to_moz(AST_Defun, function To_Moz_FunctionDeclaration(M) {\n        return {\n            type: \"FunctionDeclaration\",\n            id: to_moz(M.name),\n            params: M.argnames.map(to_moz),\n            generator: M.is_generator,\n            async: M.async,\n            body: to_moz_scope(\"BlockStatement\", M)\n        };\n    });\n\n    def_to_moz(AST_Function, function To_Moz_FunctionExpression(M, parent) {\n        var is_generator = parent.is_generator !== undefined ?\n            parent.is_generator : M.is_generator;\n        return {\n            type: \"FunctionExpression\",\n            id: to_moz(M.name),\n            params: M.argnames.map(to_moz),\n            generator: is_generator,\n            async: M.async,\n            body: to_moz_scope(\"BlockStatement\", M)\n        };\n    });\n\n    def_to_moz(AST_Arrow, function To_Moz_ArrowFunctionExpression(M) {\n        var body = {\n            type: \"BlockStatement\",\n            body: M.body.map(to_moz)\n        };\n        return {\n            type: \"ArrowFunctionExpression\",\n            params: M.argnames.map(to_moz),\n            async: M.async,\n            body: body\n        };\n    });\n\n    def_to_moz(AST_Destructuring, function To_Moz_ObjectPattern(M) {\n        if (M.is_array) {\n            return {\n                type: \"ArrayPattern\",\n                elements: M.names.map(to_moz)\n            };\n        }\n        return {\n            type: \"ObjectPattern\",\n            properties: M.names.map(to_moz)\n        };\n    });\n\n    def_to_moz(AST_Directive, function To_Moz_Directive(M) {\n        return {\n            type: \"ExpressionStatement\",\n            expression: {\n                type: \"Literal\",\n                value: M.value,\n                raw: M.print_to_string()\n            },\n            directive: M.value\n        };\n    });\n\n    def_to_moz(AST_SimpleStatement, function To_Moz_ExpressionStatement(M) {\n        return {\n            type: \"ExpressionStatement\",\n            expression: to_moz(M.body)\n        };\n    });\n\n    def_to_moz(AST_SwitchBranch, function To_Moz_SwitchCase(M) {\n        return {\n            type: \"SwitchCase\",\n            test: to_moz(M.expression),\n            consequent: M.body.map(to_moz)\n        };\n    });\n\n    def_to_moz(AST_Try, function To_Moz_TryStatement(M) {\n        return {\n            type: \"TryStatement\",\n            block: to_moz_block(M),\n            handler: to_moz(M.bcatch),\n            guardedHandlers: [],\n            finalizer: to_moz(M.bfinally)\n        };\n    });\n\n    def_to_moz(AST_Catch, function To_Moz_CatchClause(M) {\n        return {\n            type: \"CatchClause\",\n            param: to_moz(M.argname),\n            guard: null,\n            body: to_moz_block(M)\n        };\n    });\n\n    def_to_moz(AST_Definitions, function To_Moz_VariableDeclaration(M) {\n        return {\n            type: \"VariableDeclaration\",\n            kind:\n                M instanceof AST_Const ? \"const\" :\n                M instanceof AST_Let ? \"let\" : \"var\",\n            declarations: M.definitions.map(to_moz)\n        };\n    });\n\n    const assert_clause_to_moz = assert_clause => {\n        const assertions = [];\n        if (assert_clause) {\n            for (const { key, value } of assert_clause.properties) {\n                const key_moz = is_basic_identifier_string(key)\n                    ? { type: \"Identifier\", name: key }\n                    : { type: \"Literal\", value: key, raw: JSON.stringify(key) };\n                assertions.push({\n                    type: \"ImportAttribute\",\n                    key: key_moz,\n                    value: to_moz(value)\n                });\n            }\n        }\n        return assertions;\n    };\n\n    def_to_moz(AST_Export, function To_Moz_ExportDeclaration(M) {\n        if (M.exported_names) {\n            if (M.exported_names[0].name.name === \"*\") {\n                return {\n                    type: \"ExportAllDeclaration\",\n                    source: to_moz(M.module_name),\n                    assertions: assert_clause_to_moz(M.assert_clause)\n                };\n            }\n            return {\n                type: \"ExportNamedDeclaration\",\n                specifiers: M.exported_names.map(function (name_mapping) {\n                    return {\n                        type: \"ExportSpecifier\",\n                        exported: to_moz(name_mapping.foreign_name),\n                        local: to_moz(name_mapping.name)\n                    };\n                }),\n                declaration: to_moz(M.exported_definition),\n                source: to_moz(M.module_name),\n                assertions: assert_clause_to_moz(M.assert_clause)\n            };\n        }\n        return {\n            type: M.is_default ? \"ExportDefaultDeclaration\" : \"ExportNamedDeclaration\",\n            declaration: to_moz(M.exported_value || M.exported_definition)\n        };\n    });\n\n    def_to_moz(AST_Import, function To_Moz_ImportDeclaration(M) {\n        var specifiers = [];\n        if (M.imported_name) {\n            specifiers.push({\n                type: \"ImportDefaultSpecifier\",\n                local: to_moz(M.imported_name)\n            });\n        }\n        if (M.imported_names && M.imported_names[0].foreign_name.name === \"*\") {\n            specifiers.push({\n                type: \"ImportNamespaceSpecifier\",\n                local: to_moz(M.imported_names[0].name)\n            });\n        } else if (M.imported_names) {\n            M.imported_names.forEach(function(name_mapping) {\n                specifiers.push({\n                    type: \"ImportSpecifier\",\n                    local: to_moz(name_mapping.name),\n                    imported: to_moz(name_mapping.foreign_name)\n                });\n            });\n        }\n        return {\n            type: \"ImportDeclaration\",\n            specifiers: specifiers,\n            source: to_moz(M.module_name),\n            assertions: assert_clause_to_moz(M.assert_clause)\n        };\n    });\n\n    def_to_moz(AST_ImportMeta, function To_Moz_MetaProperty() {\n        return {\n            type: \"MetaProperty\",\n            meta: {\n                type: \"Identifier\",\n                name: \"import\"\n            },\n            property: {\n                type: \"Identifier\",\n                name: \"meta\"\n            }\n        };\n    });\n\n    def_to_moz(AST_Sequence, function To_Moz_SequenceExpression(M) {\n        return {\n            type: \"SequenceExpression\",\n            expressions: M.expressions.map(to_moz)\n        };\n    });\n\n    def_to_moz(AST_DotHash, function To_Moz_PrivateMemberExpression(M) {\n        return {\n            type: \"MemberExpression\",\n            object: to_moz(M.expression),\n            computed: false,\n            property: {\n                type: \"PrivateIdentifier\",\n                name: M.property\n            },\n            optional: M.optional\n        };\n    });\n\n    def_to_moz(AST_PropAccess, function To_Moz_MemberExpression(M) {\n        var isComputed = M instanceof AST_Sub;\n        return {\n            type: \"MemberExpression\",\n            object: to_moz(M.expression),\n            computed: isComputed,\n            property: isComputed ? to_moz(M.property) : {type: \"Identifier\", name: M.property},\n            optional: M.optional\n        };\n    });\n\n    def_to_moz(AST_Chain, function To_Moz_ChainExpression(M) {\n        return {\n            type: \"ChainExpression\",\n            expression: to_moz(M.expression)\n        };\n    });\n\n    def_to_moz(AST_Unary, function To_Moz_Unary(M) {\n        return {\n            type: M.operator == \"++\" || M.operator == \"--\" ? \"UpdateExpression\" : \"UnaryExpression\",\n            operator: M.operator,\n            prefix: M instanceof AST_UnaryPrefix,\n            argument: to_moz(M.expression)\n        };\n    });\n\n    def_to_moz(AST_Binary, function To_Moz_BinaryExpression(M) {\n        if (M.operator == \"=\" && to_moz_in_destructuring()) {\n            return {\n                type: \"AssignmentPattern\",\n                left: to_moz(M.left),\n                right: to_moz(M.right)\n            };\n        }\n\n        const type = M.operator == \"&&\" || M.operator == \"||\" || M.operator === \"??\"\n            ? \"LogicalExpression\"\n            : \"BinaryExpression\";\n\n        return {\n            type,\n            left: to_moz(M.left),\n            operator: M.operator,\n            right: to_moz(M.right)\n        };\n    });\n\n    def_to_moz(AST_Array, function To_Moz_ArrayExpression(M) {\n        return {\n            type: \"ArrayExpression\",\n            elements: M.elements.map(to_moz)\n        };\n    });\n\n    def_to_moz(AST_Object, function To_Moz_ObjectExpression(M) {\n        return {\n            type: \"ObjectExpression\",\n            properties: M.properties.map(to_moz)\n        };\n    });\n\n    def_to_moz(AST_ObjectProperty, function To_Moz_Property(M, parent) {\n        var key = M.key instanceof AST_Node ? to_moz(M.key) : {\n            type: \"Identifier\",\n            value: M.key\n        };\n        if (typeof M.key === \"number\") {\n            key = {\n                type: \"Literal\",\n                value: Number(M.key)\n            };\n        }\n        if (typeof M.key === \"string\") {\n            key = {\n                type: \"Identifier\",\n                name: M.key\n            };\n        }\n        var kind;\n        var string_or_num = typeof M.key === \"string\" || typeof M.key === \"number\";\n        var computed = string_or_num ? false : !(M.key instanceof AST_Symbol) || M.key instanceof AST_SymbolRef;\n        if (M instanceof AST_ObjectKeyVal) {\n            kind = \"init\";\n            computed = !string_or_num;\n        } else\n        if (M instanceof AST_ObjectGetter) {\n            kind = \"get\";\n        } else\n        if (M instanceof AST_ObjectSetter) {\n            kind = \"set\";\n        }\n        if (M instanceof AST_PrivateGetter || M instanceof AST_PrivateSetter) {\n            const kind = M instanceof AST_PrivateGetter ? \"get\" : \"set\";\n            return {\n                type: \"MethodDefinition\",\n                computed: false,\n                kind: kind,\n                static: M.static,\n                key: {\n                    type: \"PrivateIdentifier\",\n                    name: M.key.name\n                },\n                value: to_moz(M.value)\n            };\n        }\n        if (M instanceof AST_ClassPrivateProperty) {\n            return {\n                type: \"PropertyDefinition\",\n                key: {\n                    type: \"PrivateIdentifier\",\n                    name: M.key.name\n                },\n                value: to_moz(M.value),\n                computed: false,\n                static: M.static\n            };\n        }\n        if (M instanceof AST_ClassProperty) {\n            return {\n                type: \"PropertyDefinition\",\n                key,\n                value: to_moz(M.value),\n                computed,\n                static: M.static\n            };\n        }\n        if (parent instanceof AST_Class) {\n            return {\n                type: \"MethodDefinition\",\n                computed: computed,\n                kind: kind,\n                static: M.static,\n                key: to_moz(M.key),\n                value: to_moz(M.value)\n            };\n        }\n        return {\n            type: \"Property\",\n            computed: computed,\n            kind: kind,\n            key: key,\n            value: to_moz(M.value)\n        };\n    });\n\n    def_to_moz(AST_ConciseMethod, function To_Moz_MethodDefinition(M, parent) {\n        if (parent instanceof AST_Object) {\n            return {\n                type: \"Property\",\n                computed: !(M.key instanceof AST_Symbol) || M.key instanceof AST_SymbolRef,\n                kind: \"init\",\n                method: true,\n                shorthand: false,\n                key: to_moz(M.key),\n                value: to_moz(M.value)\n            };\n        }\n\n        const key = M instanceof AST_PrivateMethod\n            ? {\n                type: \"PrivateIdentifier\",\n                name: M.key.name\n            }\n            : to_moz(M.key);\n\n        return {\n            type: \"MethodDefinition\",\n            kind: M.key === \"constructor\" ? \"constructor\" : \"method\",\n            key,\n            value: to_moz(M.value),\n            computed: !(M.key instanceof AST_Symbol) || M.key instanceof AST_SymbolRef,\n            static: M.static,\n        };\n    });\n\n    def_to_moz(AST_Class, function To_Moz_Class(M) {\n        var type = M instanceof AST_ClassExpression ? \"ClassExpression\" : \"ClassDeclaration\";\n        return {\n            type: type,\n            superClass: to_moz(M.extends),\n            id: M.name ? to_moz(M.name) : null,\n            body: {\n                type: \"ClassBody\",\n                body: M.properties.map(to_moz)\n            }\n        };\n    });\n\n    def_to_moz(AST_NewTarget, function To_Moz_MetaProperty() {\n        return {\n            type: \"MetaProperty\",\n            meta: {\n                type: \"Identifier\",\n                name: \"new\"\n            },\n            property: {\n                type: \"Identifier\",\n                name: \"target\"\n            }\n        };\n    });\n\n    def_to_moz(AST_Symbol, function To_Moz_Identifier(M, parent) {\n        if (M instanceof AST_SymbolMethod && parent.quote) {\n            return {\n                type: \"Literal\",\n                value: M.name\n            };\n        }\n        var def = M.definition();\n        return {\n            type: \"Identifier\",\n            name: def ? def.mangled_name || def.name : M.name\n        };\n    });\n\n    def_to_moz(AST_RegExp, function To_Moz_RegExpLiteral(M) {\n        const pattern = M.value.source;\n        const flags = M.value.flags;\n        return {\n            type: \"Literal\",\n            value: null,\n            raw: M.print_to_string(),\n            regex: { pattern, flags }\n        };\n    });\n\n    def_to_moz(AST_Constant, function To_Moz_Literal(M) {\n        var value = M.value;\n        return {\n            type: \"Literal\",\n            value: value,\n            raw: M.raw || M.print_to_string()\n        };\n    });\n\n    def_to_moz(AST_Atom, function To_Moz_Atom(M) {\n        return {\n            type: \"Identifier\",\n            name: String(M.value)\n        };\n    });\n\n    def_to_moz(AST_BigInt, M => ({\n        type: \"BigIntLiteral\",\n        value: M.value\n    }));\n\n    AST_Boolean.DEFMETHOD(\"to_mozilla_ast\", AST_Constant.prototype.to_mozilla_ast);\n    AST_Null.DEFMETHOD(\"to_mozilla_ast\", AST_Constant.prototype.to_mozilla_ast);\n    AST_Hole.DEFMETHOD(\"to_mozilla_ast\", function To_Moz_ArrayHole() { return null; });\n\n    AST_Block.DEFMETHOD(\"to_mozilla_ast\", AST_BlockStatement.prototype.to_mozilla_ast);\n    AST_Lambda.DEFMETHOD(\"to_mozilla_ast\", AST_Function.prototype.to_mozilla_ast);\n\n    /* -----[ tools ]----- */\n\n    function my_start_token(moznode) {\n        var loc = moznode.loc, start = loc && loc.start;\n        var range = moznode.range;\n        return new AST_Token(\n            \"\",\n            \"\",\n            start && start.line || 0,\n            start && start.column || 0,\n            range ? range [0] : moznode.start,\n            false,\n            [],\n            [],\n            loc && loc.source,\n        );\n    }\n\n    function my_end_token(moznode) {\n        var loc = moznode.loc, end = loc && loc.end;\n        var range = moznode.range;\n        return new AST_Token(\n            \"\",\n            \"\",\n            end && end.line || 0,\n            end && end.column || 0,\n            range ? range [0] : moznode.end,\n            false,\n            [],\n            [],\n            loc && loc.source,\n        );\n    }\n\n    function map(moztype, mytype, propmap) {\n        var moz_to_me = \"function From_Moz_\" + moztype + \"(M){\\n\";\n        moz_to_me += \"return new U2.\" + mytype.name + \"({\\n\" +\n            \"start: my_start_token(M),\\n\" +\n            \"end: my_end_token(M)\";\n\n        var me_to_moz = \"function To_Moz_\" + moztype + \"(M){\\n\";\n        me_to_moz += \"return {\\n\" +\n            \"type: \" + JSON.stringify(moztype);\n\n        if (propmap) propmap.split(/\\s*,\\s*/).forEach(function(prop) {\n            var m = /([a-z0-9$_]+)([=@>%])([a-z0-9$_]+)/i.exec(prop);\n            if (!m) throw new Error(\"Can't understand property map: \" + prop);\n            var moz = m[1], how = m[2], my = m[3];\n            moz_to_me += \",\\n\" + my + \": \";\n            me_to_moz += \",\\n\" + moz + \": \";\n            switch (how) {\n                case \"@\":\n                    moz_to_me += \"M.\" + moz + \".map(from_moz)\";\n                    me_to_moz += \"M.\" +  my + \".map(to_moz)\";\n                    break;\n                case \">\":\n                    moz_to_me += \"from_moz(M.\" + moz + \")\";\n                    me_to_moz += \"to_moz(M.\" + my + \")\";\n                    break;\n                case \"=\":\n                    moz_to_me += \"M.\" + moz;\n                    me_to_moz += \"M.\" + my;\n                    break;\n                case \"%\":\n                    moz_to_me += \"from_moz(M.\" + moz + \").body\";\n                    me_to_moz += \"to_moz_block(M)\";\n                    break;\n                default:\n                    throw new Error(\"Can't understand operator in propmap: \" + prop);\n            }\n        });\n\n        moz_to_me += \"\\n})\\n}\";\n        me_to_moz += \"\\n}\\n}\";\n\n        moz_to_me = new Function(\"U2\", \"my_start_token\", \"my_end_token\", \"from_moz\", \"return(\" + moz_to_me + \")\")(\n            ast, my_start_token, my_end_token, from_moz\n        );\n        me_to_moz = new Function(\"to_moz\", \"to_moz_block\", \"to_moz_scope\", \"return(\" + me_to_moz + \")\")(\n            to_moz, to_moz_block, to_moz_scope\n        );\n        MOZ_TO_ME[moztype] = moz_to_me;\n        def_to_moz(mytype, me_to_moz);\n    }\n\n    var FROM_MOZ_STACK = null;\n\n    function from_moz(node) {\n        FROM_MOZ_STACK.push(node);\n        var ret = node != null ? MOZ_TO_ME[node.type](node) : null;\n        FROM_MOZ_STACK.pop();\n        return ret;\n    }\n\n    AST_Node.from_mozilla_ast = function(node) {\n        var save_stack = FROM_MOZ_STACK;\n        FROM_MOZ_STACK = [];\n        var ast = from_moz(node);\n        FROM_MOZ_STACK = save_stack;\n        return ast;\n    };\n\n    function set_moz_loc(mynode, moznode) {\n        var start = mynode.start;\n        var end = mynode.end;\n        if (!(start && end)) {\n            return moznode;\n        }\n        if (start.pos != null && end.endpos != null) {\n            moznode.range = [start.pos, end.endpos];\n        }\n        if (start.line) {\n            moznode.loc = {\n                start: {line: start.line, column: start.col},\n                end: end.endline ? {line: end.endline, column: end.endcol} : null\n            };\n            if (start.file) {\n                moznode.loc.source = start.file;\n            }\n        }\n        return moznode;\n    }\n\n    function def_to_moz(mytype, handler) {\n        mytype.DEFMETHOD(\"to_mozilla_ast\", function(parent) {\n            return set_moz_loc(this, handler(this, parent));\n        });\n    }\n\n    var TO_MOZ_STACK = null;\n\n    function to_moz(node) {\n        if (TO_MOZ_STACK === null) { TO_MOZ_STACK = []; }\n        TO_MOZ_STACK.push(node);\n        var ast = node != null ? node.to_mozilla_ast(TO_MOZ_STACK[TO_MOZ_STACK.length - 2]) : null;\n        TO_MOZ_STACK.pop();\n        if (TO_MOZ_STACK.length === 0) { TO_MOZ_STACK = null; }\n        return ast;\n    }\n\n    function to_moz_in_destructuring() {\n        var i = TO_MOZ_STACK.length;\n        while (i--) {\n            if (TO_MOZ_STACK[i] instanceof AST_Destructuring) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    function to_moz_block(node) {\n        return {\n            type: \"BlockStatement\",\n            body: node.body.map(to_moz)\n        };\n    }\n\n    function to_moz_scope(type, node) {\n        var body = node.body.map(to_moz);\n        if (node.body[0] instanceof AST_SimpleStatement && node.body[0].body instanceof AST_String) {\n            body.unshift(to_moz(new AST_EmptyStatement(node.body[0])));\n        }\n        return {\n            type: type,\n            body: body\n        };\n    }\n})();\n","/***********************************************************************\n\n  A JavaScript tokenizer / parser / beautifier / compressor.\n  https://github.com/mishoo/UglifyJS2\n\n  -------------------------------- (C) ---------------------------------\n\n                           Author: Mihai Bazon\n                         <mihai.bazon@gmail.com>\n                       http://mihai.bazon.net/blog\n\n  Distributed under the BSD license:\n\n    Copyright 2012 (c) Mihai Bazon <mihai.bazon@gmail.com>\n\n    Redistribution and use in source and binary forms, with or without\n    modification, are permitted provided that the following conditions\n    are met:\n\n        * Redistributions of source code must retain the above\n          copyright notice, this list of conditions and the following\n          disclaimer.\n\n        * Redistributions in binary form must reproduce the above\n          copyright notice, this list of conditions and the following\n          disclaimer in the documentation and/or other materials\n          provided with the distribution.\n\n    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER “AS IS” AND ANY\n    EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n    PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER BE\n    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,\n    OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n    PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n    PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n    THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR\n    TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF\n    THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n    SUCH DAMAGE.\n\n ***********************************************************************/\n\n\"use strict\";\n\nimport {\n    defaults,\n    makePredicate,\n    noop,\n    regexp_source_fix,\n    sort_regexp_flags,\n    return_false,\n    return_true,\n} from \"./utils/index.js\";\nimport { first_in_statement, left_is_object } from \"./utils/first_in_statement.js\";\nimport {\n    AST_Array,\n    AST_Arrow,\n    AST_Assign,\n    AST_Await,\n    AST_BigInt,\n    AST_Binary,\n    AST_BlockStatement,\n    AST_Break,\n    AST_Call,\n    AST_Case,\n    AST_Catch,\n    AST_Chain,\n    AST_Class,\n    AST_ClassExpression,\n    AST_ClassPrivateProperty,\n    AST_ClassProperty,\n    AST_ConciseMethod,\n    AST_PrivateGetter,\n    AST_PrivateMethod,\n    AST_PrivateSetter,\n    AST_Conditional,\n    AST_Const,\n    AST_Constant,\n    AST_Continue,\n    AST_Debugger,\n    AST_Default,\n    AST_DefaultAssign,\n    AST_Definitions,\n    AST_Defun,\n    AST_Destructuring,\n    AST_Directive,\n    AST_Do,\n    AST_Dot,\n    AST_DotHash,\n    AST_EmptyStatement,\n    AST_Exit,\n    AST_Expansion,\n    AST_Export,\n    AST_Finally,\n    AST_For,\n    AST_ForIn,\n    AST_ForOf,\n    AST_Function,\n    AST_Hole,\n    AST_If,\n    AST_Import,\n    AST_ImportMeta,\n    AST_Jump,\n    AST_LabeledStatement,\n    AST_Lambda,\n    AST_Let,\n    AST_LoopControl,\n    AST_NameMapping,\n    AST_New,\n    AST_NewTarget,\n    AST_Node,\n    AST_Number,\n    AST_Object,\n    AST_ObjectGetter,\n    AST_ObjectKeyVal,\n    AST_ObjectProperty,\n    AST_ObjectSetter,\n    AST_PrefixedTemplateString,\n    AST_PropAccess,\n    AST_RegExp,\n    AST_Return,\n    AST_Scope,\n    AST_Sequence,\n    AST_SimpleStatement,\n    AST_Statement,\n    AST_StatementWithBody,\n    AST_String,\n    AST_Sub,\n    AST_Super,\n    AST_Switch,\n    AST_SwitchBranch,\n    AST_Symbol,\n    AST_SymbolClassProperty,\n    AST_SymbolMethod,\n    AST_SymbolRef,\n    AST_TemplateSegment,\n    AST_TemplateString,\n    AST_This,\n    AST_Throw,\n    AST_Toplevel,\n    AST_Try,\n    AST_Unary,\n    AST_UnaryPostfix,\n    AST_UnaryPrefix,\n    AST_Var,\n    AST_VarDef,\n    AST_While,\n    AST_With,\n    AST_Yield,\n    TreeWalker,\n    walk,\n    walk_abort\n} from \"./ast.js\";\nimport {\n    get_full_char_code,\n    get_full_char,\n    is_identifier_char,\n    is_basic_identifier_string,\n    is_identifier_string,\n    PRECEDENCE,\n    ALL_RESERVED_WORDS,\n} from \"./parse.js\";\n\nconst EXPECT_DIRECTIVE = /^$|[;{][\\s\\n]*$/;\nconst CODE_LINE_BREAK = 10;\nconst CODE_SPACE = 32;\n\nconst r_annotation = /[@#]__(PURE|INLINE|NOINLINE)__/g;\n\nfunction is_some_comments(comment) {\n    // multiline comment\n    return (\n        (comment.type === \"comment2\" || comment.type === \"comment1\")\n        && /@preserve|@lic|@cc_on|^\\**!/i.test(comment.value)\n    );\n}\n\nclass Rope {\n    constructor() {\n        this.committed = \"\";\n        this.current = \"\";\n    }\n\n    append(str) {\n        this.current += str;\n    }\n\n    insertAt(char, index) {\n        const { committed, current } = this;\n        if (index < committed.length) {\n            this.committed = committed.slice(0, index) + char + committed.slice(index);\n        } else if (index === committed.length) {\n            this.committed += char;\n        } else {\n            index -= committed.length;\n            this.committed += current.slice(0, index) + char;\n            this.current = current.slice(index);\n        }\n    }\n\n    charAt(index) {\n        const { committed } = this;\n        if (index < committed.length) return committed[index];\n        return this.current[index - committed.length];\n    }\n\n    curLength() {\n        return this.current.length;\n    }\n\n    length() {\n        return this.committed.length + this.current.length;\n    }\n\n    toString() {\n        return this.committed + this.current;\n    }\n}\n\nfunction OutputStream(options) {\n\n    var readonly = !options;\n    options = defaults(options, {\n        ascii_only           : false,\n        beautify             : false,\n        braces               : false,\n        comments             : \"some\",\n        ecma                 : 5,\n        ie8                  : false,\n        indent_level         : 4,\n        indent_start         : 0,\n        inline_script        : true,\n        keep_numbers         : false,\n        keep_quoted_props    : false,\n        max_line_len         : false,\n        preamble             : null,\n        preserve_annotations : false,\n        quote_keys           : false,\n        quote_style          : 0,\n        safari10             : false,\n        semicolons           : true,\n        shebang              : true,\n        shorthand            : undefined,\n        source_map           : null,\n        webkit               : false,\n        width                : 80,\n        wrap_iife            : false,\n        wrap_func_args       : true,\n    }, true);\n\n    if (options.shorthand === undefined)\n        options.shorthand = options.ecma > 5;\n\n    // Convert comment option to RegExp if neccessary and set up comments filter\n    var comment_filter = return_false; // Default case, throw all comments away\n    if (options.comments) {\n        let comments = options.comments;\n        if (typeof options.comments === \"string\" && /^\\/.*\\/[a-zA-Z]*$/.test(options.comments)) {\n            var regex_pos = options.comments.lastIndexOf(\"/\");\n            comments = new RegExp(\n                options.comments.substr(1, regex_pos - 1),\n                options.comments.substr(regex_pos + 1)\n            );\n        }\n        if (comments instanceof RegExp) {\n            comment_filter = function(comment) {\n                return comment.type != \"comment5\" && comments.test(comment.value);\n            };\n        } else if (typeof comments === \"function\") {\n            comment_filter = function(comment) {\n                return comment.type != \"comment5\" && comments(this, comment);\n            };\n        } else if (comments === \"some\") {\n            comment_filter = is_some_comments;\n        } else { // NOTE includes \"all\" option\n            comment_filter = return_true;\n        }\n    }\n\n    var indentation = 0;\n    var current_col = 0;\n    var current_line = 1;\n    var current_pos = 0;\n    var OUTPUT = new Rope();\n    let printed_comments = new Set();\n\n    var to_utf8 = options.ascii_only ? function(str, identifier) {\n        if (options.ecma >= 2015 && !options.safari10) {\n            str = str.replace(/[\\ud800-\\udbff][\\udc00-\\udfff]/g, function(ch) {\n                var code = get_full_char_code(ch, 0).toString(16);\n                return \"\\\\u{\" + code + \"}\";\n            });\n        }\n        return str.replace(/[\\u0000-\\u001f\\u007f-\\uffff]/g, function(ch) {\n            var code = ch.charCodeAt(0).toString(16);\n            if (code.length <= 2 && !identifier) {\n                while (code.length < 2) code = \"0\" + code;\n                return \"\\\\x\" + code;\n            } else {\n                while (code.length < 4) code = \"0\" + code;\n                return \"\\\\u\" + code;\n            }\n        });\n    } : function(str) {\n        return str.replace(/[\\ud800-\\udbff][\\udc00-\\udfff]|([\\ud800-\\udbff]|[\\udc00-\\udfff])/g, function(match, lone) {\n            if (lone) {\n                return \"\\\\u\" + lone.charCodeAt(0).toString(16);\n            }\n            return match;\n        });\n    };\n\n    function make_string(str, quote) {\n        var dq = 0, sq = 0;\n        str = str.replace(/[\\\\\\b\\f\\n\\r\\v\\t\\x22\\x27\\u2028\\u2029\\0\\ufeff]/g,\n          function(s, i) {\n            switch (s) {\n              case '\"': ++dq; return '\"';\n              case \"'\": ++sq; return \"'\";\n              case \"\\\\\": return \"\\\\\\\\\";\n              case \"\\n\": return \"\\\\n\";\n              case \"\\r\": return \"\\\\r\";\n              case \"\\t\": return \"\\\\t\";\n              case \"\\b\": return \"\\\\b\";\n              case \"\\f\": return \"\\\\f\";\n              case \"\\x0B\": return options.ie8 ? \"\\\\x0B\" : \"\\\\v\";\n              case \"\\u2028\": return \"\\\\u2028\";\n              case \"\\u2029\": return \"\\\\u2029\";\n              case \"\\ufeff\": return \"\\\\ufeff\";\n              case \"\\0\":\n                  return /[0-9]/.test(get_full_char(str, i+1)) ? \"\\\\x00\" : \"\\\\0\";\n            }\n            return s;\n        });\n        function quote_single() {\n            return \"'\" + str.replace(/\\x27/g, \"\\\\'\") + \"'\";\n        }\n        function quote_double() {\n            return '\"' + str.replace(/\\x22/g, '\\\\\"') + '\"';\n        }\n        function quote_template() {\n            return \"`\" + str.replace(/`/g, \"\\\\`\") + \"`\";\n        }\n        str = to_utf8(str);\n        if (quote === \"`\") return quote_template();\n        switch (options.quote_style) {\n          case 1:\n            return quote_single();\n          case 2:\n            return quote_double();\n          case 3:\n            return quote == \"'\" ? quote_single() : quote_double();\n          default:\n            return dq > sq ? quote_single() : quote_double();\n        }\n    }\n\n    function encode_string(str, quote) {\n        var ret = make_string(str, quote);\n        if (options.inline_script) {\n            ret = ret.replace(/<\\x2f(script)([>\\/\\t\\n\\f\\r ])/gi, \"<\\\\/$1$2\");\n            ret = ret.replace(/\\x3c!--/g, \"\\\\x3c!--\");\n            ret = ret.replace(/--\\x3e/g, \"--\\\\x3e\");\n        }\n        return ret;\n    }\n\n    function make_name(name) {\n        name = name.toString();\n        name = to_utf8(name, true);\n        return name;\n    }\n\n    function make_indent(back) {\n        return \" \".repeat(options.indent_start + indentation - back * options.indent_level);\n    }\n\n    /* -----[ beautification/minification ]----- */\n\n    var has_parens = false;\n    var might_need_space = false;\n    var might_need_semicolon = false;\n    var might_add_newline = 0;\n    var need_newline_indented = false;\n    var need_space = false;\n    var newline_insert = -1;\n    var last = \"\";\n    var mapping_token, mapping_name, mappings = options.source_map && [];\n\n    var do_add_mapping = mappings ? function() {\n        mappings.forEach(function(mapping) {\n            try {\n                let { name, token } = mapping;\n                if (token.type == \"name\" || token.type === \"privatename\") {\n                    name = token.value;\n                } else if (name instanceof AST_Symbol) {\n                    name = token.type === \"string\" ? token.value : name.name;\n                }\n                options.source_map.add(\n                    mapping.token.file,\n                    mapping.line, mapping.col,\n                    mapping.token.line, mapping.token.col,\n                    is_basic_identifier_string(name) ? name : undefined\n                );\n            } catch(ex) {\n                // Ignore bad mapping\n            }\n        });\n        mappings = [];\n    } : noop;\n\n    var ensure_line_len = options.max_line_len ? function() {\n        if (current_col > options.max_line_len) {\n            if (might_add_newline) {\n                OUTPUT.insertAt(\"\\n\", might_add_newline);\n                const curLength = OUTPUT.curLength();\n                if (mappings) {\n                    var delta = curLength - current_col;\n                    mappings.forEach(function(mapping) {\n                        mapping.line++;\n                        mapping.col += delta;\n                    });\n                }\n                current_line++;\n                current_pos++;\n                current_col = curLength;\n            }\n        }\n        if (might_add_newline) {\n            might_add_newline = 0;\n            do_add_mapping();\n        }\n    } : noop;\n\n    var requireSemicolonChars = makePredicate(\"( [ + * / - , . `\");\n\n    function print(str) {\n        str = String(str);\n        var ch = get_full_char(str, 0);\n        if (need_newline_indented && ch) {\n            need_newline_indented = false;\n            if (ch !== \"\\n\") {\n                print(\"\\n\");\n                indent();\n            }\n        }\n        if (need_space && ch) {\n            need_space = false;\n            if (!/[\\s;})]/.test(ch)) {\n                space();\n            }\n        }\n        newline_insert = -1;\n        var prev = last.charAt(last.length - 1);\n        if (might_need_semicolon) {\n            might_need_semicolon = false;\n\n            if (prev === \":\" && ch === \"}\" || (!ch || !\";}\".includes(ch)) && prev !== \";\") {\n                if (options.semicolons || requireSemicolonChars.has(ch)) {\n                    OUTPUT.append(\";\");\n                    current_col++;\n                    current_pos++;\n                } else {\n                    ensure_line_len();\n                    if (current_col > 0) {\n                        OUTPUT.append(\"\\n\");\n                        current_pos++;\n                        current_line++;\n                        current_col = 0;\n                    }\n\n                    if (/^\\s+$/.test(str)) {\n                        // reset the semicolon flag, since we didn't print one\n                        // now and might still have to later\n                        might_need_semicolon = true;\n                    }\n                }\n\n                if (!options.beautify)\n                    might_need_space = false;\n            }\n        }\n\n        if (might_need_space) {\n            if ((is_identifier_char(prev)\n                    && (is_identifier_char(ch) || ch == \"\\\\\"))\n                || (ch == \"/\" && ch == prev)\n                || ((ch == \"+\" || ch == \"-\") && ch == last)\n            ) {\n                OUTPUT.append(\" \");\n                current_col++;\n                current_pos++;\n            }\n            might_need_space = false;\n        }\n\n        if (mapping_token) {\n            mappings.push({\n                token: mapping_token,\n                name: mapping_name,\n                line: current_line,\n                col: current_col\n            });\n            mapping_token = false;\n            if (!might_add_newline) do_add_mapping();\n        }\n\n        OUTPUT.append(str);\n        has_parens = str[str.length - 1] == \"(\";\n        current_pos += str.length;\n        var a = str.split(/\\r?\\n/), n = a.length - 1;\n        current_line += n;\n        current_col += a[0].length;\n        if (n > 0) {\n            ensure_line_len();\n            current_col = a[n].length;\n        }\n        last = str;\n    }\n\n    var star = function() {\n        print(\"*\");\n    };\n\n    var space = options.beautify ? function() {\n        print(\" \");\n    } : function() {\n        might_need_space = true;\n    };\n\n    var indent = options.beautify ? function(half) {\n        if (options.beautify) {\n            print(make_indent(half ? 0.5 : 0));\n        }\n    } : noop;\n\n    var with_indent = options.beautify ? function(col, cont) {\n        if (col === true) col = next_indent();\n        var save_indentation = indentation;\n        indentation = col;\n        var ret = cont();\n        indentation = save_indentation;\n        return ret;\n    } : function(col, cont) { return cont(); };\n\n    var newline = options.beautify ? function() {\n        if (newline_insert < 0) return print(\"\\n\");\n        if (OUTPUT.charAt(newline_insert) != \"\\n\") {\n            OUTPUT.insertAt(\"\\n\", newline_insert);\n            current_pos++;\n            current_line++;\n        }\n        newline_insert++;\n    } : options.max_line_len ? function() {\n        ensure_line_len();\n        might_add_newline = OUTPUT.length();\n    } : noop;\n\n    var semicolon = options.beautify ? function() {\n        print(\";\");\n    } : function() {\n        might_need_semicolon = true;\n    };\n\n    function force_semicolon() {\n        might_need_semicolon = false;\n        print(\";\");\n    }\n\n    function next_indent() {\n        return indentation + options.indent_level;\n    }\n\n    function with_block(cont) {\n        var ret;\n        print(\"{\");\n        newline();\n        with_indent(next_indent(), function() {\n            ret = cont();\n        });\n        indent();\n        print(\"}\");\n        return ret;\n    }\n\n    function with_parens(cont) {\n        print(\"(\");\n        //XXX: still nice to have that for argument lists\n        //var ret = with_indent(current_col, cont);\n        var ret = cont();\n        print(\")\");\n        return ret;\n    }\n\n    function with_square(cont) {\n        print(\"[\");\n        //var ret = with_indent(current_col, cont);\n        var ret = cont();\n        print(\"]\");\n        return ret;\n    }\n\n    function comma() {\n        print(\",\");\n        space();\n    }\n\n    function colon() {\n        print(\":\");\n        space();\n    }\n\n    var add_mapping = mappings ? function(token, name) {\n        mapping_token = token;\n        mapping_name = name;\n    } : noop;\n\n    function get() {\n        if (might_add_newline) {\n            ensure_line_len();\n        }\n        return OUTPUT.toString();\n    }\n\n    function has_nlb() {\n        const output = OUTPUT.toString();\n        let n = output.length - 1;\n        while (n >= 0) {\n            const code = output.charCodeAt(n);\n            if (code === CODE_LINE_BREAK) {\n                return true;\n            }\n\n            if (code !== CODE_SPACE) {\n                return false;\n            }\n            n--;\n        }\n        return true;\n    }\n\n    function filter_comment(comment) {\n        if (!options.preserve_annotations) {\n            comment = comment.replace(r_annotation, \" \");\n        }\n        if (/^\\s*$/.test(comment)) {\n            return \"\";\n        }\n        return comment.replace(/(<\\s*\\/\\s*)(script)/i, \"<\\\\/$2\");\n    }\n\n    function prepend_comments(node) {\n        var self = this;\n        var start = node.start;\n        if (!start) return;\n        var printed_comments = self.printed_comments;\n\n        // There cannot be a newline between return and its value.\n        const return_with_value = node instanceof AST_Exit && node.value;\n\n        if (\n            start.comments_before\n            && printed_comments.has(start.comments_before)\n        ) {\n            if (return_with_value) {\n                start.comments_before = [];\n            } else {\n                return;\n            }\n        }\n\n        var comments = start.comments_before;\n        if (!comments) {\n            comments = start.comments_before = [];\n        }\n        printed_comments.add(comments);\n\n        if (return_with_value) {\n            var tw = new TreeWalker(function(node) {\n                var parent = tw.parent();\n                if (parent instanceof AST_Exit\n                    || parent instanceof AST_Binary && parent.left === node\n                    || parent.TYPE == \"Call\" && parent.expression === node\n                    || parent instanceof AST_Conditional && parent.condition === node\n                    || parent instanceof AST_Dot && parent.expression === node\n                    || parent instanceof AST_Sequence && parent.expressions[0] === node\n                    || parent instanceof AST_Sub && parent.expression === node\n                    || parent instanceof AST_UnaryPostfix) {\n                    if (!node.start) return;\n                    var text = node.start.comments_before;\n                    if (text && !printed_comments.has(text)) {\n                        printed_comments.add(text);\n                        comments = comments.concat(text);\n                    }\n                } else {\n                    return true;\n                }\n            });\n            tw.push(node);\n            node.value.walk(tw);\n        }\n\n        if (current_pos == 0) {\n            if (comments.length > 0 && options.shebang && comments[0].type === \"comment5\"\n                && !printed_comments.has(comments[0])) {\n                print(\"#!\" + comments.shift().value + \"\\n\");\n                indent();\n            }\n            var preamble = options.preamble;\n            if (preamble) {\n                print(preamble.replace(/\\r\\n?|[\\n\\u2028\\u2029]|\\s*$/g, \"\\n\"));\n            }\n        }\n\n        comments = comments.filter(comment_filter, node).filter(c => !printed_comments.has(c));\n        if (comments.length == 0) return;\n        var last_nlb = has_nlb();\n        comments.forEach(function(c, i) {\n            printed_comments.add(c);\n            if (!last_nlb) {\n                if (c.nlb) {\n                    print(\"\\n\");\n                    indent();\n                    last_nlb = true;\n                } else if (i > 0) {\n                    space();\n                }\n            }\n\n            if (/comment[134]/.test(c.type)) {\n                var value = filter_comment(c.value);\n                if (value) {\n                    print(\"//\" + value + \"\\n\");\n                    indent();\n                }\n                last_nlb = true;\n            } else if (c.type == \"comment2\") {\n                var value = filter_comment(c.value);\n                if (value) {\n                    print(\"/*\" + value + \"*/\");\n                }\n                last_nlb = false;\n            }\n        });\n        if (!last_nlb) {\n            if (start.nlb) {\n                print(\"\\n\");\n                indent();\n            } else {\n                space();\n            }\n        }\n    }\n\n    function append_comments(node, tail) {\n        var self = this;\n        var token = node.end;\n        if (!token) return;\n        var printed_comments = self.printed_comments;\n        var comments = token[tail ? \"comments_before\" : \"comments_after\"];\n        if (!comments || printed_comments.has(comments)) return;\n        if (!(node instanceof AST_Statement || comments.every((c) =>\n            !/comment[134]/.test(c.type)\n        ))) return;\n        printed_comments.add(comments);\n        var insert = OUTPUT.length();\n        comments.filter(comment_filter, node).forEach(function(c, i) {\n            if (printed_comments.has(c)) return;\n            printed_comments.add(c);\n            need_space = false;\n            if (need_newline_indented) {\n                print(\"\\n\");\n                indent();\n                need_newline_indented = false;\n            } else if (c.nlb && (i > 0 || !has_nlb())) {\n                print(\"\\n\");\n                indent();\n            } else if (i > 0 || !tail) {\n                space();\n            }\n            if (/comment[134]/.test(c.type)) {\n                const value = filter_comment(c.value);\n                if (value) {\n                    print(\"//\" + value);\n                }\n                need_newline_indented = true;\n            } else if (c.type == \"comment2\") {\n                const value = filter_comment(c.value);\n                if (value) {\n                    print(\"/*\" + value + \"*/\");\n                }\n                need_space = true;\n            }\n        });\n        if (OUTPUT.length() > insert) newline_insert = insert;\n    }\n\n    var stack = [];\n    return {\n        get             : get,\n        toString        : get,\n        indent          : indent,\n        in_directive    : false,\n        use_asm         : null,\n        active_scope    : null,\n        indentation     : function() { return indentation; },\n        current_width   : function() { return current_col - indentation; },\n        should_break    : function() { return options.width && this.current_width() >= options.width; },\n        has_parens      : function() { return has_parens; },\n        newline         : newline,\n        print           : print,\n        star            : star,\n        space           : space,\n        comma           : comma,\n        colon           : colon,\n        last            : function() { return last; },\n        semicolon       : semicolon,\n        force_semicolon : force_semicolon,\n        to_utf8         : to_utf8,\n        print_name      : function(name) { print(make_name(name)); },\n        print_string    : function(str, quote, escape_directive) {\n            var encoded = encode_string(str, quote);\n            if (escape_directive === true && !encoded.includes(\"\\\\\")) {\n                // Insert semicolons to break directive prologue\n                if (!EXPECT_DIRECTIVE.test(OUTPUT.toString())) {\n                    force_semicolon();\n                }\n                force_semicolon();\n            }\n            print(encoded);\n        },\n        print_template_string_chars: function(str) {\n            var encoded = encode_string(str, \"`\").replace(/\\${/g, \"\\\\${\");\n            return print(encoded.substr(1, encoded.length - 2));\n        },\n        encode_string   : encode_string,\n        next_indent     : next_indent,\n        with_indent     : with_indent,\n        with_block      : with_block,\n        with_parens     : with_parens,\n        with_square     : with_square,\n        add_mapping     : add_mapping,\n        option          : function(opt) { return options[opt]; },\n        printed_comments: printed_comments,\n        prepend_comments: readonly ? noop : prepend_comments,\n        append_comments : readonly || comment_filter === return_false ? noop : append_comments,\n        line            : function() { return current_line; },\n        col             : function() { return current_col; },\n        pos             : function() { return current_pos; },\n        push_node       : function(node) { stack.push(node); },\n        pop_node        : function() { return stack.pop(); },\n        parent          : function(n) {\n            return stack[stack.length - 2 - (n || 0)];\n        }\n    };\n\n}\n\n/* -----[ code generators ]----- */\n\n(function() {\n\n    /* -----[ utils ]----- */\n\n    function DEFPRINT(nodetype, generator) {\n        nodetype.DEFMETHOD(\"_codegen\", generator);\n    }\n\n    AST_Node.DEFMETHOD(\"print\", function(output, force_parens) {\n        var self = this, generator = self._codegen;\n        if (self instanceof AST_Scope) {\n            output.active_scope = self;\n        } else if (!output.use_asm && self instanceof AST_Directive && self.value == \"use asm\") {\n            output.use_asm = output.active_scope;\n        }\n        function doit() {\n            output.prepend_comments(self);\n            self.add_source_map(output);\n            generator(self, output);\n            output.append_comments(self);\n        }\n        output.push_node(self);\n        if (force_parens || self.needs_parens(output)) {\n            output.with_parens(doit);\n        } else {\n            doit();\n        }\n        output.pop_node();\n        if (self === output.use_asm) {\n            output.use_asm = null;\n        }\n    });\n    AST_Node.DEFMETHOD(\"_print\", AST_Node.prototype.print);\n\n    AST_Node.DEFMETHOD(\"print_to_string\", function(options) {\n        var output = OutputStream(options);\n        this.print(output);\n        return output.get();\n    });\n\n    /* -----[ PARENTHESES ]----- */\n\n    function PARENS(nodetype, func) {\n        if (Array.isArray(nodetype)) {\n            nodetype.forEach(function(nodetype) {\n                PARENS(nodetype, func);\n            });\n        } else {\n            nodetype.DEFMETHOD(\"needs_parens\", func);\n        }\n    }\n\n    PARENS(AST_Node, return_false);\n\n    // a function expression needs parens around it when it's provably\n    // the first token to appear in a statement.\n    PARENS(AST_Function, function(output) {\n        if (!output.has_parens() && first_in_statement(output)) {\n            return true;\n        }\n\n        if (output.option(\"webkit\")) {\n            var p = output.parent();\n            if (p instanceof AST_PropAccess && p.expression === this) {\n                return true;\n            }\n        }\n\n        if (output.option(\"wrap_iife\")) {\n            var p = output.parent();\n            if (p instanceof AST_Call && p.expression === this) {\n                return true;\n            }\n        }\n\n        if (output.option(\"wrap_func_args\")) {\n            var p = output.parent();\n            if (p instanceof AST_Call && p.args.includes(this)) {\n                return true;\n            }\n        }\n\n        return false;\n    });\n\n    PARENS(AST_Arrow, function(output) {\n        var p = output.parent();\n\n        if (\n            output.option(\"wrap_func_args\")\n            && p instanceof AST_Call\n            && p.args.includes(this)\n        ) {\n            return true;\n        }\n        return p instanceof AST_PropAccess && p.expression === this;\n    });\n\n    // same goes for an object literal (as in AST_Function), because\n    // otherwise {...} would be interpreted as a block of code.\n    PARENS(AST_Object, function(output) {\n        return !output.has_parens() && first_in_statement(output);\n    });\n\n    PARENS(AST_ClassExpression, first_in_statement);\n\n    PARENS(AST_Unary, function(output) {\n        var p = output.parent();\n        return p instanceof AST_PropAccess && p.expression === this\n            || p instanceof AST_Call && p.expression === this\n            || p instanceof AST_Binary\n                && p.operator === \"**\"\n                && this instanceof AST_UnaryPrefix\n                && p.left === this\n                && this.operator !== \"++\"\n                && this.operator !== \"--\";\n    });\n\n    PARENS(AST_Await, function(output) {\n        var p = output.parent();\n        return p instanceof AST_PropAccess && p.expression === this\n            || p instanceof AST_Call && p.expression === this\n            || p instanceof AST_Binary && p.operator === \"**\" && p.left === this\n            || output.option(\"safari10\") && p instanceof AST_UnaryPrefix;\n    });\n\n    PARENS(AST_Sequence, function(output) {\n        var p = output.parent();\n        return p instanceof AST_Call                          // (foo, bar)() or foo(1, (2, 3), 4)\n            || p instanceof AST_Unary                         // !(foo, bar, baz)\n            || p instanceof AST_Binary                        // 1 + (2, 3) + 4 ==> 8\n            || p instanceof AST_VarDef                        // var a = (1, 2), b = a + a; ==> b == 4\n            || p instanceof AST_PropAccess                    // (1, {foo:2}).foo or (1, {foo:2})[\"foo\"] ==> 2\n            || p instanceof AST_Array                         // [ 1, (2, 3), 4 ] ==> [ 1, 3, 4 ]\n            || p instanceof AST_ObjectProperty                // { foo: (1, 2) }.foo ==> 2\n            || p instanceof AST_Conditional                   /* (false, true) ? (a = 10, b = 20) : (c = 30)\n                                                               * ==> 20 (side effect, set a := 10 and b := 20) */\n            || p instanceof AST_Arrow                         // x => (x, x)\n            || p instanceof AST_DefaultAssign                 // x => (x = (0, function(){}))\n            || p instanceof AST_Expansion                     // [...(a, b)]\n            || p instanceof AST_ForOf && this === p.object    // for (e of (foo, bar)) {}\n            || p instanceof AST_Yield                         // yield (foo, bar)\n            || p instanceof AST_Export                        // export default (foo, bar)\n        ;\n    });\n\n    PARENS(AST_Binary, function(output) {\n        var p = output.parent();\n        // (foo && bar)()\n        if (p instanceof AST_Call && p.expression === this)\n            return true;\n        // typeof (foo && bar)\n        if (p instanceof AST_Unary)\n            return true;\n        // (foo && bar)[\"prop\"], (foo && bar).prop\n        if (p instanceof AST_PropAccess && p.expression === this)\n            return true;\n        // this deals with precedence: 3 * (2 + 1)\n        if (p instanceof AST_Binary) {\n            const po = p.operator;\n            const so = this.operator;\n\n            if (so === \"??\" && (po === \"||\" || po === \"&&\")) {\n                return true;\n            }\n\n            if (po === \"??\" && (so === \"||\" || so === \"&&\")) {\n                return true;\n            }\n\n            const pp = PRECEDENCE[po];\n            const sp = PRECEDENCE[so];\n            if (pp > sp\n                || (pp == sp\n                    && (this === p.right || po == \"**\"))) {\n                return true;\n            }\n        }\n    });\n\n    PARENS(AST_Yield, function(output) {\n        var p = output.parent();\n        // (yield 1) + (yield 2)\n        // a = yield 3\n        if (p instanceof AST_Binary && p.operator !== \"=\")\n            return true;\n        // (yield 1)()\n        // new (yield 1)()\n        if (p instanceof AST_Call && p.expression === this)\n            return true;\n        // (yield 1) ? yield 2 : yield 3\n        if (p instanceof AST_Conditional && p.condition === this)\n            return true;\n        // -(yield 4)\n        if (p instanceof AST_Unary)\n            return true;\n        // (yield x).foo\n        // (yield x)['foo']\n        if (p instanceof AST_PropAccess && p.expression === this)\n            return true;\n    });\n\n    PARENS(AST_PropAccess, function(output) {\n        var p = output.parent();\n        if (p instanceof AST_New && p.expression === this) {\n            // i.e. new (foo.bar().baz)\n            //\n            // if there's one call into this subtree, then we need\n            // parens around it too, otherwise the call will be\n            // interpreted as passing the arguments to the upper New\n            // expression.\n            return walk(this, node => {\n                if (node instanceof AST_Scope) return true;\n                if (node instanceof AST_Call) {\n                    return walk_abort;  // makes walk() return true.\n                }\n            });\n        }\n    });\n\n    PARENS(AST_Call, function(output) {\n        var p = output.parent(), p1;\n        if (p instanceof AST_New && p.expression === this\n            || p instanceof AST_Export && p.is_default && this.expression instanceof AST_Function)\n            return true;\n\n        // workaround for Safari bug.\n        // https://bugs.webkit.org/show_bug.cgi?id=123506\n        return this.expression instanceof AST_Function\n            && p instanceof AST_PropAccess\n            && p.expression === this\n            && (p1 = output.parent(1)) instanceof AST_Assign\n            && p1.left === p;\n    });\n\n    PARENS(AST_New, function(output) {\n        var p = output.parent();\n        if (this.args.length === 0\n            && (p instanceof AST_PropAccess // (new Date).getTime(), (new Date)[\"getTime\"]()\n                || p instanceof AST_Call && p.expression === this)) // (new foo)(bar)\n            return true;\n    });\n\n    PARENS(AST_Number, function(output) {\n        var p = output.parent();\n        if (p instanceof AST_PropAccess && p.expression === this) {\n            var value = this.getValue();\n            if (value < 0 || /^0/.test(make_num(value))) {\n                return true;\n            }\n        }\n    });\n\n    PARENS(AST_BigInt, function(output) {\n        var p = output.parent();\n        if (p instanceof AST_PropAccess && p.expression === this) {\n            var value = this.getValue();\n            if (value.startsWith(\"-\")) {\n                return true;\n            }\n        }\n    });\n\n    PARENS([ AST_Assign, AST_Conditional ], function(output) {\n        var p = output.parent();\n        // !(a = false) → true\n        if (p instanceof AST_Unary)\n            return true;\n        // 1 + (a = 2) + 3 → 6, side effect setting a = 2\n        if (p instanceof AST_Binary && !(p instanceof AST_Assign))\n            return true;\n        // (a = func)() —or— new (a = Object)()\n        if (p instanceof AST_Call && p.expression === this)\n            return true;\n        // (a = foo) ? bar : baz\n        if (p instanceof AST_Conditional && p.condition === this)\n            return true;\n        // (a = foo)[\"prop\"] —or— (a = foo).prop\n        if (p instanceof AST_PropAccess && p.expression === this)\n            return true;\n        // ({a, b} = {a: 1, b: 2}), a destructuring assignment\n        if (this instanceof AST_Assign && this.left instanceof AST_Destructuring && this.left.is_array === false)\n            return true;\n    });\n\n    /* -----[ PRINTERS ]----- */\n\n    DEFPRINT(AST_Directive, function(self, output) {\n        output.print_string(self.value, self.quote);\n        output.semicolon();\n    });\n\n    DEFPRINT(AST_Expansion, function (self, output) {\n        output.print(\"...\");\n        self.expression.print(output);\n    });\n\n    DEFPRINT(AST_Destructuring, function (self, output) {\n        output.print(self.is_array ? \"[\" : \"{\");\n        var len = self.names.length;\n        self.names.forEach(function (name, i) {\n            if (i > 0) output.comma();\n            name.print(output);\n            // If the final element is a hole, we need to make sure it\n            // doesn't look like a trailing comma, by inserting an actual\n            // trailing comma.\n            if (i == len - 1 && name instanceof AST_Hole) output.comma();\n        });\n        output.print(self.is_array ? \"]\" : \"}\");\n    });\n\n    DEFPRINT(AST_Debugger, function(self, output) {\n        output.print(\"debugger\");\n        output.semicolon();\n    });\n\n    /* -----[ statements ]----- */\n\n    function display_body(body, is_toplevel, output, allow_directives) {\n        var last = body.length - 1;\n        output.in_directive = allow_directives;\n        body.forEach(function(stmt, i) {\n            if (output.in_directive === true && !(stmt instanceof AST_Directive ||\n                stmt instanceof AST_EmptyStatement ||\n                (stmt instanceof AST_SimpleStatement && stmt.body instanceof AST_String)\n            )) {\n                output.in_directive = false;\n            }\n            if (!(stmt instanceof AST_EmptyStatement)) {\n                output.indent();\n                stmt.print(output);\n                if (!(i == last && is_toplevel)) {\n                    output.newline();\n                    if (is_toplevel) output.newline();\n                }\n            }\n            if (output.in_directive === true &&\n                stmt instanceof AST_SimpleStatement &&\n                stmt.body instanceof AST_String\n            ) {\n                output.in_directive = false;\n            }\n        });\n        output.in_directive = false;\n    }\n\n    AST_StatementWithBody.DEFMETHOD(\"_do_print_body\", function(output) {\n        force_statement(this.body, output);\n    });\n\n    DEFPRINT(AST_Statement, function(self, output) {\n        self.body.print(output);\n        output.semicolon();\n    });\n    DEFPRINT(AST_Toplevel, function(self, output) {\n        display_body(self.body, true, output, true);\n        output.print(\"\");\n    });\n    DEFPRINT(AST_LabeledStatement, function(self, output) {\n        self.label.print(output);\n        output.colon();\n        self.body.print(output);\n    });\n    DEFPRINT(AST_SimpleStatement, function(self, output) {\n        self.body.print(output);\n        output.semicolon();\n    });\n    function print_braced_empty(self, output) {\n        output.print(\"{\");\n        output.with_indent(output.next_indent(), function() {\n            output.append_comments(self, true);\n        });\n        output.print(\"}\");\n    }\n    function print_braced(self, output, allow_directives) {\n        if (self.body.length > 0) {\n            output.with_block(function() {\n                display_body(self.body, false, output, allow_directives);\n            });\n        } else print_braced_empty(self, output);\n    }\n    DEFPRINT(AST_BlockStatement, function(self, output) {\n        print_braced(self, output);\n    });\n    DEFPRINT(AST_EmptyStatement, function(self, output) {\n        output.semicolon();\n    });\n    DEFPRINT(AST_Do, function(self, output) {\n        output.print(\"do\");\n        output.space();\n        make_block(self.body, output);\n        output.space();\n        output.print(\"while\");\n        output.space();\n        output.with_parens(function() {\n            self.condition.print(output);\n        });\n        output.semicolon();\n    });\n    DEFPRINT(AST_While, function(self, output) {\n        output.print(\"while\");\n        output.space();\n        output.with_parens(function() {\n            self.condition.print(output);\n        });\n        output.space();\n        self._do_print_body(output);\n    });\n    DEFPRINT(AST_For, function(self, output) {\n        output.print(\"for\");\n        output.space();\n        output.with_parens(function() {\n            if (self.init) {\n                if (self.init instanceof AST_Definitions) {\n                    self.init.print(output);\n                } else {\n                    parenthesize_for_noin(self.init, output, true);\n                }\n                output.print(\";\");\n                output.space();\n            } else {\n                output.print(\";\");\n            }\n            if (self.condition) {\n                self.condition.print(output);\n                output.print(\";\");\n                output.space();\n            } else {\n                output.print(\";\");\n            }\n            if (self.step) {\n                self.step.print(output);\n            }\n        });\n        output.space();\n        self._do_print_body(output);\n    });\n    DEFPRINT(AST_ForIn, function(self, output) {\n        output.print(\"for\");\n        if (self.await) {\n            output.space();\n            output.print(\"await\");\n        }\n        output.space();\n        output.with_parens(function() {\n            self.init.print(output);\n            output.space();\n            output.print(self instanceof AST_ForOf ? \"of\" : \"in\");\n            output.space();\n            self.object.print(output);\n        });\n        output.space();\n        self._do_print_body(output);\n    });\n    DEFPRINT(AST_With, function(self, output) {\n        output.print(\"with\");\n        output.space();\n        output.with_parens(function() {\n            self.expression.print(output);\n        });\n        output.space();\n        self._do_print_body(output);\n    });\n\n    /* -----[ functions ]----- */\n    AST_Lambda.DEFMETHOD(\"_do_print\", function(output, nokeyword) {\n        var self = this;\n        if (!nokeyword) {\n            if (self.async) {\n                output.print(\"async\");\n                output.space();\n            }\n            output.print(\"function\");\n            if (self.is_generator) {\n                output.star();\n            }\n            if (self.name) {\n                output.space();\n            }\n        }\n        if (self.name instanceof AST_Symbol) {\n            self.name.print(output);\n        } else if (nokeyword && self.name instanceof AST_Node) {\n            output.with_square(function() {\n                self.name.print(output); // Computed method name\n            });\n        }\n        output.with_parens(function() {\n            self.argnames.forEach(function(arg, i) {\n                if (i) output.comma();\n                arg.print(output);\n            });\n        });\n        output.space();\n        print_braced(self, output, true);\n    });\n    DEFPRINT(AST_Lambda, function(self, output) {\n        self._do_print(output);\n    });\n\n    DEFPRINT(AST_PrefixedTemplateString, function(self, output) {\n        var tag = self.prefix;\n        var parenthesize_tag = tag instanceof AST_Lambda\n            || tag instanceof AST_Binary\n            || tag instanceof AST_Conditional\n            || tag instanceof AST_Sequence\n            || tag instanceof AST_Unary\n            || tag instanceof AST_Dot && tag.expression instanceof AST_Object;\n        if (parenthesize_tag) output.print(\"(\");\n        self.prefix.print(output);\n        if (parenthesize_tag) output.print(\")\");\n        self.template_string.print(output);\n    });\n    DEFPRINT(AST_TemplateString, function(self, output) {\n        var is_tagged = output.parent() instanceof AST_PrefixedTemplateString;\n\n        output.print(\"`\");\n        for (var i = 0; i < self.segments.length; i++) {\n            if (!(self.segments[i] instanceof AST_TemplateSegment)) {\n                output.print(\"${\");\n                self.segments[i].print(output);\n                output.print(\"}\");\n            } else if (is_tagged) {\n                output.print(self.segments[i].raw);\n            } else {\n                output.print_template_string_chars(self.segments[i].value);\n            }\n        }\n        output.print(\"`\");\n    });\n    DEFPRINT(AST_TemplateSegment, function(self, output) {\n        output.print_template_string_chars(self.value);\n    });\n\n    AST_Arrow.DEFMETHOD(\"_do_print\", function(output) {\n        var self = this;\n        var parent = output.parent();\n        var needs_parens = (parent instanceof AST_Binary && !(parent instanceof AST_Assign)) ||\n            parent instanceof AST_Unary ||\n            (parent instanceof AST_Call && self === parent.expression);\n        if (needs_parens) { output.print(\"(\"); }\n        if (self.async) {\n            output.print(\"async\");\n            output.space();\n        }\n        if (self.argnames.length === 1 && self.argnames[0] instanceof AST_Symbol) {\n            self.argnames[0].print(output);\n        } else {\n            output.with_parens(function() {\n                self.argnames.forEach(function(arg, i) {\n                    if (i) output.comma();\n                    arg.print(output);\n                });\n            });\n        }\n        output.space();\n        output.print(\"=>\");\n        output.space();\n        const first_statement = self.body[0];\n        if (\n            self.body.length === 1\n            && first_statement instanceof AST_Return\n        ) {\n            const returned = first_statement.value;\n            if (!returned) {\n                output.print(\"{}\");\n            } else if (left_is_object(returned)) {\n                output.print(\"(\");\n                returned.print(output);\n                output.print(\")\");\n            } else {\n                returned.print(output);\n            }\n        } else {\n            print_braced(self, output);\n        }\n        if (needs_parens) { output.print(\")\"); }\n    });\n\n    /* -----[ exits ]----- */\n    AST_Exit.DEFMETHOD(\"_do_print\", function(output, kind) {\n        output.print(kind);\n        if (this.value) {\n            output.space();\n            const comments = this.value.start.comments_before;\n            if (comments && comments.length && !output.printed_comments.has(comments)) {\n                output.print(\"(\");\n                this.value.print(output);\n                output.print(\")\");\n            } else {\n                this.value.print(output);\n            }\n        }\n        output.semicolon();\n    });\n    DEFPRINT(AST_Return, function(self, output) {\n        self._do_print(output, \"return\");\n    });\n    DEFPRINT(AST_Throw, function(self, output) {\n        self._do_print(output, \"throw\");\n    });\n\n    /* -----[ yield ]----- */\n\n    DEFPRINT(AST_Yield, function(self, output) {\n        var star = self.is_star ? \"*\" : \"\";\n        output.print(\"yield\" + star);\n        if (self.expression) {\n            output.space();\n            self.expression.print(output);\n        }\n    });\n\n    DEFPRINT(AST_Await, function(self, output) {\n        output.print(\"await\");\n        output.space();\n        var e = self.expression;\n        var parens = !(\n               e instanceof AST_Call\n            || e instanceof AST_SymbolRef\n            || e instanceof AST_PropAccess\n            || e instanceof AST_Unary\n            || e instanceof AST_Constant\n            || e instanceof AST_Await\n            || e instanceof AST_Object\n        );\n        if (parens) output.print(\"(\");\n        self.expression.print(output);\n        if (parens) output.print(\")\");\n    });\n\n    /* -----[ loop control ]----- */\n    AST_LoopControl.DEFMETHOD(\"_do_print\", function(output, kind) {\n        output.print(kind);\n        if (this.label) {\n            output.space();\n            this.label.print(output);\n        }\n        output.semicolon();\n    });\n    DEFPRINT(AST_Break, function(self, output) {\n        self._do_print(output, \"break\");\n    });\n    DEFPRINT(AST_Continue, function(self, output) {\n        self._do_print(output, \"continue\");\n    });\n\n    /* -----[ if ]----- */\n    function make_then(self, output) {\n        var b = self.body;\n        if (output.option(\"braces\")\n            || output.option(\"ie8\") && b instanceof AST_Do)\n            return make_block(b, output);\n        // The squeezer replaces \"block\"-s that contain only a single\n        // statement with the statement itself; technically, the AST\n        // is correct, but this can create problems when we output an\n        // IF having an ELSE clause where the THEN clause ends in an\n        // IF *without* an ELSE block (then the outer ELSE would refer\n        // to the inner IF).  This function checks for this case and\n        // adds the block braces if needed.\n        if (!b) return output.force_semicolon();\n        while (true) {\n            if (b instanceof AST_If) {\n                if (!b.alternative) {\n                    make_block(self.body, output);\n                    return;\n                }\n                b = b.alternative;\n            } else if (b instanceof AST_StatementWithBody) {\n                b = b.body;\n            } else break;\n        }\n        force_statement(self.body, output);\n    }\n    DEFPRINT(AST_If, function(self, output) {\n        output.print(\"if\");\n        output.space();\n        output.with_parens(function() {\n            self.condition.print(output);\n        });\n        output.space();\n        if (self.alternative) {\n            make_then(self, output);\n            output.space();\n            output.print(\"else\");\n            output.space();\n            if (self.alternative instanceof AST_If)\n                self.alternative.print(output);\n            else\n                force_statement(self.alternative, output);\n        } else {\n            self._do_print_body(output);\n        }\n    });\n\n    /* -----[ switch ]----- */\n    DEFPRINT(AST_Switch, function(self, output) {\n        output.print(\"switch\");\n        output.space();\n        output.with_parens(function() {\n            self.expression.print(output);\n        });\n        output.space();\n        var last = self.body.length - 1;\n        if (last < 0) print_braced_empty(self, output);\n        else output.with_block(function() {\n            self.body.forEach(function(branch, i) {\n                output.indent(true);\n                branch.print(output);\n                if (i < last && branch.body.length > 0)\n                    output.newline();\n            });\n        });\n    });\n    AST_SwitchBranch.DEFMETHOD(\"_do_print_body\", function(output) {\n        output.newline();\n        this.body.forEach(function(stmt) {\n            output.indent();\n            stmt.print(output);\n            output.newline();\n        });\n    });\n    DEFPRINT(AST_Default, function(self, output) {\n        output.print(\"default:\");\n        self._do_print_body(output);\n    });\n    DEFPRINT(AST_Case, function(self, output) {\n        output.print(\"case\");\n        output.space();\n        self.expression.print(output);\n        output.print(\":\");\n        self._do_print_body(output);\n    });\n\n    /* -----[ exceptions ]----- */\n    DEFPRINT(AST_Try, function(self, output) {\n        output.print(\"try\");\n        output.space();\n        print_braced(self, output);\n        if (self.bcatch) {\n            output.space();\n            self.bcatch.print(output);\n        }\n        if (self.bfinally) {\n            output.space();\n            self.bfinally.print(output);\n        }\n    });\n    DEFPRINT(AST_Catch, function(self, output) {\n        output.print(\"catch\");\n        if (self.argname) {\n            output.space();\n            output.with_parens(function() {\n                self.argname.print(output);\n            });\n        }\n        output.space();\n        print_braced(self, output);\n    });\n    DEFPRINT(AST_Finally, function(self, output) {\n        output.print(\"finally\");\n        output.space();\n        print_braced(self, output);\n    });\n\n    /* -----[ var/const ]----- */\n    AST_Definitions.DEFMETHOD(\"_do_print\", function(output, kind) {\n        output.print(kind);\n        output.space();\n        this.definitions.forEach(function(def, i) {\n            if (i) output.comma();\n            def.print(output);\n        });\n        var p = output.parent();\n        var in_for = p instanceof AST_For || p instanceof AST_ForIn;\n        var output_semicolon = !in_for || p && p.init !== this;\n        if (output_semicolon)\n            output.semicolon();\n    });\n    DEFPRINT(AST_Let, function(self, output) {\n        self._do_print(output, \"let\");\n    });\n    DEFPRINT(AST_Var, function(self, output) {\n        self._do_print(output, \"var\");\n    });\n    DEFPRINT(AST_Const, function(self, output) {\n        self._do_print(output, \"const\");\n    });\n    DEFPRINT(AST_Import, function(self, output) {\n        output.print(\"import\");\n        output.space();\n        if (self.imported_name) {\n            self.imported_name.print(output);\n        }\n        if (self.imported_name && self.imported_names) {\n            output.print(\",\");\n            output.space();\n        }\n        if (self.imported_names) {\n            if (self.imported_names.length === 1 && self.imported_names[0].foreign_name.name === \"*\") {\n                self.imported_names[0].print(output);\n            } else {\n                output.print(\"{\");\n                self.imported_names.forEach(function (name_import, i) {\n                    output.space();\n                    name_import.print(output);\n                    if (i < self.imported_names.length - 1) {\n                        output.print(\",\");\n                    }\n                });\n                output.space();\n                output.print(\"}\");\n            }\n        }\n        if (self.imported_name || self.imported_names) {\n            output.space();\n            output.print(\"from\");\n            output.space();\n        }\n        self.module_name.print(output);\n        if (self.assert_clause) {\n            output.print(\"assert\");\n            self.assert_clause.print(output);\n        }\n        output.semicolon();\n    });\n    DEFPRINT(AST_ImportMeta, function(self, output) {\n        output.print(\"import.meta\");\n    });\n\n    DEFPRINT(AST_NameMapping, function(self, output) {\n        var is_import = output.parent() instanceof AST_Import;\n        var definition = self.name.definition();\n        var names_are_different =\n            (definition && definition.mangled_name || self.name.name) !==\n            self.foreign_name.name;\n        if (names_are_different) {\n            if (is_import) {\n                output.print(self.foreign_name.name);\n            } else {\n                self.name.print(output);\n            }\n            output.space();\n            output.print(\"as\");\n            output.space();\n            if (is_import) {\n                self.name.print(output);\n            } else {\n                output.print(self.foreign_name.name);\n            }\n        } else {\n            self.name.print(output);\n        }\n    });\n\n    DEFPRINT(AST_Export, function(self, output) {\n        output.print(\"export\");\n        output.space();\n        if (self.is_default) {\n            output.print(\"default\");\n            output.space();\n        }\n        if (self.exported_names) {\n            if (self.exported_names.length === 1 && self.exported_names[0].name.name === \"*\") {\n                self.exported_names[0].print(output);\n            } else {\n                output.print(\"{\");\n                self.exported_names.forEach(function(name_export, i) {\n                    output.space();\n                    name_export.print(output);\n                    if (i < self.exported_names.length - 1) {\n                        output.print(\",\");\n                    }\n                });\n                output.space();\n                output.print(\"}\");\n            }\n        } else if (self.exported_value) {\n            self.exported_value.print(output);\n        } else if (self.exported_definition) {\n            self.exported_definition.print(output);\n            if (self.exported_definition instanceof AST_Definitions) return;\n        }\n        if (self.module_name) {\n            output.space();\n            output.print(\"from\");\n            output.space();\n            self.module_name.print(output);\n        }\n        if (self.assert_clause) {\n            output.print(\"assert\");\n            self.assert_clause.print(output);\n        }\n        if (self.exported_value\n                && !(self.exported_value instanceof AST_Defun ||\n                    self.exported_value instanceof AST_Function ||\n                    self.exported_value instanceof AST_Class)\n            || self.module_name\n            || self.exported_names\n        ) {\n            output.semicolon();\n        }\n    });\n\n    function parenthesize_for_noin(node, output, noin) {\n        var parens = false;\n        // need to take some precautions here:\n        //    https://github.com/mishoo/UglifyJS2/issues/60\n        if (noin) {\n            parens = walk(node, node => {\n                // Don't go into scopes -- except arrow functions:\n                // https://github.com/terser/terser/issues/1019#issuecomment-877642607\n                if (node instanceof AST_Scope && !(node instanceof AST_Arrow)) {\n                    return true;\n                }\n                if (node instanceof AST_Binary && node.operator == \"in\") {\n                    return walk_abort;  // makes walk() return true\n                }\n            });\n        }\n        node.print(output, parens);\n    }\n\n    DEFPRINT(AST_VarDef, function(self, output) {\n        self.name.print(output);\n        if (self.value) {\n            output.space();\n            output.print(\"=\");\n            output.space();\n            var p = output.parent(1);\n            var noin = p instanceof AST_For || p instanceof AST_ForIn;\n            parenthesize_for_noin(self.value, output, noin);\n        }\n    });\n\n    /* -----[ other expressions ]----- */\n    DEFPRINT(AST_Call, function(self, output) {\n        self.expression.print(output);\n        if (self instanceof AST_New && self.args.length === 0)\n            return;\n        if (self.expression instanceof AST_Call || self.expression instanceof AST_Lambda) {\n            output.add_mapping(self.start);\n        }\n        if (self.optional) output.print(\"?.\");\n        output.with_parens(function() {\n            self.args.forEach(function(expr, i) {\n                if (i) output.comma();\n                expr.print(output);\n            });\n        });\n    });\n    DEFPRINT(AST_New, function(self, output) {\n        output.print(\"new\");\n        output.space();\n        AST_Call.prototype._codegen(self, output);\n    });\n\n    AST_Sequence.DEFMETHOD(\"_do_print\", function(output) {\n        this.expressions.forEach(function(node, index) {\n            if (index > 0) {\n                output.comma();\n                if (output.should_break()) {\n                    output.newline();\n                    output.indent();\n                }\n            }\n            node.print(output);\n        });\n    });\n    DEFPRINT(AST_Sequence, function(self, output) {\n        self._do_print(output);\n        // var p = output.parent();\n        // if (p instanceof AST_Statement) {\n        //     output.with_indent(output.next_indent(), function(){\n        //         self._do_print(output);\n        //     });\n        // } else {\n        //     self._do_print(output);\n        // }\n    });\n    DEFPRINT(AST_Dot, function(self, output) {\n        var expr = self.expression;\n        expr.print(output);\n        var prop = self.property;\n        var print_computed = ALL_RESERVED_WORDS.has(prop)\n            ? output.option(\"ie8\")\n            : !is_identifier_string(\n                prop,\n                output.option(\"ecma\") >= 2015 || output.option(\"safari10\")\n            );\n\n        if (self.optional) output.print(\"?.\");\n\n        if (print_computed) {\n            output.print(\"[\");\n            output.add_mapping(self.end);\n            output.print_string(prop);\n            output.print(\"]\");\n        } else {\n            if (expr instanceof AST_Number && expr.getValue() >= 0) {\n                if (!/[xa-f.)]/i.test(output.last())) {\n                    output.print(\".\");\n                }\n            }\n            if (!self.optional) output.print(\".\");\n            // the name after dot would be mapped about here.\n            output.add_mapping(self.end);\n            output.print_name(prop);\n        }\n    });\n    DEFPRINT(AST_DotHash, function(self, output) {\n        var expr = self.expression;\n        expr.print(output);\n        var prop = self.property;\n\n        if (self.optional) output.print(\"?\");\n        output.print(\".#\");\n        output.add_mapping(self.end);\n        output.print_name(prop);\n    });\n    DEFPRINT(AST_Sub, function(self, output) {\n        self.expression.print(output);\n        if (self.optional) output.print(\"?.\");\n        output.print(\"[\");\n        self.property.print(output);\n        output.print(\"]\");\n    });\n    DEFPRINT(AST_Chain, function(self, output) {\n        self.expression.print(output);\n    });\n    DEFPRINT(AST_UnaryPrefix, function(self, output) {\n        var op = self.operator;\n        output.print(op);\n        if (/^[a-z]/i.test(op)\n            || (/[+-]$/.test(op)\n                && self.expression instanceof AST_UnaryPrefix\n                && /^[+-]/.test(self.expression.operator))) {\n            output.space();\n        }\n        self.expression.print(output);\n    });\n    DEFPRINT(AST_UnaryPostfix, function(self, output) {\n        self.expression.print(output);\n        output.print(self.operator);\n    });\n    DEFPRINT(AST_Binary, function(self, output) {\n        var op = self.operator;\n        self.left.print(output);\n        if (op[0] == \">\" /* \">>\" \">>>\" \">\" \">=\" */\n            && self.left instanceof AST_UnaryPostfix\n            && self.left.operator == \"--\") {\n            // space is mandatory to avoid outputting -->\n            output.print(\" \");\n        } else {\n            // the space is optional depending on \"beautify\"\n            output.space();\n        }\n        output.print(op);\n        if ((op == \"<\" || op == \"<<\")\n            && self.right instanceof AST_UnaryPrefix\n            && self.right.operator == \"!\"\n            && self.right.expression instanceof AST_UnaryPrefix\n            && self.right.expression.operator == \"--\") {\n            // space is mandatory to avoid outputting <!--\n            output.print(\" \");\n        } else {\n            // the space is optional depending on \"beautify\"\n            output.space();\n        }\n        self.right.print(output);\n    });\n    DEFPRINT(AST_Conditional, function(self, output) {\n        self.condition.print(output);\n        output.space();\n        output.print(\"?\");\n        output.space();\n        self.consequent.print(output);\n        output.space();\n        output.colon();\n        self.alternative.print(output);\n    });\n\n    /* -----[ literals ]----- */\n    DEFPRINT(AST_Array, function(self, output) {\n        output.with_square(function() {\n            var a = self.elements, len = a.length;\n            if (len > 0) output.space();\n            a.forEach(function(exp, i) {\n                if (i) output.comma();\n                exp.print(output);\n                // If the final element is a hole, we need to make sure it\n                // doesn't look like a trailing comma, by inserting an actual\n                // trailing comma.\n                if (i === len - 1 && exp instanceof AST_Hole)\n                  output.comma();\n            });\n            if (len > 0) output.space();\n        });\n    });\n    DEFPRINT(AST_Object, function(self, output) {\n        if (self.properties.length > 0) output.with_block(function() {\n            self.properties.forEach(function(prop, i) {\n                if (i) {\n                    output.print(\",\");\n                    output.newline();\n                }\n                output.indent();\n                prop.print(output);\n            });\n            output.newline();\n        });\n        else print_braced_empty(self, output);\n    });\n    DEFPRINT(AST_Class, function(self, output) {\n        output.print(\"class\");\n        output.space();\n        if (self.name) {\n            self.name.print(output);\n            output.space();\n        }\n        if (self.extends) {\n            var parens = (\n                   !(self.extends instanceof AST_SymbolRef)\n                && !(self.extends instanceof AST_PropAccess)\n                && !(self.extends instanceof AST_ClassExpression)\n                && !(self.extends instanceof AST_Function)\n            );\n            output.print(\"extends\");\n            if (parens) {\n                output.print(\"(\");\n            } else {\n                output.space();\n            }\n            self.extends.print(output);\n            if (parens) {\n                output.print(\")\");\n            } else {\n                output.space();\n            }\n        }\n        if (self.properties.length > 0) output.with_block(function() {\n            self.properties.forEach(function(prop, i) {\n                if (i) {\n                    output.newline();\n                }\n                output.indent();\n                prop.print(output);\n            });\n            output.newline();\n        });\n        else output.print(\"{}\");\n    });\n    DEFPRINT(AST_NewTarget, function(self, output) {\n        output.print(\"new.target\");\n    });\n\n    function print_property_name(key, quote, output) {\n        if (output.option(\"quote_keys\")) {\n            return output.print_string(key);\n        }\n        if (\"\" + +key == key && key >= 0) {\n            if (output.option(\"keep_numbers\")) {\n                return output.print(key);\n            }\n            return output.print(make_num(key));\n        }\n        var print_string = ALL_RESERVED_WORDS.has(key)\n            ? output.option(\"ie8\")\n            : (\n                output.option(\"ecma\") < 2015 || output.option(\"safari10\")\n                    ? !is_basic_identifier_string(key)\n                    : !is_identifier_string(key, true)\n            );\n        if (print_string || (quote && output.option(\"keep_quoted_props\"))) {\n            return output.print_string(key, quote);\n        }\n        return output.print_name(key);\n    }\n\n    DEFPRINT(AST_ObjectKeyVal, function(self, output) {\n        function get_name(self) {\n            var def = self.definition();\n            return def ? def.mangled_name || def.name : self.name;\n        }\n\n        var allowShortHand = output.option(\"shorthand\");\n        if (allowShortHand &&\n            self.value instanceof AST_Symbol &&\n            is_identifier_string(\n                self.key,\n                output.option(\"ecma\") >= 2015 || output.option(\"safari10\")\n            ) &&\n            get_name(self.value) === self.key &&\n            !ALL_RESERVED_WORDS.has(self.key)\n        ) {\n            print_property_name(self.key, self.quote, output);\n\n        } else if (allowShortHand &&\n            self.value instanceof AST_DefaultAssign &&\n            self.value.left instanceof AST_Symbol &&\n            is_identifier_string(\n                self.key,\n                output.option(\"ecma\") >= 2015 || output.option(\"safari10\")\n            ) &&\n            get_name(self.value.left) === self.key\n        ) {\n            print_property_name(self.key, self.quote, output);\n            output.space();\n            output.print(\"=\");\n            output.space();\n            self.value.right.print(output);\n        } else {\n            if (!(self.key instanceof AST_Node)) {\n                print_property_name(self.key, self.quote, output);\n            } else {\n                output.with_square(function() {\n                    self.key.print(output);\n                });\n            }\n            output.colon();\n            self.value.print(output);\n        }\n    });\n    DEFPRINT(AST_ClassPrivateProperty, (self, output) => {\n        if (self.static) {\n            output.print(\"static\");\n            output.space();\n        }\n\n        output.print(\"#\");\n        \n        print_property_name(self.key.name, self.quote, output);\n\n        if (self.value) {\n            output.print(\"=\");\n            self.value.print(output);\n        }\n\n        output.semicolon();\n    });\n    DEFPRINT(AST_ClassProperty, (self, output) => {\n        if (self.static) {\n            output.print(\"static\");\n            output.space();\n        }\n\n        if (self.key instanceof AST_SymbolClassProperty) {\n            print_property_name(self.key.name, self.quote, output);\n        } else {\n            output.print(\"[\");\n            self.key.print(output);\n            output.print(\"]\");\n        }\n\n        if (self.value) {\n            output.print(\"=\");\n            self.value.print(output);\n        }\n\n        output.semicolon();\n    });\n    AST_ObjectProperty.DEFMETHOD(\"_print_getter_setter\", function(type, is_private, output) {\n        var self = this;\n        if (self.static) {\n            output.print(\"static\");\n            output.space();\n        }\n        if (type) {\n            output.print(type);\n            output.space();\n        }\n        if (self.key instanceof AST_SymbolMethod) {\n            if (is_private) output.print(\"#\");\n            print_property_name(self.key.name, self.quote, output);\n        } else {\n            output.with_square(function() {\n                self.key.print(output);\n            });\n        }\n        self.value._do_print(output, true);\n    });\n    DEFPRINT(AST_ObjectSetter, function(self, output) {\n        self._print_getter_setter(\"set\", false, output);\n    });\n    DEFPRINT(AST_ObjectGetter, function(self, output) {\n        self._print_getter_setter(\"get\", false, output);\n    });\n    DEFPRINT(AST_PrivateSetter, function(self, output) {\n        self._print_getter_setter(\"set\", true, output);\n    });\n    DEFPRINT(AST_PrivateGetter, function(self, output) {\n        self._print_getter_setter(\"get\", true, output);\n    });\n    DEFPRINT(AST_PrivateMethod, function(self, output) {\n        var type;\n        if (self.is_generator && self.async) {\n            type = \"async*\";\n        } else if (self.is_generator) {\n            type = \"*\";\n        } else if (self.async) {\n            type = \"async\";\n        }\n        self._print_getter_setter(type, true, output);\n    });\n    DEFPRINT(AST_ConciseMethod, function(self, output) {\n        var type;\n        if (self.is_generator && self.async) {\n            type = \"async*\";\n        } else if (self.is_generator) {\n            type = \"*\";\n        } else if (self.async) {\n            type = \"async\";\n        }\n        self._print_getter_setter(type, false, output);\n    });\n    AST_Symbol.DEFMETHOD(\"_do_print\", function(output) {\n        var def = this.definition();\n        output.print_name(def ? def.mangled_name || def.name : this.name);\n    });\n    DEFPRINT(AST_Symbol, function (self, output) {\n        self._do_print(output);\n    });\n    DEFPRINT(AST_Hole, noop);\n    DEFPRINT(AST_This, function(self, output) {\n        output.print(\"this\");\n    });\n    DEFPRINT(AST_Super, function(self, output) {\n        output.print(\"super\");\n    });\n    DEFPRINT(AST_Constant, function(self, output) {\n        output.print(self.getValue());\n    });\n    DEFPRINT(AST_String, function(self, output) {\n        output.print_string(self.getValue(), self.quote, output.in_directive);\n    });\n    DEFPRINT(AST_Number, function(self, output) {\n        if ((output.option(\"keep_numbers\") || output.use_asm) && self.raw) {\n            output.print(self.raw);\n        } else {\n            output.print(make_num(self.getValue()));\n        }\n    });\n    DEFPRINT(AST_BigInt, function(self, output) {\n        output.print(self.getValue() + \"n\");\n    });\n\n    const r_slash_script = /(<\\s*\\/\\s*script)/i;\n    const slash_script_replace = (_, $1) => $1.replace(\"/\", \"\\\\/\");\n    DEFPRINT(AST_RegExp, function(self, output) {\n        let { source, flags } = self.getValue();\n        source = regexp_source_fix(source);\n        flags = flags ? sort_regexp_flags(flags) : \"\";\n        source = source.replace(r_slash_script, slash_script_replace);\n\n        output.print(output.to_utf8(`/${source}/${flags}`));\n\n        const parent = output.parent();\n        if (\n            parent instanceof AST_Binary\n            && /^\\w/.test(parent.operator)\n            && parent.left === self\n        ) {\n            output.print(\" \");\n        }\n    });\n\n    function force_statement(stat, output) {\n        if (output.option(\"braces\")) {\n            make_block(stat, output);\n        } else {\n            if (!stat || stat instanceof AST_EmptyStatement)\n                output.force_semicolon();\n            else\n                stat.print(output);\n        }\n    }\n\n    function best_of(a) {\n        var best = a[0], len = best.length;\n        for (var i = 1; i < a.length; ++i) {\n            if (a[i].length < len) {\n                best = a[i];\n                len = best.length;\n            }\n        }\n        return best;\n    }\n\n    function make_num(num) {\n        var str = num.toString(10).replace(/^0\\./, \".\").replace(\"e+\", \"e\");\n        var candidates = [ str ];\n        if (Math.floor(num) === num) {\n            if (num < 0) {\n                candidates.push(\"-0x\" + (-num).toString(16).toLowerCase());\n            } else {\n                candidates.push(\"0x\" + num.toString(16).toLowerCase());\n            }\n        }\n        var match, len, digits;\n        if (match = /^\\.0+/.exec(str)) {\n            len = match[0].length;\n            digits = str.slice(len);\n            candidates.push(digits + \"e-\" + (digits.length + len - 1));\n        } else if (match = /0+$/.exec(str)) {\n            len = match[0].length;\n            candidates.push(str.slice(0, -len) + \"e\" + len);\n        } else if (match = /^(\\d)\\.(\\d+)e(-?\\d+)$/.exec(str)) {\n            candidates.push(match[1] + match[2] + \"e\" + (match[3] - match[2].length));\n        }\n        return best_of(candidates);\n    }\n\n    function make_block(stmt, output) {\n        if (!stmt || stmt instanceof AST_EmptyStatement)\n            output.print(\"{}\");\n        else if (stmt instanceof AST_BlockStatement)\n            stmt.print(output);\n        else output.with_block(function() {\n            output.indent();\n            stmt.print(output);\n            output.newline();\n        });\n    }\n\n    /* -----[ source map generators ]----- */\n\n    function DEFMAP(nodetype, generator) {\n        nodetype.forEach(function(nodetype) {\n            nodetype.DEFMETHOD(\"add_source_map\", generator);\n        });\n    }\n\n    DEFMAP([\n        // We could easily add info for ALL nodes, but it seems to me that\n        // would be quite wasteful, hence this noop in the base class.\n        AST_Node,\n        // since the label symbol will mark it\n        AST_LabeledStatement,\n        AST_Toplevel,\n    ], noop);\n\n    // XXX: I'm not exactly sure if we need it for all of these nodes,\n    // or if we should add even more.\n    DEFMAP([\n        AST_Array,\n        AST_BlockStatement,\n        AST_Catch,\n        AST_Class,\n        AST_Constant,\n        AST_Debugger,\n        AST_Definitions,\n        AST_Directive,\n        AST_Finally,\n        AST_Jump,\n        AST_Lambda,\n        AST_New,\n        AST_Object,\n        AST_StatementWithBody,\n        AST_Symbol,\n        AST_Switch,\n        AST_SwitchBranch,\n        AST_TemplateString,\n        AST_TemplateSegment,\n        AST_Try,\n    ], function(output) {\n        output.add_mapping(this.start);\n    });\n\n    DEFMAP([\n        AST_ObjectGetter,\n        AST_ObjectSetter,\n        AST_PrivateGetter,\n        AST_PrivateSetter,\n    ], function(output) {\n        output.add_mapping(this.key.end, this.key.name);\n    });\n\n    DEFMAP([ AST_ObjectProperty ], function(output) {\n        output.add_mapping(this.start, this.key);\n    });\n})();\n\nexport {\n    OutputStream,\n};\n","import {\n    AST_Array,\n    AST_Atom,\n    AST_Await,\n    AST_BigInt,\n    AST_Binary,\n    AST_Block,\n    AST_Call,\n    AST_Catch,\n    AST_Chain,\n    AST_Class,\n    AST_ClassProperty,\n    AST_ConciseMethod,\n    AST_Conditional,\n    AST_Debugger,\n    AST_Definitions,\n    AST_Destructuring,\n    AST_Directive,\n    AST_Do,\n    AST_Dot,\n    AST_DotHash,\n    AST_EmptyStatement,\n    AST_Expansion,\n    AST_Export,\n    AST_Finally,\n    AST_For,\n    AST_ForIn,\n    AST_ForOf,\n    AST_If,\n    AST_Import,\n    AST_ImportMeta,\n    AST_Jump,\n    AST_LabeledStatement,\n    AST_Lambda,\n    AST_LoopControl,\n    AST_NameMapping,\n    AST_NewTarget,\n    AST_Node,\n    AST_Number,\n    AST_Object,\n    AST_ObjectGetter,\n    AST_ObjectKeyVal,\n    AST_ObjectProperty,\n    AST_ObjectSetter,\n    AST_PrefixedTemplateString,\n    AST_PropAccess,\n    AST_RegExp,\n    AST_Sequence,\n    AST_SimpleStatement,\n    AST_String,\n    AST_Super,\n    AST_Switch,\n    AST_SwitchBranch,\n    AST_Symbol,\n    AST_TemplateSegment,\n    AST_TemplateString,\n    AST_This,\n    AST_Toplevel,\n    AST_Try,\n    AST_Unary,\n    AST_VarDef,\n    AST_While,\n    AST_With,\n    AST_Yield\n} from \"./ast.js\";\n\nconst shallow_cmp = (node1, node2) => {\n    return (\n        node1 === null && node2 === null\n        || node1.TYPE === node2.TYPE && node1.shallow_cmp(node2)\n    );\n};\n\nexport const equivalent_to = (tree1, tree2) => {\n    if (!shallow_cmp(tree1, tree2)) return false;\n    const walk_1_state = [tree1];\n    const walk_2_state = [tree2];\n\n    const walk_1_push = walk_1_state.push.bind(walk_1_state);\n    const walk_2_push = walk_2_state.push.bind(walk_2_state);\n\n    while (walk_1_state.length && walk_2_state.length) {\n        const node_1 = walk_1_state.pop();\n        const node_2 = walk_2_state.pop();\n\n        if (!shallow_cmp(node_1, node_2)) return false;\n\n        node_1._children_backwards(walk_1_push);\n        node_2._children_backwards(walk_2_push);\n\n        if (walk_1_state.length !== walk_2_state.length) {\n            // Different number of children\n            return false;\n        }\n    }\n\n    return walk_1_state.length == 0 && walk_2_state.length == 0;\n};\n\n// Creates a shallow compare function\nconst mkshallow = (props) => {\n    const comparisons = Object\n        .keys(props)\n        .map(key => {\n            if (props[key] === \"eq\") {\n                return `this.${key} === other.${key}`;\n            } else if (props[key] === \"exist\") {\n                return `(this.${key} == null ? other.${key} == null : this.${key} === other.${key})`;\n            } else {\n                throw new Error(`mkshallow: Unexpected instruction: ${props[key]}`);\n            }\n        })\n        .join(\" && \");\n\n    return new Function(\"other\", \"return \" + comparisons);\n};\n\nconst pass_through = () => true;\n\nAST_Node.prototype.shallow_cmp = function () {\n    throw new Error(\"did not find a shallow_cmp function for \" + this.constructor.name);\n};\n\nAST_Debugger.prototype.shallow_cmp = pass_through;\n\nAST_Directive.prototype.shallow_cmp = mkshallow({ value: \"eq\" });\n\nAST_SimpleStatement.prototype.shallow_cmp = pass_through;\n\nAST_Block.prototype.shallow_cmp = pass_through;\n\nAST_EmptyStatement.prototype.shallow_cmp = pass_through;\n\nAST_LabeledStatement.prototype.shallow_cmp = mkshallow({ \"label.name\": \"eq\" });\n\nAST_Do.prototype.shallow_cmp = pass_through;\n\nAST_While.prototype.shallow_cmp = pass_through;\n\nAST_For.prototype.shallow_cmp = mkshallow({\n    init: \"exist\",\n    condition: \"exist\",\n    step: \"exist\"\n});\n\nAST_ForIn.prototype.shallow_cmp = pass_through;\n\nAST_ForOf.prototype.shallow_cmp = pass_through;\n\nAST_With.prototype.shallow_cmp = pass_through;\n\nAST_Toplevel.prototype.shallow_cmp = pass_through;\n\nAST_Expansion.prototype.shallow_cmp = pass_through;\n\nAST_Lambda.prototype.shallow_cmp = mkshallow({\n    is_generator: \"eq\",\n    async: \"eq\"\n});\n\nAST_Destructuring.prototype.shallow_cmp = mkshallow({\n    is_array: \"eq\"\n});\n\nAST_PrefixedTemplateString.prototype.shallow_cmp = pass_through;\n\nAST_TemplateString.prototype.shallow_cmp = pass_through;\n\nAST_TemplateSegment.prototype.shallow_cmp = mkshallow({\n    \"value\": \"eq\"\n});\n\nAST_Jump.prototype.shallow_cmp = pass_through;\n\nAST_LoopControl.prototype.shallow_cmp = pass_through;\n\nAST_Await.prototype.shallow_cmp = pass_through;\n\nAST_Yield.prototype.shallow_cmp = mkshallow({\n    is_star: \"eq\"\n});\n\nAST_If.prototype.shallow_cmp = mkshallow({\n    alternative: \"exist\"\n});\n\nAST_Switch.prototype.shallow_cmp = pass_through;\n\nAST_SwitchBranch.prototype.shallow_cmp = pass_through;\n\nAST_Try.prototype.shallow_cmp = mkshallow({\n    bcatch: \"exist\",\n    bfinally: \"exist\"\n});\n\nAST_Catch.prototype.shallow_cmp = mkshallow({\n    argname: \"exist\"\n});\n\nAST_Finally.prototype.shallow_cmp = pass_through;\n\nAST_Definitions.prototype.shallow_cmp = pass_through;\n\nAST_VarDef.prototype.shallow_cmp = mkshallow({\n    value: \"exist\"\n});\n\nAST_NameMapping.prototype.shallow_cmp = pass_through;\n\nAST_Import.prototype.shallow_cmp = mkshallow({\n    imported_name: \"exist\",\n    imported_names: \"exist\"\n});\n\nAST_ImportMeta.prototype.shallow_cmp = pass_through;\n\nAST_Export.prototype.shallow_cmp = mkshallow({\n    exported_definition: \"exist\",\n    exported_value: \"exist\",\n    exported_names: \"exist\",\n    module_name: \"eq\",\n    is_default: \"eq\",\n});\n\nAST_Call.prototype.shallow_cmp = pass_through;\n\nAST_Sequence.prototype.shallow_cmp = pass_through;\n\nAST_PropAccess.prototype.shallow_cmp = pass_through;\n\nAST_Chain.prototype.shallow_cmp = pass_through;\n\nAST_Dot.prototype.shallow_cmp = mkshallow({\n    property: \"eq\"\n});\n\nAST_DotHash.prototype.shallow_cmp = mkshallow({\n    property: \"eq\"\n});\n\nAST_Unary.prototype.shallow_cmp = mkshallow({\n    operator: \"eq\"\n});\n\nAST_Binary.prototype.shallow_cmp = mkshallow({\n    operator: \"eq\"\n});\n\nAST_Conditional.prototype.shallow_cmp = pass_through;\n\nAST_Array.prototype.shallow_cmp = pass_through;\n\nAST_Object.prototype.shallow_cmp = pass_through;\n\nAST_ObjectProperty.prototype.shallow_cmp = pass_through;\n\nAST_ObjectKeyVal.prototype.shallow_cmp = mkshallow({\n    key: \"eq\"\n});\n\nAST_ObjectSetter.prototype.shallow_cmp = mkshallow({\n    static: \"eq\"\n});\n\nAST_ObjectGetter.prototype.shallow_cmp = mkshallow({\n    static: \"eq\"\n});\n\nAST_ConciseMethod.prototype.shallow_cmp = mkshallow({\n    static: \"eq\",\n    is_generator: \"eq\",\n    async: \"eq\",\n});\n\nAST_Class.prototype.shallow_cmp = mkshallow({\n    name: \"exist\",\n    extends: \"exist\",\n});\n\nAST_ClassProperty.prototype.shallow_cmp = mkshallow({\n    static: \"eq\"\n});\n\nAST_Symbol.prototype.shallow_cmp = mkshallow({\n    name: \"eq\"\n});\n\nAST_NewTarget.prototype.shallow_cmp = pass_through;\n\nAST_This.prototype.shallow_cmp = pass_through;\n\nAST_Super.prototype.shallow_cmp = pass_through;\n\nAST_String.prototype.shallow_cmp = mkshallow({\n    value: \"eq\"\n});\n\nAST_Number.prototype.shallow_cmp = mkshallow({\n    value: \"eq\"\n});\n\nAST_BigInt.prototype.shallow_cmp = mkshallow({\n    value: \"eq\"\n});\n\nAST_RegExp.prototype.shallow_cmp = function (other) {\n    return (\n        this.value.flags === other.value.flags\n        && this.value.source === other.value.source\n    );\n};\n\nAST_Atom.prototype.shallow_cmp = pass_through;\n","/***********************************************************************\n\n  A JavaScript tokenizer / parser / beautifier / compressor.\n  https://github.com/mishoo/UglifyJS2\n\n  -------------------------------- (C) ---------------------------------\n\n                           Author: Mihai Bazon\n                         <mihai.bazon@gmail.com>\n                       http://mihai.bazon.net/blog\n\n  Distributed under the BSD license:\n\n    Copyright 2012 (c) Mihai Bazon <mihai.bazon@gmail.com>\n\n    Redistribution and use in source and binary forms, with or without\n    modification, are permitted provided that the following conditions\n    are met:\n\n        * Redistributions of source code must retain the above\n          copyright notice, this list of conditions and the following\n          disclaimer.\n\n        * Redistributions in binary form must reproduce the above\n          copyright notice, this list of conditions and the following\n          disclaimer in the documentation and/or other materials\n          provided with the distribution.\n\n    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER “AS IS” AND ANY\n    EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n    PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER BE\n    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,\n    OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n    PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n    PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n    THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR\n    TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF\n    THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n    SUCH DAMAGE.\n\n ***********************************************************************/\n\n\"use strict\";\n\nimport {\n    defaults,\n    keep_name,\n    mergeSort,\n    push_uniq,\n    make_node,\n    return_false,\n    return_this,\n    return_true,\n    string_template,\n} from \"./utils/index.js\";\nimport {\n    AST_Arrow,\n    AST_Block,\n    AST_Call,\n    AST_Catch,\n    AST_Class,\n    AST_Conditional,\n    AST_DefClass,\n    AST_Defun,\n    AST_Destructuring,\n    AST_Dot,\n    AST_DotHash,\n    AST_Export,\n    AST_For,\n    AST_ForIn,\n    AST_Function,\n    AST_Import,\n    AST_IterationStatement,\n    AST_Label,\n    AST_LabeledStatement,\n    AST_LabelRef,\n    AST_Lambda,\n    AST_LoopControl,\n    AST_NameMapping,\n    AST_Node,\n    AST_Scope,\n    AST_Sequence,\n    AST_String,\n    AST_Sub,\n    AST_Switch,\n    AST_SwitchBranch,\n    AST_Symbol,\n    AST_SymbolBlockDeclaration,\n    AST_SymbolCatch,\n    AST_SymbolClass,\n    AST_SymbolConst,\n    AST_SymbolDefClass,\n    AST_SymbolDefun,\n    AST_SymbolExport,\n    AST_SymbolFunarg,\n    AST_SymbolImport,\n    AST_SymbolLambda,\n    AST_SymbolLet,\n    AST_SymbolMethod,\n    AST_SymbolRef,\n    AST_SymbolVar,\n    AST_Toplevel,\n    AST_VarDef,\n    AST_With,\n    TreeWalker,\n    walk\n} from \"./ast.js\";\nimport {\n    ALL_RESERVED_WORDS,\n    js_error,\n} from \"./parse.js\";\n\nconst MASK_EXPORT_DONT_MANGLE = 1 << 0;\nconst MASK_EXPORT_WANT_MANGLE = 1 << 1;\n\nlet function_defs = null;\nlet unmangleable_names = null;\n\nclass SymbolDef {\n    constructor(scope, orig, init) {\n        this.name = orig.name;\n        this.orig = [ orig ];\n        this.init = init;\n        this.eliminated = 0;\n        this.assignments = 0;\n        this.scope = scope;\n        this.replaced = 0;\n        this.global = false;\n        this.export = 0;\n        this.mangled_name = null;\n        this.undeclared = false;\n        this.id = SymbolDef.next_id++;\n        this.chained = false;\n        this.direct_access = false;\n        this.escaped = 0;\n        this.recursive_refs = 0;\n        this.references = [];\n        this.should_replace = undefined;\n        this.single_use = false;\n        this.fixed = false;\n        Object.seal(this);\n    }\n    fixed_value() {\n        if (!this.fixed || this.fixed instanceof AST_Node) return this.fixed;\n        return this.fixed();\n    }\n    unmangleable(options) {\n        if (!options) options = {};\n\n        if (\n            function_defs &&\n            function_defs.has(this.id) &&\n            keep_name(options.keep_fnames, this.orig[0].name)\n        ) return true;\n\n        return this.global && !options.toplevel\n            || (this.export & MASK_EXPORT_DONT_MANGLE)\n            || this.undeclared\n            || !options.eval && this.scope.pinned()\n            || (this.orig[0] instanceof AST_SymbolLambda\n                  || this.orig[0] instanceof AST_SymbolDefun) && keep_name(options.keep_fnames, this.orig[0].name)\n            || this.orig[0] instanceof AST_SymbolMethod\n            || (this.orig[0] instanceof AST_SymbolClass\n                  || this.orig[0] instanceof AST_SymbolDefClass) && keep_name(options.keep_classnames, this.orig[0].name);\n    }\n    mangle(options) {\n        const cache = options.cache && options.cache.props;\n        if (this.global && cache && cache.has(this.name)) {\n            this.mangled_name = cache.get(this.name);\n        } else if (!this.mangled_name && !this.unmangleable(options)) {\n            var s = this.scope;\n            var sym = this.orig[0];\n            if (options.ie8 && sym instanceof AST_SymbolLambda)\n                s = s.parent_scope;\n            const redefinition = redefined_catch_def(this);\n            this.mangled_name = redefinition\n                ? redefinition.mangled_name || redefinition.name\n                : s.next_mangled(options, this);\n            if (this.global && cache) {\n                cache.set(this.name, this.mangled_name);\n            }\n        }\n    }\n}\n\nSymbolDef.next_id = 1;\n\nfunction redefined_catch_def(def) {\n    if (def.orig[0] instanceof AST_SymbolCatch\n        && def.scope.is_block_scope()\n    ) {\n        return def.scope.get_defun_scope().variables.get(def.name);\n    }\n}\n\nAST_Scope.DEFMETHOD(\"figure_out_scope\", function(options, { parent_scope = null, toplevel = this } = {}) {\n    options = defaults(options, {\n        cache: null,\n        ie8: false,\n        safari10: false,\n    });\n\n    if (!(toplevel instanceof AST_Toplevel)) {\n        throw new Error(\"Invalid toplevel scope\");\n    }\n\n    // pass 1: setup scope chaining and handle definitions\n    var scope = this.parent_scope = parent_scope;\n    var labels = new Map();\n    var defun = null;\n    var in_destructuring = null;\n    var for_scopes = [];\n    var tw = new TreeWalker((node, descend) => {\n        if (node.is_block_scope()) {\n            const save_scope = scope;\n            node.block_scope = scope = new AST_Scope(node);\n            scope._block_scope = true;\n            // AST_Try in the AST sadly *is* (not has) a body itself,\n            // and its catch and finally branches are children of the AST_Try itself\n            const parent_scope = node instanceof AST_Catch\n                ? save_scope.parent_scope\n                : save_scope;\n            scope.init_scope_vars(parent_scope);\n            scope.uses_with = save_scope.uses_with;\n            scope.uses_eval = save_scope.uses_eval;\n            if (options.safari10) {\n                if (node instanceof AST_For || node instanceof AST_ForIn) {\n                    for_scopes.push(scope);\n                }\n            }\n\n            if (node instanceof AST_Switch) {\n                // XXX: HACK! Ensure the switch expression gets the correct scope (the parent scope) and the body gets the contained scope\n                // AST_Switch has a scope within the body, but it itself \"is a block scope\"\n                // This means the switched expression has to belong to the outer scope\n                // while the body inside belongs to the switch itself.\n                // This is pretty nasty and warrants an AST change similar to AST_Try (read above)\n                const the_block_scope = scope;\n                scope = save_scope;\n                node.expression.walk(tw);\n                scope = the_block_scope;\n                for (let i = 0; i < node.body.length; i++) {\n                    node.body[i].walk(tw);\n                }\n            } else {\n                descend();\n            }\n            scope = save_scope;\n            return true;\n        }\n        if (node instanceof AST_Destructuring) {\n            const save_destructuring = in_destructuring;\n            in_destructuring = node;\n            descend();\n            in_destructuring = save_destructuring;\n            return true;\n        }\n        if (node instanceof AST_Scope) {\n            node.init_scope_vars(scope);\n            var save_scope = scope;\n            var save_defun = defun;\n            var save_labels = labels;\n            defun = scope = node;\n            labels = new Map();\n            descend();\n            scope = save_scope;\n            defun = save_defun;\n            labels = save_labels;\n            return true;        // don't descend again in TreeWalker\n        }\n        if (node instanceof AST_LabeledStatement) {\n            var l = node.label;\n            if (labels.has(l.name)) {\n                throw new Error(string_template(\"Label {name} defined twice\", l));\n            }\n            labels.set(l.name, l);\n            descend();\n            labels.delete(l.name);\n            return true;        // no descend again\n        }\n        if (node instanceof AST_With) {\n            for (var s = scope; s; s = s.parent_scope)\n                s.uses_with = true;\n            return;\n        }\n        if (node instanceof AST_Symbol) {\n            node.scope = scope;\n        }\n        if (node instanceof AST_Label) {\n            node.thedef = node;\n            node.references = [];\n        }\n        if (node instanceof AST_SymbolLambda) {\n            defun.def_function(node, node.name == \"arguments\" ? undefined : defun);\n        } else if (node instanceof AST_SymbolDefun) {\n            // Careful here, the scope where this should be defined is\n            // the parent scope.  The reason is that we enter a new\n            // scope when we encounter the AST_Defun node (which is\n            // instanceof AST_Scope) but we get to the symbol a bit\n            // later.\n            const closest_scope = defun.parent_scope;\n\n            // In strict mode, function definitions are block-scoped\n            node.scope = tw.directives[\"use strict\"]\n                ? closest_scope\n                : closest_scope.get_defun_scope();\n\n            mark_export(node.scope.def_function(node, defun), 1);\n        } else if (node instanceof AST_SymbolClass) {\n            mark_export(defun.def_variable(node, defun), 1);\n        } else if (node instanceof AST_SymbolImport) {\n            scope.def_variable(node);\n        } else if (node instanceof AST_SymbolDefClass) {\n            // This deals with the name of the class being available\n            // inside the class.\n            mark_export((node.scope = defun.parent_scope).def_function(node, defun), 1);\n        } else if (\n            node instanceof AST_SymbolVar\n            || node instanceof AST_SymbolLet\n            || node instanceof AST_SymbolConst\n            || node instanceof AST_SymbolCatch\n        ) {\n            var def;\n            if (node instanceof AST_SymbolBlockDeclaration) {\n                def = scope.def_variable(node, null);\n            } else {\n                def = defun.def_variable(node, node.TYPE == \"SymbolVar\" ? null : undefined);\n            }\n            if (!def.orig.every((sym) => {\n                if (sym === node) return true;\n                if (node instanceof AST_SymbolBlockDeclaration) {\n                    return sym instanceof AST_SymbolLambda;\n                }\n                return !(sym instanceof AST_SymbolLet || sym instanceof AST_SymbolConst);\n            })) {\n                js_error(\n                    `\"${node.name}\" is redeclared`,\n                    node.start.file,\n                    node.start.line,\n                    node.start.col,\n                    node.start.pos\n                );\n            }\n            if (!(node instanceof AST_SymbolFunarg)) mark_export(def, 2);\n            if (defun !== scope) {\n                node.mark_enclosed();\n                var def = scope.find_variable(node);\n                if (node.thedef !== def) {\n                    node.thedef = def;\n                    node.reference();\n                }\n            }\n        } else if (node instanceof AST_LabelRef) {\n            var sym = labels.get(node.name);\n            if (!sym) throw new Error(string_template(\"Undefined label {name} [{line},{col}]\", {\n                name: node.name,\n                line: node.start.line,\n                col: node.start.col\n            }));\n            node.thedef = sym;\n        }\n        if (!(scope instanceof AST_Toplevel) && (node instanceof AST_Export || node instanceof AST_Import)) {\n            js_error(\n                `\"${node.TYPE}\" statement may only appear at the top level`,\n                node.start.file,\n                node.start.line,\n                node.start.col,\n                node.start.pos\n            );\n        }\n    });\n    this.walk(tw);\n\n    function mark_export(def, level) {\n        if (in_destructuring) {\n            var i = 0;\n            do {\n                level++;\n            } while (tw.parent(i++) !== in_destructuring);\n        }\n        var node = tw.parent(level);\n        if (def.export = node instanceof AST_Export ? MASK_EXPORT_DONT_MANGLE : 0) {\n            var exported = node.exported_definition;\n            if ((exported instanceof AST_Defun || exported instanceof AST_DefClass) && node.is_default) {\n                def.export = MASK_EXPORT_WANT_MANGLE;\n            }\n        }\n    }\n\n    // pass 2: find back references and eval\n    const is_toplevel = this instanceof AST_Toplevel;\n    if (is_toplevel) {\n        this.globals = new Map();\n    }\n\n    var tw = new TreeWalker(node => {\n        if (node instanceof AST_LoopControl && node.label) {\n            node.label.thedef.references.push(node);\n            return true;\n        }\n        if (node instanceof AST_SymbolRef) {\n            var name = node.name;\n            if (name == \"eval\" && tw.parent() instanceof AST_Call) {\n                for (var s = node.scope; s && !s.uses_eval; s = s.parent_scope) {\n                    s.uses_eval = true;\n                }\n            }\n            var sym;\n            if (tw.parent() instanceof AST_NameMapping && tw.parent(1).module_name\n                || !(sym = node.scope.find_variable(name))) {\n\n                sym = toplevel.def_global(node);\n                if (node instanceof AST_SymbolExport) sym.export = MASK_EXPORT_DONT_MANGLE;\n            } else if (sym.scope instanceof AST_Lambda && name == \"arguments\") {\n                sym.scope.uses_arguments = true;\n            }\n            node.thedef = sym;\n            node.reference();\n            if (node.scope.is_block_scope()\n                && !(sym.orig[0] instanceof AST_SymbolBlockDeclaration)) {\n                node.scope = node.scope.get_defun_scope();\n            }\n            return true;\n        }\n        // ensure mangling works if catch reuses a scope variable\n        var def;\n        if (node instanceof AST_SymbolCatch && (def = redefined_catch_def(node.definition()))) {\n            var s = node.scope;\n            while (s) {\n                push_uniq(s.enclosed, def);\n                if (s === def.scope) break;\n                s = s.parent_scope;\n            }\n        }\n    });\n    this.walk(tw);\n\n    // pass 3: work around IE8 and Safari catch scope bugs\n    if (options.ie8 || options.safari10) {\n        walk(this, node => {\n            if (node instanceof AST_SymbolCatch) {\n                var name = node.name;\n                var refs = node.thedef.references;\n                var scope = node.scope.get_defun_scope();\n                var def = scope.find_variable(name)\n                    || toplevel.globals.get(name)\n                    || scope.def_variable(node);\n                refs.forEach(function(ref) {\n                    ref.thedef = def;\n                    ref.reference();\n                });\n                node.thedef = def;\n                node.reference();\n                return true;\n            }\n        });\n    }\n\n    // pass 4: add symbol definitions to loop scopes\n    // Safari/Webkit bug workaround - loop init let variable shadowing argument.\n    // https://github.com/mishoo/UglifyJS2/issues/1753\n    // https://bugs.webkit.org/show_bug.cgi?id=171041\n    if (options.safari10) {\n        for (const scope of for_scopes) {\n            scope.parent_scope.variables.forEach(function(def) {\n                push_uniq(scope.enclosed, def);\n            });\n        }\n    }\n});\n\nAST_Toplevel.DEFMETHOD(\"def_global\", function(node) {\n    var globals = this.globals, name = node.name;\n    if (globals.has(name)) {\n        return globals.get(name);\n    } else {\n        var g = new SymbolDef(this, node);\n        g.undeclared = true;\n        g.global = true;\n        globals.set(name, g);\n        return g;\n    }\n});\n\nAST_Scope.DEFMETHOD(\"init_scope_vars\", function(parent_scope) {\n    this.variables = new Map();         // map name to AST_SymbolVar (variables defined in this scope; includes functions)\n    this.uses_with = false;             // will be set to true if this or some nested scope uses the `with` statement\n    this.uses_eval = false;             // will be set to true if this or nested scope uses the global `eval`\n    this.parent_scope = parent_scope;   // the parent scope\n    this.enclosed = [];                 // a list of variables from this or outer scope(s) that are referenced from this or inner scopes\n    this.cname = -1;                    // the current index for mangling functions/variables\n});\n\nAST_Scope.DEFMETHOD(\"conflicting_def\", function (name) {\n    return (\n        this.enclosed.find(def => def.name === name)\n        || this.variables.has(name)\n        || (this.parent_scope && this.parent_scope.conflicting_def(name))\n    );\n});\n\nAST_Scope.DEFMETHOD(\"conflicting_def_shallow\", function (name) {\n    return (\n        this.enclosed.find(def => def.name === name)\n        || this.variables.has(name)\n    );\n});\n\nAST_Scope.DEFMETHOD(\"add_child_scope\", function (scope) {\n    // `scope` is going to be moved into `this` right now.\n    // Update the required scopes' information\n\n    if (scope.parent_scope === this) return;\n\n    scope.parent_scope = this;\n\n    // TODO uses_with, uses_eval, etc\n\n    const scope_ancestry = (() => {\n        const ancestry = [];\n        let cur = this;\n        do {\n            ancestry.push(cur);\n        } while ((cur = cur.parent_scope));\n        ancestry.reverse();\n        return ancestry;\n    })();\n\n    const new_scope_enclosed_set = new Set(scope.enclosed);\n    const to_enclose = [];\n    for (const scope_topdown of scope_ancestry) {\n        to_enclose.forEach(e => push_uniq(scope_topdown.enclosed, e));\n        for (const def of scope_topdown.variables.values()) {\n            if (new_scope_enclosed_set.has(def)) {\n                push_uniq(to_enclose, def);\n                push_uniq(scope_topdown.enclosed, def);\n            }\n        }\n    }\n});\n\nfunction find_scopes_visible_from(scopes) {\n    const found_scopes = new Set();\n\n    for (const scope of new Set(scopes)) {\n        (function bubble_up(scope) {\n            if (scope == null || found_scopes.has(scope)) return;\n\n            found_scopes.add(scope);\n\n            bubble_up(scope.parent_scope);\n        })(scope);\n    }\n\n    return [...found_scopes];\n}\n\n// Creates a symbol during compression\nAST_Scope.DEFMETHOD(\"create_symbol\", function(SymClass, {\n    source,\n    tentative_name,\n    scope,\n    conflict_scopes = [scope],\n    init = null\n} = {}) {\n    let symbol_name;\n\n    conflict_scopes = find_scopes_visible_from(conflict_scopes);\n\n    if (tentative_name) {\n        // Implement hygiene (no new names are conflicting with existing names)\n        tentative_name =\n            symbol_name =\n            tentative_name.replace(/(?:^[^a-z_$]|[^a-z0-9_$])/ig, \"_\");\n\n        let i = 0;\n        while (conflict_scopes.find(s => s.conflicting_def_shallow(symbol_name))) {\n            symbol_name = tentative_name + \"$\" + i++;\n        }\n    }\n\n    if (!symbol_name) {\n        throw new Error(\"No symbol name could be generated in create_symbol()\");\n    }\n\n    const symbol = make_node(SymClass, source, {\n        name: symbol_name,\n        scope\n    });\n\n    this.def_variable(symbol, init || null);\n\n    symbol.mark_enclosed();\n\n    return symbol;\n});\n\n\nAST_Node.DEFMETHOD(\"is_block_scope\", return_false);\nAST_Class.DEFMETHOD(\"is_block_scope\", return_false);\nAST_Lambda.DEFMETHOD(\"is_block_scope\", return_false);\nAST_Toplevel.DEFMETHOD(\"is_block_scope\", return_false);\nAST_SwitchBranch.DEFMETHOD(\"is_block_scope\", return_false);\nAST_Block.DEFMETHOD(\"is_block_scope\", return_true);\nAST_Scope.DEFMETHOD(\"is_block_scope\", function () {\n    return this._block_scope || false;\n});\nAST_IterationStatement.DEFMETHOD(\"is_block_scope\", return_true);\n\nAST_Lambda.DEFMETHOD(\"init_scope_vars\", function() {\n    AST_Scope.prototype.init_scope_vars.apply(this, arguments);\n    this.uses_arguments = false;\n    this.def_variable(new AST_SymbolFunarg({\n        name: \"arguments\",\n        start: this.start,\n        end: this.end\n    }));\n});\n\nAST_Arrow.DEFMETHOD(\"init_scope_vars\", function() {\n    AST_Scope.prototype.init_scope_vars.apply(this, arguments);\n    this.uses_arguments = false;\n});\n\nAST_Symbol.DEFMETHOD(\"mark_enclosed\", function() {\n    var def = this.definition();\n    var s = this.scope;\n    while (s) {\n        push_uniq(s.enclosed, def);\n        if (s === def.scope) break;\n        s = s.parent_scope;\n    }\n});\n\nAST_Symbol.DEFMETHOD(\"reference\", function() {\n    this.definition().references.push(this);\n    this.mark_enclosed();\n});\n\nAST_Scope.DEFMETHOD(\"find_variable\", function(name) {\n    if (name instanceof AST_Symbol) name = name.name;\n    return this.variables.get(name)\n        || (this.parent_scope && this.parent_scope.find_variable(name));\n});\n\nAST_Scope.DEFMETHOD(\"def_function\", function(symbol, init) {\n    var def = this.def_variable(symbol, init);\n    if (!def.init || def.init instanceof AST_Defun) def.init = init;\n    return def;\n});\n\nAST_Scope.DEFMETHOD(\"def_variable\", function(symbol, init) {\n    var def = this.variables.get(symbol.name);\n    if (def) {\n        def.orig.push(symbol);\n        if (def.init && (def.scope !== symbol.scope || def.init instanceof AST_Function)) {\n            def.init = init;\n        }\n    } else {\n        def = new SymbolDef(this, symbol, init);\n        this.variables.set(symbol.name, def);\n        def.global = !this.parent_scope;\n    }\n    return symbol.thedef = def;\n});\n\nfunction next_mangled(scope, options) {\n    var ext = scope.enclosed;\n    var nth_identifier = options.nth_identifier;\n    out: while (true) {\n        var m = nth_identifier.get(++scope.cname);\n        if (ALL_RESERVED_WORDS.has(m)) continue; // skip over \"do\"\n\n        // https://github.com/mishoo/UglifyJS2/issues/242 -- do not\n        // shadow a name reserved from mangling.\n        if (options.reserved.has(m)) continue;\n\n        // Functions with short names might collide with base54 output\n        // and therefore cause collisions when keep_fnames is true.\n        if (unmangleable_names && unmangleable_names.has(m)) continue out;\n\n        // we must ensure that the mangled name does not shadow a name\n        // from some parent scope that is referenced in this or in\n        // inner scopes.\n        for (let i = ext.length; --i >= 0;) {\n            const def = ext[i];\n            const name = def.mangled_name || (def.unmangleable(options) && def.name);\n            if (m == name) continue out;\n        }\n        return m;\n    }\n}\n\nAST_Scope.DEFMETHOD(\"next_mangled\", function(options) {\n    return next_mangled(this, options);\n});\n\nAST_Toplevel.DEFMETHOD(\"next_mangled\", function(options) {\n    let name;\n    const mangled_names = this.mangled_names;\n    do {\n        name = next_mangled(this, options);\n    } while (mangled_names.has(name));\n    return name;\n});\n\nAST_Function.DEFMETHOD(\"next_mangled\", function(options, def) {\n    // #179, #326\n    // in Safari strict mode, something like (function x(x){...}) is a syntax error;\n    // a function expression's argument cannot shadow the function expression's name\n\n    var tricky_def = def.orig[0] instanceof AST_SymbolFunarg && this.name && this.name.definition();\n\n    // the function's mangled_name is null when keep_fnames is true\n    var tricky_name = tricky_def ? tricky_def.mangled_name || tricky_def.name : null;\n\n    while (true) {\n        var name = next_mangled(this, options);\n        if (!tricky_name || tricky_name != name)\n            return name;\n    }\n});\n\nAST_Symbol.DEFMETHOD(\"unmangleable\", function(options) {\n    var def = this.definition();\n    return !def || def.unmangleable(options);\n});\n\n// labels are always mangleable\nAST_Label.DEFMETHOD(\"unmangleable\", return_false);\n\nAST_Symbol.DEFMETHOD(\"unreferenced\", function() {\n    return !this.definition().references.length && !this.scope.pinned();\n});\n\nAST_Symbol.DEFMETHOD(\"definition\", function() {\n    return this.thedef;\n});\n\nAST_Symbol.DEFMETHOD(\"global\", function() {\n    return this.thedef.global;\n});\n\nAST_Toplevel.DEFMETHOD(\"_default_mangler_options\", function(options) {\n    options = defaults(options, {\n        eval        : false,\n        nth_identifier : base54,\n        ie8         : false,\n        keep_classnames: false,\n        keep_fnames : false,\n        module      : false,\n        reserved    : [],\n        toplevel    : false,\n    });\n    if (options.module) options.toplevel = true;\n    if (!Array.isArray(options.reserved)\n        && !(options.reserved instanceof Set)\n    ) {\n        options.reserved = [];\n    }\n    options.reserved = new Set(options.reserved);\n    // Never mangle arguments\n    options.reserved.add(\"arguments\");\n    return options;\n});\n\nAST_Toplevel.DEFMETHOD(\"mangle_names\", function(options) {\n    options = this._default_mangler_options(options);\n    var nth_identifier = options.nth_identifier;\n\n    // We only need to mangle declaration nodes.  Special logic wired\n    // into the code generator will display the mangled name if it's\n    // present (and for AST_SymbolRef-s it'll use the mangled name of\n    // the AST_SymbolDeclaration that it points to).\n    var lname = -1;\n    var to_mangle = [];\n\n    if (options.keep_fnames) {\n        function_defs = new Set();\n    }\n\n    const mangled_names = this.mangled_names = new Set();\n    unmangleable_names = new Set();\n\n    if (options.cache) {\n        this.globals.forEach(collect);\n        if (options.cache.props) {\n            options.cache.props.forEach(function(mangled_name) {\n                mangled_names.add(mangled_name);\n            });\n        }\n    }\n\n    var tw = new TreeWalker(function(node, descend) {\n        if (node instanceof AST_LabeledStatement) {\n            // lname is incremented when we get to the AST_Label\n            var save_nesting = lname;\n            descend();\n            lname = save_nesting;\n            return true;        // don't descend again in TreeWalker\n        }\n        if (node instanceof AST_Scope) {\n            node.variables.forEach(collect);\n            return;\n        }\n        if (node.is_block_scope()) {\n            node.block_scope.variables.forEach(collect);\n            return;\n        }\n        if (\n            function_defs\n            && node instanceof AST_VarDef\n            && node.value instanceof AST_Lambda\n            && !node.value.name\n            && keep_name(options.keep_fnames, node.name.name)\n        ) {\n            function_defs.add(node.name.definition().id);\n            return;\n        }\n        if (node instanceof AST_Label) {\n            let name;\n            do {\n                name = nth_identifier.get(++lname);\n            } while (ALL_RESERVED_WORDS.has(name));\n            node.mangled_name = name;\n            return true;\n        }\n        if (!(options.ie8 || options.safari10) && node instanceof AST_SymbolCatch) {\n            to_mangle.push(node.definition());\n            return;\n        }\n    });\n\n    this.walk(tw);\n\n    if (options.keep_fnames || options.keep_classnames) {\n        // Collect a set of short names which are unmangleable,\n        // for use in avoiding collisions in next_mangled.\n        to_mangle.forEach(def => {\n            if (def.name.length < 6 && def.unmangleable(options)) {\n                unmangleable_names.add(def.name);\n            }\n        });\n    }\n\n    to_mangle.forEach(def => { def.mangle(options); });\n\n    function_defs = null;\n    unmangleable_names = null;\n\n    function collect(symbol) {\n        if (symbol.export & MASK_EXPORT_DONT_MANGLE) {\n            unmangleable_names.add(symbol.name);\n        } else if (!options.reserved.has(symbol.name)) {\n            to_mangle.push(symbol);\n        }\n    }\n});\n\nAST_Toplevel.DEFMETHOD(\"find_colliding_names\", function(options) {\n    const cache = options.cache && options.cache.props;\n    const avoid = new Set();\n    options.reserved.forEach(to_avoid);\n    this.globals.forEach(add_def);\n    this.walk(new TreeWalker(function(node) {\n        if (node instanceof AST_Scope) node.variables.forEach(add_def);\n        if (node instanceof AST_SymbolCatch) add_def(node.definition());\n    }));\n    return avoid;\n\n    function to_avoid(name) {\n        avoid.add(name);\n    }\n\n    function add_def(def) {\n        var name = def.name;\n        if (def.global && cache && cache.has(name)) name = cache.get(name);\n        else if (!def.unmangleable(options)) return;\n        to_avoid(name);\n    }\n});\n\nAST_Toplevel.DEFMETHOD(\"expand_names\", function(options) {\n    options = this._default_mangler_options(options);\n    var nth_identifier = options.nth_identifier;\n    if (nth_identifier.reset && nth_identifier.sort) {\n        nth_identifier.reset();\n        nth_identifier.sort();\n    }\n    var avoid = this.find_colliding_names(options);\n    var cname = 0;\n    this.globals.forEach(rename);\n    this.walk(new TreeWalker(function(node) {\n        if (node instanceof AST_Scope) node.variables.forEach(rename);\n        if (node instanceof AST_SymbolCatch) rename(node.definition());\n    }));\n\n    function next_name() {\n        var name;\n        do {\n            name = nth_identifier.get(cname++);\n        } while (avoid.has(name) || ALL_RESERVED_WORDS.has(name));\n        return name;\n    }\n\n    function rename(def) {\n        if (def.global && options.cache) return;\n        if (def.unmangleable(options)) return;\n        if (options.reserved.has(def.name)) return;\n        const redefinition = redefined_catch_def(def);\n        const name = def.name = redefinition ? redefinition.name : next_name();\n        def.orig.forEach(function(sym) {\n            sym.name = name;\n        });\n        def.references.forEach(function(sym) {\n            sym.name = name;\n        });\n    }\n});\n\nAST_Node.DEFMETHOD(\"tail_node\", return_this);\nAST_Sequence.DEFMETHOD(\"tail_node\", function() {\n    return this.expressions[this.expressions.length - 1];\n});\n\nAST_Toplevel.DEFMETHOD(\"compute_char_frequency\", function(options) {\n    options = this._default_mangler_options(options);\n    var nth_identifier = options.nth_identifier;\n    if (!nth_identifier.reset || !nth_identifier.consider || !nth_identifier.sort) {\n        // If the identifier mangler is invariant, skip computing character frequency.\n        return;\n    }\n    nth_identifier.reset();\n\n    try {\n        AST_Node.prototype.print = function(stream, force_parens) {\n            this._print(stream, force_parens);\n            if (this instanceof AST_Symbol && !this.unmangleable(options)) {\n                nth_identifier.consider(this.name, -1);\n            } else if (options.properties) {\n                if (this instanceof AST_DotHash) {\n                    nth_identifier.consider(\"#\" + this.property, -1);\n                } else if (this instanceof AST_Dot) {\n                    nth_identifier.consider(this.property, -1);\n                } else if (this instanceof AST_Sub) {\n                    skip_string(this.property);\n                }\n            }\n        };\n        nth_identifier.consider(this.print_to_string(), 1);\n    } finally {\n        AST_Node.prototype.print = AST_Node.prototype._print;\n    }\n    nth_identifier.sort();\n\n    function skip_string(node) {\n        if (node instanceof AST_String) {\n            nth_identifier.consider(node.value, -1);\n        } else if (node instanceof AST_Conditional) {\n            skip_string(node.consequent);\n            skip_string(node.alternative);\n        } else if (node instanceof AST_Sequence) {\n            skip_string(node.tail_node());\n        }\n    }\n});\n\nconst base54 = (() => {\n    const leading = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ$_\".split(\"\");\n    const digits = \"0123456789\".split(\"\");\n    let chars;\n    let frequency;\n    function reset() {\n        frequency = new Map();\n        leading.forEach(function(ch) {\n            frequency.set(ch, 0);\n        });\n        digits.forEach(function(ch) {\n            frequency.set(ch, 0);\n        });\n    }\n    function consider(str, delta) {\n        for (var i = str.length; --i >= 0;) {\n            frequency.set(str[i], frequency.get(str[i]) + delta);\n        }\n    }\n    function compare(a, b) {\n        return frequency.get(b) - frequency.get(a);\n    }\n    function sort() {\n        chars = mergeSort(leading, compare).concat(mergeSort(digits, compare));\n    }\n    // Ensure this is in a usable initial state.\n    reset();\n    sort();\n    function base54(num) {\n        var ret = \"\", base = 54;\n        num++;\n        do {\n            num--;\n            ret += chars[num % base];\n            num = Math.floor(num / base);\n            base = 64;\n        } while (num > 0);\n        return ret;\n    }\n\n    return {\n        get: base54,\n        consider,\n        reset,\n        sort\n    };\n})();\n\nexport {\n    base54,\n    SymbolDef,\n};\n","import {\n    AST_Accessor,\n    AST_Array,\n    AST_Arrow,\n    AST_Await,\n    AST_BigInt,\n    AST_Binary,\n    AST_Block,\n    AST_Break,\n    AST_Call,\n    AST_Case,\n    AST_Class,\n    AST_ClassPrivateProperty,\n    AST_ClassProperty,\n    AST_ConciseMethod,\n    AST_Conditional,\n    AST_Const,\n    AST_Continue,\n    AST_Debugger,\n    AST_Default,\n    AST_Defun,\n    AST_Destructuring,\n    AST_Directive,\n    AST_Do,\n    AST_Dot,\n    AST_DotHash,\n    AST_EmptyStatement,\n    AST_Expansion,\n    AST_Export,\n    AST_False,\n    AST_For,\n    AST_ForIn,\n    AST_Function,\n    AST_Hole,\n    AST_If,\n    AST_Import,\n    AST_ImportMeta,\n    AST_Infinity,\n    AST_LabeledStatement,\n    AST_Let,\n    AST_NameMapping,\n    AST_NaN,\n    AST_New,\n    AST_NewTarget,\n    AST_Node,\n    AST_Null,\n    AST_Number,\n    AST_Object,\n    AST_ObjectKeyVal,\n    AST_ObjectGetter,\n    AST_ObjectSetter,\n    AST_PrivateGetter,\n    AST_PrivateMethod,\n    AST_PrivateSetter,\n    AST_RegExp,\n    AST_Return,\n    AST_Sequence,\n    AST_String,\n    AST_Sub,\n    AST_Super,\n    AST_Switch,\n    AST_Symbol,\n    AST_SymbolClassProperty,\n    AST_SymbolExportForeign,\n    AST_SymbolImportForeign,\n    AST_SymbolRef,\n    AST_SymbolDeclaration,\n    AST_TemplateSegment,\n    AST_TemplateString,\n    AST_This,\n    AST_Throw,\n    AST_Toplevel,\n    AST_True,\n    AST_Try,\n    AST_Catch,\n    AST_Finally,\n    AST_Unary,\n    AST_Undefined,\n    AST_Var,\n    AST_VarDef,\n    AST_While,\n    AST_With,\n    AST_Yield,\n    walk_parent\n} from \"./ast.js\";\nimport { first_in_statement } from \"./utils/first_in_statement.js\";\n\nlet mangle_options = undefined;\nAST_Node.prototype.size = function (compressor, stack) {\n    mangle_options = compressor && compressor.mangle_options;\n\n    let size = 0;\n    walk_parent(this, (node, info) => {\n        size += node._size(info);\n\n        // Braceless arrow functions have fake \"return\" statements\n        if (node instanceof AST_Arrow && node.is_braceless()) {\n            size += node.body[0].value._size(info);\n            return true;\n        }\n    }, stack || (compressor && compressor.stack));\n\n    // just to save a bit of memory\n    mangle_options = undefined;\n\n    return size;\n};\n\nAST_Node.prototype._size = () => 0;\n\nAST_Debugger.prototype._size = () => 8;\n\nAST_Directive.prototype._size = function () {\n    // TODO string encoding stuff\n    return 2 + this.value.length;\n};\n\nconst list_overhead = (array) => array.length && array.length - 1;\n\nAST_Block.prototype._size = function () {\n    return 2 + list_overhead(this.body);\n};\n\nAST_Toplevel.prototype._size = function() {\n    return list_overhead(this.body);\n};\n\nAST_EmptyStatement.prototype._size = () => 1;\n\nAST_LabeledStatement.prototype._size = () => 2;  // x:\n\nAST_Do.prototype._size = () => 9;\n\nAST_While.prototype._size = () => 7;\n\nAST_For.prototype._size = () => 8;\n\nAST_ForIn.prototype._size = () => 8;\n// AST_ForOf inherits ^\n\nAST_With.prototype._size = () => 6;\n\nAST_Expansion.prototype._size = () => 3;\n\nconst lambda_modifiers = func =>\n    (func.is_generator ? 1 : 0) + (func.async ? 6 : 0);\n\nAST_Accessor.prototype._size = function () {\n    return lambda_modifiers(this) + 4 + list_overhead(this.argnames) + list_overhead(this.body);\n};\n\nAST_Function.prototype._size = function (info) {\n    const first = !!first_in_statement(info);\n    return (first * 2) + lambda_modifiers(this) + 12 + list_overhead(this.argnames) + list_overhead(this.body);\n};\n\nAST_Defun.prototype._size = function () {\n    return lambda_modifiers(this) + 13 + list_overhead(this.argnames) + list_overhead(this.body);\n};\n\nAST_Arrow.prototype._size = function () {\n    let args_and_arrow = 2 + list_overhead(this.argnames);\n\n    if (\n        !(\n            this.argnames.length === 1\n            && this.argnames[0] instanceof AST_Symbol\n        )\n    ) {\n        args_and_arrow += 2;\n    }\n\n    const body_overhead = this.is_braceless() ? 0 : list_overhead(this.body) + 2;\n\n    return lambda_modifiers(this) + args_and_arrow + body_overhead;\n};\n\nAST_Destructuring.prototype._size = () => 2;\n\nAST_TemplateString.prototype._size = function () {\n    return 2 + (Math.floor(this.segments.length / 2) * 3);  /* \"${}\" */\n};\n\nAST_TemplateSegment.prototype._size = function () {\n    return this.value.length;\n};\n\nAST_Return.prototype._size = function () {\n    return this.value ? 7 : 6;\n};\n\nAST_Throw.prototype._size = () => 6;\n\nAST_Break.prototype._size = function () {\n    return this.label ? 6 : 5;\n};\n\nAST_Continue.prototype._size = function () {\n    return this.label ? 9 : 8;\n};\n\nAST_If.prototype._size = () => 4;\n\nAST_Switch.prototype._size = function () {\n    return 8 + list_overhead(this.body);\n};\n\nAST_Case.prototype._size = function () {\n    return 5 + list_overhead(this.body);\n};\n\nAST_Default.prototype._size = function () {\n    return 8 + list_overhead(this.body);\n};\n\nAST_Try.prototype._size = function () {\n    return 3 + list_overhead(this.body);\n};\n\nAST_Catch.prototype._size = function () {\n    let size = 7 + list_overhead(this.body);\n    if (this.argname) {\n        size += 2;\n    }\n    return size;\n};\n\nAST_Finally.prototype._size = function () {\n    return 7 + list_overhead(this.body);\n};\n\n/*#__INLINE__*/\nconst def_size = (size, def) => size + list_overhead(def.definitions);\n\nAST_Var.prototype._size = function () {\n    return def_size(4, this);\n};\n\nAST_Let.prototype._size = function () {\n    return def_size(4, this);\n};\n\nAST_Const.prototype._size = function () {\n    return def_size(6, this);\n};\n\nAST_VarDef.prototype._size = function () {\n    return this.value ? 1 : 0;\n};\n\nAST_NameMapping.prototype._size = function () {\n    // foreign name isn't mangled\n    return this.name ? 4 : 0;\n};\n\nAST_Import.prototype._size = function () {\n    // import\n    let size = 6;\n\n    if (this.imported_name) size += 1;\n\n    // from\n    if (this.imported_name || this.imported_names) size += 5;\n\n    // braces, and the commas\n    if (this.imported_names) {\n        size += 2 + list_overhead(this.imported_names);\n    }\n\n    return size;\n};\n\nAST_ImportMeta.prototype._size = () => 11;\n\nAST_Export.prototype._size = function () {\n    let size = 7 + (this.is_default ? 8 : 0);\n\n    if (this.exported_value) {\n        size += this.exported_value._size();\n    }\n\n    if (this.exported_names) {\n        // Braces and commas\n        size += 2 + list_overhead(this.exported_names);\n    }\n\n    if (this.module_name) {\n        // \"from \"\n        size += 5;\n    }\n\n    return size;\n};\n\nAST_Call.prototype._size = function () {\n    if (this.optional) {\n        return 4 + list_overhead(this.args);\n    }\n    return 2 + list_overhead(this.args);\n};\n\nAST_New.prototype._size = function () {\n    return 6 + list_overhead(this.args);\n};\n\nAST_Sequence.prototype._size = function () {\n    return list_overhead(this.expressions);\n};\n\nAST_Dot.prototype._size = function () {\n    if (this.optional) {\n        return this.property.length + 2;\n    }\n    return this.property.length + 1;\n};\n\nAST_DotHash.prototype._size = function () {\n    if (this.optional) {\n        return this.property.length + 3;\n    }\n    return this.property.length + 2;\n};\n\nAST_Sub.prototype._size = function () {\n    return this.optional ? 4 : 2;\n};\n\nAST_Unary.prototype._size = function () {\n    if (this.operator === \"typeof\") return 7;\n    if (this.operator === \"void\") return 5;\n    return this.operator.length;\n};\n\nAST_Binary.prototype._size = function (info) {\n    if (this.operator === \"in\") return 4;\n\n    let size = this.operator.length;\n\n    if (\n        (this.operator === \"+\" || this.operator === \"-\")\n        && this.right instanceof AST_Unary && this.right.operator === this.operator\n    ) {\n        // 1+ +a > needs space between the +\n        size += 1;\n    }\n\n    if (this.needs_parens(info)) {\n        size += 2;\n    }\n\n    return size;\n};\n\nAST_Conditional.prototype._size = () => 3;\n\nAST_Array.prototype._size = function () {\n    return 2 + list_overhead(this.elements);\n};\n\nAST_Object.prototype._size = function (info) {\n    let base = 2;\n    if (first_in_statement(info)) {\n        base += 2; // parens\n    }\n    return base + list_overhead(this.properties);\n};\n\n/*#__INLINE__*/\nconst key_size = key =>\n    typeof key === \"string\" ? key.length : 0;\n\nAST_ObjectKeyVal.prototype._size = function () {\n    return key_size(this.key) + 1;\n};\n\n/*#__INLINE__*/\nconst static_size = is_static => is_static ? 7 : 0;\n\nAST_ObjectGetter.prototype._size = function () {\n    return 5 + static_size(this.static) + key_size(this.key);\n};\n\nAST_ObjectSetter.prototype._size = function () {\n    return 5 + static_size(this.static) + key_size(this.key);\n};\n\nAST_ConciseMethod.prototype._size = function () {\n    return static_size(this.static) + key_size(this.key) + lambda_modifiers(this);\n};\n\nAST_PrivateMethod.prototype._size = function () {\n    return AST_ConciseMethod.prototype._size.call(this) + 1;\n};\n\nAST_PrivateGetter.prototype._size = AST_PrivateSetter.prototype._size = function () {\n    return AST_ConciseMethod.prototype._size.call(this) + 4;\n};\n\nAST_Class.prototype._size = function () {\n    return (\n        (this.name ? 8 : 7)\n        + (this.extends ? 8 : 0)\n    );\n};\n\nAST_ClassProperty.prototype._size = function () {\n    return (\n        static_size(this.static)\n        + (typeof this.key === \"string\" ? this.key.length + 2 : 0)\n        + (this.value ? 1 : 0)\n    );\n};\n\nAST_ClassPrivateProperty.prototype._size = function () {\n    return AST_ClassProperty.prototype._size.call(this) + 1;\n};\n\nAST_Symbol.prototype._size = function () {\n    return !mangle_options || this.definition().unmangleable(mangle_options)\n        ? this.name.length\n        : 1;\n};\n\n// TODO take propmangle into account\nAST_SymbolClassProperty.prototype._size = function () {\n    return this.name.length;\n};\n\nAST_SymbolRef.prototype._size = AST_SymbolDeclaration.prototype._size = function () {\n    const { name, thedef } = this;\n\n    if (thedef && thedef.global) return name.length;\n\n    if (name === \"arguments\") return 9;\n\n    return AST_Symbol.prototype._size.call(this);\n};\n\nAST_NewTarget.prototype._size = () => 10;\n\nAST_SymbolImportForeign.prototype._size = function () {\n    return this.name.length;\n};\n\nAST_SymbolExportForeign.prototype._size = function () {\n    return this.name.length;\n};\n\nAST_This.prototype._size = () => 4;\n\nAST_Super.prototype._size = () => 5;\n\nAST_String.prototype._size = function () {\n    return this.value.length + 2;\n};\n\nAST_Number.prototype._size = function () {\n    const { value } = this;\n    if (value === 0) return 1;\n    if (value > 0 && Math.floor(value) === value) {\n        return Math.floor(Math.log10(value) + 1);\n    }\n    return value.toString().length;\n};\n\nAST_BigInt.prototype._size = function () {\n    return this.value.length;\n};\n\nAST_RegExp.prototype._size = function () {\n    return this.value.toString().length;\n};\n\nAST_Null.prototype._size = () => 4;\n\nAST_NaN.prototype._size = () => 3;\n\nAST_Undefined.prototype._size = () => 6; // \"void 0\"\n\nAST_Hole.prototype._size = () => 0;  // comma is taken into account\n\nAST_Infinity.prototype._size = () => 8;\n\nAST_True.prototype._size = () => 4;\n\nAST_False.prototype._size = () => 5;\n\nAST_Await.prototype._size = () => 6;\n\nAST_Yield.prototype._size = () => 6;\n","/***********************************************************************\n\n  A JavaScript tokenizer / parser / beautifier / compressor.\n  https://github.com/mishoo/UglifyJS2\n\n  -------------------------------- (C) ---------------------------------\n\n                           Author: Mihai Bazon\n                         <mihai.bazon@gmail.com>\n                       http://mihai.bazon.net/blog\n\n  Distributed under the BSD license:\n\n    Copyright 2012 (c) Mihai Bazon <mihai.bazon@gmail.com>\n\n    Redistribution and use in source and binary forms, with or without\n    modification, are permitted provided that the following conditions\n    are met:\n\n        * Redistributions of source code must retain the above\n          copyright notice, this list of conditions and the following\n          disclaimer.\n\n        * Redistributions in binary form must reproduce the above\n          copyright notice, this list of conditions and the following\n          disclaimer in the documentation and/or other materials\n          provided with the distribution.\n\n    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER “AS IS” AND ANY\n    EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n    PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER BE\n    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,\n    OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n    PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n    PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n    THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR\n    TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF\n    THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n    SUCH DAMAGE.\n\n ***********************************************************************/\n\nimport {\n    AST_Array,\n    AST_Arrow,\n    AST_BlockStatement,\n    AST_Call,\n    AST_Class,\n    AST_Const,\n    AST_Constant,\n    AST_DefClass,\n    AST_Defun,\n    AST_EmptyStatement,\n    AST_Export,\n    AST_False,\n    AST_Function,\n    AST_Import,\n    AST_Infinity,\n    AST_LabeledStatement,\n    AST_Lambda,\n    AST_Let,\n    AST_LoopControl,\n    AST_NaN,\n    AST_Node,\n    AST_Null,\n    AST_Number,\n    AST_Object,\n    AST_ObjectKeyVal,\n    AST_PropAccess,\n    AST_RegExp,\n    AST_Scope,\n    AST_Sequence,\n    AST_SimpleStatement,\n    AST_Statement,\n    AST_String,\n    AST_SymbolRef,\n    AST_True,\n    AST_UnaryPrefix,\n    AST_Undefined,\n\n    TreeWalker,\n} from \"../ast.js\";\nimport { make_node, regexp_source_fix, string_template, makePredicate } from \"../utils/index.js\";\nimport { first_in_statement } from \"../utils/first_in_statement.js\";\n\nexport function merge_sequence(array, node) {\n    if (node instanceof AST_Sequence) {\n        array.push(...node.expressions);\n    } else {\n        array.push(node);\n    }\n    return array;\n}\n\nexport function make_sequence(orig, expressions) {\n    if (expressions.length == 1) return expressions[0];\n    if (expressions.length == 0) throw new Error(\"trying to create a sequence with length zero!\");\n    return make_node(AST_Sequence, orig, {\n        expressions: expressions.reduce(merge_sequence, [])\n    });\n}\n\nexport function make_node_from_constant(val, orig) {\n    switch (typeof val) {\n      case \"string\":\n        return make_node(AST_String, orig, {\n            value: val\n        });\n      case \"number\":\n        if (isNaN(val)) return make_node(AST_NaN, orig);\n        if (isFinite(val)) {\n            return 1 / val < 0 ? make_node(AST_UnaryPrefix, orig, {\n                operator: \"-\",\n                expression: make_node(AST_Number, orig, { value: -val })\n            }) : make_node(AST_Number, orig, { value: val });\n        }\n        return val < 0 ? make_node(AST_UnaryPrefix, orig, {\n            operator: \"-\",\n            expression: make_node(AST_Infinity, orig)\n        }) : make_node(AST_Infinity, orig);\n      case \"boolean\":\n        return make_node(val ? AST_True : AST_False, orig);\n      case \"undefined\":\n        return make_node(AST_Undefined, orig);\n      default:\n        if (val === null) {\n            return make_node(AST_Null, orig, { value: null });\n        }\n        if (val instanceof RegExp) {\n            return make_node(AST_RegExp, orig, {\n                value: {\n                    source: regexp_source_fix(val.source),\n                    flags: val.flags\n                }\n            });\n        }\n        throw new Error(string_template(\"Can't handle constant of type: {type}\", {\n            type: typeof val\n        }));\n    }\n}\n\nexport function best_of_expression(ast1, ast2) {\n    return ast1.size() > ast2.size() ? ast2 : ast1;\n}\n\nexport function best_of_statement(ast1, ast2) {\n    return best_of_expression(\n        make_node(AST_SimpleStatement, ast1, {\n            body: ast1\n        }),\n        make_node(AST_SimpleStatement, ast2, {\n            body: ast2\n        })\n    ).body;\n}\n\n/** Find which node is smaller, and return that */\nexport function best_of(compressor, ast1, ast2) {\n    if (first_in_statement(compressor)) {\n        return best_of_statement(ast1, ast2);\n    } else {\n        return best_of_expression(ast1, ast2);\n    }\n}\n\n/** Simplify an object property's key, if possible */\nexport function get_simple_key(key) {\n    if (key instanceof AST_Constant) {\n        return key.getValue();\n    }\n    if (key instanceof AST_UnaryPrefix\n        && key.operator == \"void\"\n        && key.expression instanceof AST_Constant) {\n        return;\n    }\n    return key;\n}\n\nexport function read_property(obj, key) {\n    key = get_simple_key(key);\n    if (key instanceof AST_Node) return;\n\n    var value;\n    if (obj instanceof AST_Array) {\n        var elements = obj.elements;\n        if (key == \"length\") return make_node_from_constant(elements.length, obj);\n        if (typeof key == \"number\" && key in elements) value = elements[key];\n    } else if (obj instanceof AST_Object) {\n        key = \"\" + key;\n        var props = obj.properties;\n        for (var i = props.length; --i >= 0;) {\n            var prop = props[i];\n            if (!(prop instanceof AST_ObjectKeyVal)) return;\n            if (!value && props[i].key === key) value = props[i].value;\n        }\n    }\n\n    return value instanceof AST_SymbolRef && value.fixed_value() || value;\n}\n\nexport function has_break_or_continue(loop, parent) {\n    var found = false;\n    var tw = new TreeWalker(function(node) {\n        if (found || node instanceof AST_Scope) return true;\n        if (node instanceof AST_LoopControl && tw.loopcontrol_target(node) === loop) {\n            return found = true;\n        }\n    });\n    if (parent instanceof AST_LabeledStatement) tw.push(parent);\n    tw.push(loop);\n    loop.body.walk(tw);\n    return found;\n}\n\n// we shouldn't compress (1,func)(something) to\n// func(something) because that changes the meaning of\n// the func (becomes lexical instead of global).\nexport function maintain_this_binding(parent, orig, val) {\n    if (\n        parent instanceof AST_UnaryPrefix && parent.operator == \"delete\"\n        || parent instanceof AST_Call && parent.expression === orig\n            && (\n                val instanceof AST_PropAccess\n                || val instanceof AST_SymbolRef && val.name == \"eval\"\n            )\n    ) {\n        const zero = make_node(AST_Number, orig, { value: 0 });\n        return make_sequence(orig, [ zero, val ]);\n    } else {\n        return val;\n    }\n}\n\nexport function is_func_expr(node) {\n    return node instanceof AST_Arrow || node instanceof AST_Function;\n}\n\nexport function is_iife_call(node) {\n    // Used to determine whether the node can benefit from negation.\n    // Not the case with arrow functions (you need an extra set of parens).\n    if (node.TYPE != \"Call\") return false;\n    return node.expression instanceof AST_Function || is_iife_call(node.expression);\n}\n\nexport const identifier_atom = makePredicate(\"Infinity NaN undefined\");\nexport function is_identifier_atom(node) {\n    return node instanceof AST_Infinity\n        || node instanceof AST_NaN\n        || node instanceof AST_Undefined;\n}\n\n/** Check if this is a SymbolRef node which has one def of a certain AST type */\nexport function is_ref_of(ref, type) {\n    if (!(ref instanceof AST_SymbolRef)) return false;\n    var orig = ref.definition().orig;\n    for (var i = orig.length; --i >= 0;) {\n        if (orig[i] instanceof type) return true;\n    }\n}\n\n// Can we turn { block contents... } into just the block contents ?\n// Not if one of these is inside.\nexport function can_be_evicted_from_block(node) {\n    return !(\n        node instanceof AST_DefClass ||\n        node instanceof AST_Defun ||\n        node instanceof AST_Let ||\n        node instanceof AST_Const ||\n        node instanceof AST_Export ||\n        node instanceof AST_Import\n    );\n}\n\nexport function as_statement_array(thing) {\n    if (thing === null) return [];\n    if (thing instanceof AST_BlockStatement) return thing.body;\n    if (thing instanceof AST_EmptyStatement) return [];\n    if (thing instanceof AST_Statement) return [ thing ];\n    throw new Error(\"Can't convert thing to statement array\");\n}\n\n/** Check if a ref refers to the name of a function/class it's defined within */\nexport function is_recursive_ref(compressor, def) {\n    var node;\n    for (var i = 0; node = compressor.parent(i); i++) {\n        if (node instanceof AST_Lambda || node instanceof AST_Class) {\n            var name = node.name;\n            if (name && name.definition() === def) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n","/***********************************************************************\n\n  A JavaScript tokenizer / parser / beautifier / compressor.\n  https://github.com/mishoo/UglifyJS2\n\n  -------------------------------- (C) ---------------------------------\n\n                           Author: Mihai Bazon\n                         <mihai.bazon@gmail.com>\n                       http://mihai.bazon.net/blog\n\n  Distributed under the BSD license:\n\n    Copyright 2012 (c) Mihai Bazon <mihai.bazon@gmail.com>\n\n    Redistribution and use in source and binary forms, with or without\n    modification, are permitted provided that the following conditions\n    are met:\n\n        * Redistributions of source code must retain the above\n          copyright notice, this list of conditions and the following\n          disclaimer.\n\n        * Redistributions in binary form must reproduce the above\n          copyright notice, this list of conditions and the following\n          disclaimer in the documentation and/or other materials\n          provided with the distribution.\n\n    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER “AS IS” AND ANY\n    EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n    PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER BE\n    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,\n    OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n    PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n    PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n    THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR\n    TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF\n    THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n    SUCH DAMAGE.\n\n ***********************************************************************/\n\n// bitfield flags to be stored in node.flags.\n// These are set and unset during compression, and store information in the node without requiring multiple fields.\nexport const UNUSED = 0b00000001;\nexport const TRUTHY = 0b00000010;\nexport const FALSY = 0b00000100;\nexport const UNDEFINED = 0b00001000;\nexport const INLINED = 0b00010000;\n\n// Nodes to which values are ever written. Used when keep_assign is part of the unused option string.\nexport const WRITE_ONLY = 0b00100000;\n\n// information specific to a single compression pass\nexport const SQUEEZED = 0b0000000100000000;\nexport const OPTIMIZED = 0b0000001000000000;\nexport const TOP = 0b0000010000000000;\nexport const CLEAR_BETWEEN_PASSES = SQUEEZED | OPTIMIZED | TOP;\n\nexport const has_flag = (node, flag) => node.flags & flag;\nexport const set_flag = (node, flag) => { node.flags |= flag; };\nexport const clear_flag = (node, flag) => { node.flags &= ~flag; };\n","/***********************************************************************\n\n  A JavaScript tokenizer / parser / beautifier / compressor.\n  https://github.com/mishoo/UglifyJS2\n\n  -------------------------------- (C) ---------------------------------\n\n                           Author: Mihai Bazon\n                         <mihai.bazon@gmail.com>\n                       http://mihai.bazon.net/blog\n\n  Distributed under the BSD license:\n\n    Copyright 2012 (c) Mihai Bazon <mihai.bazon@gmail.com>\n\n    Redistribution and use in source and binary forms, with or without\n    modification, are permitted provided that the following conditions\n    are met:\n\n        * Redistributions of source code must retain the above\n          copyright notice, this list of conditions and the following\n          disclaimer.\n\n        * Redistributions in binary form must reproduce the above\n          copyright notice, this list of conditions and the following\n          disclaimer in the documentation and/or other materials\n          provided with the distribution.\n\n    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER “AS IS” AND ANY\n    EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n    PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER BE\n    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,\n    OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n    PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n    PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n    THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR\n    TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF\n    THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n    SUCH DAMAGE.\n\n ***********************************************************************/\n\nimport { makePredicate } from \"../utils/index.js\";\n\n// Lists of native methods, useful for `unsafe` option which assumes they exist.\n// Note: Lots of methods and functions are missing here, in case they aren't pure\n// or not available in all JS environments.\n\nfunction make_nested_lookup(obj) {\n    const out = new Map();\n    for (var key of Object.keys(obj)) {\n        out.set(key, makePredicate(obj[key]));\n    }\n\n    const does_have = (global_name, fname) => {\n        const inner_map = out.get(global_name);\n        return inner_map != null && inner_map.has(fname);\n    };\n    return does_have;\n}\n\n// Objects which are safe to access without throwing or causing a side effect.\n// Usually we'd check the `unsafe` option first but these are way too common for that\nexport const pure_prop_access_globals = new Set([\n    \"Number\",\n    \"String\",\n    \"Array\",\n    \"Object\",\n    \"Function\",\n    \"Promise\",\n]);\n\nconst object_methods = [\n    \"constructor\",\n    \"toString\",\n    \"valueOf\",\n];\n\nexport const is_pure_native_method = make_nested_lookup({\n    Array: [\n        \"indexOf\",\n        \"join\",\n        \"lastIndexOf\",\n        \"slice\",\n        ...object_methods,\n    ],\n    Boolean: object_methods,\n    Function: object_methods,\n    Number: [\n        \"toExponential\",\n        \"toFixed\",\n        \"toPrecision\",\n        ...object_methods,\n    ],\n    Object: object_methods,\n    RegExp: [\n        \"test\",\n        ...object_methods,\n    ],\n    String: [\n        \"charAt\",\n        \"charCodeAt\",\n        \"concat\",\n        \"indexOf\",\n        \"italics\",\n        \"lastIndexOf\",\n        \"match\",\n        \"replace\",\n        \"search\",\n        \"slice\",\n        \"split\",\n        \"substr\",\n        \"substring\",\n        \"toLowerCase\",\n        \"toUpperCase\",\n        \"trim\",\n        ...object_methods,\n    ],\n});\n\nexport const is_pure_native_fn = make_nested_lookup({\n    Array: [\n        \"isArray\",\n    ],\n    Math: [\n        \"abs\",\n        \"acos\",\n        \"asin\",\n        \"atan\",\n        \"ceil\",\n        \"cos\",\n        \"exp\",\n        \"floor\",\n        \"log\",\n        \"round\",\n        \"sin\",\n        \"sqrt\",\n        \"tan\",\n        \"atan2\",\n        \"pow\",\n        \"max\",\n        \"min\",\n    ],\n    Number: [\n        \"isFinite\",\n        \"isNaN\",\n    ],\n    Object: [\n        \"create\",\n        \"getOwnPropertyDescriptor\",\n        \"getOwnPropertyNames\",\n        \"getPrototypeOf\",\n        \"isExtensible\",\n        \"isFrozen\",\n        \"isSealed\",\n        \"hasOwn\",\n        \"keys\",\n    ],\n    String: [\n        \"fromCharCode\",\n    ],\n});\n\n// Known numeric values which come with JS environments\nexport const is_pure_native_value = make_nested_lookup({\n    Math: [\n        \"E\",\n        \"LN10\",\n        \"LN2\",\n        \"LOG2E\",\n        \"LOG10E\",\n        \"PI\",\n        \"SQRT1_2\",\n        \"SQRT2\",\n    ],\n    Number: [\n        \"MAX_VALUE\",\n        \"MIN_VALUE\",\n        \"NaN\",\n        \"NEGATIVE_INFINITY\",\n        \"POSITIVE_INFINITY\",\n    ],\n});\n","/***********************************************************************\n\n  A JavaScript tokenizer / parser / beautifier / compressor.\n  https://github.com/mishoo/UglifyJS2\n\n  -------------------------------- (C) ---------------------------------\n\n                           Author: Mihai Bazon\n                         <mihai.bazon@gmail.com>\n                       http://mihai.bazon.net/blog\n\n  Distributed under the BSD license:\n\n    Copyright 2012 (c) Mihai Bazon <mihai.bazon@gmail.com>\n\n    Redistribution and use in source and binary forms, with or without\n    modification, are permitted provided that the following conditions\n    are met:\n\n        * Redistributions of source code must retain the above\n          copyright notice, this list of conditions and the following\n          disclaimer.\n\n        * Redistributions in binary form must reproduce the above\n          copyright notice, this list of conditions and the following\n          disclaimer in the documentation and/or other materials\n          provided with the distribution.\n\n    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER “AS IS” AND ANY\n    EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n    PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER BE\n    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,\n    OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n    PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n    PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n    THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR\n    TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF\n    THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n    SUCH DAMAGE.\n\n ***********************************************************************/\n\nimport {\n  AST_Array,\n  AST_Arrow,\n  AST_Assign,\n  AST_Binary,\n  AST_Block,\n  AST_BlockStatement,\n  AST_Call,\n  AST_Case,\n  AST_Chain,\n  AST_Class,\n  AST_ClassProperty,\n  AST_ConciseMethod,\n  AST_Conditional,\n  AST_Constant,\n  AST_Definitions,\n  AST_Dot,\n  AST_EmptyStatement,\n  AST_Expansion,\n  AST_False,\n  AST_Function,\n  AST_If,\n  AST_Import,\n  AST_Jump,\n  AST_LabeledStatement,\n  AST_Lambda,\n  AST_New,\n  AST_Node,\n  AST_Null,\n  AST_Number,\n  AST_Object,\n  AST_ObjectGetter,\n  AST_ObjectKeyVal,\n  AST_ObjectProperty,\n  AST_ObjectSetter,\n  AST_PropAccess,\n  AST_RegExp,\n  AST_Return,\n  AST_Sequence,\n  AST_SimpleStatement,\n  AST_Statement,\n  AST_String,\n  AST_Sub,\n  AST_Switch,\n  AST_SwitchBranch,\n  AST_SymbolClassProperty,\n  AST_SymbolDeclaration,\n  AST_SymbolRef,\n  AST_TemplateSegment,\n  AST_TemplateString,\n  AST_This,\n  AST_Toplevel,\n  AST_True,\n  AST_Try,\n  AST_Unary,\n  AST_UnaryPostfix,\n  AST_UnaryPrefix,\n  AST_Undefined,\n  AST_VarDef,\n\n  TreeTransformer,\n  walk,\n  walk_abort,\n\n  _PURE\n} from \"../ast.js\";\nimport {\n    makePredicate,\n    return_true,\n    return_false,\n    return_null,\n    return_this,\n    make_node,\n    member,\n    noop,\n    has_annotation,\n    HOP\n} from \"../utils/index.js\";\nimport { make_node_from_constant, make_sequence, best_of_expression, read_property } from \"./common.js\";\n\nimport { INLINED, UNDEFINED, has_flag } from \"./compressor-flags.js\";\nimport { pure_prop_access_globals, is_pure_native_fn, is_pure_native_method } from \"./native-objects.js\";\n\n// Functions and methods to infer certain facts about expressions\n// It's not always possible to be 100% sure about something just by static analysis,\n// so `true` means yes, and `false` means maybe\n\nexport const is_undeclared_ref = (node) =>\n    node instanceof AST_SymbolRef && node.definition().undeclared;\n\nexport const lazy_op = makePredicate(\"&& || ??\");\nexport const unary_side_effects = makePredicate(\"delete ++ --\");\n\n// methods to determine whether an expression has a boolean result type\n(function(def_is_boolean) {\n    const unary_bool = makePredicate(\"! delete\");\n    const binary_bool = makePredicate(\"in instanceof == != === !== < <= >= >\");\n    def_is_boolean(AST_Node, return_false);\n    def_is_boolean(AST_UnaryPrefix, function() {\n        return unary_bool.has(this.operator);\n    });\n    def_is_boolean(AST_Binary, function() {\n        return binary_bool.has(this.operator)\n            || lazy_op.has(this.operator)\n                && this.left.is_boolean()\n                && this.right.is_boolean();\n    });\n    def_is_boolean(AST_Conditional, function() {\n        return this.consequent.is_boolean() && this.alternative.is_boolean();\n    });\n    def_is_boolean(AST_Assign, function() {\n        return this.operator == \"=\" && this.right.is_boolean();\n    });\n    def_is_boolean(AST_Sequence, function() {\n        return this.tail_node().is_boolean();\n    });\n    def_is_boolean(AST_True, return_true);\n    def_is_boolean(AST_False, return_true);\n})(function(node, func) {\n    node.DEFMETHOD(\"is_boolean\", func);\n});\n\n// methods to determine if an expression has a numeric result type\n(function(def_is_number) {\n    def_is_number(AST_Node, return_false);\n    def_is_number(AST_Number, return_true);\n    const unary = makePredicate(\"+ - ~ ++ --\");\n    def_is_number(AST_Unary, function() {\n        return unary.has(this.operator);\n    });\n    const numeric_ops = makePredicate(\"- * / % & | ^ << >> >>>\");\n    def_is_number(AST_Binary, function(compressor) {\n        return numeric_ops.has(this.operator) || this.operator == \"+\"\n            && this.left.is_number(compressor)\n            && this.right.is_number(compressor);\n    });\n    def_is_number(AST_Assign, function(compressor) {\n        return numeric_ops.has(this.operator.slice(0, -1))\n            || this.operator == \"=\" && this.right.is_number(compressor);\n    });\n    def_is_number(AST_Sequence, function(compressor) {\n        return this.tail_node().is_number(compressor);\n    });\n    def_is_number(AST_Conditional, function(compressor) {\n        return this.consequent.is_number(compressor) && this.alternative.is_number(compressor);\n    });\n})(function(node, func) {\n    node.DEFMETHOD(\"is_number\", func);\n});\n\n// methods to determine if an expression has a string result type\n(function(def_is_string) {\n    def_is_string(AST_Node, return_false);\n    def_is_string(AST_String, return_true);\n    def_is_string(AST_TemplateString, return_true);\n    def_is_string(AST_UnaryPrefix, function() {\n        return this.operator == \"typeof\";\n    });\n    def_is_string(AST_Binary, function(compressor) {\n        return this.operator == \"+\" &&\n            (this.left.is_string(compressor) || this.right.is_string(compressor));\n    });\n    def_is_string(AST_Assign, function(compressor) {\n        return (this.operator == \"=\" || this.operator == \"+=\") && this.right.is_string(compressor);\n    });\n    def_is_string(AST_Sequence, function(compressor) {\n        return this.tail_node().is_string(compressor);\n    });\n    def_is_string(AST_Conditional, function(compressor) {\n        return this.consequent.is_string(compressor) && this.alternative.is_string(compressor);\n    });\n})(function(node, func) {\n    node.DEFMETHOD(\"is_string\", func);\n});\n\nexport function is_undefined(node, compressor) {\n    return (\n        has_flag(node, UNDEFINED)\n        || node instanceof AST_Undefined\n        || node instanceof AST_UnaryPrefix\n            && node.operator == \"void\"\n            && !node.expression.has_side_effects(compressor)\n    );\n}\n\n// Is the node explicitly null or undefined.\nfunction is_null_or_undefined(node, compressor) {\n    let fixed;\n    return (\n        node instanceof AST_Null\n        || is_undefined(node, compressor)\n        || (\n            node instanceof AST_SymbolRef\n            && (fixed = node.definition().fixed) instanceof AST_Node\n            && is_nullish(fixed, compressor)\n        )\n    );\n}\n\n// Find out if this expression is optionally chained from a base-point that we\n// can statically analyze as null or undefined.\nexport function is_nullish_shortcircuited(node, compressor) {\n    if (node instanceof AST_PropAccess || node instanceof AST_Call) {\n        return (\n            (node.optional && is_null_or_undefined(node.expression, compressor))\n            || is_nullish_shortcircuited(node.expression, compressor)\n        );\n    }\n    if (node instanceof AST_Chain) return is_nullish_shortcircuited(node.expression, compressor);\n    return false;\n}\n\n// Find out if something is == null, or can short circuit into nullish.\n// Used to optimize ?. and ??\nexport function is_nullish(node, compressor) {\n    if (is_null_or_undefined(node, compressor)) return true;\n    return is_nullish_shortcircuited(node, compressor);\n}\n\n// Determine if expression might cause side effects\n// If there's a possibility that a node may change something when it's executed, this returns true\n(function(def_has_side_effects) {\n    def_has_side_effects(AST_Node, return_true);\n\n    def_has_side_effects(AST_EmptyStatement, return_false);\n    def_has_side_effects(AST_Constant, return_false);\n    def_has_side_effects(AST_This, return_false);\n\n    function any(list, compressor) {\n        for (var i = list.length; --i >= 0;)\n            if (list[i].has_side_effects(compressor))\n                return true;\n        return false;\n    }\n\n    def_has_side_effects(AST_Block, function(compressor) {\n        return any(this.body, compressor);\n    });\n    def_has_side_effects(AST_Call, function(compressor) {\n        if (\n            !this.is_callee_pure(compressor)\n            && (!this.expression.is_call_pure(compressor)\n                || this.expression.has_side_effects(compressor))\n        ) {\n            return true;\n        }\n        return any(this.args, compressor);\n    });\n    def_has_side_effects(AST_Switch, function(compressor) {\n        return this.expression.has_side_effects(compressor)\n            || any(this.body, compressor);\n    });\n    def_has_side_effects(AST_Case, function(compressor) {\n        return this.expression.has_side_effects(compressor)\n            || any(this.body, compressor);\n    });\n    def_has_side_effects(AST_Try, function(compressor) {\n        return any(this.body, compressor)\n            || this.bcatch && this.bcatch.has_side_effects(compressor)\n            || this.bfinally && this.bfinally.has_side_effects(compressor);\n    });\n    def_has_side_effects(AST_If, function(compressor) {\n        return this.condition.has_side_effects(compressor)\n            || this.body && this.body.has_side_effects(compressor)\n            || this.alternative && this.alternative.has_side_effects(compressor);\n    });\n    def_has_side_effects(AST_LabeledStatement, function(compressor) {\n        return this.body.has_side_effects(compressor);\n    });\n    def_has_side_effects(AST_SimpleStatement, function(compressor) {\n        return this.body.has_side_effects(compressor);\n    });\n    def_has_side_effects(AST_Lambda, return_false);\n    def_has_side_effects(AST_Class, function (compressor) {\n        if (this.extends && this.extends.has_side_effects(compressor)) {\n            return true;\n        }\n        return any(this.properties, compressor);\n    });\n    def_has_side_effects(AST_Binary, function(compressor) {\n        return this.left.has_side_effects(compressor)\n            || this.right.has_side_effects(compressor);\n    });\n    def_has_side_effects(AST_Assign, return_true);\n    def_has_side_effects(AST_Conditional, function(compressor) {\n        return this.condition.has_side_effects(compressor)\n            || this.consequent.has_side_effects(compressor)\n            || this.alternative.has_side_effects(compressor);\n    });\n    def_has_side_effects(AST_Unary, function(compressor) {\n        return unary_side_effects.has(this.operator)\n            || this.expression.has_side_effects(compressor);\n    });\n    def_has_side_effects(AST_SymbolRef, function(compressor) {\n        return !this.is_declared(compressor) && !pure_prop_access_globals.has(this.name);\n    });\n    def_has_side_effects(AST_SymbolClassProperty, return_false);\n    def_has_side_effects(AST_SymbolDeclaration, return_false);\n    def_has_side_effects(AST_Object, function(compressor) {\n        return any(this.properties, compressor);\n    });\n    def_has_side_effects(AST_ObjectProperty, function(compressor) {\n        return (\n            this.computed_key() && this.key.has_side_effects(compressor)\n            || this.value && this.value.has_side_effects(compressor)\n        );\n    });\n    def_has_side_effects(AST_ClassProperty, function(compressor) {\n        return (\n            this.computed_key() && this.key.has_side_effects(compressor)\n            || this.static && this.value && this.value.has_side_effects(compressor)\n        );\n    });\n    def_has_side_effects(AST_ConciseMethod, function(compressor) {\n        return this.computed_key() && this.key.has_side_effects(compressor);\n    });\n    def_has_side_effects(AST_ObjectGetter, function(compressor) {\n        return this.computed_key() && this.key.has_side_effects(compressor);\n    });\n    def_has_side_effects(AST_ObjectSetter, function(compressor) {\n        return this.computed_key() && this.key.has_side_effects(compressor);\n    });\n    def_has_side_effects(AST_Array, function(compressor) {\n        return any(this.elements, compressor);\n    });\n    def_has_side_effects(AST_Dot, function(compressor) {\n        if (is_nullish(this, compressor)) return false;\n        return !this.optional && this.expression.may_throw_on_access(compressor)\n            || this.expression.has_side_effects(compressor);\n    });\n    def_has_side_effects(AST_Sub, function(compressor) {\n        if (is_nullish(this, compressor)) return false;\n\n        return !this.optional && this.expression.may_throw_on_access(compressor)\n            || this.expression.has_side_effects(compressor)\n            || this.property.has_side_effects(compressor);\n    });\n    def_has_side_effects(AST_Chain, function (compressor) {\n        return this.expression.has_side_effects(compressor);\n    });\n    def_has_side_effects(AST_Sequence, function(compressor) {\n        return any(this.expressions, compressor);\n    });\n    def_has_side_effects(AST_Definitions, function(compressor) {\n        return any(this.definitions, compressor);\n    });\n    def_has_side_effects(AST_VarDef, function() {\n        return this.value;\n    });\n    def_has_side_effects(AST_TemplateSegment, return_false);\n    def_has_side_effects(AST_TemplateString, function(compressor) {\n        return any(this.segments, compressor);\n    });\n})(function(node, func) {\n    node.DEFMETHOD(\"has_side_effects\", func);\n});\n\n// determine if expression may throw\n(function(def_may_throw) {\n    def_may_throw(AST_Node, return_true);\n\n    def_may_throw(AST_Constant, return_false);\n    def_may_throw(AST_EmptyStatement, return_false);\n    def_may_throw(AST_Lambda, return_false);\n    def_may_throw(AST_SymbolDeclaration, return_false);\n    def_may_throw(AST_This, return_false);\n\n    function any(list, compressor) {\n        for (var i = list.length; --i >= 0;)\n            if (list[i].may_throw(compressor))\n                return true;\n        return false;\n    }\n\n    def_may_throw(AST_Class, function(compressor) {\n        if (this.extends && this.extends.may_throw(compressor)) return true;\n        return any(this.properties, compressor);\n    });\n\n    def_may_throw(AST_Array, function(compressor) {\n        return any(this.elements, compressor);\n    });\n    def_may_throw(AST_Assign, function(compressor) {\n        if (this.right.may_throw(compressor)) return true;\n        if (!compressor.has_directive(\"use strict\")\n            && this.operator == \"=\"\n            && this.left instanceof AST_SymbolRef) {\n            return false;\n        }\n        return this.left.may_throw(compressor);\n    });\n    def_may_throw(AST_Binary, function(compressor) {\n        return this.left.may_throw(compressor)\n            || this.right.may_throw(compressor);\n    });\n    def_may_throw(AST_Block, function(compressor) {\n        return any(this.body, compressor);\n    });\n    def_may_throw(AST_Call, function(compressor) {\n        if (is_nullish(this, compressor)) return false;\n        if (any(this.args, compressor)) return true;\n        if (this.is_callee_pure(compressor)) return false;\n        if (this.expression.may_throw(compressor)) return true;\n        return !(this.expression instanceof AST_Lambda)\n            || any(this.expression.body, compressor);\n    });\n    def_may_throw(AST_Case, function(compressor) {\n        return this.expression.may_throw(compressor)\n            || any(this.body, compressor);\n    });\n    def_may_throw(AST_Conditional, function(compressor) {\n        return this.condition.may_throw(compressor)\n            || this.consequent.may_throw(compressor)\n            || this.alternative.may_throw(compressor);\n    });\n    def_may_throw(AST_Definitions, function(compressor) {\n        return any(this.definitions, compressor);\n    });\n    def_may_throw(AST_If, function(compressor) {\n        return this.condition.may_throw(compressor)\n            || this.body && this.body.may_throw(compressor)\n            || this.alternative && this.alternative.may_throw(compressor);\n    });\n    def_may_throw(AST_LabeledStatement, function(compressor) {\n        return this.body.may_throw(compressor);\n    });\n    def_may_throw(AST_Object, function(compressor) {\n        return any(this.properties, compressor);\n    });\n    def_may_throw(AST_ObjectProperty, function(compressor) {\n        // TODO key may throw too\n        return this.value ? this.value.may_throw(compressor) : false;\n    });\n    def_may_throw(AST_ClassProperty, function(compressor) {\n        return (\n            this.computed_key() && this.key.may_throw(compressor)\n            || this.static && this.value && this.value.may_throw(compressor)\n        );\n    });\n    def_may_throw(AST_ConciseMethod, function(compressor) {\n        return this.computed_key() && this.key.may_throw(compressor);\n    });\n    def_may_throw(AST_ObjectGetter, function(compressor) {\n        return this.computed_key() && this.key.may_throw(compressor);\n    });\n    def_may_throw(AST_ObjectSetter, function(compressor) {\n        return this.computed_key() && this.key.may_throw(compressor);\n    });\n    def_may_throw(AST_Return, function(compressor) {\n        return this.value && this.value.may_throw(compressor);\n    });\n    def_may_throw(AST_Sequence, function(compressor) {\n        return any(this.expressions, compressor);\n    });\n    def_may_throw(AST_SimpleStatement, function(compressor) {\n        return this.body.may_throw(compressor);\n    });\n    def_may_throw(AST_Dot, function(compressor) {\n        if (is_nullish(this, compressor)) return false;\n        return !this.optional && this.expression.may_throw_on_access(compressor)\n            || this.expression.may_throw(compressor);\n    });\n    def_may_throw(AST_Sub, function(compressor) {\n        if (is_nullish(this, compressor)) return false;\n        return !this.optional && this.expression.may_throw_on_access(compressor)\n            || this.expression.may_throw(compressor)\n            || this.property.may_throw(compressor);\n    });\n    def_may_throw(AST_Chain, function(compressor) {\n        return this.expression.may_throw(compressor);\n    });\n    def_may_throw(AST_Switch, function(compressor) {\n        return this.expression.may_throw(compressor)\n            || any(this.body, compressor);\n    });\n    def_may_throw(AST_SymbolRef, function(compressor) {\n        return !this.is_declared(compressor) && !pure_prop_access_globals.has(this.name);\n    });\n    def_may_throw(AST_SymbolClassProperty, return_false);\n    def_may_throw(AST_Try, function(compressor) {\n        return this.bcatch ? this.bcatch.may_throw(compressor) : any(this.body, compressor)\n            || this.bfinally && this.bfinally.may_throw(compressor);\n    });\n    def_may_throw(AST_Unary, function(compressor) {\n        if (this.operator == \"typeof\" && this.expression instanceof AST_SymbolRef)\n            return false;\n        return this.expression.may_throw(compressor);\n    });\n    def_may_throw(AST_VarDef, function(compressor) {\n        if (!this.value) return false;\n        return this.value.may_throw(compressor);\n    });\n})(function(node, func) {\n    node.DEFMETHOD(\"may_throw\", func);\n});\n\n// determine if expression is constant\n(function(def_is_constant_expression) {\n    function all_refs_local(scope) {\n        let result = true;\n        walk(this, node => {\n            if (node instanceof AST_SymbolRef) {\n                if (has_flag(this, INLINED)) {\n                    result = false;\n                    return walk_abort;\n                }\n                var def = node.definition();\n                if (\n                    member(def, this.enclosed)\n                    && !this.variables.has(def.name)\n                ) {\n                    if (scope) {\n                        var scope_def = scope.find_variable(node);\n                        if (def.undeclared ? !scope_def : scope_def === def) {\n                            result = \"f\";\n                            return true;\n                        }\n                    }\n                    result = false;\n                    return walk_abort;\n                }\n                return true;\n            }\n            if (node instanceof AST_This && this instanceof AST_Arrow) {\n                // TODO check arguments too!\n                result = false;\n                return walk_abort;\n            }\n        });\n        return result;\n    }\n\n    def_is_constant_expression(AST_Node, return_false);\n    def_is_constant_expression(AST_Constant, return_true);\n    def_is_constant_expression(AST_Class, function(scope) {\n        if (this.extends && !this.extends.is_constant_expression(scope)) {\n            return false;\n        }\n\n        for (const prop of this.properties) {\n            if (prop.computed_key() && !prop.key.is_constant_expression(scope)) {\n                return false;\n            }\n            if (prop.static && prop.value && !prop.value.is_constant_expression(scope)) {\n                return false;\n            }\n        }\n\n        return all_refs_local.call(this, scope);\n    });\n    def_is_constant_expression(AST_Lambda, all_refs_local);\n    def_is_constant_expression(AST_Unary, function() {\n        return this.expression.is_constant_expression();\n    });\n    def_is_constant_expression(AST_Binary, function() {\n        return this.left.is_constant_expression()\n            && this.right.is_constant_expression();\n    });\n    def_is_constant_expression(AST_Array, function() {\n        return this.elements.every((l) => l.is_constant_expression());\n    });\n    def_is_constant_expression(AST_Object, function() {\n        return this.properties.every((l) => l.is_constant_expression());\n    });\n    def_is_constant_expression(AST_ObjectProperty, function() {\n        return !!(!(this.key instanceof AST_Node) && this.value && this.value.is_constant_expression());\n    });\n})(function(node, func) {\n    node.DEFMETHOD(\"is_constant_expression\", func);\n});\n\n\n// may_throw_on_access()\n// returns true if this node may be null, undefined or contain `AST_Accessor`\n(function(def_may_throw_on_access) {\n    AST_Node.DEFMETHOD(\"may_throw_on_access\", function(compressor) {\n        return !compressor.option(\"pure_getters\")\n            || this._dot_throw(compressor);\n    });\n\n    function is_strict(compressor) {\n        return /strict/.test(compressor.option(\"pure_getters\"));\n    }\n\n    def_may_throw_on_access(AST_Node, is_strict);\n    def_may_throw_on_access(AST_Null, return_true);\n    def_may_throw_on_access(AST_Undefined, return_true);\n    def_may_throw_on_access(AST_Constant, return_false);\n    def_may_throw_on_access(AST_Array, return_false);\n    def_may_throw_on_access(AST_Object, function(compressor) {\n        if (!is_strict(compressor)) return false;\n        for (var i = this.properties.length; --i >=0;)\n            if (this.properties[i]._dot_throw(compressor)) return true;\n        return false;\n    });\n    // Do not be as strict with classes as we are with objects.\n    // Hopefully the community is not going to abuse static getters and setters.\n    // https://github.com/terser/terser/issues/724#issuecomment-643655656\n    def_may_throw_on_access(AST_Class, return_false);\n    def_may_throw_on_access(AST_ObjectProperty, return_false);\n    def_may_throw_on_access(AST_ObjectGetter, return_true);\n    def_may_throw_on_access(AST_Expansion, function(compressor) {\n        return this.expression._dot_throw(compressor);\n    });\n    def_may_throw_on_access(AST_Function, return_false);\n    def_may_throw_on_access(AST_Arrow, return_false);\n    def_may_throw_on_access(AST_UnaryPostfix, return_false);\n    def_may_throw_on_access(AST_UnaryPrefix, function() {\n        return this.operator == \"void\";\n    });\n    def_may_throw_on_access(AST_Binary, function(compressor) {\n        return (this.operator == \"&&\" || this.operator == \"||\" || this.operator == \"??\")\n            && (this.left._dot_throw(compressor) || this.right._dot_throw(compressor));\n    });\n    def_may_throw_on_access(AST_Assign, function(compressor) {\n        if (this.logical) return true;\n\n        return this.operator == \"=\"\n            && this.right._dot_throw(compressor);\n    });\n    def_may_throw_on_access(AST_Conditional, function(compressor) {\n        return this.consequent._dot_throw(compressor)\n            || this.alternative._dot_throw(compressor);\n    });\n    def_may_throw_on_access(AST_Dot, function(compressor) {\n        if (!is_strict(compressor)) return false;\n\n        if (this.property == \"prototype\") {\n            return !(\n                this.expression instanceof AST_Function\n                || this.expression instanceof AST_Class\n            );\n        }\n        return true;\n    });\n    def_may_throw_on_access(AST_Chain, function(compressor) {\n        return this.expression._dot_throw(compressor);\n    });\n    def_may_throw_on_access(AST_Sequence, function(compressor) {\n        return this.tail_node()._dot_throw(compressor);\n    });\n    def_may_throw_on_access(AST_SymbolRef, function(compressor) {\n        if (this.name === \"arguments\") return false;\n        if (has_flag(this, UNDEFINED)) return true;\n        if (!is_strict(compressor)) return false;\n        if (is_undeclared_ref(this) && this.is_declared(compressor)) return false;\n        if (this.is_immutable()) return false;\n        var fixed = this.fixed_value();\n        return !fixed || fixed._dot_throw(compressor);\n    });\n})(function(node, func) {\n    node.DEFMETHOD(\"_dot_throw\", func);\n});\n\nexport function is_lhs(node, parent) {\n    if (parent instanceof AST_Unary && unary_side_effects.has(parent.operator)) return parent.expression;\n    if (parent instanceof AST_Assign && parent.left === node) return node;\n}\n\n(function(def_find_defs) {\n    function to_node(value, orig) {\n        if (value instanceof AST_Node) {\n            if (!(value instanceof AST_Constant)) {\n                // Value may be a function, an array including functions and even a complex assign / block expression,\n                // so it should never be shared in different places.\n                // Otherwise wrong information may be used in the compression phase\n                value = value.clone(true);\n            }\n            return make_node(value.CTOR, orig, value);\n        }\n        if (Array.isArray(value)) return make_node(AST_Array, orig, {\n            elements: value.map(function(value) {\n                return to_node(value, orig);\n            })\n        });\n        if (value && typeof value == \"object\") {\n            var props = [];\n            for (var key in value) if (HOP(value, key)) {\n                props.push(make_node(AST_ObjectKeyVal, orig, {\n                    key: key,\n                    value: to_node(value[key], orig)\n                }));\n            }\n            return make_node(AST_Object, orig, {\n                properties: props\n            });\n        }\n        return make_node_from_constant(value, orig);\n    }\n\n    AST_Toplevel.DEFMETHOD(\"resolve_defines\", function(compressor) {\n        if (!compressor.option(\"global_defs\")) return this;\n        this.figure_out_scope({ ie8: compressor.option(\"ie8\") });\n        return this.transform(new TreeTransformer(function(node) {\n            var def = node._find_defs(compressor, \"\");\n            if (!def) return;\n            var level = 0, child = node, parent;\n            while (parent = this.parent(level++)) {\n                if (!(parent instanceof AST_PropAccess)) break;\n                if (parent.expression !== child) break;\n                child = parent;\n            }\n            if (is_lhs(child, parent)) {\n                return;\n            }\n            return def;\n        }));\n    });\n    def_find_defs(AST_Node, noop);\n    def_find_defs(AST_Chain, function(compressor, suffix) {\n        return this.expression._find_defs(compressor, suffix);\n    });\n    def_find_defs(AST_Dot, function(compressor, suffix) {\n        return this.expression._find_defs(compressor, \".\" + this.property + suffix);\n    });\n    def_find_defs(AST_SymbolDeclaration, function() {\n        if (!this.global()) return;\n    });\n    def_find_defs(AST_SymbolRef, function(compressor, suffix) {\n        if (!this.global()) return;\n        var defines = compressor.option(\"global_defs\");\n        var name = this.name + suffix;\n        if (HOP(defines, name)) return to_node(defines[name], this);\n    });\n})(function(node, func) {\n    node.DEFMETHOD(\"_find_defs\", func);\n});\n\n// method to negate an expression\n(function(def_negate) {\n    function basic_negation(exp) {\n        return make_node(AST_UnaryPrefix, exp, {\n            operator: \"!\",\n            expression: exp\n        });\n    }\n    function best(orig, alt, first_in_statement) {\n        var negated = basic_negation(orig);\n        if (first_in_statement) {\n            var stat = make_node(AST_SimpleStatement, alt, {\n                body: alt\n            });\n            return best_of_expression(negated, stat) === stat ? alt : negated;\n        }\n        return best_of_expression(negated, alt);\n    }\n    def_negate(AST_Node, function() {\n        return basic_negation(this);\n    });\n    def_negate(AST_Statement, function() {\n        throw new Error(\"Cannot negate a statement\");\n    });\n    def_negate(AST_Function, function() {\n        return basic_negation(this);\n    });\n    def_negate(AST_Arrow, function() {\n        return basic_negation(this);\n    });\n    def_negate(AST_UnaryPrefix, function() {\n        if (this.operator == \"!\")\n            return this.expression;\n        return basic_negation(this);\n    });\n    def_negate(AST_Sequence, function(compressor) {\n        var expressions = this.expressions.slice();\n        expressions.push(expressions.pop().negate(compressor));\n        return make_sequence(this, expressions);\n    });\n    def_negate(AST_Conditional, function(compressor, first_in_statement) {\n        var self = this.clone();\n        self.consequent = self.consequent.negate(compressor);\n        self.alternative = self.alternative.negate(compressor);\n        return best(this, self, first_in_statement);\n    });\n    def_negate(AST_Binary, function(compressor, first_in_statement) {\n        var self = this.clone(), op = this.operator;\n        if (compressor.option(\"unsafe_comps\")) {\n            switch (op) {\n              case \"<=\" : self.operator = \">\"  ; return self;\n              case \"<\"  : self.operator = \">=\" ; return self;\n              case \">=\" : self.operator = \"<\"  ; return self;\n              case \">\"  : self.operator = \"<=\" ; return self;\n            }\n        }\n        switch (op) {\n          case \"==\" : self.operator = \"!=\"; return self;\n          case \"!=\" : self.operator = \"==\"; return self;\n          case \"===\": self.operator = \"!==\"; return self;\n          case \"!==\": self.operator = \"===\"; return self;\n          case \"&&\":\n            self.operator = \"||\";\n            self.left = self.left.negate(compressor, first_in_statement);\n            self.right = self.right.negate(compressor);\n            return best(this, self, first_in_statement);\n          case \"||\":\n            self.operator = \"&&\";\n            self.left = self.left.negate(compressor, first_in_statement);\n            self.right = self.right.negate(compressor);\n            return best(this, self, first_in_statement);\n        }\n        return basic_negation(this);\n    });\n})(function(node, func) {\n    node.DEFMETHOD(\"negate\", function(compressor, first_in_statement) {\n        return func.call(this, compressor, first_in_statement);\n    });\n});\n\n// Is the callee of this function pure?\nvar global_pure_fns = makePredicate(\"Boolean decodeURI decodeURIComponent Date encodeURI encodeURIComponent Error escape EvalError isFinite isNaN Number Object parseFloat parseInt RangeError ReferenceError String SyntaxError TypeError unescape URIError\");\nAST_Call.DEFMETHOD(\"is_callee_pure\", function(compressor) {\n    if (compressor.option(\"unsafe\")) {\n        var expr = this.expression;\n        var first_arg = (this.args && this.args[0] && this.args[0].evaluate(compressor));\n        if (\n            expr.expression && expr.expression.name === \"hasOwnProperty\" &&\n            (first_arg == null || first_arg.thedef && first_arg.thedef.undeclared)\n        ) {\n            return false;\n        }\n        if (is_undeclared_ref(expr) && global_pure_fns.has(expr.name)) return true;\n        if (\n            expr instanceof AST_Dot\n            && is_undeclared_ref(expr.expression)\n            && is_pure_native_fn(expr.expression.name, expr.property)\n        ) {\n            return true;\n        }\n    }\n    return !!has_annotation(this, _PURE) || !compressor.pure_funcs(this);\n});\n\n// If I call this, is it a pure function?\nAST_Node.DEFMETHOD(\"is_call_pure\", return_false);\nAST_Dot.DEFMETHOD(\"is_call_pure\", function(compressor) {\n    if (!compressor.option(\"unsafe\")) return;\n    const expr = this.expression;\n\n    let native_obj;\n    if (expr instanceof AST_Array) {\n        native_obj = \"Array\";\n    } else if (expr.is_boolean()) {\n        native_obj = \"Boolean\";\n    } else if (expr.is_number(compressor)) {\n        native_obj = \"Number\";\n    } else if (expr instanceof AST_RegExp) {\n        native_obj = \"RegExp\";\n    } else if (expr.is_string(compressor)) {\n        native_obj = \"String\";\n    } else if (!this.may_throw_on_access(compressor)) {\n        native_obj = \"Object\";\n    }\n    return native_obj != null && is_pure_native_method(native_obj, this.property);\n});\n\n// tell me if a statement aborts\nexport const aborts = (thing) => thing && thing.aborts();\n\n(function(def_aborts) {\n    def_aborts(AST_Statement, return_null);\n    def_aborts(AST_Jump, return_this);\n    function block_aborts() {\n        for (var i = 0; i < this.body.length; i++) {\n            if (aborts(this.body[i])) {\n                return this.body[i];\n            }\n        }\n        return null;\n    }\n    def_aborts(AST_Import, function() { return null; });\n    def_aborts(AST_BlockStatement, block_aborts);\n    def_aborts(AST_SwitchBranch, block_aborts);\n    def_aborts(AST_If, function() {\n        return this.alternative && aborts(this.body) && aborts(this.alternative) && this;\n    });\n})(function(node, func) {\n    node.DEFMETHOD(\"aborts\", func);\n});\n\nexport function is_modified(compressor, tw, node, value, level, immutable) {\n    var parent = tw.parent(level);\n    var lhs = is_lhs(node, parent);\n    if (lhs) return lhs;\n    if (!immutable\n        && parent instanceof AST_Call\n        && parent.expression === node\n        && !(value instanceof AST_Arrow)\n        && !(value instanceof AST_Class)\n        && !parent.is_callee_pure(compressor)\n        && (!(value instanceof AST_Function)\n            || !(parent instanceof AST_New) && value.contains_this())) {\n        return true;\n    }\n    if (parent instanceof AST_Array) {\n        return is_modified(compressor, tw, parent, parent, level + 1);\n    }\n    if (parent instanceof AST_ObjectKeyVal && node === parent.value) {\n        var obj = tw.parent(level + 1);\n        return is_modified(compressor, tw, obj, obj, level + 2);\n    }\n    if (parent instanceof AST_PropAccess && parent.expression === node) {\n        var prop = read_property(value, parent.property);\n        return !immutable && is_modified(compressor, tw, parent, prop, level + 1);\n    }\n}\n","/***********************************************************************\n\n  A JavaScript tokenizer / parser / beautifier / compressor.\n  https://github.com/mishoo/UglifyJS2\n\n  -------------------------------- (C) ---------------------------------\n\n                           Author: Mihai Bazon\n                         <mihai.bazon@gmail.com>\n                       http://mihai.bazon.net/blog\n\n  Distributed under the BSD license:\n\n    Copyright 2012 (c) Mihai Bazon <mihai.bazon@gmail.com>\n\n    Redistribution and use in source and binary forms, with or without\n    modification, are permitted provided that the following conditions\n    are met:\n\n        * Redistributions of source code must retain the above\n          copyright notice, this list of conditions and the following\n          disclaimer.\n\n        * Redistributions in binary form must reproduce the above\n          copyright notice, this list of conditions and the following\n          disclaimer in the documentation and/or other materials\n          provided with the distribution.\n\n    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER “AS IS” AND ANY\n    EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n    PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER BE\n    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,\n    OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n    PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n    PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n    THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR\n    TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF\n    THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n    SUCH DAMAGE.\n\n ***********************************************************************/\n\nimport {\n    HOP,\n    makePredicate,\n    return_this,\n    string_template,\n    regexp_source_fix\n} from \"../utils/index.js\";\nimport {\n    AST_Array,\n    AST_BigInt,\n    AST_Binary,\n    AST_Call,\n    AST_Chain,\n    AST_Class,\n    AST_Conditional,\n    AST_Constant,\n    AST_Dot,\n    AST_Expansion,\n    AST_Function,\n    AST_Lambda,\n    AST_New,\n    AST_Node,\n    AST_Object,\n    AST_PropAccess,\n    AST_RegExp,\n    AST_Statement,\n    AST_Symbol,\n    AST_SymbolRef,\n    AST_TemplateString,\n    AST_UnaryPrefix,\n    AST_With,\n} from \"../ast.js\";\nimport { is_undeclared_ref} from \"./inference.js\";\nimport { is_pure_native_value, is_pure_native_fn, is_pure_native_method } from \"./native-objects.js\";\n\n// methods to evaluate a constant expression\n\nfunction def_eval(node, func) {\n    node.DEFMETHOD(\"_eval\", func);\n}\n\n// Used to propagate a nullish short-circuit signal upwards through the chain.\nexport const nullish = Symbol(\"This AST_Chain is nullish\");\n\n// If the node has been successfully reduced to a constant,\n// then its value is returned; otherwise the element itself\n// is returned.\n// They can be distinguished as constant value is never a\n// descendant of AST_Node.\nAST_Node.DEFMETHOD(\"evaluate\", function (compressor) {\n    if (!compressor.option(\"evaluate\"))\n        return this;\n    var val = this._eval(compressor, 1);\n    if (!val || val instanceof RegExp)\n        return val;\n    if (typeof val == \"function\" || typeof val == \"object\" || val == nullish)\n        return this;\n    return val;\n});\n\nvar unaryPrefix = makePredicate(\"! ~ - + void\");\nAST_Node.DEFMETHOD(\"is_constant\", function () {\n    // Accomodate when compress option evaluate=false\n    // as well as the common constant expressions !0 and -1\n    if (this instanceof AST_Constant) {\n        return !(this instanceof AST_RegExp);\n    } else {\n        return this instanceof AST_UnaryPrefix\n            && this.expression instanceof AST_Constant\n            && unaryPrefix.has(this.operator);\n    }\n});\n\ndef_eval(AST_Statement, function () {\n    throw new Error(string_template(\"Cannot evaluate a statement [{file}:{line},{col}]\", this.start));\n});\n\ndef_eval(AST_Lambda, return_this);\ndef_eval(AST_Class, return_this);\ndef_eval(AST_Node, return_this);\ndef_eval(AST_Constant, function () {\n    return this.getValue();\n});\n\ndef_eval(AST_BigInt, return_this);\n\ndef_eval(AST_RegExp, function (compressor) {\n    let evaluated = compressor.evaluated_regexps.get(this);\n    if (evaluated === undefined) {\n        try {\n            evaluated = (0, eval)(this.print_to_string());\n        } catch (e) {\n            evaluated = null;\n        }\n        compressor.evaluated_regexps.set(this, evaluated);\n    }\n    return evaluated || this;\n});\n\ndef_eval(AST_TemplateString, function () {\n    if (this.segments.length !== 1) return this;\n    return this.segments[0].value;\n});\n\ndef_eval(AST_Function, function (compressor) {\n    if (compressor.option(\"unsafe\")) {\n        var fn = function () { };\n        fn.node = this;\n        fn.toString = () => this.print_to_string();\n        return fn;\n    }\n    return this;\n});\n\ndef_eval(AST_Array, function (compressor, depth) {\n    if (compressor.option(\"unsafe\")) {\n        var elements = [];\n        for (var i = 0, len = this.elements.length; i < len; i++) {\n            var element = this.elements[i];\n            var value = element._eval(compressor, depth);\n            if (element === value)\n                return this;\n            elements.push(value);\n        }\n        return elements;\n    }\n    return this;\n});\n\ndef_eval(AST_Object, function (compressor, depth) {\n    if (compressor.option(\"unsafe\")) {\n        var val = {};\n        for (var i = 0, len = this.properties.length; i < len; i++) {\n            var prop = this.properties[i];\n            if (prop instanceof AST_Expansion)\n                return this;\n            var key = prop.key;\n            if (key instanceof AST_Symbol) {\n                key = key.name;\n            } else if (key instanceof AST_Node) {\n                key = key._eval(compressor, depth);\n                if (key === prop.key)\n                    return this;\n            }\n            if (typeof Object.prototype[key] === \"function\") {\n                return this;\n            }\n            if (prop.value instanceof AST_Function)\n                continue;\n            val[key] = prop.value._eval(compressor, depth);\n            if (val[key] === prop.value)\n                return this;\n        }\n        return val;\n    }\n    return this;\n});\n\nvar non_converting_unary = makePredicate(\"! typeof void\");\ndef_eval(AST_UnaryPrefix, function (compressor, depth) {\n    var e = this.expression;\n    // Function would be evaluated to an array and so typeof would\n    // incorrectly return 'object'. Hence making is a special case.\n    if (compressor.option(\"typeofs\")\n        && this.operator == \"typeof\"\n        && (e instanceof AST_Lambda\n            || e instanceof AST_SymbolRef\n            && e.fixed_value() instanceof AST_Lambda)) {\n        return typeof function () { };\n    }\n    if (!non_converting_unary.has(this.operator))\n        depth++;\n    e = e._eval(compressor, depth);\n    if (e === this.expression)\n        return this;\n    switch (this.operator) {\n        case \"!\": return !e;\n        case \"typeof\":\n            // typeof <RegExp> returns \"object\" or \"function\" on different platforms\n            // so cannot evaluate reliably\n            if (e instanceof RegExp)\n                return this;\n            return typeof e;\n        case \"void\": return void e;\n        case \"~\": return ~e;\n        case \"-\": return -e;\n        case \"+\": return +e;\n    }\n    return this;\n});\n\nvar non_converting_binary = makePredicate(\"&& || ?? === !==\");\nconst identity_comparison = makePredicate(\"== != === !==\");\nconst has_identity = value => typeof value === \"object\"\n    || typeof value === \"function\"\n    || typeof value === \"symbol\";\n\ndef_eval(AST_Binary, function (compressor, depth) {\n    if (!non_converting_binary.has(this.operator))\n        depth++;\n\n    var left = this.left._eval(compressor, depth);\n    if (left === this.left)\n        return this;\n    var right = this.right._eval(compressor, depth);\n    if (right === this.right)\n        return this;\n    var result;\n\n    if (left != null\n        && right != null\n        && identity_comparison.has(this.operator)\n        && has_identity(left)\n        && has_identity(right)\n        && typeof left === typeof right) {\n        // Do not compare by reference\n        return this;\n    }\n\n    switch (this.operator) {\n        case \"&&\": result = left && right; break;\n        case \"||\": result = left || right; break;\n        case \"??\": result = left != null ? left : right; break;\n        case \"|\": result = left | right; break;\n        case \"&\": result = left & right; break;\n        case \"^\": result = left ^ right; break;\n        case \"+\": result = left + right; break;\n        case \"*\": result = left * right; break;\n        case \"**\": result = Math.pow(left, right); break;\n        case \"/\": result = left / right; break;\n        case \"%\": result = left % right; break;\n        case \"-\": result = left - right; break;\n        case \"<<\": result = left << right; break;\n        case \">>\": result = left >> right; break;\n        case \">>>\": result = left >>> right; break;\n        case \"==\": result = left == right; break;\n        case \"===\": result = left === right; break;\n        case \"!=\": result = left != right; break;\n        case \"!==\": result = left !== right; break;\n        case \"<\": result = left < right; break;\n        case \"<=\": result = left <= right; break;\n        case \">\": result = left > right; break;\n        case \">=\": result = left >= right; break;\n        default:\n            return this;\n    }\n    if (isNaN(result) && compressor.find_parent(AST_With)) {\n        // leave original expression as is\n        return this;\n    }\n    return result;\n});\n\ndef_eval(AST_Conditional, function (compressor, depth) {\n    var condition = this.condition._eval(compressor, depth);\n    if (condition === this.condition)\n        return this;\n    var node = condition ? this.consequent : this.alternative;\n    var value = node._eval(compressor, depth);\n    return value === node ? this : value;\n});\n\n// Set of AST_SymbolRef which are currently being evaluated.\n// Avoids infinite recursion of ._eval()\nconst reentrant_ref_eval = new Set();\ndef_eval(AST_SymbolRef, function (compressor, depth) {\n    if (reentrant_ref_eval.has(this))\n        return this;\n\n    var fixed = this.fixed_value();\n    if (!fixed)\n        return this;\n\n    reentrant_ref_eval.add(this);\n    const value = fixed._eval(compressor, depth);\n    reentrant_ref_eval.delete(this);\n\n    if (value === fixed)\n        return this;\n\n    if (value && typeof value == \"object\") {\n        var escaped = this.definition().escaped;\n        if (escaped && depth > escaped)\n            return this;\n    }\n    return value;\n});\n\nconst global_objs = { Array, Math, Number, Object, String };\n\nconst regexp_flags = new Set([\n    \"dotAll\",\n    \"global\",\n    \"ignoreCase\",\n    \"multiline\",\n    \"sticky\",\n    \"unicode\",\n]);\n\ndef_eval(AST_PropAccess, function (compressor, depth) {\n    const obj = this.expression._eval(compressor, depth);\n    if (obj === nullish || (this.optional && obj == null)) return nullish;\n    if (compressor.option(\"unsafe\")) {\n        var key = this.property;\n        if (key instanceof AST_Node) {\n            key = key._eval(compressor, depth);\n            if (key === this.property)\n                return this;\n        }\n        var exp = this.expression;\n        var val;\n        if (is_undeclared_ref(exp)) {\n\n            var aa;\n            var first_arg = exp.name === \"hasOwnProperty\"\n                && key === \"call\"\n                && (aa = compressor.parent() && compressor.parent().args)\n                && (aa && aa[0]\n                    && aa[0].evaluate(compressor));\n\n            first_arg = first_arg instanceof AST_Dot ? first_arg.expression : first_arg;\n\n            if (first_arg == null || first_arg.thedef && first_arg.thedef.undeclared) {\n                return this.clone();\n            }\n            if (!is_pure_native_value(exp.name, key))\n                return this;\n            val = global_objs[exp.name];\n        } else {\n            val = exp._eval(compressor, depth + 1);\n            if (val instanceof RegExp) {\n                if (key == \"source\") {\n                    return regexp_source_fix(val.source);\n                } else if (key == \"flags\" || regexp_flags.has(key)) {\n                    return val[key];\n                }\n            }\n            if (!val || val === exp || !HOP(val, key))\n                return this;\n            if (typeof val == \"function\")\n                switch (key) {\n                    case \"name\":\n                        return val.node.name ? val.node.name.name : \"\";\n                    case \"length\":\n                        return val.node.length_property();\n                    default:\n                        return this;\n                }\n        }\n        return val[key];\n    }\n    return this;\n});\n\ndef_eval(AST_Chain, function (compressor, depth) {\n    const evaluated = this.expression._eval(compressor, depth);\n    return evaluated === nullish\n        ? undefined\n        : evaluated === this.expression\n          ? this\n          : evaluated;\n});\n\ndef_eval(AST_Call, function (compressor, depth) {\n    var exp = this.expression;\n\n    const callee = exp._eval(compressor, depth);\n    if (callee === nullish || (this.optional && callee == null)) return nullish;\n\n    if (compressor.option(\"unsafe\") && exp instanceof AST_PropAccess) {\n        var key = exp.property;\n        if (key instanceof AST_Node) {\n            key = key._eval(compressor, depth);\n            if (key === exp.property)\n                return this;\n        }\n        var val;\n        var e = exp.expression;\n        if (is_undeclared_ref(e)) {\n            var first_arg = e.name === \"hasOwnProperty\" &&\n                key === \"call\" &&\n                (this.args[0] && this.args[0].evaluate(compressor));\n\n            first_arg = first_arg instanceof AST_Dot ? first_arg.expression : first_arg;\n\n            if ((first_arg == null || first_arg.thedef && first_arg.thedef.undeclared)) {\n                return this.clone();\n            }\n            if (!is_pure_native_fn(e.name, key)) return this;\n            val = global_objs[e.name];\n        } else {\n            val = e._eval(compressor, depth + 1);\n            if (val === e || !val)\n                return this;\n            if (!is_pure_native_method(val.constructor.name, key))\n                return this;\n        }\n        var args = [];\n        for (var i = 0, len = this.args.length; i < len; i++) {\n            var arg = this.args[i];\n            var value = arg._eval(compressor, depth);\n            if (arg === value)\n                return this;\n            if (arg instanceof AST_Lambda)\n                return this;\n            args.push(value);\n        }\n        try {\n            return val[key].apply(val, args);\n        } catch (ex) {\n            // We don't really care\n        }\n    }\n    return this;\n});\n\n// Also a subclass of AST_Call\ndef_eval(AST_New, return_this);\n","/***********************************************************************\n\n  A JavaScript tokenizer / parser / beautifier / compressor.\n  https://github.com/mishoo/UglifyJS2\n\n  -------------------------------- (C) ---------------------------------\n\n                           Author: Mihai Bazon\n                         <mihai.bazon@gmail.com>\n                       http://mihai.bazon.net/blog\n\n  Distributed under the BSD license:\n\n    Copyright 2012 (c) Mihai Bazon <mihai.bazon@gmail.com>\n\n    Redistribution and use in source and binary forms, with or without\n    modification, are permitted provided that the following conditions\n    are met:\n\n        * Redistributions of source code must retain the above\n          copyright notice, this list of conditions and the following\n          disclaimer.\n\n        * Redistributions in binary form must reproduce the above\n          copyright notice, this list of conditions and the following\n          disclaimer in the documentation and/or other materials\n          provided with the distribution.\n\n    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER “AS IS” AND ANY\n    EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n    PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER BE\n    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,\n    OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n    PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n    PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n    THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR\n    TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF\n    THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n    SUCH DAMAGE.\n\n ***********************************************************************/\n\nimport {\n    AST_Accessor,\n    AST_Array,\n    AST_Arrow,\n    AST_Assign,\n    AST_Binary,\n    AST_Call,\n    AST_Chain,\n    AST_Class,\n    AST_ClassProperty,\n    AST_ConciseMethod,\n    AST_Conditional,\n    AST_Constant,\n    AST_Dot,\n    AST_Expansion,\n    AST_Function,\n    AST_Node,\n    AST_Number,\n    AST_Object,\n    AST_ObjectGetter,\n    AST_ObjectKeyVal,\n    AST_ObjectProperty,\n    AST_ObjectSetter,\n    AST_PropAccess,\n    AST_Scope,\n    AST_Sequence,\n    AST_Sub,\n    AST_SymbolRef,\n    AST_TemplateSegment,\n    AST_TemplateString,\n    AST_This,\n    AST_Unary,\n} from \"../ast.js\";\nimport { make_node, return_null, return_this } from \"../utils/index.js\";\nimport { first_in_statement } from \"../utils/first_in_statement.js\";\n\nimport { pure_prop_access_globals } from \"./native-objects.js\";\nimport { lazy_op, unary_side_effects, is_nullish_shortcircuited } from \"./inference.js\";\nimport { WRITE_ONLY, set_flag, clear_flag } from \"./compressor-flags.js\";\nimport { make_sequence, is_func_expr, is_iife_call } from \"./common.js\";\n\n// AST_Node#drop_side_effect_free() gets called when we don't care about the value,\n// only about side effects. We'll be defining this method for each node type in this module\n//\n// Examples:\n// foo++ -> foo++\n// 1 + func() -> func()\n// 10 -> (nothing)\n// knownPureFunc(foo++) -> foo++\n\nfunction def_drop_side_effect_free(node, func) {\n    node.DEFMETHOD(\"drop_side_effect_free\", func);\n}\n\n// Drop side-effect-free elements from an array of expressions.\n// Returns an array of expressions with side-effects or null\n// if all elements were dropped. Note: original array may be\n// returned if nothing changed.\nfunction trim(nodes, compressor, first_in_statement) {\n    var len = nodes.length;\n    if (!len)  return null;\n\n    var ret = [], changed = false;\n    for (var i = 0; i < len; i++) {\n        var node = nodes[i].drop_side_effect_free(compressor, first_in_statement);\n        changed |= node !== nodes[i];\n        if (node) {\n            ret.push(node);\n            first_in_statement = false;\n        }\n    }\n    return changed ? ret.length ? ret : null : nodes;\n}\n\ndef_drop_side_effect_free(AST_Node, return_this);\ndef_drop_side_effect_free(AST_Constant, return_null);\ndef_drop_side_effect_free(AST_This, return_null);\n\ndef_drop_side_effect_free(AST_Call, function (compressor, first_in_statement) {\n    if (is_nullish_shortcircuited(this, compressor)) {\n        return this.expression.drop_side_effect_free(compressor, first_in_statement);\n    }\n\n    if (!this.is_callee_pure(compressor)) {\n        if (this.expression.is_call_pure(compressor)) {\n            var exprs = this.args.slice();\n            exprs.unshift(this.expression.expression);\n            exprs = trim(exprs, compressor, first_in_statement);\n            return exprs && make_sequence(this, exprs);\n        }\n        if (is_func_expr(this.expression)\n            && (!this.expression.name || !this.expression.name.definition().references.length)) {\n            var node = this.clone();\n            node.expression.process_expression(false, compressor);\n            return node;\n        }\n        return this;\n    }\n\n    var args = trim(this.args, compressor, first_in_statement);\n    return args && make_sequence(this, args);\n});\n\ndef_drop_side_effect_free(AST_Accessor, return_null);\n\ndef_drop_side_effect_free(AST_Function, return_null);\n\ndef_drop_side_effect_free(AST_Arrow, return_null);\n\ndef_drop_side_effect_free(AST_Class, function (compressor) {\n    const with_effects = [];\n    const trimmed_extends = this.extends && this.extends.drop_side_effect_free(compressor);\n    if (trimmed_extends)\n        with_effects.push(trimmed_extends);\n    for (const prop of this.properties) {\n        const trimmed_prop = prop.drop_side_effect_free(compressor);\n        if (trimmed_prop)\n            with_effects.push(trimmed_prop);\n    }\n    if (!with_effects.length)\n        return null;\n    return make_sequence(this, with_effects);\n});\n\ndef_drop_side_effect_free(AST_Binary, function (compressor, first_in_statement) {\n    var right = this.right.drop_side_effect_free(compressor);\n    if (!right)\n        return this.left.drop_side_effect_free(compressor, first_in_statement);\n    if (lazy_op.has(this.operator)) {\n        if (right === this.right)\n            return this;\n        var node = this.clone();\n        node.right = right;\n        return node;\n    } else {\n        var left = this.left.drop_side_effect_free(compressor, first_in_statement);\n        if (!left)\n            return this.right.drop_side_effect_free(compressor, first_in_statement);\n        return make_sequence(this, [left, right]);\n    }\n});\n\ndef_drop_side_effect_free(AST_Assign, function (compressor) {\n    if (this.logical)\n        return this;\n\n    var left = this.left;\n    if (left.has_side_effects(compressor)\n        || compressor.has_directive(\"use strict\")\n        && left instanceof AST_PropAccess\n        && left.expression.is_constant()) {\n        return this;\n    }\n    set_flag(this, WRITE_ONLY);\n    while (left instanceof AST_PropAccess) {\n        left = left.expression;\n    }\n    if (left.is_constant_expression(compressor.find_parent(AST_Scope))) {\n        return this.right.drop_side_effect_free(compressor);\n    }\n    return this;\n});\n\ndef_drop_side_effect_free(AST_Conditional, function (compressor) {\n    var consequent = this.consequent.drop_side_effect_free(compressor);\n    var alternative = this.alternative.drop_side_effect_free(compressor);\n    if (consequent === this.consequent && alternative === this.alternative)\n        return this;\n    if (!consequent)\n        return alternative ? make_node(AST_Binary, this, {\n            operator: \"||\",\n            left: this.condition,\n            right: alternative\n        }) : this.condition.drop_side_effect_free(compressor);\n    if (!alternative)\n        return make_node(AST_Binary, this, {\n            operator: \"&&\",\n            left: this.condition,\n            right: consequent\n        });\n    var node = this.clone();\n    node.consequent = consequent;\n    node.alternative = alternative;\n    return node;\n});\n\ndef_drop_side_effect_free(AST_Unary, function (compressor, first_in_statement) {\n    if (unary_side_effects.has(this.operator)) {\n        if (!this.expression.has_side_effects(compressor)) {\n            set_flag(this, WRITE_ONLY);\n        } else {\n            clear_flag(this, WRITE_ONLY);\n        }\n        return this;\n    }\n    if (this.operator == \"typeof\" && this.expression instanceof AST_SymbolRef)\n        return null;\n    var expression = this.expression.drop_side_effect_free(compressor, first_in_statement);\n    if (first_in_statement && expression && is_iife_call(expression)) {\n        if (expression === this.expression && this.operator == \"!\")\n            return this;\n        return expression.negate(compressor, first_in_statement);\n    }\n    return expression;\n});\n\ndef_drop_side_effect_free(AST_SymbolRef, function (compressor) {\n    const safe_access = this.is_declared(compressor)\n        || pure_prop_access_globals.has(this.name);\n    return safe_access ? null : this;\n});\n\ndef_drop_side_effect_free(AST_Object, function (compressor, first_in_statement) {\n    var values = trim(this.properties, compressor, first_in_statement);\n    return values && make_sequence(this, values);\n});\n\ndef_drop_side_effect_free(AST_ObjectProperty, function (compressor, first_in_statement) {\n    const computed_key = this instanceof AST_ObjectKeyVal && this.key instanceof AST_Node;\n    const key = computed_key && this.key.drop_side_effect_free(compressor, first_in_statement);\n    const value = this.value && this.value.drop_side_effect_free(compressor, first_in_statement);\n    if (key && value) {\n        return make_sequence(this, [key, value]);\n    }\n    return key || value;\n});\n\ndef_drop_side_effect_free(AST_ClassProperty, function (compressor) {\n    const key = this.computed_key() && this.key.drop_side_effect_free(compressor);\n\n    const value = this.static && this.value\n        && this.value.drop_side_effect_free(compressor);\n\n    if (key && value)\n        return make_sequence(this, [key, value]);\n    return key || value || null;\n});\n\ndef_drop_side_effect_free(AST_ConciseMethod, function () {\n    return this.computed_key() ? this.key : null;\n});\n\ndef_drop_side_effect_free(AST_ObjectGetter, function () {\n    return this.computed_key() ? this.key : null;\n});\n\ndef_drop_side_effect_free(AST_ObjectSetter, function () {\n    return this.computed_key() ? this.key : null;\n});\n\ndef_drop_side_effect_free(AST_Array, function (compressor, first_in_statement) {\n    var values = trim(this.elements, compressor, first_in_statement);\n    return values && make_sequence(this, values);\n});\n\ndef_drop_side_effect_free(AST_Dot, function (compressor, first_in_statement) {\n    if (is_nullish_shortcircuited(this, compressor)) {\n        return this.expression.drop_side_effect_free(compressor, first_in_statement);\n    }\n    if (this.expression.may_throw_on_access(compressor)) return this;\n\n    return this.expression.drop_side_effect_free(compressor, first_in_statement);\n});\n\ndef_drop_side_effect_free(AST_Sub, function (compressor, first_in_statement) {\n    if (is_nullish_shortcircuited(this, compressor)) {\n        return this.expression.drop_side_effect_free(compressor, first_in_statement);\n    }\n    if (this.expression.may_throw_on_access(compressor)) return this;\n\n    var expression = this.expression.drop_side_effect_free(compressor, first_in_statement);\n    if (!expression)\n        return this.property.drop_side_effect_free(compressor, first_in_statement);\n    var property = this.property.drop_side_effect_free(compressor);\n    if (!property)\n        return expression;\n    return make_sequence(this, [expression, property]);\n});\n\ndef_drop_side_effect_free(AST_Chain, function (compressor, first_in_statement) {\n    return this.expression.drop_side_effect_free(compressor, first_in_statement);\n});\n\ndef_drop_side_effect_free(AST_Sequence, function (compressor) {\n    var last = this.tail_node();\n    var expr = last.drop_side_effect_free(compressor);\n    if (expr === last)\n        return this;\n    var expressions = this.expressions.slice(0, -1);\n    if (expr)\n        expressions.push(expr);\n    if (!expressions.length) {\n        return make_node(AST_Number, this, { value: 0 });\n    }\n    return make_sequence(this, expressions);\n});\n\ndef_drop_side_effect_free(AST_Expansion, function (compressor, first_in_statement) {\n    return this.expression.drop_side_effect_free(compressor, first_in_statement);\n});\n\ndef_drop_side_effect_free(AST_TemplateSegment, return_null);\n\ndef_drop_side_effect_free(AST_TemplateString, function (compressor) {\n    var values = trim(this.segments, compressor, first_in_statement);\n    return values && make_sequence(this, values);\n});\n","/***********************************************************************\n\n  A JavaScript tokenizer / parser / beautifier / compressor.\n  https://github.com/mishoo/UglifyJS2\n\n  -------------------------------- (C) ---------------------------------\n\n                           Author: Mihai Bazon\n                         <mihai.bazon@gmail.com>\n                       http://mihai.bazon.net/blog\n\n  Distributed under the BSD license:\n\n    Copyright 2012 (c) Mihai Bazon <mihai.bazon@gmail.com>\n\n    Redistribution and use in source and binary forms, with or without\n    modification, are permitted provided that the following conditions\n    are met:\n\n        * Redistributions of source code must retain the above\n          copyright notice, this list of conditions and the following\n          disclaimer.\n\n        * Redistributions in binary form must reproduce the above\n          copyright notice, this list of conditions and the following\n          disclaimer in the documentation and/or other materials\n          provided with the distribution.\n\n    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER “AS IS” AND ANY\n    EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n    PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER BE\n    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,\n    OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n    PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n    PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n    THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR\n    TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF\n    THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n    SUCH DAMAGE.\n\n ***********************************************************************/\n\nimport {\n    AST_Accessor,\n    AST_Array,\n    AST_Assign,\n    AST_Await,\n    AST_Binary,\n    AST_Block,\n    AST_Call,\n    AST_Case,\n    AST_Chain,\n    AST_Class,\n    AST_ClassExpression,\n    AST_Conditional,\n    AST_Default,\n    AST_Defun,\n    AST_Destructuring,\n    AST_Do,\n    AST_Exit,\n    AST_Expansion,\n    AST_For,\n    AST_ForIn,\n    AST_If,\n    AST_LabeledStatement,\n    AST_Lambda,\n    AST_New,\n    AST_Node,\n    AST_Number,\n    AST_ObjectKeyVal,\n    AST_PropAccess,\n    AST_Sequence,\n    AST_SimpleStatement,\n    AST_Symbol,\n    AST_SymbolCatch,\n    AST_SymbolConst,\n    AST_SymbolDefun,\n    AST_SymbolFunarg,\n    AST_SymbolLambda,\n    AST_SymbolRef,\n    AST_This,\n    AST_Toplevel,\n    AST_Try,\n    AST_Unary,\n    AST_UnaryPrefix,\n    AST_Undefined,\n    AST_VarDef,\n    AST_While,\n    AST_Yield,\n\n    walk,\n    walk_body,\n\n    _INLINE,\n    _NOINLINE,\n    _PURE\n} from \"../ast.js\";\nimport { HOP, make_node, noop } from \"../utils/index.js\";\n\nimport { lazy_op, is_modified } from \"./inference.js\";\nimport { INLINED, clear_flag } from \"./compressor-flags.js\";\nimport { read_property, has_break_or_continue, is_recursive_ref } from \"./common.js\";\n\n// Define the method AST_Node#reduce_vars, which goes through the AST in\n// execution order to perform basic flow analysis\n\nfunction def_reduce_vars(node, func) {\n    node.DEFMETHOD(\"reduce_vars\", func);\n}\n\ndef_reduce_vars(AST_Node, noop);\n\nfunction reset_def(compressor, def) {\n    def.assignments = 0;\n    def.chained = false;\n    def.direct_access = false;\n    def.escaped = 0;\n    def.recursive_refs = 0;\n    def.references = [];\n    def.single_use = undefined;\n    if (def.scope.pinned()) {\n        def.fixed = false;\n    } else if (def.orig[0] instanceof AST_SymbolConst || !compressor.exposed(def)) {\n        def.fixed = def.init;\n    } else {\n        def.fixed = false;\n    }\n}\n\nfunction reset_variables(tw, compressor, node) {\n    node.variables.forEach(function(def) {\n        reset_def(compressor, def);\n        if (def.fixed === null) {\n            tw.defs_to_safe_ids.set(def.id, tw.safe_ids);\n            mark(tw, def, true);\n        } else if (def.fixed) {\n            tw.loop_ids.set(def.id, tw.in_loop);\n            mark(tw, def, true);\n        }\n    });\n}\n\nfunction reset_block_variables(compressor, node) {\n    if (node.block_scope) node.block_scope.variables.forEach((def) => {\n        reset_def(compressor, def);\n    });\n}\n\nfunction push(tw) {\n    tw.safe_ids = Object.create(tw.safe_ids);\n}\n\nfunction pop(tw) {\n    tw.safe_ids = Object.getPrototypeOf(tw.safe_ids);\n}\n\nfunction mark(tw, def, safe) {\n    tw.safe_ids[def.id] = safe;\n}\n\nfunction safe_to_read(tw, def) {\n    if (def.single_use == \"m\") return false;\n    if (tw.safe_ids[def.id]) {\n        if (def.fixed == null) {\n            var orig = def.orig[0];\n            if (orig instanceof AST_SymbolFunarg || orig.name == \"arguments\") return false;\n            def.fixed = make_node(AST_Undefined, orig);\n        }\n        return true;\n    }\n    return def.fixed instanceof AST_Defun;\n}\n\nfunction safe_to_assign(tw, def, scope, value) {\n    if (def.fixed === undefined) return true;\n    let def_safe_ids;\n    if (def.fixed === null\n        && (def_safe_ids = tw.defs_to_safe_ids.get(def.id))\n    ) {\n        def_safe_ids[def.id] = false;\n        tw.defs_to_safe_ids.delete(def.id);\n        return true;\n    }\n    if (!HOP(tw.safe_ids, def.id)) return false;\n    if (!safe_to_read(tw, def)) return false;\n    if (def.fixed === false) return false;\n    if (def.fixed != null && (!value || def.references.length > def.assignments)) return false;\n    if (def.fixed instanceof AST_Defun) {\n        return value instanceof AST_Node && def.fixed.parent_scope === scope;\n    }\n    return def.orig.every((sym) => {\n        return !(sym instanceof AST_SymbolConst\n            || sym instanceof AST_SymbolDefun\n            || sym instanceof AST_SymbolLambda);\n    });\n}\n\nfunction ref_once(tw, compressor, def) {\n    return compressor.option(\"unused\")\n        && !def.scope.pinned()\n        && def.references.length - def.recursive_refs == 1\n        && tw.loop_ids.get(def.id) === tw.in_loop;\n}\n\nfunction is_immutable(value) {\n    if (!value) return false;\n    return value.is_constant()\n        || value instanceof AST_Lambda\n        || value instanceof AST_This;\n}\n\n// A definition \"escapes\" when its value can leave the point of use.\n// Example: `a = b || c`\n// In this example, \"b\" and \"c\" are escaping, because they're going into \"a\"\n//\n// def.escaped is != 0 when it escapes.\n//\n// When greater than 1, it means that N chained properties will be read off\n// of that def before an escape occurs. This is useful for evaluating\n// property accesses, where you need to know when to stop.\nfunction mark_escaped(tw, d, scope, node, value, level = 0, depth = 1) {\n    var parent = tw.parent(level);\n    if (value) {\n        if (value.is_constant()) return;\n        if (value instanceof AST_ClassExpression) return;\n    }\n\n    if (\n        parent instanceof AST_Assign && (parent.operator === \"=\" || parent.logical) && node === parent.right\n        || parent instanceof AST_Call && (node !== parent.expression || parent instanceof AST_New)\n        || parent instanceof AST_Exit && node === parent.value && node.scope !== d.scope\n        || parent instanceof AST_VarDef && node === parent.value\n        || parent instanceof AST_Yield && node === parent.value && node.scope !== d.scope\n    ) {\n        if (depth > 1 && !(value && value.is_constant_expression(scope))) depth = 1;\n        if (!d.escaped || d.escaped > depth) d.escaped = depth;\n        return;\n    } else if (\n        parent instanceof AST_Array\n        || parent instanceof AST_Await\n        || parent instanceof AST_Binary && lazy_op.has(parent.operator)\n        || parent instanceof AST_Conditional && node !== parent.condition\n        || parent instanceof AST_Expansion\n        || parent instanceof AST_Sequence && node === parent.tail_node()\n    ) {\n        mark_escaped(tw, d, scope, parent, parent, level + 1, depth);\n    } else if (parent instanceof AST_ObjectKeyVal && node === parent.value) {\n        var obj = tw.parent(level + 1);\n\n        mark_escaped(tw, d, scope, obj, obj, level + 2, depth);\n    } else if (parent instanceof AST_PropAccess && node === parent.expression) {\n        value = read_property(value, parent.property);\n\n        mark_escaped(tw, d, scope, parent, value, level + 1, depth + 1);\n        if (value) return;\n    }\n\n    if (level > 0) return;\n    if (parent instanceof AST_Sequence && node !== parent.tail_node()) return;\n    if (parent instanceof AST_SimpleStatement) return;\n\n    d.direct_access = true;\n}\n\nconst suppress = node => walk(node, node => {\n    if (!(node instanceof AST_Symbol)) return;\n    var d = node.definition();\n    if (!d) return;\n    if (node instanceof AST_SymbolRef) d.references.push(node);\n    d.fixed = false;\n});\n\ndef_reduce_vars(AST_Accessor, function(tw, descend, compressor) {\n    push(tw);\n    reset_variables(tw, compressor, this);\n    descend();\n    pop(tw);\n    return true;\n});\n\ndef_reduce_vars(AST_Assign, function(tw, descend, compressor) {\n    var node = this;\n    if (node.left instanceof AST_Destructuring) {\n        suppress(node.left);\n        return;\n    }\n\n    const finish_walk = () => {\n        if (node.logical) {\n            node.left.walk(tw);\n\n            push(tw);\n            node.right.walk(tw);\n            pop(tw);\n\n            return true;\n        }\n    };\n\n    var sym = node.left;\n    if (!(sym instanceof AST_SymbolRef)) return finish_walk();\n\n    var def = sym.definition();\n    var safe = safe_to_assign(tw, def, sym.scope, node.right);\n    def.assignments++;\n    if (!safe) return finish_walk();\n\n    var fixed = def.fixed;\n    if (!fixed && node.operator != \"=\" && !node.logical) return finish_walk();\n\n    var eq = node.operator == \"=\";\n    var value = eq ? node.right : node;\n    if (is_modified(compressor, tw, node, value, 0)) return finish_walk();\n\n    def.references.push(sym);\n\n    if (!node.logical) {\n        if (!eq) def.chained = true;\n\n        def.fixed = eq ? function() {\n            return node.right;\n        } : function() {\n            return make_node(AST_Binary, node, {\n                operator: node.operator.slice(0, -1),\n                left: fixed instanceof AST_Node ? fixed : fixed(),\n                right: node.right\n            });\n        };\n    }\n\n    if (node.logical) {\n        mark(tw, def, false);\n        push(tw);\n        node.right.walk(tw);\n        pop(tw);\n        return true;\n    }\n\n    mark(tw, def, false);\n    node.right.walk(tw);\n    mark(tw, def, true);\n\n    mark_escaped(tw, def, sym.scope, node, value, 0, 1);\n\n    return true;\n});\n\ndef_reduce_vars(AST_Binary, function(tw) {\n    if (!lazy_op.has(this.operator)) return;\n    this.left.walk(tw);\n    push(tw);\n    this.right.walk(tw);\n    pop(tw);\n    return true;\n});\n\ndef_reduce_vars(AST_Block, function(tw, descend, compressor) {\n    reset_block_variables(compressor, this);\n});\n\ndef_reduce_vars(AST_Case, function(tw) {\n    push(tw);\n    this.expression.walk(tw);\n    pop(tw);\n    push(tw);\n    walk_body(this, tw);\n    pop(tw);\n    return true;\n});\n\ndef_reduce_vars(AST_Class, function(tw, descend) {\n    clear_flag(this, INLINED);\n    push(tw);\n    descend();\n    pop(tw);\n    return true;\n});\n\ndef_reduce_vars(AST_Conditional, function(tw) {\n    this.condition.walk(tw);\n    push(tw);\n    this.consequent.walk(tw);\n    pop(tw);\n    push(tw);\n    this.alternative.walk(tw);\n    pop(tw);\n    return true;\n});\n\ndef_reduce_vars(AST_Chain, function(tw, descend) {\n    // Chains' conditions apply left-to-right, cumulatively.\n    // If we walk normally we don't go in that order because we would pop before pushing again\n    // Solution: AST_PropAccess and AST_Call push when they are optional, and never pop.\n    // Then we pop everything when they are done being walked.\n    const safe_ids = tw.safe_ids;\n\n    descend();\n\n    // Unroll back to start\n    tw.safe_ids = safe_ids;\n    return true;\n});\n\ndef_reduce_vars(AST_Call, function (tw) {\n    this.expression.walk(tw);\n\n    if (this.optional) {\n        // Never pop -- it's popped at AST_Chain above\n        push(tw);\n    }\n\n    for (const arg of this.args) arg.walk(tw);\n\n    return true;\n});\n\ndef_reduce_vars(AST_PropAccess, function (tw) {\n    if (!this.optional) return;\n\n    this.expression.walk(tw);\n\n    // Never pop -- it's popped at AST_Chain above\n    push(tw);\n\n    if (this.property instanceof AST_Node) this.property.walk(tw);\n\n    return true;\n});\n\ndef_reduce_vars(AST_Default, function(tw, descend) {\n    push(tw);\n    descend();\n    pop(tw);\n    return true;\n});\n\nfunction mark_lambda(tw, descend, compressor) {\n    clear_flag(this, INLINED);\n    push(tw);\n    reset_variables(tw, compressor, this);\n    if (this.uses_arguments) {\n        descend();\n        pop(tw);\n        return;\n    }\n    var iife;\n    if (!this.name\n        && (iife = tw.parent()) instanceof AST_Call\n        && iife.expression === this\n        && !iife.args.some(arg => arg instanceof AST_Expansion)\n        && this.argnames.every(arg_name => arg_name instanceof AST_Symbol)\n    ) {\n        // Virtually turn IIFE parameters into variable definitions:\n        //   (function(a,b) {...})(c,d) => (function() {var a=c,b=d; ...})()\n        // So existing transformation rules can work on them.\n        this.argnames.forEach((arg, i) => {\n            if (!arg.definition) return;\n            var d = arg.definition();\n            // Avoid setting fixed when there's more than one origin for a variable value\n            if (d.orig.length > 1) return;\n            if (d.fixed === undefined && (!this.uses_arguments || tw.has_directive(\"use strict\"))) {\n                d.fixed = function() {\n                    return iife.args[i] || make_node(AST_Undefined, iife);\n                };\n                tw.loop_ids.set(d.id, tw.in_loop);\n                mark(tw, d, true);\n            } else {\n                d.fixed = false;\n            }\n        });\n    }\n    descend();\n    pop(tw);\n    return true;\n}\n\ndef_reduce_vars(AST_Lambda, mark_lambda);\n\ndef_reduce_vars(AST_Do, function(tw, descend, compressor) {\n    reset_block_variables(compressor, this);\n    const saved_loop = tw.in_loop;\n    tw.in_loop = this;\n    push(tw);\n    this.body.walk(tw);\n    if (has_break_or_continue(this)) {\n        pop(tw);\n        push(tw);\n    }\n    this.condition.walk(tw);\n    pop(tw);\n    tw.in_loop = saved_loop;\n    return true;\n});\n\ndef_reduce_vars(AST_For, function(tw, descend, compressor) {\n    reset_block_variables(compressor, this);\n    if (this.init) this.init.walk(tw);\n    const saved_loop = tw.in_loop;\n    tw.in_loop = this;\n    push(tw);\n    if (this.condition) this.condition.walk(tw);\n    this.body.walk(tw);\n    if (this.step) {\n        if (has_break_or_continue(this)) {\n            pop(tw);\n            push(tw);\n        }\n        this.step.walk(tw);\n    }\n    pop(tw);\n    tw.in_loop = saved_loop;\n    return true;\n});\n\ndef_reduce_vars(AST_ForIn, function(tw, descend, compressor) {\n    reset_block_variables(compressor, this);\n    suppress(this.init);\n    this.object.walk(tw);\n    const saved_loop = tw.in_loop;\n    tw.in_loop = this;\n    push(tw);\n    this.body.walk(tw);\n    pop(tw);\n    tw.in_loop = saved_loop;\n    return true;\n});\n\ndef_reduce_vars(AST_If, function(tw) {\n    this.condition.walk(tw);\n    push(tw);\n    this.body.walk(tw);\n    pop(tw);\n    if (this.alternative) {\n        push(tw);\n        this.alternative.walk(tw);\n        pop(tw);\n    }\n    return true;\n});\n\ndef_reduce_vars(AST_LabeledStatement, function(tw) {\n    push(tw);\n    this.body.walk(tw);\n    pop(tw);\n    return true;\n});\n\ndef_reduce_vars(AST_SymbolCatch, function() {\n    this.definition().fixed = false;\n});\n\ndef_reduce_vars(AST_SymbolRef, function(tw, descend, compressor) {\n    var d = this.definition();\n    d.references.push(this);\n    if (d.references.length == 1\n        && !d.fixed\n        && d.orig[0] instanceof AST_SymbolDefun) {\n        tw.loop_ids.set(d.id, tw.in_loop);\n    }\n    var fixed_value;\n    if (d.fixed === undefined || !safe_to_read(tw, d)) {\n        d.fixed = false;\n    } else if (d.fixed) {\n        fixed_value = this.fixed_value();\n        if (\n            fixed_value instanceof AST_Lambda\n            && is_recursive_ref(tw, d)\n        ) {\n            d.recursive_refs++;\n        } else if (fixed_value\n            && !compressor.exposed(d)\n            && ref_once(tw, compressor, d)\n        ) {\n            d.single_use =\n                fixed_value instanceof AST_Lambda && !fixed_value.pinned()\n                || fixed_value instanceof AST_Class\n                || d.scope === this.scope && fixed_value.is_constant_expression();\n        } else {\n            d.single_use = false;\n        }\n        if (is_modified(compressor, tw, this, fixed_value, 0, is_immutable(fixed_value))) {\n            if (d.single_use) {\n                d.single_use = \"m\";\n            } else {\n                d.fixed = false;\n            }\n        }\n    }\n    mark_escaped(tw, d, this.scope, this, fixed_value, 0, 1);\n});\n\ndef_reduce_vars(AST_Toplevel, function(tw, descend, compressor) {\n    this.globals.forEach(function(def) {\n        reset_def(compressor, def);\n    });\n    reset_variables(tw, compressor, this);\n});\n\ndef_reduce_vars(AST_Try, function(tw, descend, compressor) {\n    reset_block_variables(compressor, this);\n    push(tw);\n    walk_body(this, tw);\n    pop(tw);\n    if (this.bcatch) {\n        push(tw);\n        this.bcatch.walk(tw);\n        pop(tw);\n    }\n    if (this.bfinally) this.bfinally.walk(tw);\n    return true;\n});\n\ndef_reduce_vars(AST_Unary, function(tw) {\n    var node = this;\n    if (node.operator !== \"++\" && node.operator !== \"--\") return;\n    var exp = node.expression;\n    if (!(exp instanceof AST_SymbolRef)) return;\n    var def = exp.definition();\n    var safe = safe_to_assign(tw, def, exp.scope, true);\n    def.assignments++;\n    if (!safe) return;\n    var fixed = def.fixed;\n    if (!fixed) return;\n    def.references.push(exp);\n    def.chained = true;\n    def.fixed = function() {\n        return make_node(AST_Binary, node, {\n            operator: node.operator.slice(0, -1),\n            left: make_node(AST_UnaryPrefix, node, {\n                operator: \"+\",\n                expression: fixed instanceof AST_Node ? fixed : fixed()\n            }),\n            right: make_node(AST_Number, node, {\n                value: 1\n            })\n        });\n    };\n    mark(tw, def, true);\n    return true;\n});\n\ndef_reduce_vars(AST_VarDef, function(tw, descend) {\n    var node = this;\n    if (node.name instanceof AST_Destructuring) {\n        suppress(node.name);\n        return;\n    }\n    var d = node.name.definition();\n    if (node.value) {\n        if (safe_to_assign(tw, d, node.name.scope, node.value)) {\n            d.fixed = function() {\n                return node.value;\n            };\n            tw.loop_ids.set(d.id, tw.in_loop);\n            mark(tw, d, false);\n            descend();\n            mark(tw, d, true);\n            return true;\n        } else {\n            d.fixed = false;\n        }\n    }\n});\n\ndef_reduce_vars(AST_While, function(tw, descend, compressor) {\n    reset_block_variables(compressor, this);\n    const saved_loop = tw.in_loop;\n    tw.in_loop = this;\n    push(tw);\n    descend();\n    pop(tw);\n    tw.in_loop = saved_loop;\n    return true;\n});\n","/***********************************************************************\n\n  A JavaScript tokenizer / parser / beautifier / compressor.\n  https://github.com/mishoo/UglifyJS2\n\n  -------------------------------- (C) ---------------------------------\n\n                           Author: Mihai Bazon\n                         <mihai.bazon@gmail.com>\n                       http://mihai.bazon.net/blog\n\n  Distributed under the BSD license:\n\n    Copyright 2012 (c) Mihai Bazon <mihai.bazon@gmail.com>\n\n    Redistribution and use in source and binary forms, with or without\n    modification, are permitted provided that the following conditions\n    are met:\n\n        * Redistributions of source code must retain the above\n          copyright notice, this list of conditions and the following\n          disclaimer.\n\n        * Redistributions in binary form must reproduce the above\n          copyright notice, this list of conditions and the following\n          disclaimer in the documentation and/or other materials\n          provided with the distribution.\n\n    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER “AS IS” AND ANY\n    EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n    PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER BE\n    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,\n    OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n    PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n    PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n    THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR\n    TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF\n    THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n    SUCH DAMAGE.\n\n ***********************************************************************/\n\nimport {\n    AST_Array,\n    AST_Arrow,\n    AST_Assign,\n    AST_Await,\n    AST_Binary,\n    AST_Block,\n    AST_BlockStatement,\n    AST_Break,\n    AST_Call,\n    AST_Case,\n    AST_Catch,\n    AST_Chain,\n    AST_Class,\n    AST_Conditional,\n    AST_Const,\n    AST_Constant,\n    AST_Continue,\n    AST_Debugger,\n    AST_Default,\n    AST_Definitions,\n    AST_Defun,\n    AST_Destructuring,\n    AST_Directive,\n    AST_Dot,\n    AST_DWLoop,\n    AST_EmptyStatement,\n    AST_Exit,\n    AST_Expansion,\n    AST_Export,\n    AST_Finally,\n    AST_For,\n    AST_ForIn,\n    AST_If,\n    AST_Import,\n    AST_IterationStatement,\n    AST_Lambda,\n    AST_Let,\n    AST_LoopControl,\n    AST_Node,\n    AST_Number,\n    AST_Object,\n    AST_ObjectKeyVal,\n    AST_PropAccess,\n    AST_RegExp,\n    AST_Return,\n    AST_Scope,\n    AST_Sequence,\n    AST_SimpleStatement,\n    AST_Sub,\n    AST_Switch,\n    AST_Symbol,\n    AST_SymbolConst,\n    AST_SymbolDeclaration,\n    AST_SymbolDefun,\n    AST_SymbolFunarg,\n    AST_SymbolLambda,\n    AST_SymbolLet,\n    AST_SymbolRef,\n    AST_SymbolVar,\n    AST_This,\n    AST_Try,\n    AST_Unary,\n    AST_UnaryPostfix,\n    AST_UnaryPrefix,\n    AST_Undefined,\n    AST_Var,\n    AST_VarDef,\n    AST_With,\n    AST_Yield,\n\n    TreeTransformer,\n    TreeWalker,\n    walk,\n    walk_abort,\n\n    _NOINLINE\n} from \"../ast.js\";\nimport {\n    make_node,\n    MAP,\n    member,\n    remove,\n    has_annotation\n} from \"../utils/index.js\";\n\nimport { pure_prop_access_globals } from \"./native-objects.js\";\nimport {\n    lazy_op,\n    unary_side_effects,\n    is_modified,\n    is_lhs,\n    aborts\n} from \"./inference.js\";\nimport { WRITE_ONLY, clear_flag } from \"./compressor-flags.js\";\nimport {\n    make_sequence,\n    merge_sequence,\n    maintain_this_binding,\n    is_func_expr,\n    is_identifier_atom,\n    is_ref_of,\n    can_be_evicted_from_block,\n    as_statement_array,\n} from \"./common.js\";\n\nfunction loop_body(x) {\n    if (x instanceof AST_IterationStatement) {\n        return x.body instanceof AST_BlockStatement ? x.body : x;\n    }\n    return x;\n}\n\nfunction is_lhs_read_only(lhs) {\n    if (lhs instanceof AST_This) return true;\n    if (lhs instanceof AST_SymbolRef) return lhs.definition().orig[0] instanceof AST_SymbolLambda;\n    if (lhs instanceof AST_PropAccess) {\n        lhs = lhs.expression;\n        if (lhs instanceof AST_SymbolRef) {\n            if (lhs.is_immutable()) return false;\n            lhs = lhs.fixed_value();\n        }\n        if (!lhs) return true;\n        if (lhs instanceof AST_RegExp) return false;\n        if (lhs instanceof AST_Constant) return true;\n        return is_lhs_read_only(lhs);\n    }\n    return false;\n}\n\n// Remove code which we know is unreachable.\nexport function trim_unreachable_code(compressor, stat, target) {\n    walk(stat, node => {\n        if (node instanceof AST_Var) {\n            node.remove_initializers();\n            target.push(node);\n            return true;\n        }\n        if (\n            node instanceof AST_Defun\n            && (node === stat || !compressor.has_directive(\"use strict\"))\n        ) {\n            target.push(node === stat ? node : make_node(AST_Var, node, {\n                definitions: [\n                    make_node(AST_VarDef, node, {\n                        name: make_node(AST_SymbolVar, node.name, node.name),\n                        value: null\n                    })\n                ]\n            }));\n            return true;\n        }\n        if (node instanceof AST_Export || node instanceof AST_Import) {\n            target.push(node);\n            return true;\n        }\n        if (node instanceof AST_Scope) {\n            return true;\n        }\n    });\n}\n\n// Tighten a bunch of statements together, and perform statement-level optimization.\nexport function tighten_body(statements, compressor) {\n    var in_loop, in_try;\n    var scope = compressor.find_parent(AST_Scope).get_defun_scope();\n    find_loop_scope_try();\n    var CHANGED, max_iter = 10;\n    do {\n        CHANGED = false;\n        eliminate_spurious_blocks(statements);\n        if (compressor.option(\"dead_code\")) {\n            eliminate_dead_code(statements, compressor);\n        }\n        if (compressor.option(\"if_return\")) {\n            handle_if_return(statements, compressor);\n        }\n        if (compressor.sequences_limit > 0) {\n            sequencesize(statements, compressor);\n            sequencesize_2(statements, compressor);\n        }\n        if (compressor.option(\"join_vars\")) {\n            join_consecutive_vars(statements);\n        }\n        if (compressor.option(\"collapse_vars\")) {\n            collapse(statements, compressor);\n        }\n    } while (CHANGED && max_iter-- > 0);\n\n    function find_loop_scope_try() {\n        var node = compressor.self(), level = 0;\n        do {\n            if (node instanceof AST_Catch || node instanceof AST_Finally) {\n                level++;\n            } else if (node instanceof AST_IterationStatement) {\n                in_loop = true;\n            } else if (node instanceof AST_Scope) {\n                scope = node;\n                break;\n            } else if (node instanceof AST_Try) {\n                in_try = true;\n            }\n        } while (node = compressor.parent(level++));\n    }\n\n    // Search from right to left for assignment-like expressions:\n    // - `var a = x;`\n    // - `a = x;`\n    // - `++a`\n    // For each candidate, scan from left to right for first usage, then try\n    // to fold assignment into the site for compression.\n    // Will not attempt to collapse assignments into or past code blocks\n    // which are not sequentially executed, e.g. loops and conditionals.\n    function collapse(statements, compressor) {\n        if (scope.pinned())\n            return statements;\n        var args;\n        var candidates = [];\n        var stat_index = statements.length;\n        var scanner = new TreeTransformer(function (node) {\n            if (abort)\n                return node;\n            // Skip nodes before `candidate` as quickly as possible\n            if (!hit) {\n                if (node !== hit_stack[hit_index])\n                    return node;\n                hit_index++;\n                if (hit_index < hit_stack.length)\n                    return handle_custom_scan_order(node);\n                hit = true;\n                stop_after = find_stop(node, 0);\n                if (stop_after === node)\n                    abort = true;\n                return node;\n            }\n            // Stop immediately if these node types are encountered\n            var parent = scanner.parent();\n            if (node instanceof AST_Assign\n                    && (node.logical || node.operator != \"=\" && lhs.equivalent_to(node.left))\n                || node instanceof AST_Await\n                || node instanceof AST_Call && lhs instanceof AST_PropAccess && lhs.equivalent_to(node.expression)\n                || node instanceof AST_Debugger\n                || node instanceof AST_Destructuring\n                || node instanceof AST_Expansion\n                    && node.expression instanceof AST_Symbol\n                    && (\n                        node.expression instanceof AST_This\n                        || node.expression.definition().references.length > 1\n                    )\n                || node instanceof AST_IterationStatement && !(node instanceof AST_For)\n                || node instanceof AST_LoopControl\n                || node instanceof AST_Try\n                || node instanceof AST_With\n                || node instanceof AST_Yield\n                || node instanceof AST_Export\n                || node instanceof AST_Class\n                || parent instanceof AST_For && node !== parent.init\n                || !replace_all\n                    && (\n                        node instanceof AST_SymbolRef\n                        && !node.is_declared(compressor)\n                        && !pure_prop_access_globals.has(node)\n                    )\n                || node instanceof AST_SymbolRef\n                    && parent instanceof AST_Call\n                    && has_annotation(parent, _NOINLINE)\n            ) {\n                abort = true;\n                return node;\n            }\n            // Stop only if candidate is found within conditional branches\n            if (!stop_if_hit && (!lhs_local || !replace_all)\n                && (parent instanceof AST_Binary && lazy_op.has(parent.operator) && parent.left !== node\n                    || parent instanceof AST_Conditional && parent.condition !== node\n                    || parent instanceof AST_If && parent.condition !== node)) {\n                stop_if_hit = parent;\n            }\n            // Replace variable with assignment when found\n            if (can_replace\n                && !(node instanceof AST_SymbolDeclaration)\n                && lhs.equivalent_to(node)\n                && !shadows(node.scope, lvalues)\n            ) {\n                if (stop_if_hit) {\n                    abort = true;\n                    return node;\n                }\n                if (is_lhs(node, parent)) {\n                    if (value_def)\n                        replaced++;\n                    return node;\n                } else {\n                    replaced++;\n                    if (value_def && candidate instanceof AST_VarDef)\n                        return node;\n                }\n                CHANGED = abort = true;\n                if (candidate instanceof AST_UnaryPostfix) {\n                    return make_node(AST_UnaryPrefix, candidate, candidate);\n                }\n                if (candidate instanceof AST_VarDef) {\n                    var def = candidate.name.definition();\n                    var value = candidate.value;\n                    if (def.references.length - def.replaced == 1 && !compressor.exposed(def)) {\n                        def.replaced++;\n                        if (funarg && is_identifier_atom(value)) {\n                            return value.transform(compressor);\n                        } else {\n                            return maintain_this_binding(parent, node, value);\n                        }\n                    }\n                    return make_node(AST_Assign, candidate, {\n                        operator: \"=\",\n                        logical: false,\n                        left: make_node(AST_SymbolRef, candidate.name, candidate.name),\n                        right: value\n                    });\n                }\n                clear_flag(candidate, WRITE_ONLY);\n                return candidate;\n            }\n            // These node types have child nodes that execute sequentially,\n            // but are otherwise not safe to scan into or beyond them.\n            var sym;\n            if (node instanceof AST_Call\n                || node instanceof AST_Exit\n                && (side_effects || lhs instanceof AST_PropAccess || may_modify(lhs))\n                || node instanceof AST_PropAccess\n                && (side_effects || node.expression.may_throw_on_access(compressor))\n                || node instanceof AST_SymbolRef\n                && ((lvalues.has(node.name) && lvalues.get(node.name).modified) || side_effects && may_modify(node))\n                || node instanceof AST_VarDef && node.value\n                && (lvalues.has(node.name.name) || side_effects && may_modify(node.name))\n                || (sym = is_lhs(node.left, node))\n                && (sym instanceof AST_PropAccess || lvalues.has(sym.name))\n                || may_throw\n                && (in_try ? node.has_side_effects(compressor) : side_effects_external(node))) {\n                stop_after = node;\n                if (node instanceof AST_Scope)\n                    abort = true;\n            }\n            return handle_custom_scan_order(node);\n        }, function (node) {\n            if (abort)\n                return;\n            if (stop_after === node)\n                abort = true;\n            if (stop_if_hit === node)\n                stop_if_hit = null;\n        });\n\n        var multi_replacer = new TreeTransformer(function (node) {\n            if (abort)\n                return node;\n            // Skip nodes before `candidate` as quickly as possible\n            if (!hit) {\n                if (node !== hit_stack[hit_index])\n                    return node;\n                hit_index++;\n                if (hit_index < hit_stack.length)\n                    return;\n                hit = true;\n                return node;\n            }\n            // Replace variable when found\n            if (node instanceof AST_SymbolRef\n                && node.name == def.name) {\n                if (!--replaced)\n                    abort = true;\n                if (is_lhs(node, multi_replacer.parent()))\n                    return node;\n                def.replaced++;\n                value_def.replaced--;\n                return candidate.value;\n            }\n            // Skip (non-executed) functions and (leading) default case in switch statements\n            if (node instanceof AST_Default || node instanceof AST_Scope)\n                return node;\n        });\n\n        while (--stat_index >= 0) {\n            // Treat parameters as collapsible in IIFE, i.e.\n            //   function(a, b){ ... }(x());\n            // would be translated into equivalent assignments:\n            //   var a = x(), b = undefined;\n            if (stat_index == 0 && compressor.option(\"unused\"))\n                extract_args();\n            // Find collapsible assignments\n            var hit_stack = [];\n            extract_candidates(statements[stat_index]);\n            while (candidates.length > 0) {\n                hit_stack = candidates.pop();\n                var hit_index = 0;\n                var candidate = hit_stack[hit_stack.length - 1];\n                var value_def = null;\n                var stop_after = null;\n                var stop_if_hit = null;\n                var lhs = get_lhs(candidate);\n                if (!lhs || is_lhs_read_only(lhs) || lhs.has_side_effects(compressor))\n                    continue;\n                // Locate symbols which may execute code outside of scanning range\n                var lvalues = get_lvalues(candidate);\n                var lhs_local = is_lhs_local(lhs);\n                if (lhs instanceof AST_SymbolRef) {\n                    lvalues.set(lhs.name, { def: lhs.definition(), modified: false });\n                }\n                var side_effects = value_has_side_effects(candidate);\n                var replace_all = replace_all_symbols();\n                var may_throw = candidate.may_throw(compressor);\n                var funarg = candidate.name instanceof AST_SymbolFunarg;\n                var hit = funarg;\n                var abort = false, replaced = 0, can_replace = !args || !hit;\n                if (!can_replace) {\n                    for (var j = compressor.self().argnames.lastIndexOf(candidate.name) + 1; !abort && j < args.length; j++) {\n                        args[j].transform(scanner);\n                    }\n                    can_replace = true;\n                }\n                for (var i = stat_index; !abort && i < statements.length; i++) {\n                    statements[i].transform(scanner);\n                }\n                if (value_def) {\n                    var def = candidate.name.definition();\n                    if (abort && def.references.length - def.replaced > replaced)\n                        replaced = false;\n                    else {\n                        abort = false;\n                        hit_index = 0;\n                        hit = funarg;\n                        for (var i = stat_index; !abort && i < statements.length; i++) {\n                            statements[i].transform(multi_replacer);\n                        }\n                        value_def.single_use = false;\n                    }\n                }\n                if (replaced && !remove_candidate(candidate))\n                    statements.splice(stat_index, 1);\n            }\n        }\n\n        function handle_custom_scan_order(node) {\n            // Skip (non-executed) functions\n            if (node instanceof AST_Scope)\n                return node;\n\n            // Scan case expressions first in a switch statement\n            if (node instanceof AST_Switch) {\n                node.expression = node.expression.transform(scanner);\n                for (var i = 0, len = node.body.length; !abort && i < len; i++) {\n                    var branch = node.body[i];\n                    if (branch instanceof AST_Case) {\n                        if (!hit) {\n                            if (branch !== hit_stack[hit_index])\n                                continue;\n                            hit_index++;\n                        }\n                        branch.expression = branch.expression.transform(scanner);\n                        if (!replace_all)\n                            break;\n                    }\n                }\n                abort = true;\n                return node;\n            }\n        }\n\n        function redefined_within_scope(def, scope) {\n            if (def.global)\n                return false;\n            let cur_scope = def.scope;\n            while (cur_scope && cur_scope !== scope) {\n                if (cur_scope.variables.has(def.name)) {\n                    return true;\n                }\n                cur_scope = cur_scope.parent_scope;\n            }\n            return false;\n        }\n\n        function has_overlapping_symbol(fn, arg, fn_strict) {\n            var found = false, scan_this = !(fn instanceof AST_Arrow);\n            arg.walk(new TreeWalker(function (node, descend) {\n                if (found)\n                    return true;\n                if (node instanceof AST_SymbolRef && (fn.variables.has(node.name) || redefined_within_scope(node.definition(), fn))) {\n                    var s = node.definition().scope;\n                    if (s !== scope)\n                        while (s = s.parent_scope) {\n                            if (s === scope)\n                                return true;\n                        }\n                    return found = true;\n                }\n                if ((fn_strict || scan_this) && node instanceof AST_This) {\n                    return found = true;\n                }\n                if (node instanceof AST_Scope && !(node instanceof AST_Arrow)) {\n                    var prev = scan_this;\n                    scan_this = false;\n                    descend();\n                    scan_this = prev;\n                    return true;\n                }\n            }));\n            return found;\n        }\n\n        function extract_args() {\n            var iife, fn = compressor.self();\n            if (is_func_expr(fn)\n                && !fn.name\n                && !fn.uses_arguments\n                && !fn.pinned()\n                && (iife = compressor.parent()) instanceof AST_Call\n                && iife.expression === fn\n                && iife.args.every((arg) => !(arg instanceof AST_Expansion))) {\n                var fn_strict = compressor.has_directive(\"use strict\");\n                if (fn_strict && !member(fn_strict, fn.body))\n                    fn_strict = false;\n                var len = fn.argnames.length;\n                args = iife.args.slice(len);\n                var names = new Set();\n                for (var i = len; --i >= 0;) {\n                    var sym = fn.argnames[i];\n                    var arg = iife.args[i];\n                    // The following two line fix is a duplicate of the fix at\n                    // https://github.com/terser/terser/commit/011d3eb08cefe6922c7d1bdfa113fc4aeaca1b75\n                    // This might mean that these two pieces of code (one here in collapse_vars and another in reduce_vars\n                    // Might be doing the exact same thing.\n                    const def = sym.definition && sym.definition();\n                    const is_reassigned = def && def.orig.length > 1;\n                    if (is_reassigned)\n                        continue;\n                    args.unshift(make_node(AST_VarDef, sym, {\n                        name: sym,\n                        value: arg\n                    }));\n                    if (names.has(sym.name))\n                        continue;\n                    names.add(sym.name);\n                    if (sym instanceof AST_Expansion) {\n                        var elements = iife.args.slice(i);\n                        if (elements.every((arg) => !has_overlapping_symbol(fn, arg, fn_strict)\n                        )) {\n                            candidates.unshift([make_node(AST_VarDef, sym, {\n                                name: sym.expression,\n                                value: make_node(AST_Array, iife, {\n                                    elements: elements\n                                })\n                            })]);\n                        }\n                    } else {\n                        if (!arg) {\n                            arg = make_node(AST_Undefined, sym).transform(compressor);\n                        } else if (arg instanceof AST_Lambda && arg.pinned()\n                            || has_overlapping_symbol(fn, arg, fn_strict)) {\n                            arg = null;\n                        }\n                        if (arg)\n                            candidates.unshift([make_node(AST_VarDef, sym, {\n                                name: sym,\n                                value: arg\n                            })]);\n                    }\n                }\n            }\n        }\n\n        function extract_candidates(expr) {\n            hit_stack.push(expr);\n            if (expr instanceof AST_Assign) {\n                if (!expr.left.has_side_effects(compressor)\n                    && !(expr.right instanceof AST_Chain)) {\n                    candidates.push(hit_stack.slice());\n                }\n                extract_candidates(expr.right);\n            } else if (expr instanceof AST_Binary) {\n                extract_candidates(expr.left);\n                extract_candidates(expr.right);\n            } else if (expr instanceof AST_Call && !has_annotation(expr, _NOINLINE)) {\n                extract_candidates(expr.expression);\n                expr.args.forEach(extract_candidates);\n            } else if (expr instanceof AST_Case) {\n                extract_candidates(expr.expression);\n            } else if (expr instanceof AST_Conditional) {\n                extract_candidates(expr.condition);\n                extract_candidates(expr.consequent);\n                extract_candidates(expr.alternative);\n            } else if (expr instanceof AST_Definitions) {\n                var len = expr.definitions.length;\n                // limit number of trailing variable definitions for consideration\n                var i = len - 200;\n                if (i < 0)\n                    i = 0;\n                for (; i < len; i++) {\n                    extract_candidates(expr.definitions[i]);\n                }\n            } else if (expr instanceof AST_DWLoop) {\n                extract_candidates(expr.condition);\n                if (!(expr.body instanceof AST_Block)) {\n                    extract_candidates(expr.body);\n                }\n            } else if (expr instanceof AST_Exit) {\n                if (expr.value)\n                    extract_candidates(expr.value);\n            } else if (expr instanceof AST_For) {\n                if (expr.init)\n                    extract_candidates(expr.init);\n                if (expr.condition)\n                    extract_candidates(expr.condition);\n                if (expr.step)\n                    extract_candidates(expr.step);\n                if (!(expr.body instanceof AST_Block)) {\n                    extract_candidates(expr.body);\n                }\n            } else if (expr instanceof AST_ForIn) {\n                extract_candidates(expr.object);\n                if (!(expr.body instanceof AST_Block)) {\n                    extract_candidates(expr.body);\n                }\n            } else if (expr instanceof AST_If) {\n                extract_candidates(expr.condition);\n                if (!(expr.body instanceof AST_Block)) {\n                    extract_candidates(expr.body);\n                }\n                if (expr.alternative && !(expr.alternative instanceof AST_Block)) {\n                    extract_candidates(expr.alternative);\n                }\n            } else if (expr instanceof AST_Sequence) {\n                expr.expressions.forEach(extract_candidates);\n            } else if (expr instanceof AST_SimpleStatement) {\n                extract_candidates(expr.body);\n            } else if (expr instanceof AST_Switch) {\n                extract_candidates(expr.expression);\n                expr.body.forEach(extract_candidates);\n            } else if (expr instanceof AST_Unary) {\n                if (expr.operator == \"++\" || expr.operator == \"--\") {\n                    candidates.push(hit_stack.slice());\n                }\n            } else if (expr instanceof AST_VarDef) {\n                if (expr.value && !(expr.value instanceof AST_Chain)) {\n                    candidates.push(hit_stack.slice());\n                    extract_candidates(expr.value);\n                }\n            }\n            hit_stack.pop();\n        }\n\n        function find_stop(node, level, write_only) {\n            var parent = scanner.parent(level);\n            if (parent instanceof AST_Assign) {\n                if (write_only\n                    && !parent.logical\n                    && !(parent.left instanceof AST_PropAccess\n                        || lvalues.has(parent.left.name))) {\n                    return find_stop(parent, level + 1, write_only);\n                }\n                return node;\n            }\n            if (parent instanceof AST_Binary) {\n                if (write_only && (!lazy_op.has(parent.operator) || parent.left === node)) {\n                    return find_stop(parent, level + 1, write_only);\n                }\n                return node;\n            }\n            if (parent instanceof AST_Call)\n                return node;\n            if (parent instanceof AST_Case)\n                return node;\n            if (parent instanceof AST_Conditional) {\n                if (write_only && parent.condition === node) {\n                    return find_stop(parent, level + 1, write_only);\n                }\n                return node;\n            }\n            if (parent instanceof AST_Definitions) {\n                return find_stop(parent, level + 1, true);\n            }\n            if (parent instanceof AST_Exit) {\n                return write_only ? find_stop(parent, level + 1, write_only) : node;\n            }\n            if (parent instanceof AST_If) {\n                if (write_only && parent.condition === node) {\n                    return find_stop(parent, level + 1, write_only);\n                }\n                return node;\n            }\n            if (parent instanceof AST_IterationStatement)\n                return node;\n            if (parent instanceof AST_Sequence) {\n                return find_stop(parent, level + 1, parent.tail_node() !== node);\n            }\n            if (parent instanceof AST_SimpleStatement) {\n                return find_stop(parent, level + 1, true);\n            }\n            if (parent instanceof AST_Switch)\n                return node;\n            if (parent instanceof AST_VarDef)\n                return node;\n            return null;\n        }\n\n        function mangleable_var(var_def) {\n            var value = var_def.value;\n            if (!(value instanceof AST_SymbolRef))\n                return;\n            if (value.name == \"arguments\")\n                return;\n            var def = value.definition();\n            if (def.undeclared)\n                return;\n            return value_def = def;\n        }\n\n        function get_lhs(expr) {\n            if (expr instanceof AST_Assign && expr.logical) {\n                return false;\n            } else if (expr instanceof AST_VarDef && expr.name instanceof AST_SymbolDeclaration) {\n                var def = expr.name.definition();\n                if (!member(expr.name, def.orig))\n                    return;\n                var referenced = def.references.length - def.replaced;\n                if (!referenced)\n                    return;\n                var declared = def.orig.length - def.eliminated;\n                if (declared > 1 && !(expr.name instanceof AST_SymbolFunarg)\n                    || (referenced > 1 ? mangleable_var(expr) : !compressor.exposed(def))) {\n                    return make_node(AST_SymbolRef, expr.name, expr.name);\n                }\n            } else {\n                const lhs = expr instanceof AST_Assign\n                    ? expr.left\n                    : expr.expression;\n                return !is_ref_of(lhs, AST_SymbolConst)\n                    && !is_ref_of(lhs, AST_SymbolLet) && lhs;\n            }\n        }\n\n        function get_rvalue(expr) {\n            if (expr instanceof AST_Assign) {\n                return expr.right;\n            } else {\n                return expr.value;\n            }\n        }\n\n        function get_lvalues(expr) {\n            var lvalues = new Map();\n            if (expr instanceof AST_Unary)\n                return lvalues;\n            var tw = new TreeWalker(function (node) {\n                var sym = node;\n                while (sym instanceof AST_PropAccess)\n                    sym = sym.expression;\n                if (sym instanceof AST_SymbolRef) {\n                    const prev = lvalues.get(sym.name);\n                    if (!prev || !prev.modified) {\n                        lvalues.set(sym.name, {\n                            def: sym.definition(),\n                            modified: is_modified(compressor, tw, node, node, 0)\n                        });\n                    }\n                }\n            });\n            get_rvalue(expr).walk(tw);\n            return lvalues;\n        }\n\n        function remove_candidate(expr) {\n            if (expr.name instanceof AST_SymbolFunarg) {\n                var iife = compressor.parent(), argnames = compressor.self().argnames;\n                var index = argnames.indexOf(expr.name);\n                if (index < 0) {\n                    iife.args.length = Math.min(iife.args.length, argnames.length - 1);\n                } else {\n                    var args = iife.args;\n                    if (args[index])\n                        args[index] = make_node(AST_Number, args[index], {\n                            value: 0\n                        });\n                }\n                return true;\n            }\n            var found = false;\n            return statements[stat_index].transform(new TreeTransformer(function (node, descend, in_list) {\n                if (found)\n                    return node;\n                if (node === expr || node.body === expr) {\n                    found = true;\n                    if (node instanceof AST_VarDef) {\n                        node.value = node.name instanceof AST_SymbolConst\n                            ? make_node(AST_Undefined, node.value) // `const` always needs value.\n                            : null;\n                        return node;\n                    }\n                    return in_list ? MAP.skip : null;\n                }\n            }, function (node) {\n                if (node instanceof AST_Sequence)\n                    switch (node.expressions.length) {\n                        case 0: return null;\n                        case 1: return node.expressions[0];\n                    }\n            }));\n        }\n\n        function is_lhs_local(lhs) {\n            while (lhs instanceof AST_PropAccess)\n                lhs = lhs.expression;\n            return lhs instanceof AST_SymbolRef\n                && lhs.definition().scope === scope\n                && !(in_loop\n                    && (lvalues.has(lhs.name)\n                        || candidate instanceof AST_Unary\n                        || (candidate instanceof AST_Assign\n                            && !candidate.logical\n                            && candidate.operator != \"=\")));\n        }\n\n        function value_has_side_effects(expr) {\n            if (expr instanceof AST_Unary)\n                return unary_side_effects.has(expr.operator);\n            return get_rvalue(expr).has_side_effects(compressor);\n        }\n\n        function replace_all_symbols() {\n            if (side_effects)\n                return false;\n            if (value_def)\n                return true;\n            if (lhs instanceof AST_SymbolRef) {\n                var def = lhs.definition();\n                if (def.references.length - def.replaced == (candidate instanceof AST_VarDef ? 1 : 2)) {\n                    return true;\n                }\n            }\n            return false;\n        }\n\n        function may_modify(sym) {\n            if (!sym.definition)\n                return true; // AST_Destructuring\n            var def = sym.definition();\n            if (def.orig.length == 1 && def.orig[0] instanceof AST_SymbolDefun)\n                return false;\n            if (def.scope.get_defun_scope() !== scope)\n                return true;\n            return !def.references.every((ref) => {\n                var s = ref.scope.get_defun_scope();\n                // \"block\" scope within AST_Catch\n                if (s.TYPE == \"Scope\")\n                    s = s.parent_scope;\n                return s === scope;\n            });\n        }\n\n        function side_effects_external(node, lhs) {\n            if (node instanceof AST_Assign)\n                return side_effects_external(node.left, true);\n            if (node instanceof AST_Unary)\n                return side_effects_external(node.expression, true);\n            if (node instanceof AST_VarDef)\n                return node.value && side_effects_external(node.value);\n            if (lhs) {\n                if (node instanceof AST_Dot)\n                    return side_effects_external(node.expression, true);\n                if (node instanceof AST_Sub)\n                    return side_effects_external(node.expression, true);\n                if (node instanceof AST_SymbolRef)\n                    return node.definition().scope !== scope;\n            }\n            return false;\n        }\n\n        function shadows(newScope, lvalues) {\n            for (const {def} of lvalues.values()) {\n                let current = newScope;\n                while (current && current !== def.scope) {\n                    let nested_def = current.variables.get(def.name);\n                    if (nested_def && nested_def !== def) return true;\n                    current = current.parent_scope;\n                }\n            }\n            return false;\n        }\n    }\n\n    function eliminate_spurious_blocks(statements) {\n        var seen_dirs = [];\n        for (var i = 0; i < statements.length;) {\n            var stat = statements[i];\n            if (stat instanceof AST_BlockStatement && stat.body.every(can_be_evicted_from_block)) {\n                CHANGED = true;\n                eliminate_spurious_blocks(stat.body);\n                statements.splice(i, 1, ...stat.body);\n                i += stat.body.length;\n            } else if (stat instanceof AST_EmptyStatement) {\n                CHANGED = true;\n                statements.splice(i, 1);\n            } else if (stat instanceof AST_Directive) {\n                if (seen_dirs.indexOf(stat.value) < 0) {\n                    i++;\n                    seen_dirs.push(stat.value);\n                } else {\n                    CHANGED = true;\n                    statements.splice(i, 1);\n                }\n            } else\n                i++;\n        }\n    }\n\n    function handle_if_return(statements, compressor) {\n        var self = compressor.self();\n        var multiple_if_returns = has_multiple_if_returns(statements);\n        var in_lambda = self instanceof AST_Lambda;\n        for (var i = statements.length; --i >= 0;) {\n            var stat = statements[i];\n            var j = next_index(i);\n            var next = statements[j];\n\n            if (in_lambda && !next && stat instanceof AST_Return) {\n                if (!stat.value) {\n                    CHANGED = true;\n                    statements.splice(i, 1);\n                    continue;\n                }\n                if (stat.value instanceof AST_UnaryPrefix && stat.value.operator == \"void\") {\n                    CHANGED = true;\n                    statements[i] = make_node(AST_SimpleStatement, stat, {\n                        body: stat.value.expression\n                    });\n                    continue;\n                }\n            }\n\n            if (stat instanceof AST_If) {\n                var ab = aborts(stat.body);\n                if (can_merge_flow(ab)) {\n                    if (ab.label) {\n                        remove(ab.label.thedef.references, ab);\n                    }\n                    CHANGED = true;\n                    stat = stat.clone();\n                    stat.condition = stat.condition.negate(compressor);\n                    var body = as_statement_array_with_return(stat.body, ab);\n                    stat.body = make_node(AST_BlockStatement, stat, {\n                        body: as_statement_array(stat.alternative).concat(extract_functions())\n                    });\n                    stat.alternative = make_node(AST_BlockStatement, stat, {\n                        body: body\n                    });\n                    statements[i] = stat.transform(compressor);\n                    continue;\n                }\n\n                var ab = aborts(stat.alternative);\n                if (can_merge_flow(ab)) {\n                    if (ab.label) {\n                        remove(ab.label.thedef.references, ab);\n                    }\n                    CHANGED = true;\n                    stat = stat.clone();\n                    stat.body = make_node(AST_BlockStatement, stat.body, {\n                        body: as_statement_array(stat.body).concat(extract_functions())\n                    });\n                    var body = as_statement_array_with_return(stat.alternative, ab);\n                    stat.alternative = make_node(AST_BlockStatement, stat.alternative, {\n                        body: body\n                    });\n                    statements[i] = stat.transform(compressor);\n                    continue;\n                }\n            }\n\n            if (stat instanceof AST_If && stat.body instanceof AST_Return) {\n                var value = stat.body.value;\n                //---\n                // pretty silly case, but:\n                // if (foo()) return; return; ==> foo(); return;\n                if (!value && !stat.alternative\n                    && (in_lambda && !next || next instanceof AST_Return && !next.value)) {\n                    CHANGED = true;\n                    statements[i] = make_node(AST_SimpleStatement, stat.condition, {\n                        body: stat.condition\n                    });\n                    continue;\n                }\n                //---\n                // if (foo()) return x; return y; ==> return foo() ? x : y;\n                if (value && !stat.alternative && next instanceof AST_Return && next.value) {\n                    CHANGED = true;\n                    stat = stat.clone();\n                    stat.alternative = next;\n                    statements[i] = stat.transform(compressor);\n                    statements.splice(j, 1);\n                    continue;\n                }\n                //---\n                // if (foo()) return x; [ return ; ] ==> return foo() ? x : undefined;\n                if (value && !stat.alternative\n                    && (!next && in_lambda && multiple_if_returns\n                        || next instanceof AST_Return)) {\n                    CHANGED = true;\n                    stat = stat.clone();\n                    stat.alternative = next || make_node(AST_Return, stat, {\n                        value: null\n                    });\n                    statements[i] = stat.transform(compressor);\n                    if (next)\n                        statements.splice(j, 1);\n                    continue;\n                }\n                //---\n                // if (a) return b; if (c) return d; e; ==> return a ? b : c ? d : void e;\n                //\n                // if sequences is not enabled, this can lead to an endless loop (issue #866).\n                // however, with sequences on this helps producing slightly better output for\n                // the example code.\n                var prev = statements[prev_index(i)];\n                if (compressor.option(\"sequences\") && in_lambda && !stat.alternative\n                    && prev instanceof AST_If && prev.body instanceof AST_Return\n                    && next_index(j) == statements.length && next instanceof AST_SimpleStatement) {\n                    CHANGED = true;\n                    stat = stat.clone();\n                    stat.alternative = make_node(AST_BlockStatement, next, {\n                        body: [\n                            next,\n                            make_node(AST_Return, next, {\n                                value: null\n                            })\n                        ]\n                    });\n                    statements[i] = stat.transform(compressor);\n                    statements.splice(j, 1);\n                    continue;\n                }\n            }\n        }\n\n        function has_multiple_if_returns(statements) {\n            var n = 0;\n            for (var i = statements.length; --i >= 0;) {\n                var stat = statements[i];\n                if (stat instanceof AST_If && stat.body instanceof AST_Return) {\n                    if (++n > 1)\n                        return true;\n                }\n            }\n            return false;\n        }\n\n        function is_return_void(value) {\n            return !value || value instanceof AST_UnaryPrefix && value.operator == \"void\";\n        }\n\n        function can_merge_flow(ab) {\n            if (!ab)\n                return false;\n            for (var j = i + 1, len = statements.length; j < len; j++) {\n                var stat = statements[j];\n                if (stat instanceof AST_Const || stat instanceof AST_Let)\n                    return false;\n            }\n            var lct = ab instanceof AST_LoopControl ? compressor.loopcontrol_target(ab) : null;\n            return ab instanceof AST_Return && in_lambda && is_return_void(ab.value)\n                || ab instanceof AST_Continue && self === loop_body(lct)\n                || ab instanceof AST_Break && lct instanceof AST_BlockStatement && self === lct;\n        }\n\n        function extract_functions() {\n            var tail = statements.slice(i + 1);\n            statements.length = i + 1;\n            return tail.filter(function (stat) {\n                if (stat instanceof AST_Defun) {\n                    statements.push(stat);\n                    return false;\n                }\n                return true;\n            });\n        }\n\n        function as_statement_array_with_return(node, ab) {\n            var body = as_statement_array(node).slice(0, -1);\n            if (ab.value) {\n                body.push(make_node(AST_SimpleStatement, ab.value, {\n                    body: ab.value.expression\n                }));\n            }\n            return body;\n        }\n\n        function next_index(i) {\n            for (var j = i + 1, len = statements.length; j < len; j++) {\n                var stat = statements[j];\n                if (!(stat instanceof AST_Var && declarations_only(stat))) {\n                    break;\n                }\n            }\n            return j;\n        }\n\n        function prev_index(i) {\n            for (var j = i; --j >= 0;) {\n                var stat = statements[j];\n                if (!(stat instanceof AST_Var && declarations_only(stat))) {\n                    break;\n                }\n            }\n            return j;\n        }\n    }\n\n    function eliminate_dead_code(statements, compressor) {\n        var has_quit;\n        var self = compressor.self();\n        for (var i = 0, n = 0, len = statements.length; i < len; i++) {\n            var stat = statements[i];\n            if (stat instanceof AST_LoopControl) {\n                var lct = compressor.loopcontrol_target(stat);\n                if (stat instanceof AST_Break\n                    && !(lct instanceof AST_IterationStatement)\n                    && loop_body(lct) === self\n                    || stat instanceof AST_Continue\n                    && loop_body(lct) === self) {\n                    if (stat.label) {\n                        remove(stat.label.thedef.references, stat);\n                    }\n                } else {\n                    statements[n++] = stat;\n                }\n            } else {\n                statements[n++] = stat;\n            }\n            if (aborts(stat)) {\n                has_quit = statements.slice(i + 1);\n                break;\n            }\n        }\n        statements.length = n;\n        CHANGED = n != len;\n        if (has_quit)\n            has_quit.forEach(function (stat) {\n                trim_unreachable_code(compressor, stat, statements);\n            });\n    }\n\n    function declarations_only(node) {\n        return node.definitions.every((var_def) => !var_def.value\n        );\n    }\n\n    function sequencesize(statements, compressor) {\n        if (statements.length < 2)\n            return;\n        var seq = [], n = 0;\n        function push_seq() {\n            if (!seq.length)\n                return;\n            var body = make_sequence(seq[0], seq);\n            statements[n++] = make_node(AST_SimpleStatement, body, { body: body });\n            seq = [];\n        }\n        for (var i = 0, len = statements.length; i < len; i++) {\n            var stat = statements[i];\n            if (stat instanceof AST_SimpleStatement) {\n                if (seq.length >= compressor.sequences_limit)\n                    push_seq();\n                var body = stat.body;\n                if (seq.length > 0)\n                    body = body.drop_side_effect_free(compressor);\n                if (body)\n                    merge_sequence(seq, body);\n            } else if (stat instanceof AST_Definitions && declarations_only(stat)\n                || stat instanceof AST_Defun) {\n                statements[n++] = stat;\n            } else {\n                push_seq();\n                statements[n++] = stat;\n            }\n        }\n        push_seq();\n        statements.length = n;\n        if (n != len)\n            CHANGED = true;\n    }\n\n    function to_simple_statement(block, decls) {\n        if (!(block instanceof AST_BlockStatement))\n            return block;\n        var stat = null;\n        for (var i = 0, len = block.body.length; i < len; i++) {\n            var line = block.body[i];\n            if (line instanceof AST_Var && declarations_only(line)) {\n                decls.push(line);\n            } else if (stat) {\n                return false;\n            } else {\n                stat = line;\n            }\n        }\n        return stat;\n    }\n\n    function sequencesize_2(statements, compressor) {\n        function cons_seq(right) {\n            n--;\n            CHANGED = true;\n            var left = prev.body;\n            return make_sequence(left, [left, right]).transform(compressor);\n        }\n        var n = 0, prev;\n        for (var i = 0; i < statements.length; i++) {\n            var stat = statements[i];\n            if (prev) {\n                if (stat instanceof AST_Exit) {\n                    stat.value = cons_seq(stat.value || make_node(AST_Undefined, stat).transform(compressor));\n                } else if (stat instanceof AST_For) {\n                    if (!(stat.init instanceof AST_Definitions)) {\n                        const abort = walk(prev.body, node => {\n                            if (node instanceof AST_Scope)\n                                return true;\n                            if (node instanceof AST_Binary\n                                && node.operator === \"in\") {\n                                return walk_abort;\n                            }\n                        });\n                        if (!abort) {\n                            if (stat.init)\n                                stat.init = cons_seq(stat.init);\n                            else {\n                                stat.init = prev.body;\n                                n--;\n                                CHANGED = true;\n                            }\n                        }\n                    }\n                } else if (stat instanceof AST_ForIn) {\n                    if (!(stat.init instanceof AST_Const) && !(stat.init instanceof AST_Let)) {\n                        stat.object = cons_seq(stat.object);\n                    }\n                } else if (stat instanceof AST_If) {\n                    stat.condition = cons_seq(stat.condition);\n                } else if (stat instanceof AST_Switch) {\n                    stat.expression = cons_seq(stat.expression);\n                } else if (stat instanceof AST_With) {\n                    stat.expression = cons_seq(stat.expression);\n                }\n            }\n            if (compressor.option(\"conditionals\") && stat instanceof AST_If) {\n                var decls = [];\n                var body = to_simple_statement(stat.body, decls);\n                var alt = to_simple_statement(stat.alternative, decls);\n                if (body !== false && alt !== false && decls.length > 0) {\n                    var len = decls.length;\n                    decls.push(make_node(AST_If, stat, {\n                        condition: stat.condition,\n                        body: body || make_node(AST_EmptyStatement, stat.body),\n                        alternative: alt\n                    }));\n                    decls.unshift(n, 1);\n                    [].splice.apply(statements, decls);\n                    i += len;\n                    n += len + 1;\n                    prev = null;\n                    CHANGED = true;\n                    continue;\n                }\n            }\n            statements[n++] = stat;\n            prev = stat instanceof AST_SimpleStatement ? stat : null;\n        }\n        statements.length = n;\n    }\n\n    function join_object_assignments(defn, body) {\n        if (!(defn instanceof AST_Definitions))\n            return;\n        var def = defn.definitions[defn.definitions.length - 1];\n        if (!(def.value instanceof AST_Object))\n            return;\n        var exprs;\n        if (body instanceof AST_Assign && !body.logical) {\n            exprs = [body];\n        } else if (body instanceof AST_Sequence) {\n            exprs = body.expressions.slice();\n        }\n        if (!exprs)\n            return;\n        var trimmed = false;\n        do {\n            var node = exprs[0];\n            if (!(node instanceof AST_Assign))\n                break;\n            if (node.operator != \"=\")\n                break;\n            if (!(node.left instanceof AST_PropAccess))\n                break;\n            var sym = node.left.expression;\n            if (!(sym instanceof AST_SymbolRef))\n                break;\n            if (def.name.name != sym.name)\n                break;\n            if (!node.right.is_constant_expression(scope))\n                break;\n            var prop = node.left.property;\n            if (prop instanceof AST_Node) {\n                prop = prop.evaluate(compressor);\n            }\n            if (prop instanceof AST_Node)\n                break;\n            prop = \"\" + prop;\n            var diff = compressor.option(\"ecma\") < 2015\n                && compressor.has_directive(\"use strict\") ? function (node) {\n                    return node.key != prop && (node.key && node.key.name != prop);\n                } : function (node) {\n                    return node.key && node.key.name != prop;\n                };\n            if (!def.value.properties.every(diff))\n                break;\n            var p = def.value.properties.filter(function (p) { return p.key === prop; })[0];\n            if (!p) {\n                def.value.properties.push(make_node(AST_ObjectKeyVal, node, {\n                    key: prop,\n                    value: node.right\n                }));\n            } else {\n                p.value = new AST_Sequence({\n                    start: p.start,\n                    expressions: [p.value.clone(), node.right.clone()],\n                    end: p.end\n                });\n            }\n            exprs.shift();\n            trimmed = true;\n        } while (exprs.length);\n        return trimmed && exprs;\n    }\n\n    function join_consecutive_vars(statements) {\n        var defs;\n        for (var i = 0, j = -1, len = statements.length; i < len; i++) {\n            var stat = statements[i];\n            var prev = statements[j];\n            if (stat instanceof AST_Definitions) {\n                if (prev && prev.TYPE == stat.TYPE) {\n                    prev.definitions = prev.definitions.concat(stat.definitions);\n                    CHANGED = true;\n                } else if (defs && defs.TYPE == stat.TYPE && declarations_only(stat)) {\n                    defs.definitions = defs.definitions.concat(stat.definitions);\n                    CHANGED = true;\n                } else {\n                    statements[++j] = stat;\n                    defs = stat;\n                }\n            } else if (stat instanceof AST_Exit) {\n                stat.value = extract_object_assignments(stat.value);\n            } else if (stat instanceof AST_For) {\n                var exprs = join_object_assignments(prev, stat.init);\n                if (exprs) {\n                    CHANGED = true;\n                    stat.init = exprs.length ? make_sequence(stat.init, exprs) : null;\n                    statements[++j] = stat;\n                } else if (prev instanceof AST_Var && (!stat.init || stat.init.TYPE == prev.TYPE)) {\n                    if (stat.init) {\n                        prev.definitions = prev.definitions.concat(stat.init.definitions);\n                    }\n                    stat.init = prev;\n                    statements[j] = stat;\n                    CHANGED = true;\n                } else if (defs && stat.init && defs.TYPE == stat.init.TYPE && declarations_only(stat.init)) {\n                    defs.definitions = defs.definitions.concat(stat.init.definitions);\n                    stat.init = null;\n                    statements[++j] = stat;\n                    CHANGED = true;\n                } else {\n                    statements[++j] = stat;\n                }\n            } else if (stat instanceof AST_ForIn) {\n                stat.object = extract_object_assignments(stat.object);\n            } else if (stat instanceof AST_If) {\n                stat.condition = extract_object_assignments(stat.condition);\n            } else if (stat instanceof AST_SimpleStatement) {\n                var exprs = join_object_assignments(prev, stat.body);\n                if (exprs) {\n                    CHANGED = true;\n                    if (!exprs.length)\n                        continue;\n                    stat.body = make_sequence(stat.body, exprs);\n                }\n                statements[++j] = stat;\n            } else if (stat instanceof AST_Switch) {\n                stat.expression = extract_object_assignments(stat.expression);\n            } else if (stat instanceof AST_With) {\n                stat.expression = extract_object_assignments(stat.expression);\n            } else {\n                statements[++j] = stat;\n            }\n        }\n        statements.length = j + 1;\n\n        function extract_object_assignments(value) {\n            statements[++j] = stat;\n            var exprs = join_object_assignments(prev, value);\n            if (exprs) {\n                CHANGED = true;\n                if (exprs.length) {\n                    return make_sequence(value, exprs);\n                } else if (value instanceof AST_Sequence) {\n                    return value.tail_node().left;\n                } else {\n                    return value.left;\n                }\n            }\n            return value;\n        }\n    }\n}\n","/***********************************************************************\n\n  A JavaScript tokenizer / parser / beautifier / compressor.\n  https://github.com/mishoo/UglifyJS2\n\n  -------------------------------- (C) ---------------------------------\n\n                           Author: Mihai Bazon\n                         <mihai.bazon@gmail.com>\n                       http://mihai.bazon.net/blog\n\n  Distributed under the BSD license:\n\n    Copyright 2012 (c) Mihai Bazon <mihai.bazon@gmail.com>\n\n    Redistribution and use in source and binary forms, with or without\n    modification, are permitted provided that the following conditions\n    are met:\n\n        * Redistributions of source code must retain the above\n          copyright notice, this list of conditions and the following\n          disclaimer.\n\n        * Redistributions in binary form must reproduce the above\n          copyright notice, this list of conditions and the following\n          disclaimer in the documentation and/or other materials\n          provided with the distribution.\n\n    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER “AS IS” AND ANY\n    EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n    PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER BE\n    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,\n    OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n    PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n    PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n    THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR\n    TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF\n    THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n    SUCH DAMAGE.\n\n ***********************************************************************/\n\nimport {\n    AST_Accessor,\n    AST_Array,\n    AST_Arrow,\n    AST_Assign,\n    AST_BigInt,\n    AST_Binary,\n    AST_Block,\n    AST_BlockStatement,\n    AST_Boolean,\n    AST_Break,\n    AST_Call,\n    AST_Catch,\n    AST_Chain,\n    AST_Class,\n    AST_ClassExpression,\n    AST_ClassProperty,\n    AST_ConciseMethod,\n    AST_Conditional,\n    AST_Const,\n    AST_Constant,\n    AST_Debugger,\n    AST_Default,\n    AST_DefaultAssign,\n    AST_DefClass,\n    AST_Definitions,\n    AST_Defun,\n    AST_Destructuring,\n    AST_Directive,\n    AST_Do,\n    AST_Dot,\n    AST_DWLoop,\n    AST_EmptyStatement,\n    AST_Exit,\n    AST_Expansion,\n    AST_Export,\n    AST_False,\n    AST_For,\n    AST_ForIn,\n    AST_Function,\n    AST_Hole,\n    AST_If,\n    AST_Import,\n    AST_Infinity,\n    AST_IterationStatement,\n    AST_LabeledStatement,\n    AST_Lambda,\n    AST_Let,\n    AST_NaN,\n    AST_New,\n    AST_Node,\n    AST_Null,\n    AST_Number,\n    AST_Object,\n    AST_ObjectKeyVal,\n    AST_ObjectProperty,\n    AST_PrefixedTemplateString,\n    AST_PropAccess,\n    AST_RegExp,\n    AST_Return,\n    AST_Scope,\n    AST_Sequence,\n    AST_SimpleStatement,\n    AST_Statement,\n    AST_String,\n    AST_Sub,\n    AST_Switch,\n    AST_SwitchBranch,\n    AST_Symbol,\n    AST_SymbolBlockDeclaration,\n    AST_SymbolCatch,\n    AST_SymbolClassProperty,\n    AST_SymbolDeclaration,\n    AST_SymbolDefun,\n    AST_SymbolExport,\n    AST_SymbolFunarg,\n    AST_SymbolLambda,\n    AST_SymbolLet,\n    AST_SymbolMethod,\n    AST_SymbolRef,\n    AST_SymbolVar,\n    AST_TemplateString,\n    AST_This,\n    AST_Toplevel,\n    AST_True,\n    AST_Try,\n    AST_Unary,\n    AST_UnaryPostfix,\n    AST_UnaryPrefix,\n    AST_Undefined,\n    AST_Var,\n    AST_VarDef,\n    AST_While,\n    AST_With,\n    AST_Yield,\n\n    TreeTransformer,\n    TreeWalker,\n    walk,\n    walk_abort,\n    walk_parent,\n\n    _INLINE,\n    _NOINLINE,\n    _PURE\n} from \"../ast.js\";\nimport {\n    defaults,\n    HOP,\n    keep_name,\n    make_node,\n    makePredicate,\n    map_add,\n    MAP,\n    member,\n    remove,\n    return_false,\n    return_true,\n    regexp_source_fix,\n    has_annotation\n} from \"../utils/index.js\";\nimport { first_in_statement } from \"../utils/first_in_statement.js\";\nimport { equivalent_to } from \"../equivalent-to.js\";\nimport {\n    is_basic_identifier_string,\n    JS_Parse_Error,\n    parse,\n    PRECEDENCE,\n} from \"../parse.js\";\nimport { OutputStream } from \"../output.js\";\nimport {\n    base54,\n    SymbolDef,\n} from \"../scope.js\";\nimport \"../size.js\";\n\nimport \"./evaluate.js\";\nimport \"./drop-side-effect-free.js\";\nimport \"./reduce-vars.js\";\nimport {\n    is_undeclared_ref,\n    lazy_op,\n    is_nullish,\n    is_undefined,\n    is_lhs,\n    aborts,\n} from \"./inference.js\";\nimport {\n    SQUEEZED,\n    OPTIMIZED,\n    INLINED,\n    CLEAR_BETWEEN_PASSES,\n    TOP,\n    WRITE_ONLY,\n    UNDEFINED,\n    UNUSED,\n    TRUTHY,\n    FALSY,\n\n    has_flag,\n    set_flag,\n    clear_flag,\n} from \"./compressor-flags.js\";\nimport {\n    make_sequence,\n    best_of,\n    best_of_expression,\n    make_node_from_constant,\n    merge_sequence,\n    get_simple_key,\n    has_break_or_continue,\n    maintain_this_binding,\n    identifier_atom,\n    is_identifier_atom,\n    is_func_expr,\n    is_ref_of,\n    can_be_evicted_from_block,\n    as_statement_array,\n    is_iife_call,\n    is_recursive_ref\n} from \"./common.js\";\nimport { tighten_body, trim_unreachable_code } from \"./tighten-body.js\";\n\nclass Compressor extends TreeWalker {\n    constructor(options, { false_by_default = false, mangle_options = false }) {\n        super();\n        if (options.defaults !== undefined && !options.defaults) false_by_default = true;\n        this.options = defaults(options, {\n            arguments     : false,\n            arrows        : !false_by_default,\n            booleans      : !false_by_default,\n            booleans_as_integers : false,\n            collapse_vars : !false_by_default,\n            comparisons   : !false_by_default,\n            computed_props: !false_by_default,\n            conditionals  : !false_by_default,\n            dead_code     : !false_by_default,\n            defaults      : true,\n            directives    : !false_by_default,\n            drop_console  : false,\n            drop_debugger : !false_by_default,\n            ecma          : 5,\n            evaluate      : !false_by_default,\n            expression    : false,\n            global_defs   : false,\n            hoist_funs    : false,\n            hoist_props   : !false_by_default,\n            hoist_vars    : false,\n            ie8           : false,\n            if_return     : !false_by_default,\n            inline        : !false_by_default,\n            join_vars     : !false_by_default,\n            keep_classnames: false,\n            keep_fargs    : true,\n            keep_fnames   : false,\n            keep_infinity : false,\n            loops         : !false_by_default,\n            module        : false,\n            negate_iife   : !false_by_default,\n            passes        : 1,\n            properties    : !false_by_default,\n            pure_getters  : !false_by_default && \"strict\",\n            pure_funcs    : null,\n            reduce_funcs  : !false_by_default,\n            reduce_vars   : !false_by_default,\n            sequences     : !false_by_default,\n            side_effects  : !false_by_default,\n            switches      : !false_by_default,\n            top_retain    : null,\n            toplevel      : !!(options && options[\"top_retain\"]),\n            typeofs       : !false_by_default,\n            unsafe        : false,\n            unsafe_arrows : false,\n            unsafe_comps  : false,\n            unsafe_Function: false,\n            unsafe_math   : false,\n            unsafe_symbols: false,\n            unsafe_methods: false,\n            unsafe_proto  : false,\n            unsafe_regexp : false,\n            unsafe_undefined: false,\n            unused        : !false_by_default,\n            warnings      : false  // legacy\n        }, true);\n        var global_defs = this.options[\"global_defs\"];\n        if (typeof global_defs == \"object\") for (var key in global_defs) {\n            if (key[0] === \"@\" && HOP(global_defs, key)) {\n                global_defs[key.slice(1)] = parse(global_defs[key], {\n                    expression: true\n                });\n            }\n        }\n        if (this.options[\"inline\"] === true) this.options[\"inline\"] = 3;\n        var pure_funcs = this.options[\"pure_funcs\"];\n        if (typeof pure_funcs == \"function\") {\n            this.pure_funcs = pure_funcs;\n        } else {\n            this.pure_funcs = pure_funcs ? function(node) {\n                return !pure_funcs.includes(node.expression.print_to_string());\n            } : return_true;\n        }\n        var top_retain = this.options[\"top_retain\"];\n        if (top_retain instanceof RegExp) {\n            this.top_retain = function(def) {\n                return top_retain.test(def.name);\n            };\n        } else if (typeof top_retain == \"function\") {\n            this.top_retain = top_retain;\n        } else if (top_retain) {\n            if (typeof top_retain == \"string\") {\n                top_retain = top_retain.split(/,/);\n            }\n            this.top_retain = function(def) {\n                return top_retain.includes(def.name);\n            };\n        }\n        if (this.options[\"module\"]) {\n            this.directives[\"use strict\"] = true;\n            this.options[\"toplevel\"] = true;\n        }\n        var toplevel = this.options[\"toplevel\"];\n        this.toplevel = typeof toplevel == \"string\" ? {\n            funcs: /funcs/.test(toplevel),\n            vars: /vars/.test(toplevel)\n        } : {\n            funcs: toplevel,\n            vars: toplevel\n        };\n        var sequences = this.options[\"sequences\"];\n        this.sequences_limit = sequences == 1 ? 800 : sequences | 0;\n        this.evaluated_regexps = new Map();\n        this._toplevel = undefined;\n        this.mangle_options = mangle_options;\n    }\n\n    option(key) {\n        return this.options[key];\n    }\n\n    exposed(def) {\n        if (def.export) return true;\n        if (def.global) for (var i = 0, len = def.orig.length; i < len; i++)\n            if (!this.toplevel[def.orig[i] instanceof AST_SymbolDefun ? \"funcs\" : \"vars\"])\n                return true;\n        return false;\n    }\n\n    in_boolean_context() {\n        if (!this.option(\"booleans\")) return false;\n        var self = this.self();\n        for (var i = 0, p; p = this.parent(i); i++) {\n            if (p instanceof AST_SimpleStatement\n                || p instanceof AST_Conditional && p.condition === self\n                || p instanceof AST_DWLoop && p.condition === self\n                || p instanceof AST_For && p.condition === self\n                || p instanceof AST_If && p.condition === self\n                || p instanceof AST_UnaryPrefix && p.operator == \"!\" && p.expression === self) {\n                return true;\n            }\n            if (\n                p instanceof AST_Binary\n                    && (\n                        p.operator == \"&&\"\n                        || p.operator == \"||\"\n                        || p.operator == \"??\"\n                    )\n                || p instanceof AST_Conditional\n                || p.tail_node() === self\n            ) {\n                self = p;\n            } else {\n                return false;\n            }\n        }\n    }\n\n    get_toplevel() {\n        return this._toplevel;\n    }\n\n    compress(toplevel) {\n        toplevel = toplevel.resolve_defines(this);\n        this._toplevel = toplevel;\n        if (this.option(\"expression\")) {\n            this._toplevel.process_expression(true);\n        }\n        var passes = +this.options.passes || 1;\n        var min_count = 1 / 0;\n        var stopping = false;\n        var nth_identifier = this.mangle_options && this.mangle_options.nth_identifier || base54;\n        var mangle = { ie8: this.option(\"ie8\"), nth_identifier: nth_identifier };\n        for (var pass = 0; pass < passes; pass++) {\n            this._toplevel.figure_out_scope(mangle);\n            if (pass === 0 && this.option(\"drop_console\")) {\n                // must be run before reduce_vars and compress pass\n                this._toplevel = this._toplevel.drop_console();\n            }\n            if (pass > 0 || this.option(\"reduce_vars\")) {\n                this._toplevel.reset_opt_flags(this);\n            }\n            this._toplevel = this._toplevel.transform(this);\n            if (passes > 1) {\n                let count = 0;\n                walk(this._toplevel, () => { count++; });\n                if (count < min_count) {\n                    min_count = count;\n                    stopping = false;\n                } else if (stopping) {\n                    break;\n                } else {\n                    stopping = true;\n                }\n            }\n        }\n        if (this.option(\"expression\")) {\n            this._toplevel.process_expression(false);\n        }\n        toplevel = this._toplevel;\n        this._toplevel = undefined;\n        return toplevel;\n    }\n\n    before(node, descend) {\n        if (has_flag(node, SQUEEZED)) return node;\n        var was_scope = false;\n        if (node instanceof AST_Scope) {\n            node = node.hoist_properties(this);\n            node = node.hoist_declarations(this);\n            was_scope = true;\n        }\n        // Before https://github.com/mishoo/UglifyJS2/pull/1602 AST_Node.optimize()\n        // would call AST_Node.transform() if a different instance of AST_Node is\n        // produced after def_optimize().\n        // This corrupts TreeWalker.stack, which cause AST look-ups to malfunction.\n        // Migrate and defer all children's AST_Node.transform() to below, which\n        // will now happen after this parent AST_Node has been properly substituted\n        // thus gives a consistent AST snapshot.\n        descend(node, this);\n        // Existing code relies on how AST_Node.optimize() worked, and omitting the\n        // following replacement call would result in degraded efficiency of both\n        // output and performance.\n        descend(node, this);\n        var opt = node.optimize(this);\n        if (was_scope && opt instanceof AST_Scope) {\n            opt.drop_unused(this);\n            descend(opt, this);\n        }\n        if (opt === node) set_flag(opt, SQUEEZED);\n        return opt;\n    }\n}\n\nfunction def_optimize(node, optimizer) {\n    node.DEFMETHOD(\"optimize\", function(compressor) {\n        var self = this;\n        if (has_flag(self, OPTIMIZED)) return self;\n        if (compressor.has_directive(\"use asm\")) return self;\n        var opt = optimizer(self, compressor);\n        set_flag(opt, OPTIMIZED);\n        return opt;\n    });\n}\n\ndef_optimize(AST_Node, function(self) {\n    return self;\n});\n\nAST_Toplevel.DEFMETHOD(\"drop_console\", function() {\n    return this.transform(new TreeTransformer(function(self) {\n        if (self.TYPE == \"Call\") {\n            var exp = self.expression;\n            if (exp instanceof AST_PropAccess) {\n                var name = exp.expression;\n                while (name.expression) {\n                    name = name.expression;\n                }\n                if (is_undeclared_ref(name) && name.name == \"console\") {\n                    return make_node(AST_Undefined, self);\n                }\n            }\n        }\n    }));\n});\n\nAST_Node.DEFMETHOD(\"equivalent_to\", function(node) {\n    return equivalent_to(this, node);\n});\n\nAST_Scope.DEFMETHOD(\"process_expression\", function(insert, compressor) {\n    var self = this;\n    var tt = new TreeTransformer(function(node) {\n        if (insert && node instanceof AST_SimpleStatement) {\n            return make_node(AST_Return, node, {\n                value: node.body\n            });\n        }\n        if (!insert && node instanceof AST_Return) {\n            if (compressor) {\n                var value = node.value && node.value.drop_side_effect_free(compressor, true);\n                return value\n                    ? make_node(AST_SimpleStatement, node, { body: value })\n                    : make_node(AST_EmptyStatement, node);\n            }\n            return make_node(AST_SimpleStatement, node, {\n                body: node.value || make_node(AST_UnaryPrefix, node, {\n                    operator: \"void\",\n                    expression: make_node(AST_Number, node, {\n                        value: 0\n                    })\n                })\n            });\n        }\n        if (node instanceof AST_Class || node instanceof AST_Lambda && node !== self) {\n            return node;\n        }\n        if (node instanceof AST_Block) {\n            var index = node.body.length - 1;\n            if (index >= 0) {\n                node.body[index] = node.body[index].transform(tt);\n            }\n        } else if (node instanceof AST_If) {\n            node.body = node.body.transform(tt);\n            if (node.alternative) {\n                node.alternative = node.alternative.transform(tt);\n            }\n        } else if (node instanceof AST_With) {\n            node.body = node.body.transform(tt);\n        }\n        return node;\n    });\n    self.transform(tt);\n});\n\nAST_Toplevel.DEFMETHOD(\"reset_opt_flags\", function(compressor) {\n    const self = this;\n    const reduce_vars = compressor.option(\"reduce_vars\");\n\n    const preparation = new TreeWalker(function(node, descend) {\n        clear_flag(node, CLEAR_BETWEEN_PASSES);\n        if (reduce_vars) {\n            if (compressor.top_retain\n                && node instanceof AST_Defun  // Only functions are retained\n                && preparation.parent() === self\n            ) {\n                set_flag(node, TOP);\n            }\n            return node.reduce_vars(preparation, descend, compressor);\n        }\n    });\n    // Stack of look-up tables to keep track of whether a `SymbolDef` has been\n    // properly assigned before use:\n    // - `push()` & `pop()` when visiting conditional branches\n    preparation.safe_ids = Object.create(null);\n    preparation.in_loop = null;\n    preparation.loop_ids = new Map();\n    preparation.defs_to_safe_ids = new Map();\n    self.walk(preparation);\n});\n\nAST_Symbol.DEFMETHOD(\"fixed_value\", function() {\n    var fixed = this.thedef.fixed;\n    if (!fixed || fixed instanceof AST_Node) return fixed;\n    return fixed();\n});\n\nAST_SymbolRef.DEFMETHOD(\"is_immutable\", function() {\n    var orig = this.definition().orig;\n    return orig.length == 1 && orig[0] instanceof AST_SymbolLambda;\n});\n\nfunction find_scope(tw) {\n    for (let i = 0;;i++) {\n        const p = tw.parent(i);\n        if (p instanceof AST_Toplevel) return p;\n        if (p instanceof AST_Lambda) return p;\n        if (p.block_scope) return p.block_scope;\n    }\n}\n\nfunction find_variable(compressor, name) {\n    var scope, i = 0;\n    while (scope = compressor.parent(i++)) {\n        if (scope instanceof AST_Scope) break;\n        if (scope instanceof AST_Catch && scope.argname) {\n            scope = scope.argname.definition().scope;\n            break;\n        }\n    }\n    return scope.find_variable(name);\n}\n\nfunction is_empty(thing) {\n    if (thing === null) return true;\n    if (thing instanceof AST_EmptyStatement) return true;\n    if (thing instanceof AST_BlockStatement) return thing.body.length == 0;\n    return false;\n}\n\nvar global_names = makePredicate(\"Array Boolean clearInterval clearTimeout console Date decodeURI decodeURIComponent encodeURI encodeURIComponent Error escape eval EvalError Function isFinite isNaN JSON Math Number parseFloat parseInt RangeError ReferenceError RegExp Object setInterval setTimeout String SyntaxError TypeError unescape URIError\");\nAST_SymbolRef.DEFMETHOD(\"is_declared\", function(compressor) {\n    return !this.definition().undeclared\n        || compressor.option(\"unsafe\") && global_names.has(this.name);\n});\n\n/* -----[ optimizers ]----- */\n\nvar directives = new Set([\"use asm\", \"use strict\"]);\ndef_optimize(AST_Directive, function(self, compressor) {\n    if (compressor.option(\"directives\")\n        && (!directives.has(self.value) || compressor.has_directive(self.value) !== self)) {\n        return make_node(AST_EmptyStatement, self);\n    }\n    return self;\n});\n\ndef_optimize(AST_Debugger, function(self, compressor) {\n    if (compressor.option(\"drop_debugger\"))\n        return make_node(AST_EmptyStatement, self);\n    return self;\n});\n\ndef_optimize(AST_LabeledStatement, function(self, compressor) {\n    if (self.body instanceof AST_Break\n        && compressor.loopcontrol_target(self.body) === self.body) {\n        return make_node(AST_EmptyStatement, self);\n    }\n    return self.label.references.length == 0 ? self.body : self;\n});\n\ndef_optimize(AST_Block, function(self, compressor) {\n    tighten_body(self.body, compressor);\n    return self;\n});\n\nfunction can_be_extracted_from_if_block(node) {\n    return !(\n        node instanceof AST_Const\n        || node instanceof AST_Let\n        || node instanceof AST_Class\n    );\n}\n\ndef_optimize(AST_BlockStatement, function(self, compressor) {\n    tighten_body(self.body, compressor);\n    switch (self.body.length) {\n      case 1:\n        if (!compressor.has_directive(\"use strict\")\n            && compressor.parent() instanceof AST_If\n            && can_be_extracted_from_if_block(self.body[0])\n            || can_be_evicted_from_block(self.body[0])) {\n            return self.body[0];\n        }\n        break;\n      case 0: return make_node(AST_EmptyStatement, self);\n    }\n    return self;\n});\n\nfunction opt_AST_Lambda(self, compressor) {\n    tighten_body(self.body, compressor);\n    if (compressor.option(\"side_effects\")\n        && self.body.length == 1\n        && self.body[0] === compressor.has_directive(\"use strict\")) {\n        self.body.length = 0;\n    }\n    return self;\n}\ndef_optimize(AST_Lambda, opt_AST_Lambda);\n\nconst r_keep_assign = /keep_assign/;\nAST_Scope.DEFMETHOD(\"drop_unused\", function(compressor) {\n    if (!compressor.option(\"unused\")) return;\n    if (compressor.has_directive(\"use asm\")) return;\n    var self = this;\n    if (self.pinned()) return;\n    var drop_funcs = !(self instanceof AST_Toplevel) || compressor.toplevel.funcs;\n    var drop_vars = !(self instanceof AST_Toplevel) || compressor.toplevel.vars;\n    const assign_as_unused = r_keep_assign.test(compressor.option(\"unused\")) ? return_false : function(node) {\n        if (node instanceof AST_Assign\n            && !node.logical\n            && (has_flag(node, WRITE_ONLY) || node.operator == \"=\")\n        ) {\n            return node.left;\n        }\n        if (node instanceof AST_Unary && has_flag(node, WRITE_ONLY)) {\n            return node.expression;\n        }\n    };\n    var in_use_ids = new Map();\n    var fixed_ids = new Map();\n    if (self instanceof AST_Toplevel && compressor.top_retain) {\n        self.variables.forEach(function(def) {\n            if (compressor.top_retain(def) && !in_use_ids.has(def.id)) {\n                in_use_ids.set(def.id, def);\n            }\n        });\n    }\n    var var_defs_by_id = new Map();\n    var initializations = new Map();\n    // pass 1: find out which symbols are directly used in\n    // this scope (not in nested scopes).\n    var scope = this;\n    var tw = new TreeWalker(function(node, descend) {\n        if (node instanceof AST_Lambda && node.uses_arguments && !tw.has_directive(\"use strict\")) {\n            node.argnames.forEach(function(argname) {\n                if (!(argname instanceof AST_SymbolDeclaration)) return;\n                var def = argname.definition();\n                if (!in_use_ids.has(def.id)) {\n                    in_use_ids.set(def.id, def);\n                }\n            });\n        }\n        if (node === self) return;\n        if (node instanceof AST_Defun || node instanceof AST_DefClass) {\n            var node_def = node.name.definition();\n            const in_export = tw.parent() instanceof AST_Export;\n            if (in_export || !drop_funcs && scope === self) {\n                if (node_def.global && !in_use_ids.has(node_def.id)) {\n                    in_use_ids.set(node_def.id, node_def);\n                }\n            }\n            if (node instanceof AST_DefClass) {\n                if (\n                    node.extends\n                    && (node.extends.has_side_effects(compressor)\n                    || node.extends.may_throw(compressor))\n                ) {\n                    node.extends.walk(tw);\n                }\n                for (const prop of node.properties) {\n                    if (\n                        prop.has_side_effects(compressor) ||\n                        prop.may_throw(compressor)\n                    ) {\n                        prop.walk(tw);\n                    }\n                }\n            }\n            map_add(initializations, node_def.id, node);\n            return true; // don't go in nested scopes\n        }\n        if (node instanceof AST_SymbolFunarg && scope === self) {\n            map_add(var_defs_by_id, node.definition().id, node);\n        }\n        if (node instanceof AST_Definitions && scope === self) {\n            const in_export = tw.parent() instanceof AST_Export;\n            node.definitions.forEach(function(def) {\n                if (def.name instanceof AST_SymbolVar) {\n                    map_add(var_defs_by_id, def.name.definition().id, def);\n                }\n                if (in_export || !drop_vars) {\n                    walk(def.name, node => {\n                        if (node instanceof AST_SymbolDeclaration) {\n                            const def = node.definition();\n                            if (\n                                (in_export || def.global)\n                                && !in_use_ids.has(def.id)\n                            ) {\n                                in_use_ids.set(def.id, def);\n                            }\n                        }\n                    });\n                }\n                if (def.value) {\n                    if (def.name instanceof AST_Destructuring) {\n                        def.walk(tw);\n                    } else {\n                        var node_def = def.name.definition();\n                        map_add(initializations, node_def.id, def.value);\n                        if (!node_def.chained && def.name.fixed_value() === def.value) {\n                            fixed_ids.set(node_def.id, def);\n                        }\n                    }\n                    if (def.value.has_side_effects(compressor)) {\n                        def.value.walk(tw);\n                    }\n                }\n            });\n            return true;\n        }\n        return scan_ref_scoped(node, descend);\n    });\n    self.walk(tw);\n    // pass 2: for every used symbol we need to walk its\n    // initialization code to figure out if it uses other\n    // symbols (that may not be in_use).\n    tw = new TreeWalker(scan_ref_scoped);\n    in_use_ids.forEach(function (def) {\n        var init = initializations.get(def.id);\n        if (init) init.forEach(function(init) {\n            init.walk(tw);\n        });\n    });\n    // pass 3: we should drop declarations not in_use\n    var tt = new TreeTransformer(\n        function before(node, descend, in_list) {\n            var parent = tt.parent();\n            if (drop_vars) {\n                const sym = assign_as_unused(node);\n                if (sym instanceof AST_SymbolRef) {\n                    var def = sym.definition();\n                    var in_use = in_use_ids.has(def.id);\n                    if (node instanceof AST_Assign) {\n                        if (!in_use || fixed_ids.has(def.id) && fixed_ids.get(def.id) !== node) {\n                            return maintain_this_binding(parent, node, node.right.transform(tt));\n                        }\n                    } else if (!in_use) return in_list ? MAP.skip : make_node(AST_Number, node, {\n                        value: 0\n                    });\n                }\n            }\n            if (scope !== self) return;\n            var def;\n            if (node.name\n                && (node instanceof AST_ClassExpression\n                    && !keep_name(compressor.option(\"keep_classnames\"), (def = node.name.definition()).name)\n                || node instanceof AST_Function\n                    && !keep_name(compressor.option(\"keep_fnames\"), (def = node.name.definition()).name))) {\n                // any declarations with same name will overshadow\n                // name of this anonymous function and can therefore\n                // never be used anywhere\n                if (!in_use_ids.has(def.id) || def.orig.length > 1) node.name = null;\n            }\n            if (node instanceof AST_Lambda && !(node instanceof AST_Accessor)) {\n                var trim = !compressor.option(\"keep_fargs\");\n                for (var a = node.argnames, i = a.length; --i >= 0;) {\n                    var sym = a[i];\n                    if (sym instanceof AST_Expansion) {\n                        sym = sym.expression;\n                    }\n                    if (sym instanceof AST_DefaultAssign) {\n                        sym = sym.left;\n                    }\n                    // Do not drop destructuring arguments.\n                    // They constitute a type assertion, so dropping\n                    // them would stop that TypeError which would happen\n                    // if someone called it with an incorrectly formatted\n                    // parameter.\n                    if (!(sym instanceof AST_Destructuring) && !in_use_ids.has(sym.definition().id)) {\n                        set_flag(sym, UNUSED);\n                        if (trim) {\n                            a.pop();\n                        }\n                    } else {\n                        trim = false;\n                    }\n                }\n            }\n            if ((node instanceof AST_Defun || node instanceof AST_DefClass) && node !== self) {\n                const def = node.name.definition();\n                let keep = def.global && !drop_funcs || in_use_ids.has(def.id);\n                if (!keep) {\n                    def.eliminated++;\n                    if (node instanceof AST_DefClass) {\n                        // Classes might have extends with side effects\n                        const side_effects = node.drop_side_effect_free(compressor);\n                        if (side_effects) {\n                            return make_node(AST_SimpleStatement, node, {\n                                body: side_effects\n                            });\n                        }\n                    }\n                    return in_list ? MAP.skip : make_node(AST_EmptyStatement, node);\n                }\n            }\n            if (node instanceof AST_Definitions && !(parent instanceof AST_ForIn && parent.init === node)) {\n                var drop_block = !(parent instanceof AST_Toplevel) && !(node instanceof AST_Var);\n                // place uninitialized names at the start\n                var body = [], head = [], tail = [];\n                // for unused names whose initialization has\n                // side effects, we can cascade the init. code\n                // into the next one, or next statement.\n                var side_effects = [];\n                node.definitions.forEach(function(def) {\n                    if (def.value) def.value = def.value.transform(tt);\n                    var is_destructure = def.name instanceof AST_Destructuring;\n                    var sym = is_destructure\n                        ? new SymbolDef(null, { name: \"<destructure>\" }) /* fake SymbolDef */\n                        : def.name.definition();\n                    if (drop_block && sym.global) return tail.push(def);\n                    if (!(drop_vars || drop_block)\n                        || is_destructure\n                            && (def.name.names.length\n                                || def.name.is_array\n                                || compressor.option(\"pure_getters\") != true)\n                        || in_use_ids.has(sym.id)\n                    ) {\n                        if (def.value && fixed_ids.has(sym.id) && fixed_ids.get(sym.id) !== def) {\n                            def.value = def.value.drop_side_effect_free(compressor);\n                        }\n                        if (def.name instanceof AST_SymbolVar) {\n                            var var_defs = var_defs_by_id.get(sym.id);\n                            if (var_defs.length > 1 && (!def.value || sym.orig.indexOf(def.name) > sym.eliminated)) {\n                                if (def.value) {\n                                    var ref = make_node(AST_SymbolRef, def.name, def.name);\n                                    sym.references.push(ref);\n                                    var assign = make_node(AST_Assign, def, {\n                                        operator: \"=\",\n                                        logical: false,\n                                        left: ref,\n                                        right: def.value\n                                    });\n                                    if (fixed_ids.get(sym.id) === def) {\n                                        fixed_ids.set(sym.id, assign);\n                                    }\n                                    side_effects.push(assign.transform(tt));\n                                }\n                                remove(var_defs, def);\n                                sym.eliminated++;\n                                return;\n                            }\n                        }\n                        if (def.value) {\n                            if (side_effects.length > 0) {\n                                if (tail.length > 0) {\n                                    side_effects.push(def.value);\n                                    def.value = make_sequence(def.value, side_effects);\n                                } else {\n                                    body.push(make_node(AST_SimpleStatement, node, {\n                                        body: make_sequence(node, side_effects)\n                                    }));\n                                }\n                                side_effects = [];\n                            }\n                            tail.push(def);\n                        } else {\n                            head.push(def);\n                        }\n                    } else if (sym.orig[0] instanceof AST_SymbolCatch) {\n                        var value = def.value && def.value.drop_side_effect_free(compressor);\n                        if (value) side_effects.push(value);\n                        def.value = null;\n                        head.push(def);\n                    } else {\n                        var value = def.value && def.value.drop_side_effect_free(compressor);\n                        if (value) {\n                            side_effects.push(value);\n                        }\n                        sym.eliminated++;\n                    }\n                });\n                if (head.length > 0 || tail.length > 0) {\n                    node.definitions = head.concat(tail);\n                    body.push(node);\n                }\n                if (side_effects.length > 0) {\n                    body.push(make_node(AST_SimpleStatement, node, {\n                        body: make_sequence(node, side_effects)\n                    }));\n                }\n                switch (body.length) {\n                  case 0:\n                    return in_list ? MAP.skip : make_node(AST_EmptyStatement, node);\n                  case 1:\n                    return body[0];\n                  default:\n                    return in_list ? MAP.splice(body) : make_node(AST_BlockStatement, node, {\n                        body: body\n                    });\n                }\n            }\n            // certain combination of unused name + side effect leads to:\n            //    https://github.com/mishoo/UglifyJS2/issues/44\n            //    https://github.com/mishoo/UglifyJS2/issues/1830\n            //    https://github.com/mishoo/UglifyJS2/issues/1838\n            // that's an invalid AST.\n            // We fix it at this stage by moving the `var` outside the `for`.\n            if (node instanceof AST_For) {\n                descend(node, this);\n                var block;\n                if (node.init instanceof AST_BlockStatement) {\n                    block = node.init;\n                    node.init = block.body.pop();\n                    block.body.push(node);\n                }\n                if (node.init instanceof AST_SimpleStatement) {\n                    node.init = node.init.body;\n                } else if (is_empty(node.init)) {\n                    node.init = null;\n                }\n                return !block ? node : in_list ? MAP.splice(block.body) : block;\n            }\n            if (node instanceof AST_LabeledStatement\n                && node.body instanceof AST_For\n            ) {\n                descend(node, this);\n                if (node.body instanceof AST_BlockStatement) {\n                    var block = node.body;\n                    node.body = block.body.pop();\n                    block.body.push(node);\n                    return in_list ? MAP.splice(block.body) : block;\n                }\n                return node;\n            }\n            if (node instanceof AST_BlockStatement) {\n                descend(node, this);\n                if (in_list && node.body.every(can_be_evicted_from_block)) {\n                    return MAP.splice(node.body);\n                }\n                return node;\n            }\n            if (node instanceof AST_Scope) {\n                const save_scope = scope;\n                scope = node;\n                descend(node, this);\n                scope = save_scope;\n                return node;\n            }\n        }\n    );\n\n    self.transform(tt);\n\n    function scan_ref_scoped(node, descend) {\n        var node_def;\n        const sym = assign_as_unused(node);\n        if (sym instanceof AST_SymbolRef\n            && !is_ref_of(node.left, AST_SymbolBlockDeclaration)\n            && self.variables.get(sym.name) === (node_def = sym.definition())\n        ) {\n            if (node instanceof AST_Assign) {\n                node.right.walk(tw);\n                if (!node_def.chained && node.left.fixed_value() === node.right) {\n                    fixed_ids.set(node_def.id, node);\n                }\n            }\n            return true;\n        }\n        if (node instanceof AST_SymbolRef) {\n            node_def = node.definition();\n            if (!in_use_ids.has(node_def.id)) {\n                in_use_ids.set(node_def.id, node_def);\n                if (node_def.orig[0] instanceof AST_SymbolCatch) {\n                    const redef = node_def.scope.is_block_scope()\n                        && node_def.scope.get_defun_scope().variables.get(node_def.name);\n                    if (redef) in_use_ids.set(redef.id, redef);\n                }\n            }\n            return true;\n        }\n        if (node instanceof AST_Scope) {\n            var save_scope = scope;\n            scope = node;\n            descend();\n            scope = save_scope;\n            return true;\n        }\n    }\n});\n\nAST_Scope.DEFMETHOD(\"hoist_declarations\", function(compressor) {\n    var self = this;\n    if (compressor.has_directive(\"use asm\")) return self;\n    // Hoisting makes no sense in an arrow func\n    if (!Array.isArray(self.body)) return self;\n\n    var hoist_funs = compressor.option(\"hoist_funs\");\n    var hoist_vars = compressor.option(\"hoist_vars\");\n\n    if (hoist_funs || hoist_vars) {\n        var dirs = [];\n        var hoisted = [];\n        var vars = new Map(), vars_found = 0, var_decl = 0;\n        // let's count var_decl first, we seem to waste a lot of\n        // space if we hoist `var` when there's only one.\n        walk(self, node => {\n            if (node instanceof AST_Scope && node !== self)\n                return true;\n            if (node instanceof AST_Var) {\n                ++var_decl;\n                return true;\n            }\n        });\n        hoist_vars = hoist_vars && var_decl > 1;\n        var tt = new TreeTransformer(\n            function before(node) {\n                if (node !== self) {\n                    if (node instanceof AST_Directive) {\n                        dirs.push(node);\n                        return make_node(AST_EmptyStatement, node);\n                    }\n                    if (hoist_funs && node instanceof AST_Defun\n                        && !(tt.parent() instanceof AST_Export)\n                        && tt.parent() === self) {\n                        hoisted.push(node);\n                        return make_node(AST_EmptyStatement, node);\n                    }\n                    if (\n                        hoist_vars\n                        && node instanceof AST_Var\n                        && !node.definitions.some(def => def.name instanceof AST_Destructuring)\n                    ) {\n                        node.definitions.forEach(function(def) {\n                            vars.set(def.name.name, def);\n                            ++vars_found;\n                        });\n                        var seq = node.to_assignments(compressor);\n                        var p = tt.parent();\n                        if (p instanceof AST_ForIn && p.init === node) {\n                            if (seq == null) {\n                                var def = node.definitions[0].name;\n                                return make_node(AST_SymbolRef, def, def);\n                            }\n                            return seq;\n                        }\n                        if (p instanceof AST_For && p.init === node) {\n                            return seq;\n                        }\n                        if (!seq) return make_node(AST_EmptyStatement, node);\n                        return make_node(AST_SimpleStatement, node, {\n                            body: seq\n                        });\n                    }\n                    if (node instanceof AST_Scope)\n                        return node; // to avoid descending in nested scopes\n                }\n            }\n        );\n        self = self.transform(tt);\n        if (vars_found > 0) {\n            // collect only vars which don't show up in self's arguments list\n            var defs = [];\n            const is_lambda = self instanceof AST_Lambda;\n            const args_as_names = is_lambda ? self.args_as_names() : null;\n            vars.forEach((def, name) => {\n                if (is_lambda && args_as_names.some((x) => x.name === def.name.name)) {\n                    vars.delete(name);\n                } else {\n                    def = def.clone();\n                    def.value = null;\n                    defs.push(def);\n                    vars.set(name, def);\n                }\n            });\n            if (defs.length > 0) {\n                // try to merge in assignments\n                for (var i = 0; i < self.body.length;) {\n                    if (self.body[i] instanceof AST_SimpleStatement) {\n                        var expr = self.body[i].body, sym, assign;\n                        if (expr instanceof AST_Assign\n                            && expr.operator == \"=\"\n                            && (sym = expr.left) instanceof AST_Symbol\n                            && vars.has(sym.name)\n                        ) {\n                            var def = vars.get(sym.name);\n                            if (def.value) break;\n                            def.value = expr.right;\n                            remove(defs, def);\n                            defs.push(def);\n                            self.body.splice(i, 1);\n                            continue;\n                        }\n                        if (expr instanceof AST_Sequence\n                            && (assign = expr.expressions[0]) instanceof AST_Assign\n                            && assign.operator == \"=\"\n                            && (sym = assign.left) instanceof AST_Symbol\n                            && vars.has(sym.name)\n                        ) {\n                            var def = vars.get(sym.name);\n                            if (def.value) break;\n                            def.value = assign.right;\n                            remove(defs, def);\n                            defs.push(def);\n                            self.body[i].body = make_sequence(expr, expr.expressions.slice(1));\n                            continue;\n                        }\n                    }\n                    if (self.body[i] instanceof AST_EmptyStatement) {\n                        self.body.splice(i, 1);\n                        continue;\n                    }\n                    if (self.body[i] instanceof AST_BlockStatement) {\n                        self.body.splice(i, 1, ...self.body[i].body);\n                        continue;\n                    }\n                    break;\n                }\n                defs = make_node(AST_Var, self, {\n                    definitions: defs\n                });\n                hoisted.push(defs);\n            }\n        }\n        self.body = dirs.concat(hoisted, self.body);\n    }\n    return self;\n});\n\nAST_Scope.DEFMETHOD(\"hoist_properties\", function(compressor) {\n    var self = this;\n    if (!compressor.option(\"hoist_props\") || compressor.has_directive(\"use asm\")) return self;\n    var top_retain = self instanceof AST_Toplevel && compressor.top_retain || return_false;\n    var defs_by_id = new Map();\n    var hoister = new TreeTransformer(function(node, descend) {\n        if (node instanceof AST_Definitions\n            && hoister.parent() instanceof AST_Export) return node;\n        if (node instanceof AST_VarDef) {\n            const sym = node.name;\n            let def;\n            let value;\n            if (sym.scope === self\n                && (def = sym.definition()).escaped != 1\n                && !def.assignments\n                && !def.direct_access\n                && !def.single_use\n                && !compressor.exposed(def)\n                && !top_retain(def)\n                && (value = sym.fixed_value()) === node.value\n                && value instanceof AST_Object\n                && !value.properties.some(prop =>\n                    prop instanceof AST_Expansion || prop.computed_key()\n                )\n            ) {\n                descend(node, this);\n                const defs = new Map();\n                const assignments = [];\n                value.properties.forEach(({ key, value }) => {\n                    const scope = find_scope(hoister);\n                    const symbol = self.create_symbol(sym.CTOR, {\n                        source: sym,\n                        scope,\n                        conflict_scopes: new Set([\n                            scope,\n                            ...sym.definition().references.map(ref => ref.scope)\n                        ]),\n                        tentative_name: sym.name + \"_\" + key\n                    });\n\n                    defs.set(String(key), symbol.definition());\n\n                    assignments.push(make_node(AST_VarDef, node, {\n                        name: symbol,\n                        value\n                    }));\n                });\n                defs_by_id.set(def.id, defs);\n                return MAP.splice(assignments);\n            }\n        } else if (node instanceof AST_PropAccess\n            && node.expression instanceof AST_SymbolRef\n        ) {\n            const defs = defs_by_id.get(node.expression.definition().id);\n            if (defs) {\n                const def = defs.get(String(get_simple_key(node.property)));\n                const sym = make_node(AST_SymbolRef, node, {\n                    name: def.name,\n                    scope: node.expression.scope,\n                    thedef: def\n                });\n                sym.reference({});\n                return sym;\n            }\n        }\n    });\n    return self.transform(hoister);\n});\n\ndef_optimize(AST_SimpleStatement, function(self, compressor) {\n    if (compressor.option(\"side_effects\")) {\n        var body = self.body;\n        var node = body.drop_side_effect_free(compressor, true);\n        if (!node) {\n            return make_node(AST_EmptyStatement, self);\n        }\n        if (node !== body) {\n            return make_node(AST_SimpleStatement, self, { body: node });\n        }\n    }\n    return self;\n});\n\ndef_optimize(AST_While, function(self, compressor) {\n    return compressor.option(\"loops\") ? make_node(AST_For, self, self).optimize(compressor) : self;\n});\n\ndef_optimize(AST_Do, function(self, compressor) {\n    if (!compressor.option(\"loops\")) return self;\n    var cond = self.condition.tail_node().evaluate(compressor);\n    if (!(cond instanceof AST_Node)) {\n        if (cond) return make_node(AST_For, self, {\n            body: make_node(AST_BlockStatement, self.body, {\n                body: [\n                    self.body,\n                    make_node(AST_SimpleStatement, self.condition, {\n                        body: self.condition\n                    })\n                ]\n            })\n        }).optimize(compressor);\n        if (!has_break_or_continue(self, compressor.parent())) {\n            return make_node(AST_BlockStatement, self.body, {\n                body: [\n                    self.body,\n                    make_node(AST_SimpleStatement, self.condition, {\n                        body: self.condition\n                    })\n                ]\n            }).optimize(compressor);\n        }\n    }\n    return self;\n});\n\nfunction if_break_in_loop(self, compressor) {\n    var first = self.body instanceof AST_BlockStatement ? self.body.body[0] : self.body;\n    if (compressor.option(\"dead_code\") && is_break(first)) {\n        var body = [];\n        if (self.init instanceof AST_Statement) {\n            body.push(self.init);\n        } else if (self.init) {\n            body.push(make_node(AST_SimpleStatement, self.init, {\n                body: self.init\n            }));\n        }\n        if (self.condition) {\n            body.push(make_node(AST_SimpleStatement, self.condition, {\n                body: self.condition\n            }));\n        }\n        trim_unreachable_code(compressor, self.body, body);\n        return make_node(AST_BlockStatement, self, {\n            body: body\n        });\n    }\n    if (first instanceof AST_If) {\n        if (is_break(first.body)) {\n            if (self.condition) {\n                self.condition = make_node(AST_Binary, self.condition, {\n                    left: self.condition,\n                    operator: \"&&\",\n                    right: first.condition.negate(compressor),\n                });\n            } else {\n                self.condition = first.condition.negate(compressor);\n            }\n            drop_it(first.alternative);\n        } else if (is_break(first.alternative)) {\n            if (self.condition) {\n                self.condition = make_node(AST_Binary, self.condition, {\n                    left: self.condition,\n                    operator: \"&&\",\n                    right: first.condition,\n                });\n            } else {\n                self.condition = first.condition;\n            }\n            drop_it(first.body);\n        }\n    }\n    return self;\n\n    function is_break(node) {\n        return node instanceof AST_Break\n            && compressor.loopcontrol_target(node) === compressor.self();\n    }\n\n    function drop_it(rest) {\n        rest = as_statement_array(rest);\n        if (self.body instanceof AST_BlockStatement) {\n            self.body = self.body.clone();\n            self.body.body = rest.concat(self.body.body.slice(1));\n            self.body = self.body.transform(compressor);\n        } else {\n            self.body = make_node(AST_BlockStatement, self.body, {\n                body: rest\n            }).transform(compressor);\n        }\n        self = if_break_in_loop(self, compressor);\n    }\n}\n\ndef_optimize(AST_For, function(self, compressor) {\n    if (!compressor.option(\"loops\")) return self;\n    if (compressor.option(\"side_effects\") && self.init) {\n        self.init = self.init.drop_side_effect_free(compressor);\n    }\n    if (self.condition) {\n        var cond = self.condition.evaluate(compressor);\n        if (!(cond instanceof AST_Node)) {\n            if (cond) self.condition = null;\n            else if (!compressor.option(\"dead_code\")) {\n                var orig = self.condition;\n                self.condition = make_node_from_constant(cond, self.condition);\n                self.condition = best_of_expression(self.condition.transform(compressor), orig);\n            }\n        }\n        if (compressor.option(\"dead_code\")) {\n            if (cond instanceof AST_Node) cond = self.condition.tail_node().evaluate(compressor);\n            if (!cond) {\n                var body = [];\n                trim_unreachable_code(compressor, self.body, body);\n                if (self.init instanceof AST_Statement) {\n                    body.push(self.init);\n                } else if (self.init) {\n                    body.push(make_node(AST_SimpleStatement, self.init, {\n                        body: self.init\n                    }));\n                }\n                body.push(make_node(AST_SimpleStatement, self.condition, {\n                    body: self.condition\n                }));\n                return make_node(AST_BlockStatement, self, { body: body }).optimize(compressor);\n            }\n        }\n    }\n    return if_break_in_loop(self, compressor);\n});\n\ndef_optimize(AST_If, function(self, compressor) {\n    if (is_empty(self.alternative)) self.alternative = null;\n\n    if (!compressor.option(\"conditionals\")) return self;\n    // if condition can be statically determined, drop\n    // one of the blocks.  note, statically determined implies\n    // “has no side effects”; also it doesn't work for cases like\n    // `x && true`, though it probably should.\n    var cond = self.condition.evaluate(compressor);\n    if (!compressor.option(\"dead_code\") && !(cond instanceof AST_Node)) {\n        var orig = self.condition;\n        self.condition = make_node_from_constant(cond, orig);\n        self.condition = best_of_expression(self.condition.transform(compressor), orig);\n    }\n    if (compressor.option(\"dead_code\")) {\n        if (cond instanceof AST_Node) cond = self.condition.tail_node().evaluate(compressor);\n        if (!cond) {\n            var body = [];\n            trim_unreachable_code(compressor, self.body, body);\n            body.push(make_node(AST_SimpleStatement, self.condition, {\n                body: self.condition\n            }));\n            if (self.alternative) body.push(self.alternative);\n            return make_node(AST_BlockStatement, self, { body: body }).optimize(compressor);\n        } else if (!(cond instanceof AST_Node)) {\n            var body = [];\n            body.push(make_node(AST_SimpleStatement, self.condition, {\n                body: self.condition\n            }));\n            body.push(self.body);\n            if (self.alternative) {\n                trim_unreachable_code(compressor, self.alternative, body);\n            }\n            return make_node(AST_BlockStatement, self, { body: body }).optimize(compressor);\n        }\n    }\n    var negated = self.condition.negate(compressor);\n    var self_condition_length = self.condition.size();\n    var negated_length = negated.size();\n    var negated_is_best = negated_length < self_condition_length;\n    if (self.alternative && negated_is_best) {\n        negated_is_best = false; // because we already do the switch here.\n        // no need to swap values of self_condition_length and negated_length\n        // here because they are only used in an equality comparison later on.\n        self.condition = negated;\n        var tmp = self.body;\n        self.body = self.alternative || make_node(AST_EmptyStatement, self);\n        self.alternative = tmp;\n    }\n    if (is_empty(self.body) && is_empty(self.alternative)) {\n        return make_node(AST_SimpleStatement, self.condition, {\n            body: self.condition.clone()\n        }).optimize(compressor);\n    }\n    if (self.body instanceof AST_SimpleStatement\n        && self.alternative instanceof AST_SimpleStatement) {\n        return make_node(AST_SimpleStatement, self, {\n            body: make_node(AST_Conditional, self, {\n                condition   : self.condition,\n                consequent  : self.body.body,\n                alternative : self.alternative.body\n            })\n        }).optimize(compressor);\n    }\n    if (is_empty(self.alternative) && self.body instanceof AST_SimpleStatement) {\n        if (self_condition_length === negated_length && !negated_is_best\n            && self.condition instanceof AST_Binary && self.condition.operator == \"||\") {\n            // although the code length of self.condition and negated are the same,\n            // negated does not require additional surrounding parentheses.\n            // see https://github.com/mishoo/UglifyJS2/issues/979\n            negated_is_best = true;\n        }\n        if (negated_is_best) return make_node(AST_SimpleStatement, self, {\n            body: make_node(AST_Binary, self, {\n                operator : \"||\",\n                left     : negated,\n                right    : self.body.body\n            })\n        }).optimize(compressor);\n        return make_node(AST_SimpleStatement, self, {\n            body: make_node(AST_Binary, self, {\n                operator : \"&&\",\n                left     : self.condition,\n                right    : self.body.body\n            })\n        }).optimize(compressor);\n    }\n    if (self.body instanceof AST_EmptyStatement\n        && self.alternative instanceof AST_SimpleStatement) {\n        return make_node(AST_SimpleStatement, self, {\n            body: make_node(AST_Binary, self, {\n                operator : \"||\",\n                left     : self.condition,\n                right    : self.alternative.body\n            })\n        }).optimize(compressor);\n    }\n    if (self.body instanceof AST_Exit\n        && self.alternative instanceof AST_Exit\n        && self.body.TYPE == self.alternative.TYPE) {\n        return make_node(self.body.CTOR, self, {\n            value: make_node(AST_Conditional, self, {\n                condition   : self.condition,\n                consequent  : self.body.value || make_node(AST_Undefined, self.body),\n                alternative : self.alternative.value || make_node(AST_Undefined, self.alternative)\n            }).transform(compressor)\n        }).optimize(compressor);\n    }\n    if (self.body instanceof AST_If\n        && !self.body.alternative\n        && !self.alternative) {\n        self = make_node(AST_If, self, {\n            condition: make_node(AST_Binary, self.condition, {\n                operator: \"&&\",\n                left: self.condition,\n                right: self.body.condition\n            }),\n            body: self.body.body,\n            alternative: null\n        });\n    }\n    if (aborts(self.body)) {\n        if (self.alternative) {\n            var alt = self.alternative;\n            self.alternative = null;\n            return make_node(AST_BlockStatement, self, {\n                body: [ self, alt ]\n            }).optimize(compressor);\n        }\n    }\n    if (aborts(self.alternative)) {\n        var body = self.body;\n        self.body = self.alternative;\n        self.condition = negated_is_best ? negated : self.condition.negate(compressor);\n        self.alternative = null;\n        return make_node(AST_BlockStatement, self, {\n            body: [ self, body ]\n        }).optimize(compressor);\n    }\n    return self;\n});\n\ndef_optimize(AST_Switch, function(self, compressor) {\n    if (!compressor.option(\"switches\")) return self;\n    var branch;\n    var value = self.expression.evaluate(compressor);\n    if (!(value instanceof AST_Node)) {\n        var orig = self.expression;\n        self.expression = make_node_from_constant(value, orig);\n        self.expression = best_of_expression(self.expression.transform(compressor), orig);\n    }\n    if (!compressor.option(\"dead_code\")) return self;\n    if (value instanceof AST_Node) {\n        value = self.expression.tail_node().evaluate(compressor);\n    }\n    var decl = [];\n    var body = [];\n    var default_branch;\n    var exact_match;\n    for (var i = 0, len = self.body.length; i < len && !exact_match; i++) {\n        branch = self.body[i];\n        if (branch instanceof AST_Default) {\n            if (!default_branch) {\n                default_branch = branch;\n            } else {\n                eliminate_branch(branch, body[body.length - 1]);\n            }\n        } else if (!(value instanceof AST_Node)) {\n            var exp = branch.expression.evaluate(compressor);\n            if (!(exp instanceof AST_Node) && exp !== value) {\n                eliminate_branch(branch, body[body.length - 1]);\n                continue;\n            }\n            if (exp instanceof AST_Node) exp = branch.expression.tail_node().evaluate(compressor);\n            if (exp === value) {\n                exact_match = branch;\n                if (default_branch) {\n                    var default_index = body.indexOf(default_branch);\n                    body.splice(default_index, 1);\n                    eliminate_branch(default_branch, body[default_index - 1]);\n                    default_branch = null;\n                }\n            }\n        }\n        body.push(branch);\n    }\n    while (i < len) eliminate_branch(self.body[i++], body[body.length - 1]);\n    self.body = body;\n\n    let default_or_exact = default_branch || exact_match;\n    default_branch = null;\n    exact_match = null;\n\n    // group equivalent branches so they will be located next to each other,\n    // that way the next micro-optimization will merge them.\n    // ** bail micro-optimization if not a simple switch case with breaks\n    if (body.every((branch, i) =>\n        (branch === default_or_exact || branch.expression instanceof AST_Constant)\n        && (branch.body.length === 0 || aborts(branch) || body.length - 1 === i))\n    ) {\n        for (let i = 0; i < body.length; i++) {\n            const branch = body[i];\n            for (let j = i + 1; j < body.length; j++) {\n                const next = body[j];\n                if (next.body.length === 0) continue;\n                const last_branch = j === (body.length - 1);\n                const equivalentBranch = branches_equivalent(next, branch, false);\n                if (equivalentBranch || (last_branch && branches_equivalent(next, branch, true))) {\n                    if (!equivalentBranch && last_branch) {\n                        next.body.push(make_node(AST_Break));\n                    }\n\n                    // let's find previous siblings with inert fallthrough...\n                    let x = j - 1;\n                    let fallthroughDepth = 0;\n                    while (x > i) {\n                        if (is_inert_body(body[x--])) {\n                            fallthroughDepth++;\n                        } else {\n                            break;\n                        }\n                    }\n\n                    const plucked = body.splice(j - fallthroughDepth, 1 + fallthroughDepth);\n                    body.splice(i + 1, 0, ...plucked);\n                    i += plucked.length;\n                }\n            }\n        }\n    }\n\n    // merge equivalent branches in a row\n    for (let i = 0; i < body.length; i++) {\n        let branch = body[i];\n        if (branch.body.length === 0) continue;\n        if (!aborts(branch)) continue;\n\n        for (let j = i + 1; j < body.length; i++, j++) {\n            let next = body[j];\n            if (next.body.length === 0) continue;\n            if (\n                branches_equivalent(next, branch, false)\n                || (j === body.length - 1 && branches_equivalent(next, branch, true))\n            ) {\n                branch.body = [];\n                branch = next;\n                continue;\n            }\n            break;\n        }\n    }\n\n    // Prune any empty branches at the end of the switch statement.\n    {\n        let i = body.length - 1;\n        for (; i >= 0; i--) {\n            let bbody = body[i].body;\n            if (is_break(bbody[bbody.length - 1], compressor)) bbody.pop();\n            if (!is_inert_body(body[i])) break;\n        }\n        // i now points to the index of a branch that contains a body. By incrementing, it's\n        // pointing to the first branch that's empty.\n        i++;\n        if (!default_or_exact || body.indexOf(default_or_exact) >= i) {\n            // The default behavior is to do nothing. We can take advantage of that to\n            // remove all case expressions that are side-effect free that also do\n            // nothing, since they'll default to doing nothing. But we can't remove any\n            // case expressions before one that would side-effect, since they may cause\n            // the side-effect to be skipped.\n            for (let j = body.length - 1; j >= i; j--) {\n                let branch = body[j];\n                if (branch === default_or_exact) {\n                    default_or_exact = null;\n                    body.pop();\n                } else if (!branch.expression.has_side_effects(compressor)) {\n                    body.pop();\n                } else {\n                    break;\n                }\n            }\n        }\n    }\n\n\n    // Prune side-effect free branches that fall into default.\n    DEFAULT: if (default_or_exact) {\n        let default_index = body.indexOf(default_or_exact);\n        let default_body_index = default_index;\n        for (; default_body_index < body.length - 1; default_body_index++) {\n            if (!is_inert_body(body[default_body_index])) break;\n        }\n        if (default_body_index < body.length - 1) {\n            break DEFAULT;\n        }\n\n        let side_effect_index = body.length - 1;\n        for (; side_effect_index >= 0; side_effect_index--) {\n            let branch = body[side_effect_index];\n            if (branch === default_or_exact) continue;\n            if (branch.expression.has_side_effects(compressor)) break;\n        }\n        // If the default behavior comes after any side-effect case expressions,\n        // then we can fold all side-effect free cases into the default branch.\n        // If the side-effect case is after the default, then any side-effect\n        // free cases could prevent the side-effect from occurring.\n        if (default_body_index > side_effect_index) {\n            let prev_body_index = default_index - 1;\n            for (; prev_body_index >= 0; prev_body_index--) {\n                if (!is_inert_body(body[prev_body_index])) break;\n            }\n            let before = Math.max(side_effect_index, prev_body_index) + 1;\n            let after = default_index;\n            if (side_effect_index > default_index) {\n                // If the default falls into the same body as a side-effect\n                // case, then we need preserve that case and only prune the\n                // cases after it.\n                after = side_effect_index;\n                body[side_effect_index].body = body[default_body_index].body;\n            } else {\n                // The default will be the last branch.\n                default_or_exact.body = body[default_body_index].body;\n            }\n\n            // Prune everything after the default (or last side-effect case)\n            // until the next case with a body.\n            body.splice(after + 1, default_body_index - after);\n            // Prune everything before the default that falls into it.\n            body.splice(before, default_index - before);\n        }\n    }\n\n    // See if we can remove the switch entirely if all cases (the default) fall into the same case body.\n    DEFAULT: if (default_or_exact) {\n        let i = body.findIndex(branch => !is_inert_body(branch));\n        let caseBody;\n        // `i` is equal to one of the following:\n        // - `-1`, there is no body in the switch statement.\n        // - `body.length - 1`, all cases fall into the same body.\n        // - anything else, there are multiple bodies in the switch.\n        if (i === body.length - 1) {\n            // All cases fall into the case body.\n            let branch = body[i];\n            if (has_nested_break(self)) break DEFAULT;\n\n            // This is the last case body, and we've already pruned any breaks, so it's\n            // safe to hoist.\n            caseBody = make_node(AST_BlockStatement, branch, {\n                body: branch.body\n            });\n            branch.body = [];\n        } else if (i !== -1) {\n            // If there are multiple bodies, then we cannot optimize anything.\n            break DEFAULT;\n        }\n\n        let sideEffect = body.find(branch => {\n            return (\n                branch !== default_or_exact\n                && branch.expression.has_side_effects(compressor)\n            );\n        });\n        // If no cases cause a side-effect, we can eliminate the switch entirely.\n        if (!sideEffect) {\n            return make_node(AST_BlockStatement, self, {\n                body: decl.concat(\n                    statement(self.expression),\n                    default_or_exact.expression ? statement(default_or_exact.expression) : [],\n                    caseBody || []\n                )\n            }).optimize(compressor);\n        }\n\n        // If we're this far, either there was no body or all cases fell into the same body.\n        // If there was no body, then we don't need a default branch (because the default is\n        // do nothing). If there was a body, we'll extract it to after the switch, so the\n        // switch's new default is to do nothing and we can still prune it.\n        const default_index = body.indexOf(default_or_exact);\n        body.splice(default_index, 1);\n        default_or_exact = null;\n\n        if (caseBody) {\n            // Recurse into switch statement one more time so that we can append the case body\n            // outside of the switch. This recursion will only happen once since we've pruned\n            // the default case.\n            return make_node(AST_BlockStatement, self, {\n                body: decl.concat(self, caseBody)\n            }).optimize(compressor);\n        }\n        // If we fall here, there is a default branch somewhere, there are no case bodies,\n        // and there's a side-effect somewhere. Just let the below paths take care of it.\n    }\n\n    if (body.length > 0) {\n        body[0].body = decl.concat(body[0].body);\n    }\n\n    if (body.length == 0) {\n        return make_node(AST_BlockStatement, self, {\n            body: decl.concat(statement(self.expression))\n        }).optimize(compressor);\n    }\n    if (body.length == 1 && !has_nested_break(self)) {\n        // This is the last case body, and we've already pruned any breaks, so it's\n        // safe to hoist.\n        let branch = body[0];\n        return make_node(AST_If, self, {\n            condition: make_node(AST_Binary, self, {\n                operator: \"===\",\n                left: self.expression,\n                right: branch.expression,\n            }),\n            body: make_node(AST_BlockStatement, branch, {\n                body: branch.body\n            }),\n            alternative: null\n        }).optimize(compressor);\n    }\n    if (body.length === 2 && default_or_exact && !has_nested_break(self)) {\n        let branch = body[0] === default_or_exact ? body[1] : body[0];\n        let exact_exp = default_or_exact.expression && statement(default_or_exact.expression);\n        if (aborts(body[0])) {\n            // Only the first branch body could have a break (at the last statement)\n            let first = body[0];\n            if (is_break(first.body[first.body.length - 1], compressor)) {\n                first.body.pop();\n            }\n            return make_node(AST_If, self, {\n                condition: make_node(AST_Binary, self, {\n                    operator: \"===\",\n                    left: self.expression,\n                    right: branch.expression,\n                }),\n                body: make_node(AST_BlockStatement, branch, {\n                    body: branch.body\n                }),\n                alternative: make_node(AST_BlockStatement, default_or_exact, {\n                    body: [].concat(\n                        exact_exp || [],\n                        default_or_exact.body\n                    )\n                })\n            }).optimize(compressor);\n        }\n        let operator = \"===\";\n        let consequent = make_node(AST_BlockStatement, branch, {\n            body: branch.body,\n        });\n        let always = make_node(AST_BlockStatement, default_or_exact, {\n            body: [].concat(\n                exact_exp || [],\n                default_or_exact.body\n            )\n        });\n        if (body[0] === default_or_exact) {\n            operator = \"!==\";\n            let tmp = always;\n            always = consequent;\n            consequent = tmp;\n        }\n        return make_node(AST_BlockStatement, self, {\n            body: [\n                make_node(AST_If, self, {\n                    condition: make_node(AST_Binary, self, {\n                        operator: operator,\n                        left: self.expression,\n                        right: branch.expression,\n                    }),\n                    body: consequent,\n                    alternative: null\n                })\n            ].concat(always)\n        }).optimize(compressor);\n    }\n    return self;\n\n    function eliminate_branch(branch, prev) {\n        if (prev && !aborts(prev)) {\n            prev.body = prev.body.concat(branch.body);\n        } else {\n            trim_unreachable_code(compressor, branch, decl);\n        }\n    }\n    function branches_equivalent(branch, prev, insertBreak) {\n        let bbody = branch.body;\n        let pbody = prev.body;\n        if (insertBreak) {\n            bbody = bbody.concat(make_node(AST_Break));\n        }\n        if (bbody.length !== pbody.length) return false;\n        let bblock = make_node(AST_BlockStatement, branch, { body: bbody });\n        let pblock = make_node(AST_BlockStatement, prev, { body: pbody });\n        return bblock.equivalent_to(pblock);\n    }\n    function statement(expression) {\n        return make_node(AST_SimpleStatement, expression, {\n            body: expression\n        });\n    }\n    function has_nested_break(root) {\n        let has_break = false;\n        let tw = new TreeWalker(node => {\n            if (has_break) return true;\n            if (node instanceof AST_Lambda) return true;\n            if (node instanceof AST_SimpleStatement) return true;\n            if (!is_break(node, tw)) return;\n            let parent = tw.parent();\n            if (\n                parent instanceof AST_SwitchBranch\n                && parent.body[parent.body.length - 1] === node\n            ) {\n                return;\n            }\n            has_break = true;\n        });\n        root.walk(tw);\n        return has_break;\n    }\n    function is_break(node, stack) {\n        return node instanceof AST_Break\n            && stack.loopcontrol_target(node) === self;\n    }\n    function is_inert_body(branch) {\n        return !aborts(branch) && !make_node(AST_BlockStatement, branch, {\n            body: branch.body\n        }).has_side_effects(compressor);\n    }\n});\n\ndef_optimize(AST_Try, function(self, compressor) {\n    tighten_body(self.body, compressor);\n    if (self.bcatch && self.bfinally && self.bfinally.body.every(is_empty)) self.bfinally = null;\n    if (compressor.option(\"dead_code\") && self.body.every(is_empty)) {\n        var body = [];\n        if (self.bcatch) {\n            trim_unreachable_code(compressor, self.bcatch, body);\n        }\n        if (self.bfinally) body.push(...self.bfinally.body);\n        return make_node(AST_BlockStatement, self, {\n            body: body\n        }).optimize(compressor);\n    }\n    return self;\n});\n\nAST_Definitions.DEFMETHOD(\"remove_initializers\", function() {\n    var decls = [];\n    this.definitions.forEach(function(def) {\n        if (def.name instanceof AST_SymbolDeclaration) {\n            def.value = null;\n            decls.push(def);\n        } else {\n            walk(def.name, node => {\n                if (node instanceof AST_SymbolDeclaration) {\n                    decls.push(make_node(AST_VarDef, def, {\n                        name: node,\n                        value: null\n                    }));\n                }\n            });\n        }\n    });\n    this.definitions = decls;\n});\n\nAST_Definitions.DEFMETHOD(\"to_assignments\", function(compressor) {\n    var reduce_vars = compressor.option(\"reduce_vars\");\n    var assignments = [];\n\n    for (const def of this.definitions) {\n        if (def.value) {\n            var name = make_node(AST_SymbolRef, def.name, def.name);\n            assignments.push(make_node(AST_Assign, def, {\n                operator : \"=\",\n                logical: false,\n                left     : name,\n                right    : def.value\n            }));\n            if (reduce_vars) name.definition().fixed = false;\n        } else if (def.value) {\n            // Because it's a destructuring, do not turn into an assignment.\n            var varDef = make_node(AST_VarDef, def, {\n                name: def.name,\n                value: def.value\n            });\n            var var_ = make_node(AST_Var, def, {\n                definitions: [ varDef ]\n            });\n            assignments.push(var_);\n        }\n        const thedef = def.name.definition();\n        thedef.eliminated++;\n        thedef.replaced--;\n    }\n\n    if (assignments.length == 0) return null;\n    return make_sequence(this, assignments);\n});\n\ndef_optimize(AST_Definitions, function(self) {\n    if (self.definitions.length == 0)\n        return make_node(AST_EmptyStatement, self);\n    return self;\n});\n\ndef_optimize(AST_VarDef, function(self, compressor) {\n    if (\n        self.name instanceof AST_SymbolLet\n        && self.value != null\n        && is_undefined(self.value, compressor)\n    ) {\n        self.value = null;\n    }\n    return self;\n});\n\ndef_optimize(AST_Import, function(self) {\n    return self;\n});\n\n// TODO this only works with AST_Defun, shouldn't it work for other ways of defining functions?\nfunction retain_top_func(fn, compressor) {\n    return compressor.top_retain\n        && fn instanceof AST_Defun\n        && has_flag(fn, TOP)\n        && fn.name\n        && compressor.top_retain(fn.name);\n}\n\ndef_optimize(AST_Call, function(self, compressor) {\n    var exp = self.expression;\n    var fn = exp;\n    inline_array_like_spread(self.args);\n    var simple_args = self.args.every((arg) =>\n        !(arg instanceof AST_Expansion)\n    );\n\n    if (compressor.option(\"reduce_vars\")\n        && fn instanceof AST_SymbolRef\n        && !has_annotation(self, _NOINLINE)\n    ) {\n        const fixed = fn.fixed_value();\n        if (!retain_top_func(fixed, compressor)) {\n            fn = fixed;\n        }\n    }\n\n    var is_func = fn instanceof AST_Lambda;\n\n    if (is_func && fn.pinned()) return self;\n\n    if (compressor.option(\"unused\")\n        && simple_args\n        && is_func\n        && !fn.uses_arguments) {\n        var pos = 0, last = 0;\n        for (var i = 0, len = self.args.length; i < len; i++) {\n            if (fn.argnames[i] instanceof AST_Expansion) {\n                if (has_flag(fn.argnames[i].expression, UNUSED)) while (i < len) {\n                    var node = self.args[i++].drop_side_effect_free(compressor);\n                    if (node) {\n                        self.args[pos++] = node;\n                    }\n                } else while (i < len) {\n                    self.args[pos++] = self.args[i++];\n                }\n                last = pos;\n                break;\n            }\n            var trim = i >= fn.argnames.length;\n            if (trim || has_flag(fn.argnames[i], UNUSED)) {\n                var node = self.args[i].drop_side_effect_free(compressor);\n                if (node) {\n                    self.args[pos++] = node;\n                } else if (!trim) {\n                    self.args[pos++] = make_node(AST_Number, self.args[i], {\n                        value: 0\n                    });\n                    continue;\n                }\n            } else {\n                self.args[pos++] = self.args[i];\n            }\n            last = pos;\n        }\n        self.args.length = last;\n    }\n\n    if (compressor.option(\"unsafe\")) {\n        if (exp instanceof AST_Dot && exp.start.value === \"Array\" && exp.property === \"from\" && self.args.length === 1) {\n            const [argument] = self.args;\n            if (argument instanceof AST_Array) {\n                return make_node(AST_Array, argument, {\n                    elements: argument.elements\n                }).optimize(compressor);\n            }\n        }\n        if (is_undeclared_ref(exp)) switch (exp.name) {\n          case \"Array\":\n            if (self.args.length != 1) {\n                return make_node(AST_Array, self, {\n                    elements: self.args\n                }).optimize(compressor);\n            } else if (self.args[0] instanceof AST_Number && self.args[0].value <= 11) {\n                const elements = [];\n                for (let i = 0; i < self.args[0].value; i++) elements.push(new AST_Hole);\n                return new AST_Array({ elements });\n            }\n            break;\n          case \"Object\":\n            if (self.args.length == 0) {\n                return make_node(AST_Object, self, {\n                    properties: []\n                });\n            }\n            break;\n          case \"String\":\n            if (self.args.length == 0) return make_node(AST_String, self, {\n                value: \"\"\n            });\n            if (self.args.length <= 1) return make_node(AST_Binary, self, {\n                left: self.args[0],\n                operator: \"+\",\n                right: make_node(AST_String, self, { value: \"\" })\n            }).optimize(compressor);\n            break;\n          case \"Number\":\n            if (self.args.length == 0) return make_node(AST_Number, self, {\n                value: 0\n            });\n            if (self.args.length == 1 && compressor.option(\"unsafe_math\")) {\n                return make_node(AST_UnaryPrefix, self, {\n                    expression: self.args[0],\n                    operator: \"+\"\n                }).optimize(compressor);\n            }\n            break;\n          case \"Symbol\":\n            if (self.args.length == 1 && self.args[0] instanceof AST_String && compressor.option(\"unsafe_symbols\"))\n                self.args.length = 0;\n                break;\n          case \"Boolean\":\n            if (self.args.length == 0) return make_node(AST_False, self);\n            if (self.args.length == 1) return make_node(AST_UnaryPrefix, self, {\n                expression: make_node(AST_UnaryPrefix, self, {\n                    expression: self.args[0],\n                    operator: \"!\"\n                }),\n                operator: \"!\"\n            }).optimize(compressor);\n            break;\n          case \"RegExp\":\n            var params = [];\n            if (self.args.length >= 1\n                && self.args.length <= 2\n                && self.args.every((arg) => {\n                    var value = arg.evaluate(compressor);\n                    params.push(value);\n                    return arg !== value;\n                })\n            ) {\n                let [ source, flags ] = params;\n                source = regexp_source_fix(new RegExp(source).source);\n                const rx = make_node(AST_RegExp, self, {\n                    value: { source, flags }\n                });\n                if (rx._eval(compressor) !== rx) {\n                    return rx;\n                }\n            }\n            break;\n        } else if (exp instanceof AST_Dot) switch(exp.property) {\n          case \"toString\":\n            if (self.args.length == 0 && !exp.expression.may_throw_on_access(compressor)) {\n                return make_node(AST_Binary, self, {\n                    left: make_node(AST_String, self, { value: \"\" }),\n                    operator: \"+\",\n                    right: exp.expression\n                }).optimize(compressor);\n            }\n            break;\n          case \"join\":\n            if (exp.expression instanceof AST_Array) EXIT: {\n                var separator;\n                if (self.args.length > 0) {\n                    separator = self.args[0].evaluate(compressor);\n                    if (separator === self.args[0]) break EXIT; // not a constant\n                }\n                var elements = [];\n                var consts = [];\n                for (var i = 0, len = exp.expression.elements.length; i < len; i++) {\n                    var el = exp.expression.elements[i];\n                    if (el instanceof AST_Expansion) break EXIT;\n                    var value = el.evaluate(compressor);\n                    if (value !== el) {\n                        consts.push(value);\n                    } else {\n                        if (consts.length > 0) {\n                            elements.push(make_node(AST_String, self, {\n                                value: consts.join(separator)\n                            }));\n                            consts.length = 0;\n                        }\n                        elements.push(el);\n                    }\n                }\n                if (consts.length > 0) {\n                    elements.push(make_node(AST_String, self, {\n                        value: consts.join(separator)\n                    }));\n                }\n                if (elements.length == 0) return make_node(AST_String, self, { value: \"\" });\n                if (elements.length == 1) {\n                    if (elements[0].is_string(compressor)) {\n                        return elements[0];\n                    }\n                    return make_node(AST_Binary, elements[0], {\n                        operator : \"+\",\n                        left     : make_node(AST_String, self, { value: \"\" }),\n                        right    : elements[0]\n                    });\n                }\n                if (separator == \"\") {\n                    var first;\n                    if (elements[0].is_string(compressor)\n                        || elements[1].is_string(compressor)) {\n                        first = elements.shift();\n                    } else {\n                        first = make_node(AST_String, self, { value: \"\" });\n                    }\n                    return elements.reduce(function(prev, el) {\n                        return make_node(AST_Binary, el, {\n                            operator : \"+\",\n                            left     : prev,\n                            right    : el\n                        });\n                    }, first).optimize(compressor);\n                }\n                // need this awkward cloning to not affect original element\n                // best_of will decide which one to get through.\n                var node = self.clone();\n                node.expression = node.expression.clone();\n                node.expression.expression = node.expression.expression.clone();\n                node.expression.expression.elements = elements;\n                return best_of(compressor, self, node);\n            }\n            break;\n          case \"charAt\":\n            if (exp.expression.is_string(compressor)) {\n                var arg = self.args[0];\n                var index = arg ? arg.evaluate(compressor) : 0;\n                if (index !== arg) {\n                    return make_node(AST_Sub, exp, {\n                        expression: exp.expression,\n                        property: make_node_from_constant(index | 0, arg || exp)\n                    }).optimize(compressor);\n                }\n            }\n            break;\n          case \"apply\":\n            if (self.args.length == 2 && self.args[1] instanceof AST_Array) {\n                var args = self.args[1].elements.slice();\n                args.unshift(self.args[0]);\n                return make_node(AST_Call, self, {\n                    expression: make_node(AST_Dot, exp, {\n                        expression: exp.expression,\n                        optional: false,\n                        property: \"call\"\n                    }),\n                    args: args\n                }).optimize(compressor);\n            }\n            break;\n          case \"call\":\n            var func = exp.expression;\n            if (func instanceof AST_SymbolRef) {\n                func = func.fixed_value();\n            }\n            if (func instanceof AST_Lambda && !func.contains_this()) {\n                return (self.args.length ? make_sequence(this, [\n                    self.args[0],\n                    make_node(AST_Call, self, {\n                        expression: exp.expression,\n                        args: self.args.slice(1)\n                    })\n                ]) : make_node(AST_Call, self, {\n                    expression: exp.expression,\n                    args: []\n                })).optimize(compressor);\n            }\n            break;\n        }\n    }\n\n    if (compressor.option(\"unsafe_Function\")\n        && is_undeclared_ref(exp)\n        && exp.name == \"Function\") {\n        // new Function() => function(){}\n        if (self.args.length == 0) return make_node(AST_Function, self, {\n            argnames: [],\n            body: []\n        }).optimize(compressor);\n        var nth_identifier = compressor.mangle_options && compressor.mangle_options.nth_identifier || base54;\n        if (self.args.every((x) => x instanceof AST_String)) {\n            // quite a corner-case, but we can handle it:\n            //   https://github.com/mishoo/UglifyJS2/issues/203\n            // if the code argument is a constant, then we can minify it.\n            try {\n                var code = \"n(function(\" + self.args.slice(0, -1).map(function(arg) {\n                    return arg.value;\n                }).join(\",\") + \"){\" + self.args[self.args.length - 1].value + \"})\";\n                var ast = parse(code);\n                var mangle = { ie8: compressor.option(\"ie8\"), nth_identifier: nth_identifier };\n                ast.figure_out_scope(mangle);\n                var comp = new Compressor(compressor.options, {\n                    mangle_options: compressor.mangle_options\n                });\n                ast = ast.transform(comp);\n                ast.figure_out_scope(mangle);\n                ast.compute_char_frequency(mangle);\n                ast.mangle_names(mangle);\n                var fun;\n                walk(ast, node => {\n                    if (is_func_expr(node)) {\n                        fun = node;\n                        return walk_abort;\n                    }\n                });\n                var code = OutputStream();\n                AST_BlockStatement.prototype._codegen.call(fun, fun, code);\n                self.args = [\n                    make_node(AST_String, self, {\n                        value: fun.argnames.map(function(arg) {\n                            return arg.print_to_string();\n                        }).join(\",\")\n                    }),\n                    make_node(AST_String, self.args[self.args.length - 1], {\n                        value: code.get().replace(/^{|}$/g, \"\")\n                    })\n                ];\n                return self;\n            } catch (ex) {\n                if (!(ex instanceof JS_Parse_Error)) {\n                    throw ex;\n                }\n\n                // Otherwise, it crashes at runtime. Or maybe it's nonstandard syntax.\n            }\n        }\n    }\n\n    var stat = is_func && fn.body[0];\n    var is_regular_func = is_func && !fn.is_generator && !fn.async;\n    var can_inline = is_regular_func && compressor.option(\"inline\") && !self.is_callee_pure(compressor);\n    if (can_inline && stat instanceof AST_Return) {\n        let returned = stat.value;\n        if (!returned || returned.is_constant_expression()) {\n            if (returned) {\n                returned = returned.clone(true);\n            } else {\n                returned = make_node(AST_Undefined, self);\n            }\n            const args = self.args.concat(returned);\n            return make_sequence(self, args).optimize(compressor);\n        }\n\n        // optimize identity function\n        if (\n            fn.argnames.length === 1\n            && (fn.argnames[0] instanceof AST_SymbolFunarg)\n            && self.args.length < 2\n            && returned instanceof AST_SymbolRef\n            && returned.name === fn.argnames[0].name\n        ) {\n            const replacement =\n                (self.args[0] || make_node(AST_Undefined)).optimize(compressor);\n\n            let parent;\n            if (\n                replacement instanceof AST_PropAccess\n                && (parent = compressor.parent()) instanceof AST_Call\n                && parent.expression === self\n            ) {\n                // identity function was being used to remove `this`, like in\n                //\n                // id(bag.no_this)(...)\n                //\n                // Replace with a larger but more effish (0, bag.no_this) wrapper.\n\n                return make_sequence(self, [\n                    make_node(AST_Number, self, { value: 0 }),\n                    replacement\n                ]);\n            }\n            // replace call with first argument or undefined if none passed\n            return replacement;\n        }\n    }\n\n    if (can_inline) {\n        var scope, in_loop, level = -1;\n        let def;\n        let returned_value;\n        let nearest_scope;\n        if (simple_args\n            && !fn.uses_arguments\n            && !(compressor.parent() instanceof AST_Class)\n            && !(fn.name && fn instanceof AST_Function)\n            && (returned_value = can_flatten_body(stat))\n            && (exp === fn\n                || has_annotation(self, _INLINE)\n                || compressor.option(\"unused\")\n                    && (def = exp.definition()).references.length == 1\n                    && !is_recursive_ref(compressor, def)\n                    && fn.is_constant_expression(exp.scope))\n            && !has_annotation(self, _PURE | _NOINLINE)\n            && !fn.contains_this()\n            && can_inject_symbols()\n            && (nearest_scope = find_scope(compressor))\n            && !scope_encloses_variables_in_this_scope(nearest_scope, fn)\n            && !(function in_default_assign() {\n                    // Due to the fact function parameters have their own scope\n                    // which can't use `var something` in the function body within,\n                    // we simply don't inline into DefaultAssign.\n                    let i = 0;\n                    let p;\n                    while ((p = compressor.parent(i++))) {\n                        if (p instanceof AST_DefaultAssign) return true;\n                        if (p instanceof AST_Block) break;\n                    }\n                    return false;\n                })()\n            && !(scope instanceof AST_Class)\n        ) {\n            set_flag(fn, SQUEEZED);\n            nearest_scope.add_child_scope(fn);\n            return make_sequence(self, flatten_fn(returned_value)).optimize(compressor);\n        }\n    }\n\n    if (can_inline && has_annotation(self, _INLINE)) {\n        set_flag(fn, SQUEEZED);\n        fn = make_node(fn.CTOR === AST_Defun ? AST_Function : fn.CTOR, fn, fn);\n        fn = fn.clone(true);\n        fn.figure_out_scope({}, {\n            parent_scope: find_scope(compressor),\n            toplevel: compressor.get_toplevel()\n        });\n\n        return make_node(AST_Call, self, {\n            expression: fn,\n            args: self.args,\n        }).optimize(compressor);\n    }\n\n    const can_drop_this_call = is_regular_func && compressor.option(\"side_effects\") && fn.body.every(is_empty);\n    if (can_drop_this_call) {\n        var args = self.args.concat(make_node(AST_Undefined, self));\n        return make_sequence(self, args).optimize(compressor);\n    }\n\n    if (compressor.option(\"negate_iife\")\n        && compressor.parent() instanceof AST_SimpleStatement\n        && is_iife_call(self)) {\n        return self.negate(compressor, true);\n    }\n\n    var ev = self.evaluate(compressor);\n    if (ev !== self) {\n        ev = make_node_from_constant(ev, self).optimize(compressor);\n        return best_of(compressor, ev, self);\n    }\n\n    return self;\n\n    function return_value(stat) {\n        if (!stat) return make_node(AST_Undefined, self);\n        if (stat instanceof AST_Return) {\n            if (!stat.value) return make_node(AST_Undefined, self);\n            return stat.value.clone(true);\n        }\n        if (stat instanceof AST_SimpleStatement) {\n            return make_node(AST_UnaryPrefix, stat, {\n                operator: \"void\",\n                expression: stat.body.clone(true)\n            });\n        }\n    }\n\n    function can_flatten_body(stat) {\n        var body = fn.body;\n        var len = body.length;\n        if (compressor.option(\"inline\") < 3) {\n            return len == 1 && return_value(stat);\n        }\n        stat = null;\n        for (var i = 0; i < len; i++) {\n            var line = body[i];\n            if (line instanceof AST_Var) {\n                if (stat && !line.definitions.every((var_def) =>\n                    !var_def.value\n                )) {\n                    return false;\n                }\n            } else if (stat) {\n                return false;\n            } else if (!(line instanceof AST_EmptyStatement)) {\n                stat = line;\n            }\n        }\n        return return_value(stat);\n    }\n\n    function can_inject_args(block_scoped, safe_to_inject) {\n        for (var i = 0, len = fn.argnames.length; i < len; i++) {\n            var arg = fn.argnames[i];\n            if (arg instanceof AST_DefaultAssign) {\n                if (has_flag(arg.left, UNUSED)) continue;\n                return false;\n            }\n            if (arg instanceof AST_Destructuring) return false;\n            if (arg instanceof AST_Expansion) {\n                if (has_flag(arg.expression, UNUSED)) continue;\n                return false;\n            }\n            if (has_flag(arg, UNUSED)) continue;\n            if (!safe_to_inject\n                || block_scoped.has(arg.name)\n                || identifier_atom.has(arg.name)\n                || scope.conflicting_def(arg.name)) {\n                return false;\n            }\n            if (in_loop) in_loop.push(arg.definition());\n        }\n        return true;\n    }\n\n    function can_inject_vars(block_scoped, safe_to_inject) {\n        var len = fn.body.length;\n        for (var i = 0; i < len; i++) {\n            var stat = fn.body[i];\n            if (!(stat instanceof AST_Var)) continue;\n            if (!safe_to_inject) return false;\n            for (var j = stat.definitions.length; --j >= 0;) {\n                var name = stat.definitions[j].name;\n                if (name instanceof AST_Destructuring\n                    || block_scoped.has(name.name)\n                    || identifier_atom.has(name.name)\n                    || scope.conflicting_def(name.name)) {\n                    return false;\n                }\n                if (in_loop) in_loop.push(name.definition());\n            }\n        }\n        return true;\n    }\n\n    function can_inject_symbols() {\n        var block_scoped = new Set();\n        do {\n            scope = compressor.parent(++level);\n            if (scope.is_block_scope() && scope.block_scope) {\n                // TODO this is sometimes undefined during compression.\n                // But it should always have a value!\n                scope.block_scope.variables.forEach(function (variable) {\n                    block_scoped.add(variable.name);\n                });\n            }\n            if (scope instanceof AST_Catch) {\n                // TODO can we delete? AST_Catch is a block scope.\n                if (scope.argname) {\n                    block_scoped.add(scope.argname.name);\n                }\n            } else if (scope instanceof AST_IterationStatement) {\n                in_loop = [];\n            } else if (scope instanceof AST_SymbolRef) {\n                if (scope.fixed_value() instanceof AST_Scope) return false;\n            }\n        } while (!(scope instanceof AST_Scope));\n\n        var safe_to_inject = !(scope instanceof AST_Toplevel) || compressor.toplevel.vars;\n        var inline = compressor.option(\"inline\");\n        if (!can_inject_vars(block_scoped, inline >= 3 && safe_to_inject)) return false;\n        if (!can_inject_args(block_scoped, inline >= 2 && safe_to_inject)) return false;\n        return !in_loop || in_loop.length == 0 || !is_reachable(fn, in_loop);\n    }\n\n    function append_var(decls, expressions, name, value) {\n        var def = name.definition();\n\n        // Name already exists, only when a function argument had the same name\n        const already_appended = scope.variables.has(name.name);\n        if (!already_appended) {\n            scope.variables.set(name.name, def);\n            scope.enclosed.push(def);\n            decls.push(make_node(AST_VarDef, name, {\n                name: name,\n                value: null\n            }));\n        }\n\n        var sym = make_node(AST_SymbolRef, name, name);\n        def.references.push(sym);\n        if (value) expressions.push(make_node(AST_Assign, self, {\n            operator: \"=\",\n            logical: false,\n            left: sym,\n            right: value.clone()\n        }));\n    }\n\n    function flatten_args(decls, expressions) {\n        var len = fn.argnames.length;\n        for (var i = self.args.length; --i >= len;) {\n            expressions.push(self.args[i]);\n        }\n        for (i = len; --i >= 0;) {\n            var name = fn.argnames[i];\n            var value = self.args[i];\n            if (has_flag(name, UNUSED) || !name.name || scope.conflicting_def(name.name)) {\n                if (value) expressions.push(value);\n            } else {\n                var symbol = make_node(AST_SymbolVar, name, name);\n                name.definition().orig.push(symbol);\n                if (!value && in_loop) value = make_node(AST_Undefined, self);\n                append_var(decls, expressions, symbol, value);\n            }\n        }\n        decls.reverse();\n        expressions.reverse();\n    }\n\n    function flatten_vars(decls, expressions) {\n        var pos = expressions.length;\n        for (var i = 0, lines = fn.body.length; i < lines; i++) {\n            var stat = fn.body[i];\n            if (!(stat instanceof AST_Var)) continue;\n            for (var j = 0, defs = stat.definitions.length; j < defs; j++) {\n                var var_def = stat.definitions[j];\n                var name = var_def.name;\n                append_var(decls, expressions, name, var_def.value);\n                if (in_loop && fn.argnames.every((argname) =>\n                    argname.name != name.name\n                )) {\n                    var def = fn.variables.get(name.name);\n                    var sym = make_node(AST_SymbolRef, name, name);\n                    def.references.push(sym);\n                    expressions.splice(pos++, 0, make_node(AST_Assign, var_def, {\n                        operator: \"=\",\n                        logical: false,\n                        left: sym,\n                        right: make_node(AST_Undefined, name)\n                    }));\n                }\n            }\n        }\n    }\n\n    function flatten_fn(returned_value) {\n        var decls = [];\n        var expressions = [];\n        flatten_args(decls, expressions);\n        flatten_vars(decls, expressions);\n        expressions.push(returned_value);\n\n        if (decls.length) {\n            const i = scope.body.indexOf(compressor.parent(level - 1)) + 1;\n            scope.body.splice(i, 0, make_node(AST_Var, fn, {\n                definitions: decls\n            }));\n        }\n\n        return expressions.map(exp => exp.clone(true));\n    }\n});\n\ndef_optimize(AST_New, function(self, compressor) {\n    if (\n        compressor.option(\"unsafe\") &&\n        is_undeclared_ref(self.expression) &&\n        [\"Object\", \"RegExp\", \"Function\", \"Error\", \"Array\"].includes(self.expression.name)\n    ) return make_node(AST_Call, self, self).transform(compressor);\n    return self;\n});\n\ndef_optimize(AST_Sequence, function(self, compressor) {\n    if (!compressor.option(\"side_effects\")) return self;\n    var expressions = [];\n    filter_for_side_effects();\n    var end = expressions.length - 1;\n    trim_right_for_undefined();\n    if (end == 0) {\n        self = maintain_this_binding(compressor.parent(), compressor.self(), expressions[0]);\n        if (!(self instanceof AST_Sequence)) self = self.optimize(compressor);\n        return self;\n    }\n    self.expressions = expressions;\n    return self;\n\n    function filter_for_side_effects() {\n        var first = first_in_statement(compressor);\n        var last = self.expressions.length - 1;\n        self.expressions.forEach(function(expr, index) {\n            if (index < last) expr = expr.drop_side_effect_free(compressor, first);\n            if (expr) {\n                merge_sequence(expressions, expr);\n                first = false;\n            }\n        });\n    }\n\n    function trim_right_for_undefined() {\n        while (end > 0 && is_undefined(expressions[end], compressor)) end--;\n        if (end < expressions.length - 1) {\n            expressions[end] = make_node(AST_UnaryPrefix, self, {\n                operator   : \"void\",\n                expression : expressions[end]\n            });\n            expressions.length = end + 1;\n        }\n    }\n});\n\nAST_Unary.DEFMETHOD(\"lift_sequences\", function(compressor) {\n    if (compressor.option(\"sequences\")) {\n        if (this.expression instanceof AST_Sequence) {\n            var x = this.expression.expressions.slice();\n            var e = this.clone();\n            e.expression = x.pop();\n            x.push(e);\n            return make_sequence(this, x).optimize(compressor);\n        }\n    }\n    return this;\n});\n\ndef_optimize(AST_UnaryPostfix, function(self, compressor) {\n    return self.lift_sequences(compressor);\n});\n\ndef_optimize(AST_UnaryPrefix, function(self, compressor) {\n    var e = self.expression;\n    if (\n        self.operator == \"delete\" &&\n        !(\n            e instanceof AST_SymbolRef ||\n            e instanceof AST_PropAccess ||\n            e instanceof AST_Chain ||\n            is_identifier_atom(e)\n        )\n    ) {\n        return make_sequence(self, [e, make_node(AST_True, self)]).optimize(compressor);\n    }\n    var seq = self.lift_sequences(compressor);\n    if (seq !== self) {\n        return seq;\n    }\n    if (compressor.option(\"side_effects\") && self.operator == \"void\") {\n        e = e.drop_side_effect_free(compressor);\n        if (e) {\n            self.expression = e;\n            return self;\n        } else {\n            return make_node(AST_Undefined, self).optimize(compressor);\n        }\n    }\n    if (compressor.in_boolean_context()) {\n        switch (self.operator) {\n          case \"!\":\n            if (e instanceof AST_UnaryPrefix && e.operator == \"!\") {\n                // !!foo ==> foo, if we're in boolean context\n                return e.expression;\n            }\n            if (e instanceof AST_Binary) {\n                self = best_of(compressor, self, e.negate(compressor, first_in_statement(compressor)));\n            }\n            break;\n          case \"typeof\":\n            // typeof always returns a non-empty string, thus it's\n            // always true in booleans\n            // And we don't need to check if it's undeclared, because in typeof, that's OK\n            return (e instanceof AST_SymbolRef ? make_node(AST_True, self) : make_sequence(self, [\n                e,\n                make_node(AST_True, self)\n            ])).optimize(compressor);\n        }\n    }\n    if (self.operator == \"-\" && e instanceof AST_Infinity) {\n        e = e.transform(compressor);\n    }\n    if (e instanceof AST_Binary\n        && (self.operator == \"+\" || self.operator == \"-\")\n        && (e.operator == \"*\" || e.operator == \"/\" || e.operator == \"%\")) {\n        return make_node(AST_Binary, self, {\n            operator: e.operator,\n            left: make_node(AST_UnaryPrefix, e.left, {\n                operator: self.operator,\n                expression: e.left\n            }),\n            right: e.right\n        });\n    }\n    // avoids infinite recursion of numerals\n    if (self.operator != \"-\"\n        || !(e instanceof AST_Number || e instanceof AST_Infinity || e instanceof AST_BigInt)) {\n        var ev = self.evaluate(compressor);\n        if (ev !== self) {\n            ev = make_node_from_constant(ev, self).optimize(compressor);\n            return best_of(compressor, ev, self);\n        }\n    }\n    return self;\n});\n\nAST_Binary.DEFMETHOD(\"lift_sequences\", function(compressor) {\n    if (compressor.option(\"sequences\")) {\n        if (this.left instanceof AST_Sequence) {\n            var x = this.left.expressions.slice();\n            var e = this.clone();\n            e.left = x.pop();\n            x.push(e);\n            return make_sequence(this, x).optimize(compressor);\n        }\n        if (this.right instanceof AST_Sequence && !this.left.has_side_effects(compressor)) {\n            var assign = this.operator == \"=\" && this.left instanceof AST_SymbolRef;\n            var x = this.right.expressions;\n            var last = x.length - 1;\n            for (var i = 0; i < last; i++) {\n                if (!assign && x[i].has_side_effects(compressor)) break;\n            }\n            if (i == last) {\n                x = x.slice();\n                var e = this.clone();\n                e.right = x.pop();\n                x.push(e);\n                return make_sequence(this, x).optimize(compressor);\n            } else if (i > 0) {\n                var e = this.clone();\n                e.right = make_sequence(this.right, x.slice(i));\n                x = x.slice(0, i);\n                x.push(e);\n                return make_sequence(this, x).optimize(compressor);\n            }\n        }\n    }\n    return this;\n});\n\nvar commutativeOperators = makePredicate(\"== === != !== * & | ^\");\nfunction is_object(node) {\n    return node instanceof AST_Array\n        || node instanceof AST_Lambda\n        || node instanceof AST_Object\n        || node instanceof AST_Class;\n}\n\ndef_optimize(AST_Binary, function(self, compressor) {\n    function reversible() {\n        return self.left.is_constant()\n            || self.right.is_constant()\n            || !self.left.has_side_effects(compressor)\n                && !self.right.has_side_effects(compressor);\n    }\n    function reverse(op) {\n        if (reversible()) {\n            if (op) self.operator = op;\n            var tmp = self.left;\n            self.left = self.right;\n            self.right = tmp;\n        }\n    }\n    if (commutativeOperators.has(self.operator)) {\n        if (self.right.is_constant()\n            && !self.left.is_constant()) {\n            // if right is a constant, whatever side effects the\n            // left side might have could not influence the\n            // result.  hence, force switch.\n\n            if (!(self.left instanceof AST_Binary\n                  && PRECEDENCE[self.left.operator] >= PRECEDENCE[self.operator])) {\n                reverse();\n            }\n        }\n    }\n    self = self.lift_sequences(compressor);\n    if (compressor.option(\"comparisons\")) switch (self.operator) {\n      case \"===\":\n      case \"!==\":\n        var is_strict_comparison = true;\n        if ((self.left.is_string(compressor) && self.right.is_string(compressor)) ||\n            (self.left.is_number(compressor) && self.right.is_number(compressor)) ||\n            (self.left.is_boolean() && self.right.is_boolean()) ||\n            self.left.equivalent_to(self.right)) {\n            self.operator = self.operator.substr(0, 2);\n        }\n        // XXX: intentionally falling down to the next case\n      case \"==\":\n      case \"!=\":\n        // void 0 == x => null == x\n        if (!is_strict_comparison && is_undefined(self.left, compressor)) {\n            self.left = make_node(AST_Null, self.left);\n        } else if (compressor.option(\"typeofs\")\n            // \"undefined\" == typeof x => undefined === x\n            && self.left instanceof AST_String\n            && self.left.value == \"undefined\"\n            && self.right instanceof AST_UnaryPrefix\n            && self.right.operator == \"typeof\") {\n            var expr = self.right.expression;\n            if (expr instanceof AST_SymbolRef ? expr.is_declared(compressor)\n                : !(expr instanceof AST_PropAccess && compressor.option(\"ie8\"))) {\n                self.right = expr;\n                self.left = make_node(AST_Undefined, self.left).optimize(compressor);\n                if (self.operator.length == 2) self.operator += \"=\";\n            }\n        } else if (self.left instanceof AST_SymbolRef\n            // obj !== obj => false\n            && self.right instanceof AST_SymbolRef\n            && self.left.definition() === self.right.definition()\n            && is_object(self.left.fixed_value())) {\n            return make_node(self.operator[0] == \"=\" ? AST_True : AST_False, self);\n        }\n        break;\n      case \"&&\":\n      case \"||\":\n        var lhs = self.left;\n        if (lhs.operator == self.operator) {\n            lhs = lhs.right;\n        }\n        if (lhs instanceof AST_Binary\n            && lhs.operator == (self.operator == \"&&\" ? \"!==\" : \"===\")\n            && self.right instanceof AST_Binary\n            && lhs.operator == self.right.operator\n            && (is_undefined(lhs.left, compressor) && self.right.left instanceof AST_Null\n                || lhs.left instanceof AST_Null && is_undefined(self.right.left, compressor))\n            && !lhs.right.has_side_effects(compressor)\n            && lhs.right.equivalent_to(self.right.right)) {\n            var combined = make_node(AST_Binary, self, {\n                operator: lhs.operator.slice(0, -1),\n                left: make_node(AST_Null, self),\n                right: lhs.right\n            });\n            if (lhs !== self.left) {\n                combined = make_node(AST_Binary, self, {\n                    operator: self.operator,\n                    left: self.left.left,\n                    right: combined\n                });\n            }\n            return combined;\n        }\n        break;\n    }\n    if (self.operator == \"+\" && compressor.in_boolean_context()) {\n        var ll = self.left.evaluate(compressor);\n        var rr = self.right.evaluate(compressor);\n        if (ll && typeof ll == \"string\") {\n            return make_sequence(self, [\n                self.right,\n                make_node(AST_True, self)\n            ]).optimize(compressor);\n        }\n        if (rr && typeof rr == \"string\") {\n            return make_sequence(self, [\n                self.left,\n                make_node(AST_True, self)\n            ]).optimize(compressor);\n        }\n    }\n    if (compressor.option(\"comparisons\") && self.is_boolean()) {\n        if (!(compressor.parent() instanceof AST_Binary)\n            || compressor.parent() instanceof AST_Assign) {\n            var negated = make_node(AST_UnaryPrefix, self, {\n                operator: \"!\",\n                expression: self.negate(compressor, first_in_statement(compressor))\n            });\n            self = best_of(compressor, self, negated);\n        }\n        if (compressor.option(\"unsafe_comps\")) {\n            switch (self.operator) {\n              case \"<\": reverse(\">\"); break;\n              case \"<=\": reverse(\">=\"); break;\n            }\n        }\n    }\n    if (self.operator == \"+\") {\n        if (self.right instanceof AST_String\n            && self.right.getValue() == \"\"\n            && self.left.is_string(compressor)) {\n            return self.left;\n        }\n        if (self.left instanceof AST_String\n            && self.left.getValue() == \"\"\n            && self.right.is_string(compressor)) {\n            return self.right;\n        }\n        if (self.left instanceof AST_Binary\n            && self.left.operator == \"+\"\n            && self.left.left instanceof AST_String\n            && self.left.left.getValue() == \"\"\n            && self.right.is_string(compressor)) {\n            self.left = self.left.right;\n            return self;\n        }\n    }\n    if (compressor.option(\"evaluate\")) {\n        switch (self.operator) {\n          case \"&&\":\n            var ll = has_flag(self.left, TRUTHY)\n                ? true\n                : has_flag(self.left, FALSY)\n                    ? false\n                    : self.left.evaluate(compressor);\n            if (!ll) {\n                return maintain_this_binding(compressor.parent(), compressor.self(), self.left).optimize(compressor);\n            } else if (!(ll instanceof AST_Node)) {\n                return make_sequence(self, [ self.left, self.right ]).optimize(compressor);\n            }\n            var rr = self.right.evaluate(compressor);\n            if (!rr) {\n                if (compressor.in_boolean_context()) {\n                    return make_sequence(self, [\n                        self.left,\n                        make_node(AST_False, self)\n                    ]).optimize(compressor);\n                } else {\n                    set_flag(self, FALSY);\n                }\n            } else if (!(rr instanceof AST_Node)) {\n                var parent = compressor.parent();\n                if (parent.operator == \"&&\" && parent.left === compressor.self() || compressor.in_boolean_context()) {\n                    return self.left.optimize(compressor);\n                }\n            }\n            // x || false && y ---> x ? y : false\n            if (self.left.operator == \"||\") {\n                var lr = self.left.right.evaluate(compressor);\n                if (!lr) return make_node(AST_Conditional, self, {\n                    condition: self.left.left,\n                    consequent: self.right,\n                    alternative: self.left.right\n                }).optimize(compressor);\n            }\n            break;\n          case \"||\":\n            var ll = has_flag(self.left, TRUTHY)\n              ? true\n              : has_flag(self.left, FALSY)\n                ? false\n                : self.left.evaluate(compressor);\n            if (!ll) {\n                return make_sequence(self, [ self.left, self.right ]).optimize(compressor);\n            } else if (!(ll instanceof AST_Node)) {\n                return maintain_this_binding(compressor.parent(), compressor.self(), self.left).optimize(compressor);\n            }\n            var rr = self.right.evaluate(compressor);\n            if (!rr) {\n                var parent = compressor.parent();\n                if (parent.operator == \"||\" && parent.left === compressor.self() || compressor.in_boolean_context()) {\n                    return self.left.optimize(compressor);\n                }\n            } else if (!(rr instanceof AST_Node)) {\n                if (compressor.in_boolean_context()) {\n                    return make_sequence(self, [\n                        self.left,\n                        make_node(AST_True, self)\n                    ]).optimize(compressor);\n                } else {\n                    set_flag(self, TRUTHY);\n                }\n            }\n            if (self.left.operator == \"&&\") {\n                var lr = self.left.right.evaluate(compressor);\n                if (lr && !(lr instanceof AST_Node)) return make_node(AST_Conditional, self, {\n                    condition: self.left.left,\n                    consequent: self.left.right,\n                    alternative: self.right\n                }).optimize(compressor);\n            }\n            break;\n          case \"??\":\n            if (is_nullish(self.left, compressor)) {\n                return self.right;\n            }\n\n            var ll = self.left.evaluate(compressor);\n            if (!(ll instanceof AST_Node)) {\n                // if we know the value for sure we can simply compute right away.\n                return ll == null ? self.right : self.left;\n            }\n\n            if (compressor.in_boolean_context()) {\n                const rr = self.right.evaluate(compressor);\n                if (!(rr instanceof AST_Node) && !rr) {\n                    return self.left;\n                }\n            }\n        }\n        var associative = true;\n        switch (self.operator) {\n          case \"+\":\n            // (x + \"foo\") + \"bar\" => x + \"foobar\"\n            if (self.right instanceof AST_Constant\n                && self.left instanceof AST_Binary\n                && self.left.operator == \"+\"\n                && self.left.is_string(compressor)) {\n                var binary = make_node(AST_Binary, self, {\n                    operator: \"+\",\n                    left: self.left.right,\n                    right: self.right,\n                });\n                var r = binary.optimize(compressor);\n                if (binary !== r) {\n                    self = make_node(AST_Binary, self, {\n                        operator: \"+\",\n                        left: self.left.left,\n                        right: r\n                    });\n                }\n            }\n            // (x + \"foo\") + (\"bar\" + y) => (x + \"foobar\") + y\n            if (self.left instanceof AST_Binary\n                && self.left.operator == \"+\"\n                && self.left.is_string(compressor)\n                && self.right instanceof AST_Binary\n                && self.right.operator == \"+\"\n                && self.right.is_string(compressor)) {\n                var binary = make_node(AST_Binary, self, {\n                    operator: \"+\",\n                    left: self.left.right,\n                    right: self.right.left,\n                });\n                var m = binary.optimize(compressor);\n                if (binary !== m) {\n                    self = make_node(AST_Binary, self, {\n                        operator: \"+\",\n                        left: make_node(AST_Binary, self.left, {\n                            operator: \"+\",\n                            left: self.left.left,\n                            right: m\n                        }),\n                        right: self.right.right\n                    });\n                }\n            }\n            // a + -b => a - b\n            if (self.right instanceof AST_UnaryPrefix\n                && self.right.operator == \"-\"\n                && self.left.is_number(compressor)) {\n                self = make_node(AST_Binary, self, {\n                    operator: \"-\",\n                    left: self.left,\n                    right: self.right.expression\n                });\n                break;\n            }\n            // -a + b => b - a\n            if (self.left instanceof AST_UnaryPrefix\n                && self.left.operator == \"-\"\n                && reversible()\n                && self.right.is_number(compressor)) {\n                self = make_node(AST_Binary, self, {\n                    operator: \"-\",\n                    left: self.right,\n                    right: self.left.expression\n                });\n                break;\n            }\n            // `foo${bar}baz` + 1 => `foo${bar}baz1`\n            if (self.left instanceof AST_TemplateString) {\n                var l = self.left;\n                var r = self.right.evaluate(compressor);\n                if (r != self.right) {\n                    l.segments[l.segments.length - 1].value += String(r);\n                    return l;\n                }\n            }\n            // 1 + `foo${bar}baz` => `1foo${bar}baz`\n            if (self.right instanceof AST_TemplateString) {\n                var r = self.right;\n                var l = self.left.evaluate(compressor);\n                if (l != self.left) {\n                    r.segments[0].value = String(l) + r.segments[0].value;\n                    return r;\n                }\n            }\n            // `1${bar}2` + `foo${bar}baz` => `1${bar}2foo${bar}baz`\n            if (self.left instanceof AST_TemplateString\n                && self.right instanceof AST_TemplateString) {\n                var l = self.left;\n                var segments = l.segments;\n                var r = self.right;\n                segments[segments.length - 1].value += r.segments[0].value;\n                for (var i = 1; i < r.segments.length; i++) {\n                    segments.push(r.segments[i]);\n                }\n                return l;\n            }\n          case \"*\":\n            associative = compressor.option(\"unsafe_math\");\n          case \"&\":\n          case \"|\":\n          case \"^\":\n            // a + +b => +b + a\n            if (self.left.is_number(compressor)\n                && self.right.is_number(compressor)\n                && reversible()\n                && !(self.left instanceof AST_Binary\n                    && self.left.operator != self.operator\n                    && PRECEDENCE[self.left.operator] >= PRECEDENCE[self.operator])) {\n                var reversed = make_node(AST_Binary, self, {\n                    operator: self.operator,\n                    left: self.right,\n                    right: self.left\n                });\n                if (self.right instanceof AST_Constant\n                    && !(self.left instanceof AST_Constant)) {\n                    self = best_of(compressor, reversed, self);\n                } else {\n                    self = best_of(compressor, self, reversed);\n                }\n            }\n            if (associative && self.is_number(compressor)) {\n                // a + (b + c) => (a + b) + c\n                if (self.right instanceof AST_Binary\n                    && self.right.operator == self.operator) {\n                    self = make_node(AST_Binary, self, {\n                        operator: self.operator,\n                        left: make_node(AST_Binary, self.left, {\n                            operator: self.operator,\n                            left: self.left,\n                            right: self.right.left,\n                            start: self.left.start,\n                            end: self.right.left.end\n                        }),\n                        right: self.right.right\n                    });\n                }\n                // (n + 2) + 3 => 5 + n\n                // (2 * n) * 3 => 6 + n\n                if (self.right instanceof AST_Constant\n                    && self.left instanceof AST_Binary\n                    && self.left.operator == self.operator) {\n                    if (self.left.left instanceof AST_Constant) {\n                        self = make_node(AST_Binary, self, {\n                            operator: self.operator,\n                            left: make_node(AST_Binary, self.left, {\n                                operator: self.operator,\n                                left: self.left.left,\n                                right: self.right,\n                                start: self.left.left.start,\n                                end: self.right.end\n                            }),\n                            right: self.left.right\n                        });\n                    } else if (self.left.right instanceof AST_Constant) {\n                        self = make_node(AST_Binary, self, {\n                            operator: self.operator,\n                            left: make_node(AST_Binary, self.left, {\n                                operator: self.operator,\n                                left: self.left.right,\n                                right: self.right,\n                                start: self.left.right.start,\n                                end: self.right.end\n                            }),\n                            right: self.left.left\n                        });\n                    }\n                }\n                // (a | 1) | (2 | d) => (3 | a) | b\n                if (self.left instanceof AST_Binary\n                    && self.left.operator == self.operator\n                    && self.left.right instanceof AST_Constant\n                    && self.right instanceof AST_Binary\n                    && self.right.operator == self.operator\n                    && self.right.left instanceof AST_Constant) {\n                    self = make_node(AST_Binary, self, {\n                        operator: self.operator,\n                        left: make_node(AST_Binary, self.left, {\n                            operator: self.operator,\n                            left: make_node(AST_Binary, self.left.left, {\n                                operator: self.operator,\n                                left: self.left.right,\n                                right: self.right.left,\n                                start: self.left.right.start,\n                                end: self.right.left.end\n                            }),\n                            right: self.left.left\n                        }),\n                        right: self.right.right\n                    });\n                }\n            }\n        }\n    }\n    // x && (y && z)  ==>  x && y && z\n    // x || (y || z)  ==>  x || y || z\n    // x + (\"y\" + z)  ==>  x + \"y\" + z\n    // \"x\" + (y + \"z\")==>  \"x\" + y + \"z\"\n    if (self.right instanceof AST_Binary\n        && self.right.operator == self.operator\n        && (lazy_op.has(self.operator)\n            || (self.operator == \"+\"\n                && (self.right.left.is_string(compressor)\n                    || (self.left.is_string(compressor)\n                        && self.right.right.is_string(compressor)))))\n    ) {\n        self.left = make_node(AST_Binary, self.left, {\n            operator : self.operator,\n            left     : self.left.transform(compressor),\n            right    : self.right.left.transform(compressor)\n        });\n        self.right = self.right.right.transform(compressor);\n        return self.transform(compressor);\n    }\n    var ev = self.evaluate(compressor);\n    if (ev !== self) {\n        ev = make_node_from_constant(ev, self).optimize(compressor);\n        return best_of(compressor, ev, self);\n    }\n    return self;\n});\n\ndef_optimize(AST_SymbolExport, function(self) {\n    return self;\n});\n\nfunction within_array_or_object_literal(compressor) {\n    var node, level = 0;\n    while (node = compressor.parent(level++)) {\n        if (node instanceof AST_Statement) return false;\n        if (node instanceof AST_Array\n            || node instanceof AST_ObjectKeyVal\n            || node instanceof AST_Object) {\n            return true;\n        }\n    }\n    return false;\n}\n\ndef_optimize(AST_SymbolRef, function(self, compressor) {\n    if (\n        !compressor.option(\"ie8\")\n        && is_undeclared_ref(self)\n        && !compressor.find_parent(AST_With)\n    ) {\n        switch (self.name) {\n          case \"undefined\":\n            return make_node(AST_Undefined, self).optimize(compressor);\n          case \"NaN\":\n            return make_node(AST_NaN, self).optimize(compressor);\n          case \"Infinity\":\n            return make_node(AST_Infinity, self).optimize(compressor);\n        }\n    }\n\n    const parent = compressor.parent();\n    if (compressor.option(\"reduce_vars\") && is_lhs(self, parent) !== self) {\n        const def = self.definition();\n        const nearest_scope = find_scope(compressor);\n        if (compressor.top_retain && def.global && compressor.top_retain(def)) {\n            def.fixed = false;\n            def.single_use = false;\n            return self;\n        }\n\n        let fixed = self.fixed_value();\n        let single_use = def.single_use\n            && !(parent instanceof AST_Call\n                && (parent.is_callee_pure(compressor))\n                    || has_annotation(parent, _NOINLINE))\n            && !(parent instanceof AST_Export\n                && fixed instanceof AST_Lambda\n                && fixed.name);\n\n        if (single_use && fixed instanceof AST_Node) {\n            single_use =\n                !fixed.has_side_effects(compressor)\n                && !fixed.may_throw(compressor);\n        }\n\n        if (single_use && (fixed instanceof AST_Lambda || fixed instanceof AST_Class)) {\n            if (retain_top_func(fixed, compressor)) {\n                single_use = false;\n            } else if (def.scope !== self.scope\n                && (def.escaped == 1\n                    || has_flag(fixed, INLINED)\n                    || within_array_or_object_literal(compressor)\n                    || !compressor.option(\"reduce_funcs\"))) {\n                single_use = false;\n            } else if (is_recursive_ref(compressor, def)) {\n                single_use = false;\n            } else if (def.scope !== self.scope || def.orig[0] instanceof AST_SymbolFunarg) {\n                single_use = fixed.is_constant_expression(self.scope);\n                if (single_use == \"f\") {\n                    var scope = self.scope;\n                    do {\n                        if (scope instanceof AST_Defun || is_func_expr(scope)) {\n                            set_flag(scope, INLINED);\n                        }\n                    } while (scope = scope.parent_scope);\n                }\n            }\n        }\n\n        if (single_use && fixed instanceof AST_Lambda) {\n            single_use =\n                def.scope === self.scope\n                    && !scope_encloses_variables_in_this_scope(nearest_scope, fixed)\n                || parent instanceof AST_Call\n                    && parent.expression === self\n                    && !scope_encloses_variables_in_this_scope(nearest_scope, fixed)\n                    && !(fixed.name && fixed.name.definition().recursive_refs > 0);\n        }\n\n        if (single_use && fixed) {\n            if (fixed instanceof AST_DefClass) {\n                set_flag(fixed, SQUEEZED);\n                fixed = make_node(AST_ClassExpression, fixed, fixed);\n            }\n            if (fixed instanceof AST_Defun) {\n                set_flag(fixed, SQUEEZED);\n                fixed = make_node(AST_Function, fixed, fixed);\n            }\n            if (def.recursive_refs > 0 && fixed.name instanceof AST_SymbolDefun) {\n                const defun_def = fixed.name.definition();\n                let lambda_def = fixed.variables.get(fixed.name.name);\n                let name = lambda_def && lambda_def.orig[0];\n                if (!(name instanceof AST_SymbolLambda)) {\n                    name = make_node(AST_SymbolLambda, fixed.name, fixed.name);\n                    name.scope = fixed;\n                    fixed.name = name;\n                    lambda_def = fixed.def_function(name);\n                }\n                walk(fixed, node => {\n                    if (node instanceof AST_SymbolRef && node.definition() === defun_def) {\n                        node.thedef = lambda_def;\n                        lambda_def.references.push(node);\n                    }\n                });\n            }\n            if (\n                (fixed instanceof AST_Lambda || fixed instanceof AST_Class)\n                && fixed.parent_scope !== nearest_scope\n            ) {\n                fixed = fixed.clone(true, compressor.get_toplevel());\n\n                nearest_scope.add_child_scope(fixed);\n            }\n            return fixed.optimize(compressor);\n        }\n\n        // multiple uses\n        if (fixed) {\n            let replace;\n\n            if (fixed instanceof AST_This) {\n                if (!(def.orig[0] instanceof AST_SymbolFunarg)\n                    && def.references.every((ref) =>\n                        def.scope === ref.scope\n                    )) {\n                    replace = fixed;\n                }\n            } else {\n                var ev = fixed.evaluate(compressor);\n                if (\n                    ev !== fixed\n                    && (compressor.option(\"unsafe_regexp\") || !(ev instanceof RegExp))\n                ) {\n                    replace = make_node_from_constant(ev, fixed);\n                }\n            }\n\n            if (replace) {\n                const name_length = self.size(compressor);\n                const replace_size = replace.size(compressor);\n\n                let overhead = 0;\n                if (compressor.option(\"unused\") && !compressor.exposed(def)) {\n                    overhead =\n                        (name_length + 2 + replace_size) /\n                        (def.references.length - def.assignments);\n                }\n\n                if (replace_size <= name_length + overhead) {\n                    return replace;\n                }\n            }\n        }\n    }\n\n    return self;\n});\n\nfunction scope_encloses_variables_in_this_scope(scope, pulled_scope) {\n    for (const enclosed of pulled_scope.enclosed) {\n        if (pulled_scope.variables.has(enclosed.name)) {\n            continue;\n        }\n        const looked_up = scope.find_variable(enclosed.name);\n        if (looked_up) {\n            if (looked_up === enclosed) continue;\n            return true;\n        }\n    }\n    return false;\n}\n\nfunction is_atomic(lhs, self) {\n    return lhs instanceof AST_SymbolRef || lhs.TYPE === self.TYPE;\n}\n\ndef_optimize(AST_Undefined, function(self, compressor) {\n    if (compressor.option(\"unsafe_undefined\")) {\n        var undef = find_variable(compressor, \"undefined\");\n        if (undef) {\n            var ref = make_node(AST_SymbolRef, self, {\n                name   : \"undefined\",\n                scope  : undef.scope,\n                thedef : undef\n            });\n            set_flag(ref, UNDEFINED);\n            return ref;\n        }\n    }\n    var lhs = is_lhs(compressor.self(), compressor.parent());\n    if (lhs && is_atomic(lhs, self)) return self;\n    return make_node(AST_UnaryPrefix, self, {\n        operator: \"void\",\n        expression: make_node(AST_Number, self, {\n            value: 0\n        })\n    });\n});\n\ndef_optimize(AST_Infinity, function(self, compressor) {\n    var lhs = is_lhs(compressor.self(), compressor.parent());\n    if (lhs && is_atomic(lhs, self)) return self;\n    if (\n        compressor.option(\"keep_infinity\")\n        && !(lhs && !is_atomic(lhs, self))\n        && !find_variable(compressor, \"Infinity\")\n    ) {\n        return self;\n    }\n    return make_node(AST_Binary, self, {\n        operator: \"/\",\n        left: make_node(AST_Number, self, {\n            value: 1\n        }),\n        right: make_node(AST_Number, self, {\n            value: 0\n        })\n    });\n});\n\ndef_optimize(AST_NaN, function(self, compressor) {\n    var lhs = is_lhs(compressor.self(), compressor.parent());\n    if (lhs && !is_atomic(lhs, self)\n        || find_variable(compressor, \"NaN\")) {\n        return make_node(AST_Binary, self, {\n            operator: \"/\",\n            left: make_node(AST_Number, self, {\n                value: 0\n            }),\n            right: make_node(AST_Number, self, {\n                value: 0\n            })\n        });\n    }\n    return self;\n});\n\nfunction is_reachable(self, defs) {\n    const find_ref = node => {\n        if (node instanceof AST_SymbolRef && member(node.definition(), defs)) {\n            return walk_abort;\n        }\n    };\n\n    return walk_parent(self, (node, info) => {\n        if (node instanceof AST_Scope && node !== self) {\n            var parent = info.parent();\n\n            if (\n                parent instanceof AST_Call\n                && parent.expression === node\n                // Async/Generators aren't guaranteed to sync evaluate all of\n                // their body steps, so it's possible they close over the variable.\n                && !(node.async || node.is_generator)\n            ) {\n                return;\n            }\n\n            if (walk(node, find_ref)) return walk_abort;\n\n            return true;\n        }\n    });\n}\n\nconst ASSIGN_OPS = makePredicate(\"+ - / * % >> << >>> | ^ &\");\nconst ASSIGN_OPS_COMMUTATIVE = makePredicate(\"* | ^ &\");\ndef_optimize(AST_Assign, function(self, compressor) {\n    if (self.logical) {\n        return self.lift_sequences(compressor);\n    }\n\n    var def;\n    if (compressor.option(\"dead_code\")\n        && self.left instanceof AST_SymbolRef\n        && (def = self.left.definition()).scope === compressor.find_parent(AST_Lambda)) {\n        var level = 0, node, parent = self;\n        do {\n            node = parent;\n            parent = compressor.parent(level++);\n            if (parent instanceof AST_Exit) {\n                if (in_try(level, parent)) break;\n                if (is_reachable(def.scope, [ def ])) break;\n                if (self.operator == \"=\") return self.right;\n                def.fixed = false;\n                return make_node(AST_Binary, self, {\n                    operator: self.operator.slice(0, -1),\n                    left: self.left,\n                    right: self.right\n                }).optimize(compressor);\n            }\n        } while (parent instanceof AST_Binary && parent.right === node\n            || parent instanceof AST_Sequence && parent.tail_node() === node);\n    }\n    self = self.lift_sequences(compressor);\n    if (self.operator == \"=\" && self.left instanceof AST_SymbolRef && self.right instanceof AST_Binary) {\n        // x = expr1 OP expr2\n        if (self.right.left instanceof AST_SymbolRef\n            && self.right.left.name == self.left.name\n            && ASSIGN_OPS.has(self.right.operator)) {\n            // x = x - 2  --->  x -= 2\n            self.operator = self.right.operator + \"=\";\n            self.right = self.right.right;\n        } else if (self.right.right instanceof AST_SymbolRef\n            && self.right.right.name == self.left.name\n            && ASSIGN_OPS_COMMUTATIVE.has(self.right.operator)\n            && !self.right.left.has_side_effects(compressor)) {\n            // x = 2 & x  --->  x &= 2\n            self.operator = self.right.operator + \"=\";\n            self.right = self.right.left;\n        }\n    }\n    return self;\n\n    function in_try(level, node) {\n        var right = self.right;\n        self.right = make_node(AST_Null, right);\n        var may_throw = node.may_throw(compressor);\n        self.right = right;\n        var scope = self.left.definition().scope;\n        var parent;\n        while ((parent = compressor.parent(level++)) !== scope) {\n            if (parent instanceof AST_Try) {\n                if (parent.bfinally) return true;\n                if (may_throw && parent.bcatch) return true;\n            }\n        }\n    }\n});\n\ndef_optimize(AST_DefaultAssign, function(self, compressor) {\n    if (!compressor.option(\"evaluate\")) {\n        return self;\n    }\n    var evaluateRight = self.right.evaluate(compressor);\n\n    // `[x = undefined] = foo` ---> `[x] = foo`\n    if (evaluateRight === undefined) {\n        self = self.left;\n    } else if (evaluateRight !== self.right) {\n        evaluateRight = make_node_from_constant(evaluateRight, self.right);\n        self.right = best_of_expression(evaluateRight, self.right);\n    }\n\n    return self;\n});\n\nfunction is_nullish_check(check, check_subject, compressor) {\n    if (check_subject.may_throw(compressor)) return false;\n\n    let nullish_side;\n\n    // foo == null\n    if (\n        check instanceof AST_Binary\n        && check.operator === \"==\"\n        // which side is nullish?\n        && (\n            (nullish_side = is_nullish(check.left, compressor) && check.left)\n            || (nullish_side = is_nullish(check.right, compressor) && check.right)\n        )\n        // is the other side the same as the check_subject\n        && (\n            nullish_side === check.left\n                ? check.right\n                : check.left\n        ).equivalent_to(check_subject)\n    ) {\n        return true;\n    }\n\n    // foo === null || foo === undefined\n    if (check instanceof AST_Binary && check.operator === \"||\") {\n        let null_cmp;\n        let undefined_cmp;\n\n        const find_comparison = cmp => {\n            if (!(\n                cmp instanceof AST_Binary\n                && (cmp.operator === \"===\" || cmp.operator === \"==\")\n            )) {\n                return false;\n            }\n\n            let found = 0;\n            let defined_side;\n\n            if (cmp.left instanceof AST_Null) {\n                found++;\n                null_cmp = cmp;\n                defined_side = cmp.right;\n            }\n            if (cmp.right instanceof AST_Null) {\n                found++;\n                null_cmp = cmp;\n                defined_side = cmp.left;\n            }\n            if (is_undefined(cmp.left, compressor)) {\n                found++;\n                undefined_cmp = cmp;\n                defined_side = cmp.right;\n            }\n            if (is_undefined(cmp.right, compressor)) {\n                found++;\n                undefined_cmp = cmp;\n                defined_side = cmp.left;\n            }\n\n            if (found !== 1) {\n                return false;\n            }\n\n            if (!defined_side.equivalent_to(check_subject)) {\n                return false;\n            }\n\n            return true;\n        };\n\n        if (!find_comparison(check.left)) return false;\n        if (!find_comparison(check.right)) return false;\n\n        if (null_cmp && undefined_cmp && null_cmp !== undefined_cmp) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\ndef_optimize(AST_Conditional, function(self, compressor) {\n    if (!compressor.option(\"conditionals\")) return self;\n    // This looks like lift_sequences(), should probably be under \"sequences\"\n    if (self.condition instanceof AST_Sequence) {\n        var expressions = self.condition.expressions.slice();\n        self.condition = expressions.pop();\n        expressions.push(self);\n        return make_sequence(self, expressions);\n    }\n    var cond = self.condition.evaluate(compressor);\n    if (cond !== self.condition) {\n        if (cond) {\n            return maintain_this_binding(compressor.parent(), compressor.self(), self.consequent);\n        } else {\n            return maintain_this_binding(compressor.parent(), compressor.self(), self.alternative);\n        }\n    }\n    var negated = cond.negate(compressor, first_in_statement(compressor));\n    if (best_of(compressor, cond, negated) === negated) {\n        self = make_node(AST_Conditional, self, {\n            condition: negated,\n            consequent: self.alternative,\n            alternative: self.consequent\n        });\n    }\n    var condition = self.condition;\n    var consequent = self.consequent;\n    var alternative = self.alternative;\n    // x?x:y --> x||y\n    if (condition instanceof AST_SymbolRef\n        && consequent instanceof AST_SymbolRef\n        && condition.definition() === consequent.definition()) {\n        return make_node(AST_Binary, self, {\n            operator: \"||\",\n            left: condition,\n            right: alternative\n        });\n    }\n    // if (foo) exp = something; else exp = something_else;\n    //                   |\n    //                   v\n    // exp = foo ? something : something_else;\n    if (\n        consequent instanceof AST_Assign\n        && alternative instanceof AST_Assign\n        && consequent.operator === alternative.operator\n        && consequent.logical === alternative.logical\n        && consequent.left.equivalent_to(alternative.left)\n        && (!self.condition.has_side_effects(compressor)\n            || consequent.operator == \"=\"\n                && !consequent.left.has_side_effects(compressor))\n    ) {\n        return make_node(AST_Assign, self, {\n            operator: consequent.operator,\n            left: consequent.left,\n            logical: consequent.logical,\n            right: make_node(AST_Conditional, self, {\n                condition: self.condition,\n                consequent: consequent.right,\n                alternative: alternative.right\n            })\n        });\n    }\n    // x ? y(a) : y(b) --> y(x ? a : b)\n    var arg_index;\n    if (consequent instanceof AST_Call\n        && alternative.TYPE === consequent.TYPE\n        && consequent.args.length > 0\n        && consequent.args.length == alternative.args.length\n        && consequent.expression.equivalent_to(alternative.expression)\n        && !self.condition.has_side_effects(compressor)\n        && !consequent.expression.has_side_effects(compressor)\n        && typeof (arg_index = single_arg_diff()) == \"number\") {\n        var node = consequent.clone();\n        node.args[arg_index] = make_node(AST_Conditional, self, {\n            condition: self.condition,\n            consequent: consequent.args[arg_index],\n            alternative: alternative.args[arg_index]\n        });\n        return node;\n    }\n    // a ? b : c ? b : d --> (a || c) ? b : d\n    if (alternative instanceof AST_Conditional\n        && consequent.equivalent_to(alternative.consequent)) {\n        return make_node(AST_Conditional, self, {\n            condition: make_node(AST_Binary, self, {\n                operator: \"||\",\n                left: condition,\n                right: alternative.condition\n            }),\n            consequent: consequent,\n            alternative: alternative.alternative\n        }).optimize(compressor);\n    }\n\n    // a == null ? b : a -> a ?? b\n    if (\n        compressor.option(\"ecma\") >= 2020 &&\n        is_nullish_check(condition, alternative, compressor)\n    ) {\n        return make_node(AST_Binary, self, {\n            operator: \"??\",\n            left: alternative,\n            right: consequent\n        }).optimize(compressor);\n    }\n\n    // a ? b : (c, b) --> (a || c), b\n    if (alternative instanceof AST_Sequence\n        && consequent.equivalent_to(alternative.expressions[alternative.expressions.length - 1])) {\n        return make_sequence(self, [\n            make_node(AST_Binary, self, {\n                operator: \"||\",\n                left: condition,\n                right: make_sequence(self, alternative.expressions.slice(0, -1))\n            }),\n            consequent\n        ]).optimize(compressor);\n    }\n    // a ? b : (c && b) --> (a || c) && b\n    if (alternative instanceof AST_Binary\n        && alternative.operator == \"&&\"\n        && consequent.equivalent_to(alternative.right)) {\n        return make_node(AST_Binary, self, {\n            operator: \"&&\",\n            left: make_node(AST_Binary, self, {\n                operator: \"||\",\n                left: condition,\n                right: alternative.left\n            }),\n            right: consequent\n        }).optimize(compressor);\n    }\n    // x?y?z:a:a --> x&&y?z:a\n    if (consequent instanceof AST_Conditional\n        && consequent.alternative.equivalent_to(alternative)) {\n        return make_node(AST_Conditional, self, {\n            condition: make_node(AST_Binary, self, {\n                left: self.condition,\n                operator: \"&&\",\n                right: consequent.condition\n            }),\n            consequent: consequent.consequent,\n            alternative: alternative\n        });\n    }\n    // x ? y : y --> x, y\n    if (consequent.equivalent_to(alternative)) {\n        return make_sequence(self, [\n            self.condition,\n            consequent\n        ]).optimize(compressor);\n    }\n    // x ? y || z : z --> x && y || z\n    if (consequent instanceof AST_Binary\n        && consequent.operator == \"||\"\n        && consequent.right.equivalent_to(alternative)) {\n        return make_node(AST_Binary, self, {\n            operator: \"||\",\n            left: make_node(AST_Binary, self, {\n                operator: \"&&\",\n                left: self.condition,\n                right: consequent.left\n            }),\n            right: alternative\n        }).optimize(compressor);\n    }\n\n    const in_bool = compressor.in_boolean_context();\n    if (is_true(self.consequent)) {\n        if (is_false(self.alternative)) {\n            // c ? true : false ---> !!c\n            return booleanize(self.condition);\n        }\n        // c ? true : x ---> !!c || x\n        return make_node(AST_Binary, self, {\n            operator: \"||\",\n            left: booleanize(self.condition),\n            right: self.alternative\n        });\n    }\n    if (is_false(self.consequent)) {\n        if (is_true(self.alternative)) {\n            // c ? false : true ---> !c\n            return booleanize(self.condition.negate(compressor));\n        }\n        // c ? false : x ---> !c && x\n        return make_node(AST_Binary, self, {\n            operator: \"&&\",\n            left: booleanize(self.condition.negate(compressor)),\n            right: self.alternative\n        });\n    }\n    if (is_true(self.alternative)) {\n        // c ? x : true ---> !c || x\n        return make_node(AST_Binary, self, {\n            operator: \"||\",\n            left: booleanize(self.condition.negate(compressor)),\n            right: self.consequent\n        });\n    }\n    if (is_false(self.alternative)) {\n        // c ? x : false ---> !!c && x\n        return make_node(AST_Binary, self, {\n            operator: \"&&\",\n            left: booleanize(self.condition),\n            right: self.consequent\n        });\n    }\n\n    return self;\n\n    function booleanize(node) {\n        if (node.is_boolean()) return node;\n        // !!expression\n        return make_node(AST_UnaryPrefix, node, {\n            operator: \"!\",\n            expression: node.negate(compressor)\n        });\n    }\n\n    // AST_True or !0\n    function is_true(node) {\n        return node instanceof AST_True\n            || in_bool\n                && node instanceof AST_Constant\n                && node.getValue()\n            || (node instanceof AST_UnaryPrefix\n                && node.operator == \"!\"\n                && node.expression instanceof AST_Constant\n                && !node.expression.getValue());\n    }\n    // AST_False or !1\n    function is_false(node) {\n        return node instanceof AST_False\n            || in_bool\n                && node instanceof AST_Constant\n                && !node.getValue()\n            || (node instanceof AST_UnaryPrefix\n                && node.operator == \"!\"\n                && node.expression instanceof AST_Constant\n                && node.expression.getValue());\n    }\n\n    function single_arg_diff() {\n        var a = consequent.args;\n        var b = alternative.args;\n        for (var i = 0, len = a.length; i < len; i++) {\n            if (a[i] instanceof AST_Expansion) return;\n            if (!a[i].equivalent_to(b[i])) {\n                if (b[i] instanceof AST_Expansion) return;\n                for (var j = i + 1; j < len; j++) {\n                    if (a[j] instanceof AST_Expansion) return;\n                    if (!a[j].equivalent_to(b[j])) return;\n                }\n                return i;\n            }\n        }\n    }\n});\n\ndef_optimize(AST_Boolean, function(self, compressor) {\n    if (compressor.in_boolean_context()) return make_node(AST_Number, self, {\n        value: +self.value\n    });\n    var p = compressor.parent();\n    if (compressor.option(\"booleans_as_integers\")) {\n        if (p instanceof AST_Binary && (p.operator == \"===\" || p.operator == \"!==\")) {\n            p.operator = p.operator.replace(/=$/, \"\");\n        }\n        return make_node(AST_Number, self, {\n            value: +self.value\n        });\n    }\n    if (compressor.option(\"booleans\")) {\n        if (p instanceof AST_Binary && (p.operator == \"==\"\n                                        || p.operator == \"!=\")) {\n            return make_node(AST_Number, self, {\n                value: +self.value\n            });\n        }\n        return make_node(AST_UnaryPrefix, self, {\n            operator: \"!\",\n            expression: make_node(AST_Number, self, {\n                value: 1 - self.value\n            })\n        });\n    }\n    return self;\n});\n\nfunction safe_to_flatten(value, compressor) {\n    if (value instanceof AST_SymbolRef) {\n        value = value.fixed_value();\n    }\n    if (!value) return false;\n    if (!(value instanceof AST_Lambda || value instanceof AST_Class)) return true;\n    if (!(value instanceof AST_Lambda && value.contains_this())) return true;\n    return compressor.parent() instanceof AST_New;\n}\n\nAST_PropAccess.DEFMETHOD(\"flatten_object\", function(key, compressor) {\n    if (!compressor.option(\"properties\")) return;\n    if (key === \"__proto__\") return;\n\n    var arrows = compressor.option(\"unsafe_arrows\") && compressor.option(\"ecma\") >= 2015;\n    var expr = this.expression;\n    if (expr instanceof AST_Object) {\n        var props = expr.properties;\n\n        for (var i = props.length; --i >= 0;) {\n            var prop = props[i];\n\n            if (\"\" + (prop instanceof AST_ConciseMethod ? prop.key.name : prop.key) == key) {\n                const all_props_flattenable = props.every((p) =>\n                    (p instanceof AST_ObjectKeyVal\n                        || arrows && p instanceof AST_ConciseMethod && !p.is_generator\n                    )\n                    && !p.computed_key()\n                );\n\n                if (!all_props_flattenable) return;\n                if (!safe_to_flatten(prop.value, compressor)) return;\n\n                return make_node(AST_Sub, this, {\n                    expression: make_node(AST_Array, expr, {\n                        elements: props.map(function(prop) {\n                            var v = prop.value;\n                            if (v instanceof AST_Accessor) {\n                                v = make_node(AST_Function, v, v);\n                            }\n\n                            var k = prop.key;\n                            if (k instanceof AST_Node && !(k instanceof AST_SymbolMethod)) {\n                                return make_sequence(prop, [ k, v ]);\n                            }\n\n                            return v;\n                        })\n                    }),\n                    property: make_node(AST_Number, this, {\n                        value: i\n                    })\n                });\n            }\n        }\n    }\n});\n\ndef_optimize(AST_Sub, function(self, compressor) {\n    var expr = self.expression;\n    var prop = self.property;\n    if (compressor.option(\"properties\")) {\n        var key = prop.evaluate(compressor);\n        if (key !== prop) {\n            if (typeof key == \"string\") {\n                if (key == \"undefined\") {\n                    key = undefined;\n                } else {\n                    var value = parseFloat(key);\n                    if (value.toString() == key) {\n                        key = value;\n                    }\n                }\n            }\n            prop = self.property = best_of_expression(prop, make_node_from_constant(key, prop).transform(compressor));\n            var property = \"\" + key;\n            if (is_basic_identifier_string(property)\n                && property.length <= prop.size() + 1) {\n                return make_node(AST_Dot, self, {\n                    expression: expr,\n                    optional: self.optional,\n                    property: property,\n                    quote: prop.quote,\n                }).optimize(compressor);\n            }\n        }\n    }\n    var fn;\n    OPT_ARGUMENTS: if (compressor.option(\"arguments\")\n        && expr instanceof AST_SymbolRef\n        && expr.name == \"arguments\"\n        && expr.definition().orig.length == 1\n        && (fn = expr.scope) instanceof AST_Lambda\n        && fn.uses_arguments\n        && !(fn instanceof AST_Arrow)\n        && prop instanceof AST_Number) {\n        var index = prop.getValue();\n        var params = new Set();\n        var argnames = fn.argnames;\n        for (var n = 0; n < argnames.length; n++) {\n            if (!(argnames[n] instanceof AST_SymbolFunarg)) {\n                break OPT_ARGUMENTS; // destructuring parameter - bail\n            }\n            var param = argnames[n].name;\n            if (params.has(param)) {\n                break OPT_ARGUMENTS; // duplicate parameter - bail\n            }\n            params.add(param);\n        }\n        var argname = fn.argnames[index];\n        if (argname && compressor.has_directive(\"use strict\")) {\n            var def = argname.definition();\n            if (!compressor.option(\"reduce_vars\") || def.assignments || def.orig.length > 1) {\n                argname = null;\n            }\n        } else if (!argname && !compressor.option(\"keep_fargs\") && index < fn.argnames.length + 5) {\n            while (index >= fn.argnames.length) {\n                argname = fn.create_symbol(AST_SymbolFunarg, {\n                    source: fn,\n                    scope: fn,\n                    tentative_name: \"argument_\" + fn.argnames.length,\n                });\n                fn.argnames.push(argname);\n            }\n        }\n        if (argname) {\n            var sym = make_node(AST_SymbolRef, self, argname);\n            sym.reference({});\n            clear_flag(argname, UNUSED);\n            return sym;\n        }\n    }\n    if (is_lhs(self, compressor.parent())) return self;\n    if (key !== prop) {\n        var sub = self.flatten_object(property, compressor);\n        if (sub) {\n            expr = self.expression = sub.expression;\n            prop = self.property = sub.property;\n        }\n    }\n    if (compressor.option(\"properties\") && compressor.option(\"side_effects\")\n        && prop instanceof AST_Number && expr instanceof AST_Array) {\n        var index = prop.getValue();\n        var elements = expr.elements;\n        var retValue = elements[index];\n        FLATTEN: if (safe_to_flatten(retValue, compressor)) {\n            var flatten = true;\n            var values = [];\n            for (var i = elements.length; --i > index;) {\n                var value = elements[i].drop_side_effect_free(compressor);\n                if (value) {\n                    values.unshift(value);\n                    if (flatten && value.has_side_effects(compressor)) flatten = false;\n                }\n            }\n            if (retValue instanceof AST_Expansion) break FLATTEN;\n            retValue = retValue instanceof AST_Hole ? make_node(AST_Undefined, retValue) : retValue;\n            if (!flatten) values.unshift(retValue);\n            while (--i >= 0) {\n                var value = elements[i];\n                if (value instanceof AST_Expansion) break FLATTEN;\n                value = value.drop_side_effect_free(compressor);\n                if (value) values.unshift(value);\n                else index--;\n            }\n            if (flatten) {\n                values.push(retValue);\n                return make_sequence(self, values).optimize(compressor);\n            } else return make_node(AST_Sub, self, {\n                expression: make_node(AST_Array, expr, {\n                    elements: values\n                }),\n                property: make_node(AST_Number, prop, {\n                    value: index\n                })\n            });\n        }\n    }\n    var ev = self.evaluate(compressor);\n    if (ev !== self) {\n        ev = make_node_from_constant(ev, self).optimize(compressor);\n        return best_of(compressor, ev, self);\n    }\n    return self;\n});\n\ndef_optimize(AST_Chain, function (self, compressor) {\n    if (is_nullish(self.expression, compressor)) {\n        let parent = compressor.parent();\n        // It's valid to delete a nullish optional chain, but if we optimized\n        // this to `delete undefined` then it would appear to be a syntax error\n        // when we try to optimize the delete. Thankfully, `delete 0` is fine.\n        if (parent instanceof AST_UnaryPrefix && parent.operator === \"delete\") {\n            return make_node_from_constant(0, self);\n        }\n        return make_node(AST_Undefined, self);\n    }\n    return self;\n});\n\nAST_Lambda.DEFMETHOD(\"contains_this\", function() {\n    return walk(this, node => {\n        if (node instanceof AST_This) return walk_abort;\n        if (\n            node !== this\n            && node instanceof AST_Scope\n            && !(node instanceof AST_Arrow)\n        ) {\n            return true;\n        }\n    });\n});\n\ndef_optimize(AST_Dot, function(self, compressor) {\n    const parent = compressor.parent();\n    if (is_lhs(self, parent)) return self;\n    if (compressor.option(\"unsafe_proto\")\n        && self.expression instanceof AST_Dot\n        && self.expression.property == \"prototype\") {\n        var exp = self.expression.expression;\n        if (is_undeclared_ref(exp)) switch (exp.name) {\n          case \"Array\":\n            self.expression = make_node(AST_Array, self.expression, {\n                elements: []\n            });\n            break;\n          case \"Function\":\n            self.expression = make_node(AST_Function, self.expression, {\n                argnames: [],\n                body: []\n            });\n            break;\n          case \"Number\":\n            self.expression = make_node(AST_Number, self.expression, {\n                value: 0\n            });\n            break;\n          case \"Object\":\n            self.expression = make_node(AST_Object, self.expression, {\n                properties: []\n            });\n            break;\n          case \"RegExp\":\n            self.expression = make_node(AST_RegExp, self.expression, {\n                value: { source: \"t\", flags: \"\" }\n            });\n            break;\n          case \"String\":\n            self.expression = make_node(AST_String, self.expression, {\n                value: \"\"\n            });\n            break;\n        }\n    }\n    if (!(parent instanceof AST_Call) || !has_annotation(parent, _NOINLINE)) {\n        const sub = self.flatten_object(self.property, compressor);\n        if (sub) return sub.optimize(compressor);\n    }\n    let ev = self.evaluate(compressor);\n    if (ev !== self) {\n        ev = make_node_from_constant(ev, self).optimize(compressor);\n        return best_of(compressor, ev, self);\n    }\n    return self;\n});\n\nfunction literals_in_boolean_context(self, compressor) {\n    if (compressor.in_boolean_context()) {\n        return best_of(compressor, self, make_sequence(self, [\n            self,\n            make_node(AST_True, self)\n        ]).optimize(compressor));\n    }\n    return self;\n}\n\nfunction inline_array_like_spread(elements) {\n    for (var i = 0; i < elements.length; i++) {\n        var el = elements[i];\n        if (el instanceof AST_Expansion) {\n            var expr = el.expression;\n            if (\n                expr instanceof AST_Array\n                && !expr.elements.some(elm => elm instanceof AST_Hole)\n            ) {\n                elements.splice(i, 1, ...expr.elements);\n                // Step back one, as the element at i is now new.\n                i--;\n            }\n            // In array-like spread, spreading a non-iterable value is TypeError.\n            // We therefore can’t optimize anything else, unlike with object spread.\n        }\n    }\n}\n\ndef_optimize(AST_Array, function(self, compressor) {\n    var optimized = literals_in_boolean_context(self, compressor);\n    if (optimized !== self) {\n        return optimized;\n    }\n    inline_array_like_spread(self.elements);\n    return self;\n});\n\nfunction inline_object_prop_spread(props, compressor) {\n    for (var i = 0; i < props.length; i++) {\n        var prop = props[i];\n        if (prop instanceof AST_Expansion) {\n            const expr = prop.expression;\n            if (\n                expr instanceof AST_Object\n                && expr.properties.every(prop => prop instanceof AST_ObjectKeyVal)\n            ) {\n                props.splice(i, 1, ...expr.properties);\n                // Step back one, as the property at i is now new.\n                i--;\n            } else if (expr instanceof AST_Constant\n                && !(expr instanceof AST_String)) {\n                // Unlike array-like spread, in object spread, spreading a\n                // non-iterable value silently does nothing; it is thus safe\n                // to remove. AST_String is the only iterable AST_Constant.\n                props.splice(i, 1);\n                i--;\n            } else if (is_nullish(expr, compressor)) {\n                // Likewise, null and undefined can be silently removed.\n                props.splice(i, 1);\n                i--;\n            }\n        }\n    }\n}\n\ndef_optimize(AST_Object, function(self, compressor) {\n    var optimized = literals_in_boolean_context(self, compressor);\n    if (optimized !== self) {\n        return optimized;\n    }\n    inline_object_prop_spread(self.properties, compressor);\n    return self;\n});\n\ndef_optimize(AST_RegExp, literals_in_boolean_context);\n\ndef_optimize(AST_Return, function(self, compressor) {\n    if (self.value && is_undefined(self.value, compressor)) {\n        self.value = null;\n    }\n    return self;\n});\n\ndef_optimize(AST_Arrow, opt_AST_Lambda);\n\ndef_optimize(AST_Function, function(self, compressor) {\n    self = opt_AST_Lambda(self, compressor);\n    if (compressor.option(\"unsafe_arrows\")\n        && compressor.option(\"ecma\") >= 2015\n        && !self.name\n        && !self.is_generator\n        && !self.uses_arguments\n        && !self.pinned()) {\n        const uses_this = walk(self, node => {\n            if (node instanceof AST_This) return walk_abort;\n        });\n        if (!uses_this) return make_node(AST_Arrow, self, self).optimize(compressor);\n    }\n    return self;\n});\n\ndef_optimize(AST_Class, function(self) {\n    // HACK to avoid compress failure.\n    // AST_Class is not really an AST_Scope/AST_Block as it lacks a body.\n    return self;\n});\n\ndef_optimize(AST_Yield, function(self, compressor) {\n    if (self.expression && !self.is_star && is_undefined(self.expression, compressor)) {\n        self.expression = null;\n    }\n    return self;\n});\n\ndef_optimize(AST_TemplateString, function(self, compressor) {\n    if (\n        !compressor.option(\"evaluate\")\n        || compressor.parent() instanceof AST_PrefixedTemplateString\n    ) {\n        return self;\n    }\n\n    var segments = [];\n    for (var i = 0; i < self.segments.length; i++) {\n        var segment = self.segments[i];\n        if (segment instanceof AST_Node) {\n            var result = segment.evaluate(compressor);\n            // Evaluate to constant value\n            // Constant value shorter than ${segment}\n            if (result !== segment && (result + \"\").length <= segment.size() + \"${}\".length) {\n                // There should always be a previous and next segment if segment is a node\n                segments[segments.length - 1].value = segments[segments.length - 1].value + result + self.segments[++i].value;\n                continue;\n            }\n            // `before ${`innerBefore ${any} innerAfter`} after` => `before innerBefore ${any} innerAfter after`\n            // TODO:\n            // `before ${'test' + foo} after` => `before innerBefore ${any} innerAfter after`\n            // `before ${foo + 'test} after` => `before innerBefore ${any} innerAfter after`\n            if (segment instanceof AST_TemplateString) {\n                var inners = segment.segments;\n                segments[segments.length - 1].value += inners[0].value;\n                for (var j = 1; j < inners.length; j++) {\n                    segment = inners[j];\n                    segments.push(segment);\n                }\n                continue;\n            }\n        }\n        segments.push(segment);\n    }\n    self.segments = segments;\n\n    // `foo` => \"foo\"\n    if (segments.length == 1) {\n        return make_node(AST_String, self, segments[0]);\n    }\n\n    if (\n        segments.length === 3\n        && segments[1] instanceof AST_Node\n        && (\n            segments[1].is_string(compressor)\n            || segments[1].is_number(compressor)\n            || is_nullish(segments[1], compressor)\n            || compressor.option(\"unsafe\")\n        )\n    ) {\n        // `foo${bar}` => \"foo\" + bar\n        if (segments[2].value === \"\") {\n            return make_node(AST_Binary, self, {\n                operator: \"+\",\n                left: make_node(AST_String, self, {\n                    value: segments[0].value,\n                }),\n                right: segments[1],\n            });\n        }\n        // `${bar}baz` => bar + \"baz\"\n        if (segments[0].value === \"\") {\n            return make_node(AST_Binary, self, {\n                operator: \"+\",\n                left: segments[1],\n                right: make_node(AST_String, self, {\n                    value: segments[2].value,\n                }),\n            });\n        }\n    }\n    return self;\n});\n\ndef_optimize(AST_PrefixedTemplateString, function(self) {\n    return self;\n});\n\n// [\"p\"]:1 ---> p:1\n// [42]:1 ---> 42:1\nfunction lift_key(self, compressor) {\n    if (!compressor.option(\"computed_props\")) return self;\n    // save a comparison in the typical case\n    if (!(self.key instanceof AST_Constant)) return self;\n    // allow certain acceptable props as not all AST_Constants are true constants\n    if (self.key instanceof AST_String || self.key instanceof AST_Number) {\n        if (self.key.value === \"__proto__\") return self;\n        if (self.key.value == \"constructor\"\n            && compressor.parent() instanceof AST_Class) return self;\n        if (self instanceof AST_ObjectKeyVal) {\n            self.quote = self.key.quote;\n            self.key = self.key.value;\n        } else if (self instanceof AST_ClassProperty) {\n            self.quote = self.key.quote;\n            self.key = make_node(AST_SymbolClassProperty, self.key, {\n                name: self.key.value\n            });\n        } else {\n            self.quote = self.key.quote;\n            self.key = make_node(AST_SymbolMethod, self.key, {\n                name: self.key.value\n            });\n        }\n    }\n    return self;\n}\n\ndef_optimize(AST_ObjectProperty, lift_key);\n\ndef_optimize(AST_ConciseMethod, function(self, compressor) {\n    lift_key(self, compressor);\n    // p(){return x;} ---> p:()=>x\n    if (compressor.option(\"arrows\")\n        && compressor.parent() instanceof AST_Object\n        && !self.is_generator\n        && !self.value.uses_arguments\n        && !self.value.pinned()\n        && self.value.body.length == 1\n        && self.value.body[0] instanceof AST_Return\n        && self.value.body[0].value\n        && !self.value.contains_this()) {\n        var arrow = make_node(AST_Arrow, self.value, self.value);\n        arrow.async = self.async;\n        arrow.is_generator = self.is_generator;\n        return make_node(AST_ObjectKeyVal, self, {\n            key: self.key instanceof AST_SymbolMethod ? self.key.name : self.key,\n            value: arrow,\n            quote: self.quote,\n        });\n    }\n    return self;\n});\n\ndef_optimize(AST_ObjectKeyVal, function(self, compressor) {\n    lift_key(self, compressor);\n    // p:function(){} ---> p(){}\n    // p:function*(){} ---> *p(){}\n    // p:async function(){} ---> async p(){}\n    // p:()=>{} ---> p(){}\n    // p:async()=>{} ---> async p(){}\n    var unsafe_methods = compressor.option(\"unsafe_methods\");\n    if (unsafe_methods\n        && compressor.option(\"ecma\") >= 2015\n        && (!(unsafe_methods instanceof RegExp) || unsafe_methods.test(self.key + \"\"))) {\n        var key = self.key;\n        var value = self.value;\n        var is_arrow_with_block = value instanceof AST_Arrow\n            && Array.isArray(value.body)\n            && !value.contains_this();\n        if ((is_arrow_with_block || value instanceof AST_Function) && !value.name) {\n            return make_node(AST_ConciseMethod, self, {\n                async: value.async,\n                is_generator: value.is_generator,\n                key: key instanceof AST_Node ? key : make_node(AST_SymbolMethod, self, {\n                    name: key,\n                }),\n                value: make_node(AST_Accessor, value, value),\n                quote: self.quote,\n            });\n        }\n    }\n    return self;\n});\n\ndef_optimize(AST_Destructuring, function(self, compressor) {\n    if (compressor.option(\"pure_getters\") == true\n        && compressor.option(\"unused\")\n        && !self.is_array\n        && Array.isArray(self.names)\n        && !is_destructuring_export_decl(compressor)\n        && !(self.names[self.names.length - 1] instanceof AST_Expansion)) {\n        var keep = [];\n        for (var i = 0; i < self.names.length; i++) {\n            var elem = self.names[i];\n            if (!(elem instanceof AST_ObjectKeyVal\n                && typeof elem.key == \"string\"\n                && elem.value instanceof AST_SymbolDeclaration\n                && !should_retain(compressor, elem.value.definition()))) {\n                keep.push(elem);\n            }\n        }\n        if (keep.length != self.names.length) {\n            self.names = keep;\n        }\n    }\n    return self;\n\n    function is_destructuring_export_decl(compressor) {\n        var ancestors = [/^VarDef$/, /^(Const|Let|Var)$/, /^Export$/];\n        for (var a = 0, p = 0, len = ancestors.length; a < len; p++) {\n            var parent = compressor.parent(p);\n            if (!parent) return false;\n            if (a === 0 && parent.TYPE == \"Destructuring\") continue;\n            if (!ancestors[a].test(parent.TYPE)) {\n                return false;\n            }\n            a++;\n        }\n        return true;\n    }\n\n    function should_retain(compressor, def) {\n        if (def.references.length) return true;\n        if (!def.global) return false;\n        if (compressor.toplevel.vars) {\n             if (compressor.top_retain) {\n                 return compressor.top_retain(def);\n             }\n             return false;\n        }\n        return true;\n    }\n});\n\nexport {\n    Compressor,\n};\n","export var domprops = [\n    \"$&\",\n    \"$'\",\n    \"$*\",\n    \"$+\",\n    \"$1\",\n    \"$2\",\n    \"$3\",\n    \"$4\",\n    \"$5\",\n    \"$6\",\n    \"$7\",\n    \"$8\",\n    \"$9\",\n    \"$_\",\n    \"$`\",\n    \"$input\",\n    \"-moz-animation\",\n    \"-moz-animation-delay\",\n    \"-moz-animation-direction\",\n    \"-moz-animation-duration\",\n    \"-moz-animation-fill-mode\",\n    \"-moz-animation-iteration-count\",\n    \"-moz-animation-name\",\n    \"-moz-animation-play-state\",\n    \"-moz-animation-timing-function\",\n    \"-moz-appearance\",\n    \"-moz-backface-visibility\",\n    \"-moz-border-end\",\n    \"-moz-border-end-color\",\n    \"-moz-border-end-style\",\n    \"-moz-border-end-width\",\n    \"-moz-border-image\",\n    \"-moz-border-start\",\n    \"-moz-border-start-color\",\n    \"-moz-border-start-style\",\n    \"-moz-border-start-width\",\n    \"-moz-box-align\",\n    \"-moz-box-direction\",\n    \"-moz-box-flex\",\n    \"-moz-box-ordinal-group\",\n    \"-moz-box-orient\",\n    \"-moz-box-pack\",\n    \"-moz-box-sizing\",\n    \"-moz-float-edge\",\n    \"-moz-font-feature-settings\",\n    \"-moz-font-language-override\",\n    \"-moz-force-broken-image-icon\",\n    \"-moz-hyphens\",\n    \"-moz-image-region\",\n    \"-moz-margin-end\",\n    \"-moz-margin-start\",\n    \"-moz-orient\",\n    \"-moz-osx-font-smoothing\",\n    \"-moz-outline-radius\",\n    \"-moz-outline-radius-bottomleft\",\n    \"-moz-outline-radius-bottomright\",\n    \"-moz-outline-radius-topleft\",\n    \"-moz-outline-radius-topright\",\n    \"-moz-padding-end\",\n    \"-moz-padding-start\",\n    \"-moz-perspective\",\n    \"-moz-perspective-origin\",\n    \"-moz-tab-size\",\n    \"-moz-text-size-adjust\",\n    \"-moz-transform\",\n    \"-moz-transform-origin\",\n    \"-moz-transform-style\",\n    \"-moz-transition\",\n    \"-moz-transition-delay\",\n    \"-moz-transition-duration\",\n    \"-moz-transition-property\",\n    \"-moz-transition-timing-function\",\n    \"-moz-user-focus\",\n    \"-moz-user-input\",\n    \"-moz-user-modify\",\n    \"-moz-user-select\",\n    \"-moz-window-dragging\",\n    \"-webkit-align-content\",\n    \"-webkit-align-items\",\n    \"-webkit-align-self\",\n    \"-webkit-animation\",\n    \"-webkit-animation-delay\",\n    \"-webkit-animation-direction\",\n    \"-webkit-animation-duration\",\n    \"-webkit-animation-fill-mode\",\n    \"-webkit-animation-iteration-count\",\n    \"-webkit-animation-name\",\n    \"-webkit-animation-play-state\",\n    \"-webkit-animation-timing-function\",\n    \"-webkit-appearance\",\n    \"-webkit-backface-visibility\",\n    \"-webkit-background-clip\",\n    \"-webkit-background-origin\",\n    \"-webkit-background-size\",\n    \"-webkit-border-bottom-left-radius\",\n    \"-webkit-border-bottom-right-radius\",\n    \"-webkit-border-image\",\n    \"-webkit-border-radius\",\n    \"-webkit-border-top-left-radius\",\n    \"-webkit-border-top-right-radius\",\n    \"-webkit-box-align\",\n    \"-webkit-box-direction\",\n    \"-webkit-box-flex\",\n    \"-webkit-box-ordinal-group\",\n    \"-webkit-box-orient\",\n    \"-webkit-box-pack\",\n    \"-webkit-box-shadow\",\n    \"-webkit-box-sizing\",\n    \"-webkit-filter\",\n    \"-webkit-flex\",\n    \"-webkit-flex-basis\",\n    \"-webkit-flex-direction\",\n    \"-webkit-flex-flow\",\n    \"-webkit-flex-grow\",\n    \"-webkit-flex-shrink\",\n    \"-webkit-flex-wrap\",\n    \"-webkit-justify-content\",\n    \"-webkit-line-clamp\",\n    \"-webkit-mask\",\n    \"-webkit-mask-clip\",\n    \"-webkit-mask-composite\",\n    \"-webkit-mask-image\",\n    \"-webkit-mask-origin\",\n    \"-webkit-mask-position\",\n    \"-webkit-mask-position-x\",\n    \"-webkit-mask-position-y\",\n    \"-webkit-mask-repeat\",\n    \"-webkit-mask-size\",\n    \"-webkit-order\",\n    \"-webkit-perspective\",\n    \"-webkit-perspective-origin\",\n    \"-webkit-text-fill-color\",\n    \"-webkit-text-size-adjust\",\n    \"-webkit-text-stroke\",\n    \"-webkit-text-stroke-color\",\n    \"-webkit-text-stroke-width\",\n    \"-webkit-transform\",\n    \"-webkit-transform-origin\",\n    \"-webkit-transform-style\",\n    \"-webkit-transition\",\n    \"-webkit-transition-delay\",\n    \"-webkit-transition-duration\",\n    \"-webkit-transition-property\",\n    \"-webkit-transition-timing-function\",\n    \"-webkit-user-select\",\n    \"0\",\n    \"1\",\n    \"10\",\n    \"11\",\n    \"12\",\n    \"13\",\n    \"14\",\n    \"15\",\n    \"16\",\n    \"17\",\n    \"18\",\n    \"19\",\n    \"2\",\n    \"20\",\n    \"3\",\n    \"4\",\n    \"5\",\n    \"6\",\n    \"7\",\n    \"8\",\n    \"9\",\n    \"@@iterator\",\n    \"ABORT_ERR\",\n    \"ACTIVE\",\n    \"ACTIVE_ATTRIBUTES\",\n    \"ACTIVE_TEXTURE\",\n    \"ACTIVE_UNIFORMS\",\n    \"ACTIVE_UNIFORM_BLOCKS\",\n    \"ADDITION\",\n    \"ALIASED_LINE_WIDTH_RANGE\",\n    \"ALIASED_POINT_SIZE_RANGE\",\n    \"ALLOW_KEYBOARD_INPUT\",\n    \"ALLPASS\",\n    \"ALPHA\",\n    \"ALPHA_BITS\",\n    \"ALREADY_SIGNALED\",\n    \"ALT_MASK\",\n    \"ALWAYS\",\n    \"ANY_SAMPLES_PASSED\",\n    \"ANY_SAMPLES_PASSED_CONSERVATIVE\",\n    \"ANY_TYPE\",\n    \"ANY_UNORDERED_NODE_TYPE\",\n    \"ARRAY_BUFFER\",\n    \"ARRAY_BUFFER_BINDING\",\n    \"ATTACHED_SHADERS\",\n    \"ATTRIBUTE_NODE\",\n    \"AT_TARGET\",\n    \"AbortController\",\n    \"AbortSignal\",\n    \"AbsoluteOrientationSensor\",\n    \"AbstractRange\",\n    \"Accelerometer\",\n    \"AddSearchProvider\",\n    \"AggregateError\",\n    \"AnalyserNode\",\n    \"Animation\",\n    \"AnimationEffect\",\n    \"AnimationEvent\",\n    \"AnimationPlaybackEvent\",\n    \"AnimationTimeline\",\n    \"AnonXMLHttpRequest\",\n    \"Any\",\n    \"ApplicationCache\",\n    \"ApplicationCacheErrorEvent\",\n    \"Array\",\n    \"ArrayBuffer\",\n    \"ArrayType\",\n    \"Atomics\",\n    \"Attr\",\n    \"Audio\",\n    \"AudioBuffer\",\n    \"AudioBufferSourceNode\",\n    \"AudioContext\",\n    \"AudioDestinationNode\",\n    \"AudioListener\",\n    \"AudioNode\",\n    \"AudioParam\",\n    \"AudioParamMap\",\n    \"AudioProcessingEvent\",\n    \"AudioScheduledSourceNode\",\n    \"AudioStreamTrack\",\n    \"AudioWorklet\",\n    \"AudioWorkletNode\",\n    \"AuthenticatorAssertionResponse\",\n    \"AuthenticatorAttestationResponse\",\n    \"AuthenticatorResponse\",\n    \"AutocompleteErrorEvent\",\n    \"BACK\",\n    \"BAD_BOUNDARYPOINTS_ERR\",\n    \"BAD_REQUEST\",\n    \"BANDPASS\",\n    \"BLEND\",\n    \"BLEND_COLOR\",\n    \"BLEND_DST_ALPHA\",\n    \"BLEND_DST_RGB\",\n    \"BLEND_EQUATION\",\n    \"BLEND_EQUATION_ALPHA\",\n    \"BLEND_EQUATION_RGB\",\n    \"BLEND_SRC_ALPHA\",\n    \"BLEND_SRC_RGB\",\n    \"BLUE_BITS\",\n    \"BLUR\",\n    \"BOOL\",\n    \"BOOLEAN_TYPE\",\n    \"BOOL_VEC2\",\n    \"BOOL_VEC3\",\n    \"BOOL_VEC4\",\n    \"BOTH\",\n    \"BROWSER_DEFAULT_WEBGL\",\n    \"BUBBLING_PHASE\",\n    \"BUFFER_SIZE\",\n    \"BUFFER_USAGE\",\n    \"BYTE\",\n    \"BYTES_PER_ELEMENT\",\n    \"BackgroundFetchManager\",\n    \"BackgroundFetchRecord\",\n    \"BackgroundFetchRegistration\",\n    \"BarProp\",\n    \"BarcodeDetector\",\n    \"BaseAudioContext\",\n    \"BaseHref\",\n    \"BatteryManager\",\n    \"BeforeInstallPromptEvent\",\n    \"BeforeLoadEvent\",\n    \"BeforeUnloadEvent\",\n    \"BigInt\",\n    \"BigInt64Array\",\n    \"BigUint64Array\",\n    \"BiquadFilterNode\",\n    \"Blob\",\n    \"BlobEvent\",\n    \"Bluetooth\",\n    \"BluetoothCharacteristicProperties\",\n    \"BluetoothDevice\",\n    \"BluetoothRemoteGATTCharacteristic\",\n    \"BluetoothRemoteGATTDescriptor\",\n    \"BluetoothRemoteGATTServer\",\n    \"BluetoothRemoteGATTService\",\n    \"BluetoothUUID\",\n    \"Boolean\",\n    \"BroadcastChannel\",\n    \"ByteLengthQueuingStrategy\",\n    \"CAPTURING_PHASE\",\n    \"CCW\",\n    \"CDATASection\",\n    \"CDATA_SECTION_NODE\",\n    \"CHANGE\",\n    \"CHARSET_RULE\",\n    \"CHECKING\",\n    \"CLAMP_TO_EDGE\",\n    \"CLICK\",\n    \"CLOSED\",\n    \"CLOSING\",\n    \"COLOR\",\n    \"COLOR_ATTACHMENT0\",\n    \"COLOR_ATTACHMENT1\",\n    \"COLOR_ATTACHMENT10\",\n    \"COLOR_ATTACHMENT11\",\n    \"COLOR_ATTACHMENT12\",\n    \"COLOR_ATTACHMENT13\",\n    \"COLOR_ATTACHMENT14\",\n    \"COLOR_ATTACHMENT15\",\n    \"COLOR_ATTACHMENT2\",\n    \"COLOR_ATTACHMENT3\",\n    \"COLOR_ATTACHMENT4\",\n    \"COLOR_ATTACHMENT5\",\n    \"COLOR_ATTACHMENT6\",\n    \"COLOR_ATTACHMENT7\",\n    \"COLOR_ATTACHMENT8\",\n    \"COLOR_ATTACHMENT9\",\n    \"COLOR_BUFFER_BIT\",\n    \"COLOR_CLEAR_VALUE\",\n    \"COLOR_WRITEMASK\",\n    \"COMMENT_NODE\",\n    \"COMPARE_REF_TO_TEXTURE\",\n    \"COMPILE_STATUS\",\n    \"COMPRESSED_RGBA_S3TC_DXT1_EXT\",\n    \"COMPRESSED_RGBA_S3TC_DXT3_EXT\",\n    \"COMPRESSED_RGBA_S3TC_DXT5_EXT\",\n    \"COMPRESSED_RGB_S3TC_DXT1_EXT\",\n    \"COMPRESSED_TEXTURE_FORMATS\",\n    \"CONDITION_SATISFIED\",\n    \"CONFIGURATION_UNSUPPORTED\",\n    \"CONNECTING\",\n    \"CONSTANT_ALPHA\",\n    \"CONSTANT_COLOR\",\n    \"CONSTRAINT_ERR\",\n    \"CONTEXT_LOST_WEBGL\",\n    \"CONTROL_MASK\",\n    \"COPY_READ_BUFFER\",\n    \"COPY_READ_BUFFER_BINDING\",\n    \"COPY_WRITE_BUFFER\",\n    \"COPY_WRITE_BUFFER_BINDING\",\n    \"COUNTER_STYLE_RULE\",\n    \"CSS\",\n    \"CSS2Properties\",\n    \"CSSAnimation\",\n    \"CSSCharsetRule\",\n    \"CSSConditionRule\",\n    \"CSSCounterStyleRule\",\n    \"CSSFontFaceRule\",\n    \"CSSFontFeatureValuesRule\",\n    \"CSSGroupingRule\",\n    \"CSSImageValue\",\n    \"CSSImportRule\",\n    \"CSSKeyframeRule\",\n    \"CSSKeyframesRule\",\n    \"CSSKeywordValue\",\n    \"CSSMathInvert\",\n    \"CSSMathMax\",\n    \"CSSMathMin\",\n    \"CSSMathNegate\",\n    \"CSSMathProduct\",\n    \"CSSMathSum\",\n    \"CSSMathValue\",\n    \"CSSMatrixComponent\",\n    \"CSSMediaRule\",\n    \"CSSMozDocumentRule\",\n    \"CSSNameSpaceRule\",\n    \"CSSNamespaceRule\",\n    \"CSSNumericArray\",\n    \"CSSNumericValue\",\n    \"CSSPageRule\",\n    \"CSSPerspective\",\n    \"CSSPositionValue\",\n    \"CSSPrimitiveValue\",\n    \"CSSRotate\",\n    \"CSSRule\",\n    \"CSSRuleList\",\n    \"CSSScale\",\n    \"CSSSkew\",\n    \"CSSSkewX\",\n    \"CSSSkewY\",\n    \"CSSStyleDeclaration\",\n    \"CSSStyleRule\",\n    \"CSSStyleSheet\",\n    \"CSSStyleValue\",\n    \"CSSSupportsRule\",\n    \"CSSTransformComponent\",\n    \"CSSTransformValue\",\n    \"CSSTransition\",\n    \"CSSTranslate\",\n    \"CSSUnitValue\",\n    \"CSSUnknownRule\",\n    \"CSSUnparsedValue\",\n    \"CSSValue\",\n    \"CSSValueList\",\n    \"CSSVariableReferenceValue\",\n    \"CSSVariablesDeclaration\",\n    \"CSSVariablesRule\",\n    \"CSSViewportRule\",\n    \"CSS_ATTR\",\n    \"CSS_CM\",\n    \"CSS_COUNTER\",\n    \"CSS_CUSTOM\",\n    \"CSS_DEG\",\n    \"CSS_DIMENSION\",\n    \"CSS_EMS\",\n    \"CSS_EXS\",\n    \"CSS_FILTER_BLUR\",\n    \"CSS_FILTER_BRIGHTNESS\",\n    \"CSS_FILTER_CONTRAST\",\n    \"CSS_FILTER_CUSTOM\",\n    \"CSS_FILTER_DROP_SHADOW\",\n    \"CSS_FILTER_GRAYSCALE\",\n    \"CSS_FILTER_HUE_ROTATE\",\n    \"CSS_FILTER_INVERT\",\n    \"CSS_FILTER_OPACITY\",\n    \"CSS_FILTER_REFERENCE\",\n    \"CSS_FILTER_SATURATE\",\n    \"CSS_FILTER_SEPIA\",\n    \"CSS_GRAD\",\n    \"CSS_HZ\",\n    \"CSS_IDENT\",\n    \"CSS_IN\",\n    \"CSS_INHERIT\",\n    \"CSS_KHZ\",\n    \"CSS_MATRIX\",\n    \"CSS_MATRIX3D\",\n    \"CSS_MM\",\n    \"CSS_MS\",\n    \"CSS_NUMBER\",\n    \"CSS_PC\",\n    \"CSS_PERCENTAGE\",\n    \"CSS_PERSPECTIVE\",\n    \"CSS_PRIMITIVE_VALUE\",\n    \"CSS_PT\",\n    \"CSS_PX\",\n    \"CSS_RAD\",\n    \"CSS_RECT\",\n    \"CSS_RGBCOLOR\",\n    \"CSS_ROTATE\",\n    \"CSS_ROTATE3D\",\n    \"CSS_ROTATEX\",\n    \"CSS_ROTATEY\",\n    \"CSS_ROTATEZ\",\n    \"CSS_S\",\n    \"CSS_SCALE\",\n    \"CSS_SCALE3D\",\n    \"CSS_SCALEX\",\n    \"CSS_SCALEY\",\n    \"CSS_SCALEZ\",\n    \"CSS_SKEW\",\n    \"CSS_SKEWX\",\n    \"CSS_SKEWY\",\n    \"CSS_STRING\",\n    \"CSS_TRANSLATE\",\n    \"CSS_TRANSLATE3D\",\n    \"CSS_TRANSLATEX\",\n    \"CSS_TRANSLATEY\",\n    \"CSS_TRANSLATEZ\",\n    \"CSS_UNKNOWN\",\n    \"CSS_URI\",\n    \"CSS_VALUE_LIST\",\n    \"CSS_VH\",\n    \"CSS_VMAX\",\n    \"CSS_VMIN\",\n    \"CSS_VW\",\n    \"CULL_FACE\",\n    \"CULL_FACE_MODE\",\n    \"CURRENT_PROGRAM\",\n    \"CURRENT_QUERY\",\n    \"CURRENT_VERTEX_ATTRIB\",\n    \"CUSTOM\",\n    \"CW\",\n    \"Cache\",\n    \"CacheStorage\",\n    \"CanvasCaptureMediaStream\",\n    \"CanvasCaptureMediaStreamTrack\",\n    \"CanvasGradient\",\n    \"CanvasPattern\",\n    \"CanvasRenderingContext2D\",\n    \"CaretPosition\",\n    \"ChannelMergerNode\",\n    \"ChannelSplitterNode\",\n    \"CharacterData\",\n    \"ClientRect\",\n    \"ClientRectList\",\n    \"Clipboard\",\n    \"ClipboardEvent\",\n    \"ClipboardItem\",\n    \"CloseEvent\",\n    \"Collator\",\n    \"CommandEvent\",\n    \"Comment\",\n    \"CompileError\",\n    \"CompositionEvent\",\n    \"CompressionStream\",\n    \"Console\",\n    \"ConstantSourceNode\",\n    \"Controllers\",\n    \"ConvolverNode\",\n    \"CountQueuingStrategy\",\n    \"Counter\",\n    \"Credential\",\n    \"CredentialsContainer\",\n    \"Crypto\",\n    \"CryptoKey\",\n    \"CustomElementRegistry\",\n    \"CustomEvent\",\n    \"DATABASE_ERR\",\n    \"DATA_CLONE_ERR\",\n    \"DATA_ERR\",\n    \"DBLCLICK\",\n    \"DECR\",\n    \"DECR_WRAP\",\n    \"DELETE_STATUS\",\n    \"DEPTH\",\n    \"DEPTH24_STENCIL8\",\n    \"DEPTH32F_STENCIL8\",\n    \"DEPTH_ATTACHMENT\",\n    \"DEPTH_BITS\",\n    \"DEPTH_BUFFER_BIT\",\n    \"DEPTH_CLEAR_VALUE\",\n    \"DEPTH_COMPONENT\",\n    \"DEPTH_COMPONENT16\",\n    \"DEPTH_COMPONENT24\",\n    \"DEPTH_COMPONENT32F\",\n    \"DEPTH_FUNC\",\n    \"DEPTH_RANGE\",\n    \"DEPTH_STENCIL\",\n    \"DEPTH_STENCIL_ATTACHMENT\",\n    \"DEPTH_TEST\",\n    \"DEPTH_WRITEMASK\",\n    \"DEVICE_INELIGIBLE\",\n    \"DIRECTION_DOWN\",\n    \"DIRECTION_LEFT\",\n    \"DIRECTION_RIGHT\",\n    \"DIRECTION_UP\",\n    \"DISABLED\",\n    \"DISPATCH_REQUEST_ERR\",\n    \"DITHER\",\n    \"DOCUMENT_FRAGMENT_NODE\",\n    \"DOCUMENT_NODE\",\n    \"DOCUMENT_POSITION_CONTAINED_BY\",\n    \"DOCUMENT_POSITION_CONTAINS\",\n    \"DOCUMENT_POSITION_DISCONNECTED\",\n    \"DOCUMENT_POSITION_FOLLOWING\",\n    \"DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC\",\n    \"DOCUMENT_POSITION_PRECEDING\",\n    \"DOCUMENT_TYPE_NODE\",\n    \"DOMCursor\",\n    \"DOMError\",\n    \"DOMException\",\n    \"DOMImplementation\",\n    \"DOMImplementationLS\",\n    \"DOMMatrix\",\n    \"DOMMatrixReadOnly\",\n    \"DOMParser\",\n    \"DOMPoint\",\n    \"DOMPointReadOnly\",\n    \"DOMQuad\",\n    \"DOMRect\",\n    \"DOMRectList\",\n    \"DOMRectReadOnly\",\n    \"DOMRequest\",\n    \"DOMSTRING_SIZE_ERR\",\n    \"DOMSettableTokenList\",\n    \"DOMStringList\",\n    \"DOMStringMap\",\n    \"DOMTokenList\",\n    \"DOMTransactionEvent\",\n    \"DOM_DELTA_LINE\",\n    \"DOM_DELTA_PAGE\",\n    \"DOM_DELTA_PIXEL\",\n    \"DOM_INPUT_METHOD_DROP\",\n    \"DOM_INPUT_METHOD_HANDWRITING\",\n    \"DOM_INPUT_METHOD_IME\",\n    \"DOM_INPUT_METHOD_KEYBOARD\",\n    \"DOM_INPUT_METHOD_MULTIMODAL\",\n    \"DOM_INPUT_METHOD_OPTION\",\n    \"DOM_INPUT_METHOD_PASTE\",\n    \"DOM_INPUT_METHOD_SCRIPT\",\n    \"DOM_INPUT_METHOD_UNKNOWN\",\n    \"DOM_INPUT_METHOD_VOICE\",\n    \"DOM_KEY_LOCATION_JOYSTICK\",\n    \"DOM_KEY_LOCATION_LEFT\",\n    \"DOM_KEY_LOCATION_MOBILE\",\n    \"DOM_KEY_LOCATION_NUMPAD\",\n    \"DOM_KEY_LOCATION_RIGHT\",\n    \"DOM_KEY_LOCATION_STANDARD\",\n    \"DOM_VK_0\",\n    \"DOM_VK_1\",\n    \"DOM_VK_2\",\n    \"DOM_VK_3\",\n    \"DOM_VK_4\",\n    \"DOM_VK_5\",\n    \"DOM_VK_6\",\n    \"DOM_VK_7\",\n    \"DOM_VK_8\",\n    \"DOM_VK_9\",\n    \"DOM_VK_A\",\n    \"DOM_VK_ACCEPT\",\n    \"DOM_VK_ADD\",\n    \"DOM_VK_ALT\",\n    \"DOM_VK_ALTGR\",\n    \"DOM_VK_AMPERSAND\",\n    \"DOM_VK_ASTERISK\",\n    \"DOM_VK_AT\",\n    \"DOM_VK_ATTN\",\n    \"DOM_VK_B\",\n    \"DOM_VK_BACKSPACE\",\n    \"DOM_VK_BACK_QUOTE\",\n    \"DOM_VK_BACK_SLASH\",\n    \"DOM_VK_BACK_SPACE\",\n    \"DOM_VK_C\",\n    \"DOM_VK_CANCEL\",\n    \"DOM_VK_CAPS_LOCK\",\n    \"DOM_VK_CIRCUMFLEX\",\n    \"DOM_VK_CLEAR\",\n    \"DOM_VK_CLOSE_BRACKET\",\n    \"DOM_VK_CLOSE_CURLY_BRACKET\",\n    \"DOM_VK_CLOSE_PAREN\",\n    \"DOM_VK_COLON\",\n    \"DOM_VK_COMMA\",\n    \"DOM_VK_CONTEXT_MENU\",\n    \"DOM_VK_CONTROL\",\n    \"DOM_VK_CONVERT\",\n    \"DOM_VK_CRSEL\",\n    \"DOM_VK_CTRL\",\n    \"DOM_VK_D\",\n    \"DOM_VK_DECIMAL\",\n    \"DOM_VK_DELETE\",\n    \"DOM_VK_DIVIDE\",\n    \"DOM_VK_DOLLAR\",\n    \"DOM_VK_DOUBLE_QUOTE\",\n    \"DOM_VK_DOWN\",\n    \"DOM_VK_E\",\n    \"DOM_VK_EISU\",\n    \"DOM_VK_END\",\n    \"DOM_VK_ENTER\",\n    \"DOM_VK_EQUALS\",\n    \"DOM_VK_EREOF\",\n    \"DOM_VK_ESCAPE\",\n    \"DOM_VK_EXCLAMATION\",\n    \"DOM_VK_EXECUTE\",\n    \"DOM_VK_EXSEL\",\n    \"DOM_VK_F\",\n    \"DOM_VK_F1\",\n    \"DOM_VK_F10\",\n    \"DOM_VK_F11\",\n    \"DOM_VK_F12\",\n    \"DOM_VK_F13\",\n    \"DOM_VK_F14\",\n    \"DOM_VK_F15\",\n    \"DOM_VK_F16\",\n    \"DOM_VK_F17\",\n    \"DOM_VK_F18\",\n    \"DOM_VK_F19\",\n    \"DOM_VK_F2\",\n    \"DOM_VK_F20\",\n    \"DOM_VK_F21\",\n    \"DOM_VK_F22\",\n    \"DOM_VK_F23\",\n    \"DOM_VK_F24\",\n    \"DOM_VK_F25\",\n    \"DOM_VK_F26\",\n    \"DOM_VK_F27\",\n    \"DOM_VK_F28\",\n    \"DOM_VK_F29\",\n    \"DOM_VK_F3\",\n    \"DOM_VK_F30\",\n    \"DOM_VK_F31\",\n    \"DOM_VK_F32\",\n    \"DOM_VK_F33\",\n    \"DOM_VK_F34\",\n    \"DOM_VK_F35\",\n    \"DOM_VK_F36\",\n    \"DOM_VK_F4\",\n    \"DOM_VK_F5\",\n    \"DOM_VK_F6\",\n    \"DOM_VK_F7\",\n    \"DOM_VK_F8\",\n    \"DOM_VK_F9\",\n    \"DOM_VK_FINAL\",\n    \"DOM_VK_FRONT\",\n    \"DOM_VK_G\",\n    \"DOM_VK_GREATER_THAN\",\n    \"DOM_VK_H\",\n    \"DOM_VK_HANGUL\",\n    \"DOM_VK_HANJA\",\n    \"DOM_VK_HASH\",\n    \"DOM_VK_HELP\",\n    \"DOM_VK_HK_TOGGLE\",\n    \"DOM_VK_HOME\",\n    \"DOM_VK_HYPHEN_MINUS\",\n    \"DOM_VK_I\",\n    \"DOM_VK_INSERT\",\n    \"DOM_VK_J\",\n    \"DOM_VK_JUNJA\",\n    \"DOM_VK_K\",\n    \"DOM_VK_KANA\",\n    \"DOM_VK_KANJI\",\n    \"DOM_VK_L\",\n    \"DOM_VK_LEFT\",\n    \"DOM_VK_LEFT_TAB\",\n    \"DOM_VK_LESS_THAN\",\n    \"DOM_VK_M\",\n    \"DOM_VK_META\",\n    \"DOM_VK_MODECHANGE\",\n    \"DOM_VK_MULTIPLY\",\n    \"DOM_VK_N\",\n    \"DOM_VK_NONCONVERT\",\n    \"DOM_VK_NUMPAD0\",\n    \"DOM_VK_NUMPAD1\",\n    \"DOM_VK_NUMPAD2\",\n    \"DOM_VK_NUMPAD3\",\n    \"DOM_VK_NUMPAD4\",\n    \"DOM_VK_NUMPAD5\",\n    \"DOM_VK_NUMPAD6\",\n    \"DOM_VK_NUMPAD7\",\n    \"DOM_VK_NUMPAD8\",\n    \"DOM_VK_NUMPAD9\",\n    \"DOM_VK_NUM_LOCK\",\n    \"DOM_VK_O\",\n    \"DOM_VK_OEM_1\",\n    \"DOM_VK_OEM_102\",\n    \"DOM_VK_OEM_2\",\n    \"DOM_VK_OEM_3\",\n    \"DOM_VK_OEM_4\",\n    \"DOM_VK_OEM_5\",\n    \"DOM_VK_OEM_6\",\n    \"DOM_VK_OEM_7\",\n    \"DOM_VK_OEM_8\",\n    \"DOM_VK_OEM_COMMA\",\n    \"DOM_VK_OEM_MINUS\",\n    \"DOM_VK_OEM_PERIOD\",\n    \"DOM_VK_OEM_PLUS\",\n    \"DOM_VK_OPEN_BRACKET\",\n    \"DOM_VK_OPEN_CURLY_BRACKET\",\n    \"DOM_VK_OPEN_PAREN\",\n    \"DOM_VK_P\",\n    \"DOM_VK_PA1\",\n    \"DOM_VK_PAGEDOWN\",\n    \"DOM_VK_PAGEUP\",\n    \"DOM_VK_PAGE_DOWN\",\n    \"DOM_VK_PAGE_UP\",\n    \"DOM_VK_PAUSE\",\n    \"DOM_VK_PERCENT\",\n    \"DOM_VK_PERIOD\",\n    \"DOM_VK_PIPE\",\n    \"DOM_VK_PLAY\",\n    \"DOM_VK_PLUS\",\n    \"DOM_VK_PRINT\",\n    \"DOM_VK_PRINTSCREEN\",\n    \"DOM_VK_PROCESSKEY\",\n    \"DOM_VK_PROPERITES\",\n    \"DOM_VK_Q\",\n    \"DOM_VK_QUESTION_MARK\",\n    \"DOM_VK_QUOTE\",\n    \"DOM_VK_R\",\n    \"DOM_VK_REDO\",\n    \"DOM_VK_RETURN\",\n    \"DOM_VK_RIGHT\",\n    \"DOM_VK_S\",\n    \"DOM_VK_SCROLL_LOCK\",\n    \"DOM_VK_SELECT\",\n    \"DOM_VK_SEMICOLON\",\n    \"DOM_VK_SEPARATOR\",\n    \"DOM_VK_SHIFT\",\n    \"DOM_VK_SLASH\",\n    \"DOM_VK_SLEEP\",\n    \"DOM_VK_SPACE\",\n    \"DOM_VK_SUBTRACT\",\n    \"DOM_VK_T\",\n    \"DOM_VK_TAB\",\n    \"DOM_VK_TILDE\",\n    \"DOM_VK_U\",\n    \"DOM_VK_UNDERSCORE\",\n    \"DOM_VK_UNDO\",\n    \"DOM_VK_UNICODE\",\n    \"DOM_VK_UP\",\n    \"DOM_VK_V\",\n    \"DOM_VK_VOLUME_DOWN\",\n    \"DOM_VK_VOLUME_MUTE\",\n    \"DOM_VK_VOLUME_UP\",\n    \"DOM_VK_W\",\n    \"DOM_VK_WIN\",\n    \"DOM_VK_WINDOW\",\n    \"DOM_VK_WIN_ICO_00\",\n    \"DOM_VK_WIN_ICO_CLEAR\",\n    \"DOM_VK_WIN_ICO_HELP\",\n    \"DOM_VK_WIN_OEM_ATTN\",\n    \"DOM_VK_WIN_OEM_AUTO\",\n    \"DOM_VK_WIN_OEM_BACKTAB\",\n    \"DOM_VK_WIN_OEM_CLEAR\",\n    \"DOM_VK_WIN_OEM_COPY\",\n    \"DOM_VK_WIN_OEM_CUSEL\",\n    \"DOM_VK_WIN_OEM_ENLW\",\n    \"DOM_VK_WIN_OEM_FINISH\",\n    \"DOM_VK_WIN_OEM_FJ_JISHO\",\n    \"DOM_VK_WIN_OEM_FJ_LOYA\",\n    \"DOM_VK_WIN_OEM_FJ_MASSHOU\",\n    \"DOM_VK_WIN_OEM_FJ_ROYA\",\n    \"DOM_VK_WIN_OEM_FJ_TOUROKU\",\n    \"DOM_VK_WIN_OEM_JUMP\",\n    \"DOM_VK_WIN_OEM_PA1\",\n    \"DOM_VK_WIN_OEM_PA2\",\n    \"DOM_VK_WIN_OEM_PA3\",\n    \"DOM_VK_WIN_OEM_RESET\",\n    \"DOM_VK_WIN_OEM_WSCTRL\",\n    \"DOM_VK_X\",\n    \"DOM_VK_XF86XK_ADD_FAVORITE\",\n    \"DOM_VK_XF86XK_APPLICATION_LEFT\",\n    \"DOM_VK_XF86XK_APPLICATION_RIGHT\",\n    \"DOM_VK_XF86XK_AUDIO_CYCLE_TRACK\",\n    \"DOM_VK_XF86XK_AUDIO_FORWARD\",\n    \"DOM_VK_XF86XK_AUDIO_LOWER_VOLUME\",\n    \"DOM_VK_XF86XK_AUDIO_MEDIA\",\n    \"DOM_VK_XF86XK_AUDIO_MUTE\",\n    \"DOM_VK_XF86XK_AUDIO_NEXT\",\n    \"DOM_VK_XF86XK_AUDIO_PAUSE\",\n    \"DOM_VK_XF86XK_AUDIO_PLAY\",\n    \"DOM_VK_XF86XK_AUDIO_PREV\",\n    \"DOM_VK_XF86XK_AUDIO_RAISE_VOLUME\",\n    \"DOM_VK_XF86XK_AUDIO_RANDOM_PLAY\",\n    \"DOM_VK_XF86XK_AUDIO_RECORD\",\n    \"DOM_VK_XF86XK_AUDIO_REPEAT\",\n    \"DOM_VK_XF86XK_AUDIO_REWIND\",\n    \"DOM_VK_XF86XK_AUDIO_STOP\",\n    \"DOM_VK_XF86XK_AWAY\",\n    \"DOM_VK_XF86XK_BACK\",\n    \"DOM_VK_XF86XK_BACK_FORWARD\",\n    \"DOM_VK_XF86XK_BATTERY\",\n    \"DOM_VK_XF86XK_BLUE\",\n    \"DOM_VK_XF86XK_BLUETOOTH\",\n    \"DOM_VK_XF86XK_BOOK\",\n    \"DOM_VK_XF86XK_BRIGHTNESS_ADJUST\",\n    \"DOM_VK_XF86XK_CALCULATOR\",\n    \"DOM_VK_XF86XK_CALENDAR\",\n    \"DOM_VK_XF86XK_CD\",\n    \"DOM_VK_XF86XK_CLOSE\",\n    \"DOM_VK_XF86XK_COMMUNITY\",\n    \"DOM_VK_XF86XK_CONTRAST_ADJUST\",\n    \"DOM_VK_XF86XK_COPY\",\n    \"DOM_VK_XF86XK_CUT\",\n    \"DOM_VK_XF86XK_CYCLE_ANGLE\",\n    \"DOM_VK_XF86XK_DISPLAY\",\n    \"DOM_VK_XF86XK_DOCUMENTS\",\n    \"DOM_VK_XF86XK_DOS\",\n    \"DOM_VK_XF86XK_EJECT\",\n    \"DOM_VK_XF86XK_EXCEL\",\n    \"DOM_VK_XF86XK_EXPLORER\",\n    \"DOM_VK_XF86XK_FAVORITES\",\n    \"DOM_VK_XF86XK_FINANCE\",\n    \"DOM_VK_XF86XK_FORWARD\",\n    \"DOM_VK_XF86XK_FRAME_BACK\",\n    \"DOM_VK_XF86XK_FRAME_FORWARD\",\n    \"DOM_VK_XF86XK_GAME\",\n    \"DOM_VK_XF86XK_GO\",\n    \"DOM_VK_XF86XK_GREEN\",\n    \"DOM_VK_XF86XK_HIBERNATE\",\n    \"DOM_VK_XF86XK_HISTORY\",\n    \"DOM_VK_XF86XK_HOME_PAGE\",\n    \"DOM_VK_XF86XK_HOT_LINKS\",\n    \"DOM_VK_XF86XK_I_TOUCH\",\n    \"DOM_VK_XF86XK_KBD_BRIGHTNESS_DOWN\",\n    \"DOM_VK_XF86XK_KBD_BRIGHTNESS_UP\",\n    \"DOM_VK_XF86XK_KBD_LIGHT_ON_OFF\",\n    \"DOM_VK_XF86XK_LAUNCH0\",\n    \"DOM_VK_XF86XK_LAUNCH1\",\n    \"DOM_VK_XF86XK_LAUNCH2\",\n    \"DOM_VK_XF86XK_LAUNCH3\",\n    \"DOM_VK_XF86XK_LAUNCH4\",\n    \"DOM_VK_XF86XK_LAUNCH5\",\n    \"DOM_VK_XF86XK_LAUNCH6\",\n    \"DOM_VK_XF86XK_LAUNCH7\",\n    \"DOM_VK_XF86XK_LAUNCH8\",\n    \"DOM_VK_XF86XK_LAUNCH9\",\n    \"DOM_VK_XF86XK_LAUNCH_A\",\n    \"DOM_VK_XF86XK_LAUNCH_B\",\n    \"DOM_VK_XF86XK_LAUNCH_C\",\n    \"DOM_VK_XF86XK_LAUNCH_D\",\n    \"DOM_VK_XF86XK_LAUNCH_E\",\n    \"DOM_VK_XF86XK_LAUNCH_F\",\n    \"DOM_VK_XF86XK_LIGHT_BULB\",\n    \"DOM_VK_XF86XK_LOG_OFF\",\n    \"DOM_VK_XF86XK_MAIL\",\n    \"DOM_VK_XF86XK_MAIL_FORWARD\",\n    \"DOM_VK_XF86XK_MARKET\",\n    \"DOM_VK_XF86XK_MEETING\",\n    \"DOM_VK_XF86XK_MEMO\",\n    \"DOM_VK_XF86XK_MENU_KB\",\n    \"DOM_VK_XF86XK_MENU_PB\",\n    \"DOM_VK_XF86XK_MESSENGER\",\n    \"DOM_VK_XF86XK_MON_BRIGHTNESS_DOWN\",\n    \"DOM_VK_XF86XK_MON_BRIGHTNESS_UP\",\n    \"DOM_VK_XF86XK_MUSIC\",\n    \"DOM_VK_XF86XK_MY_COMPUTER\",\n    \"DOM_VK_XF86XK_MY_SITES\",\n    \"DOM_VK_XF86XK_NEW\",\n    \"DOM_VK_XF86XK_NEWS\",\n    \"DOM_VK_XF86XK_OFFICE_HOME\",\n    \"DOM_VK_XF86XK_OPEN\",\n    \"DOM_VK_XF86XK_OPEN_URL\",\n    \"DOM_VK_XF86XK_OPTION\",\n    \"DOM_VK_XF86XK_PASTE\",\n    \"DOM_VK_XF86XK_PHONE\",\n    \"DOM_VK_XF86XK_PICTURES\",\n    \"DOM_VK_XF86XK_POWER_DOWN\",\n    \"DOM_VK_XF86XK_POWER_OFF\",\n    \"DOM_VK_XF86XK_RED\",\n    \"DOM_VK_XF86XK_REFRESH\",\n    \"DOM_VK_XF86XK_RELOAD\",\n    \"DOM_VK_XF86XK_REPLY\",\n    \"DOM_VK_XF86XK_ROCKER_DOWN\",\n    \"DOM_VK_XF86XK_ROCKER_ENTER\",\n    \"DOM_VK_XF86XK_ROCKER_UP\",\n    \"DOM_VK_XF86XK_ROTATE_WINDOWS\",\n    \"DOM_VK_XF86XK_ROTATION_KB\",\n    \"DOM_VK_XF86XK_ROTATION_PB\",\n    \"DOM_VK_XF86XK_SAVE\",\n    \"DOM_VK_XF86XK_SCREEN_SAVER\",\n    \"DOM_VK_XF86XK_SCROLL_CLICK\",\n    \"DOM_VK_XF86XK_SCROLL_DOWN\",\n    \"DOM_VK_XF86XK_SCROLL_UP\",\n    \"DOM_VK_XF86XK_SEARCH\",\n    \"DOM_VK_XF86XK_SEND\",\n    \"DOM_VK_XF86XK_SHOP\",\n    \"DOM_VK_XF86XK_SPELL\",\n    \"DOM_VK_XF86XK_SPLIT_SCREEN\",\n    \"DOM_VK_XF86XK_STANDBY\",\n    \"DOM_VK_XF86XK_START\",\n    \"DOM_VK_XF86XK_STOP\",\n    \"DOM_VK_XF86XK_SUBTITLE\",\n    \"DOM_VK_XF86XK_SUPPORT\",\n    \"DOM_VK_XF86XK_SUSPEND\",\n    \"DOM_VK_XF86XK_TASK_PANE\",\n    \"DOM_VK_XF86XK_TERMINAL\",\n    \"DOM_VK_XF86XK_TIME\",\n    \"DOM_VK_XF86XK_TOOLS\",\n    \"DOM_VK_XF86XK_TOP_MENU\",\n    \"DOM_VK_XF86XK_TO_DO_LIST\",\n    \"DOM_VK_XF86XK_TRAVEL\",\n    \"DOM_VK_XF86XK_USER1KB\",\n    \"DOM_VK_XF86XK_USER2KB\",\n    \"DOM_VK_XF86XK_USER_PB\",\n    \"DOM_VK_XF86XK_UWB\",\n    \"DOM_VK_XF86XK_VENDOR_HOME\",\n    \"DOM_VK_XF86XK_VIDEO\",\n    \"DOM_VK_XF86XK_VIEW\",\n    \"DOM_VK_XF86XK_WAKE_UP\",\n    \"DOM_VK_XF86XK_WEB_CAM\",\n    \"DOM_VK_XF86XK_WHEEL_BUTTON\",\n    \"DOM_VK_XF86XK_WLAN\",\n    \"DOM_VK_XF86XK_WORD\",\n    \"DOM_VK_XF86XK_WWW\",\n    \"DOM_VK_XF86XK_XFER\",\n    \"DOM_VK_XF86XK_YELLOW\",\n    \"DOM_VK_XF86XK_ZOOM_IN\",\n    \"DOM_VK_XF86XK_ZOOM_OUT\",\n    \"DOM_VK_Y\",\n    \"DOM_VK_Z\",\n    \"DOM_VK_ZOOM\",\n    \"DONE\",\n    \"DONT_CARE\",\n    \"DOWNLOADING\",\n    \"DRAGDROP\",\n    \"DRAW_BUFFER0\",\n    \"DRAW_BUFFER1\",\n    \"DRAW_BUFFER10\",\n    \"DRAW_BUFFER11\",\n    \"DRAW_BUFFER12\",\n    \"DRAW_BUFFER13\",\n    \"DRAW_BUFFER14\",\n    \"DRAW_BUFFER15\",\n    \"DRAW_BUFFER2\",\n    \"DRAW_BUFFER3\",\n    \"DRAW_BUFFER4\",\n    \"DRAW_BUFFER5\",\n    \"DRAW_BUFFER6\",\n    \"DRAW_BUFFER7\",\n    \"DRAW_BUFFER8\",\n    \"DRAW_BUFFER9\",\n    \"DRAW_FRAMEBUFFER\",\n    \"DRAW_FRAMEBUFFER_BINDING\",\n    \"DST_ALPHA\",\n    \"DST_COLOR\",\n    \"DYNAMIC_COPY\",\n    \"DYNAMIC_DRAW\",\n    \"DYNAMIC_READ\",\n    \"DataChannel\",\n    \"DataTransfer\",\n    \"DataTransferItem\",\n    \"DataTransferItemList\",\n    \"DataView\",\n    \"Date\",\n    \"DateTimeFormat\",\n    \"DecompressionStream\",\n    \"DelayNode\",\n    \"DeprecationReportBody\",\n    \"DesktopNotification\",\n    \"DesktopNotificationCenter\",\n    \"DeviceLightEvent\",\n    \"DeviceMotionEvent\",\n    \"DeviceMotionEventAcceleration\",\n    \"DeviceMotionEventRotationRate\",\n    \"DeviceOrientationEvent\",\n    \"DeviceProximityEvent\",\n    \"DeviceStorage\",\n    \"DeviceStorageChangeEvent\",\n    \"Directory\",\n    \"DisplayNames\",\n    \"Document\",\n    \"DocumentFragment\",\n    \"DocumentTimeline\",\n    \"DocumentType\",\n    \"DragEvent\",\n    \"DynamicsCompressorNode\",\n    \"E\",\n    \"ELEMENT_ARRAY_BUFFER\",\n    \"ELEMENT_ARRAY_BUFFER_BINDING\",\n    \"ELEMENT_NODE\",\n    \"EMPTY\",\n    \"ENCODING_ERR\",\n    \"ENDED\",\n    \"END_TO_END\",\n    \"END_TO_START\",\n    \"ENTITY_NODE\",\n    \"ENTITY_REFERENCE_NODE\",\n    \"EPSILON\",\n    \"EQUAL\",\n    \"EQUALPOWER\",\n    \"ERROR\",\n    \"EXPONENTIAL_DISTANCE\",\n    \"Element\",\n    \"ElementInternals\",\n    \"ElementQuery\",\n    \"EnterPictureInPictureEvent\",\n    \"Entity\",\n    \"EntityReference\",\n    \"Error\",\n    \"ErrorEvent\",\n    \"EvalError\",\n    \"Event\",\n    \"EventException\",\n    \"EventSource\",\n    \"EventTarget\",\n    \"External\",\n    \"FASTEST\",\n    \"FIDOSDK\",\n    \"FILTER_ACCEPT\",\n    \"FILTER_INTERRUPT\",\n    \"FILTER_REJECT\",\n    \"FILTER_SKIP\",\n    \"FINISHED_STATE\",\n    \"FIRST_ORDERED_NODE_TYPE\",\n    \"FLOAT\",\n    \"FLOAT_32_UNSIGNED_INT_24_8_REV\",\n    \"FLOAT_MAT2\",\n    \"FLOAT_MAT2x3\",\n    \"FLOAT_MAT2x4\",\n    \"FLOAT_MAT3\",\n    \"FLOAT_MAT3x2\",\n    \"FLOAT_MAT3x4\",\n    \"FLOAT_MAT4\",\n    \"FLOAT_MAT4x2\",\n    \"FLOAT_MAT4x3\",\n    \"FLOAT_VEC2\",\n    \"FLOAT_VEC3\",\n    \"FLOAT_VEC4\",\n    \"FOCUS\",\n    \"FONT_FACE_RULE\",\n    \"FONT_FEATURE_VALUES_RULE\",\n    \"FRAGMENT_SHADER\",\n    \"FRAGMENT_SHADER_DERIVATIVE_HINT\",\n    \"FRAGMENT_SHADER_DERIVATIVE_HINT_OES\",\n    \"FRAMEBUFFER\",\n    \"FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE\",\n    \"FRAMEBUFFER_ATTACHMENT_BLUE_SIZE\",\n    \"FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING\",\n    \"FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE\",\n    \"FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE\",\n    \"FRAMEBUFFER_ATTACHMENT_GREEN_SIZE\",\n    \"FRAMEBUFFER_ATTACHMENT_OBJECT_NAME\",\n    \"FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE\",\n    \"FRAMEBUFFER_ATTACHMENT_RED_SIZE\",\n    \"FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE\",\n    \"FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE\",\n    \"FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER\",\n    \"FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL\",\n    \"FRAMEBUFFER_BINDING\",\n    \"FRAMEBUFFER_COMPLETE\",\n    \"FRAMEBUFFER_DEFAULT\",\n    \"FRAMEBUFFER_INCOMPLETE_ATTACHMENT\",\n    \"FRAMEBUFFER_INCOMPLETE_DIMENSIONS\",\n    \"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT\",\n    \"FRAMEBUFFER_INCOMPLETE_MULTISAMPLE\",\n    \"FRAMEBUFFER_UNSUPPORTED\",\n    \"FRONT\",\n    \"FRONT_AND_BACK\",\n    \"FRONT_FACE\",\n    \"FUNC_ADD\",\n    \"FUNC_REVERSE_SUBTRACT\",\n    \"FUNC_SUBTRACT\",\n    \"FeaturePolicy\",\n    \"FeaturePolicyViolationReportBody\",\n    \"FederatedCredential\",\n    \"Feed\",\n    \"FeedEntry\",\n    \"File\",\n    \"FileError\",\n    \"FileList\",\n    \"FileReader\",\n    \"FileSystem\",\n    \"FileSystemDirectoryEntry\",\n    \"FileSystemDirectoryReader\",\n    \"FileSystemEntry\",\n    \"FileSystemFileEntry\",\n    \"FinalizationRegistry\",\n    \"FindInPage\",\n    \"Float32Array\",\n    \"Float64Array\",\n    \"FocusEvent\",\n    \"FontFace\",\n    \"FontFaceSet\",\n    \"FontFaceSetLoadEvent\",\n    \"FormData\",\n    \"FormDataEvent\",\n    \"FragmentDirective\",\n    \"Function\",\n    \"GENERATE_MIPMAP_HINT\",\n    \"GEQUAL\",\n    \"GREATER\",\n    \"GREEN_BITS\",\n    \"GainNode\",\n    \"Gamepad\",\n    \"GamepadAxisMoveEvent\",\n    \"GamepadButton\",\n    \"GamepadButtonEvent\",\n    \"GamepadEvent\",\n    \"GamepadHapticActuator\",\n    \"GamepadPose\",\n    \"Geolocation\",\n    \"GeolocationCoordinates\",\n    \"GeolocationPosition\",\n    \"GeolocationPositionError\",\n    \"GestureEvent\",\n    \"Global\",\n    \"Gyroscope\",\n    \"HALF_FLOAT\",\n    \"HAVE_CURRENT_DATA\",\n    \"HAVE_ENOUGH_DATA\",\n    \"HAVE_FUTURE_DATA\",\n    \"HAVE_METADATA\",\n    \"HAVE_NOTHING\",\n    \"HEADERS_RECEIVED\",\n    \"HIDDEN\",\n    \"HIERARCHY_REQUEST_ERR\",\n    \"HIGHPASS\",\n    \"HIGHSHELF\",\n    \"HIGH_FLOAT\",\n    \"HIGH_INT\",\n    \"HORIZONTAL\",\n    \"HORIZONTAL_AXIS\",\n    \"HRTF\",\n    \"HTMLAllCollection\",\n    \"HTMLAnchorElement\",\n    \"HTMLAppletElement\",\n    \"HTMLAreaElement\",\n    \"HTMLAudioElement\",\n    \"HTMLBRElement\",\n    \"HTMLBaseElement\",\n    \"HTMLBaseFontElement\",\n    \"HTMLBlockquoteElement\",\n    \"HTMLBodyElement\",\n    \"HTMLButtonElement\",\n    \"HTMLCanvasElement\",\n    \"HTMLCollection\",\n    \"HTMLCommandElement\",\n    \"HTMLContentElement\",\n    \"HTMLDListElement\",\n    \"HTMLDataElement\",\n    \"HTMLDataListElement\",\n    \"HTMLDetailsElement\",\n    \"HTMLDialogElement\",\n    \"HTMLDirectoryElement\",\n    \"HTMLDivElement\",\n    \"HTMLDocument\",\n    \"HTMLElement\",\n    \"HTMLEmbedElement\",\n    \"HTMLFieldSetElement\",\n    \"HTMLFontElement\",\n    \"HTMLFormControlsCollection\",\n    \"HTMLFormElement\",\n    \"HTMLFrameElement\",\n    \"HTMLFrameSetElement\",\n    \"HTMLHRElement\",\n    \"HTMLHeadElement\",\n    \"HTMLHeadingElement\",\n    \"HTMLHtmlElement\",\n    \"HTMLIFrameElement\",\n    \"HTMLImageElement\",\n    \"HTMLInputElement\",\n    \"HTMLIsIndexElement\",\n    \"HTMLKeygenElement\",\n    \"HTMLLIElement\",\n    \"HTMLLabelElement\",\n    \"HTMLLegendElement\",\n    \"HTMLLinkElement\",\n    \"HTMLMapElement\",\n    \"HTMLMarqueeElement\",\n    \"HTMLMediaElement\",\n    \"HTMLMenuElement\",\n    \"HTMLMenuItemElement\",\n    \"HTMLMetaElement\",\n    \"HTMLMeterElement\",\n    \"HTMLModElement\",\n    \"HTMLOListElement\",\n    \"HTMLObjectElement\",\n    \"HTMLOptGroupElement\",\n    \"HTMLOptionElement\",\n    \"HTMLOptionsCollection\",\n    \"HTMLOutputElement\",\n    \"HTMLParagraphElement\",\n    \"HTMLParamElement\",\n    \"HTMLPictureElement\",\n    \"HTMLPreElement\",\n    \"HTMLProgressElement\",\n    \"HTMLPropertiesCollection\",\n    \"HTMLQuoteElement\",\n    \"HTMLScriptElement\",\n    \"HTMLSelectElement\",\n    \"HTMLShadowElement\",\n    \"HTMLSlotElement\",\n    \"HTMLSourceElement\",\n    \"HTMLSpanElement\",\n    \"HTMLStyleElement\",\n    \"HTMLTableCaptionElement\",\n    \"HTMLTableCellElement\",\n    \"HTMLTableColElement\",\n    \"HTMLTableElement\",\n    \"HTMLTableRowElement\",\n    \"HTMLTableSectionElement\",\n    \"HTMLTemplateElement\",\n    \"HTMLTextAreaElement\",\n    \"HTMLTimeElement\",\n    \"HTMLTitleElement\",\n    \"HTMLTrackElement\",\n    \"HTMLUListElement\",\n    \"HTMLUnknownElement\",\n    \"HTMLVideoElement\",\n    \"HashChangeEvent\",\n    \"Headers\",\n    \"History\",\n    \"Hz\",\n    \"ICE_CHECKING\",\n    \"ICE_CLOSED\",\n    \"ICE_COMPLETED\",\n    \"ICE_CONNECTED\",\n    \"ICE_FAILED\",\n    \"ICE_GATHERING\",\n    \"ICE_WAITING\",\n    \"IDBCursor\",\n    \"IDBCursorWithValue\",\n    \"IDBDatabase\",\n    \"IDBDatabaseException\",\n    \"IDBFactory\",\n    \"IDBFileHandle\",\n    \"IDBFileRequest\",\n    \"IDBIndex\",\n    \"IDBKeyRange\",\n    \"IDBMutableFile\",\n    \"IDBObjectStore\",\n    \"IDBOpenDBRequest\",\n    \"IDBRequest\",\n    \"IDBTransaction\",\n    \"IDBVersionChangeEvent\",\n    \"IDLE\",\n    \"IIRFilterNode\",\n    \"IMPLEMENTATION_COLOR_READ_FORMAT\",\n    \"IMPLEMENTATION_COLOR_READ_TYPE\",\n    \"IMPORT_RULE\",\n    \"INCR\",\n    \"INCR_WRAP\",\n    \"INDEX_SIZE_ERR\",\n    \"INT\",\n    \"INTERLEAVED_ATTRIBS\",\n    \"INT_2_10_10_10_REV\",\n    \"INT_SAMPLER_2D\",\n    \"INT_SAMPLER_2D_ARRAY\",\n    \"INT_SAMPLER_3D\",\n    \"INT_SAMPLER_CUBE\",\n    \"INT_VEC2\",\n    \"INT_VEC3\",\n    \"INT_VEC4\",\n    \"INUSE_ATTRIBUTE_ERR\",\n    \"INVALID_ACCESS_ERR\",\n    \"INVALID_CHARACTER_ERR\",\n    \"INVALID_ENUM\",\n    \"INVALID_EXPRESSION_ERR\",\n    \"INVALID_FRAMEBUFFER_OPERATION\",\n    \"INVALID_INDEX\",\n    \"INVALID_MODIFICATION_ERR\",\n    \"INVALID_NODE_TYPE_ERR\",\n    \"INVALID_OPERATION\",\n    \"INVALID_STATE_ERR\",\n    \"INVALID_VALUE\",\n    \"INVERSE_DISTANCE\",\n    \"INVERT\",\n    \"IceCandidate\",\n    \"IdleDeadline\",\n    \"Image\",\n    \"ImageBitmap\",\n    \"ImageBitmapRenderingContext\",\n    \"ImageCapture\",\n    \"ImageData\",\n    \"Infinity\",\n    \"InputDeviceCapabilities\",\n    \"InputDeviceInfo\",\n    \"InputEvent\",\n    \"InputMethodContext\",\n    \"InstallTrigger\",\n    \"InstallTriggerImpl\",\n    \"Instance\",\n    \"Int16Array\",\n    \"Int32Array\",\n    \"Int8Array\",\n    \"Intent\",\n    \"InternalError\",\n    \"IntersectionObserver\",\n    \"IntersectionObserverEntry\",\n    \"Intl\",\n    \"IsSearchProviderInstalled\",\n    \"Iterator\",\n    \"JSON\",\n    \"KEEP\",\n    \"KEYDOWN\",\n    \"KEYFRAMES_RULE\",\n    \"KEYFRAME_RULE\",\n    \"KEYPRESS\",\n    \"KEYUP\",\n    \"KeyEvent\",\n    \"Keyboard\",\n    \"KeyboardEvent\",\n    \"KeyboardLayoutMap\",\n    \"KeyframeEffect\",\n    \"LENGTHADJUST_SPACING\",\n    \"LENGTHADJUST_SPACINGANDGLYPHS\",\n    \"LENGTHADJUST_UNKNOWN\",\n    \"LEQUAL\",\n    \"LESS\",\n    \"LINEAR\",\n    \"LINEAR_DISTANCE\",\n    \"LINEAR_MIPMAP_LINEAR\",\n    \"LINEAR_MIPMAP_NEAREST\",\n    \"LINES\",\n    \"LINE_LOOP\",\n    \"LINE_STRIP\",\n    \"LINE_WIDTH\",\n    \"LINK_STATUS\",\n    \"LIVE\",\n    \"LN10\",\n    \"LN2\",\n    \"LOADED\",\n    \"LOADING\",\n    \"LOG10E\",\n    \"LOG2E\",\n    \"LOWPASS\",\n    \"LOWSHELF\",\n    \"LOW_FLOAT\",\n    \"LOW_INT\",\n    \"LSException\",\n    \"LSParserFilter\",\n    \"LUMINANCE\",\n    \"LUMINANCE_ALPHA\",\n    \"LargestContentfulPaint\",\n    \"LayoutShift\",\n    \"LayoutShiftAttribution\",\n    \"LinearAccelerationSensor\",\n    \"LinkError\",\n    \"ListFormat\",\n    \"LocalMediaStream\",\n    \"Locale\",\n    \"Location\",\n    \"Lock\",\n    \"LockManager\",\n    \"MAX\",\n    \"MAX_3D_TEXTURE_SIZE\",\n    \"MAX_ARRAY_TEXTURE_LAYERS\",\n    \"MAX_CLIENT_WAIT_TIMEOUT_WEBGL\",\n    \"MAX_COLOR_ATTACHMENTS\",\n    \"MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS\",\n    \"MAX_COMBINED_TEXTURE_IMAGE_UNITS\",\n    \"MAX_COMBINED_UNIFORM_BLOCKS\",\n    \"MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS\",\n    \"MAX_CUBE_MAP_TEXTURE_SIZE\",\n    \"MAX_DRAW_BUFFERS\",\n    \"MAX_ELEMENTS_INDICES\",\n    \"MAX_ELEMENTS_VERTICES\",\n    \"MAX_ELEMENT_INDEX\",\n    \"MAX_FRAGMENT_INPUT_COMPONENTS\",\n    \"MAX_FRAGMENT_UNIFORM_BLOCKS\",\n    \"MAX_FRAGMENT_UNIFORM_COMPONENTS\",\n    \"MAX_FRAGMENT_UNIFORM_VECTORS\",\n    \"MAX_PROGRAM_TEXEL_OFFSET\",\n    \"MAX_RENDERBUFFER_SIZE\",\n    \"MAX_SAFE_INTEGER\",\n    \"MAX_SAMPLES\",\n    \"MAX_SERVER_WAIT_TIMEOUT\",\n    \"MAX_TEXTURE_IMAGE_UNITS\",\n    \"MAX_TEXTURE_LOD_BIAS\",\n    \"MAX_TEXTURE_MAX_ANISOTROPY_EXT\",\n    \"MAX_TEXTURE_SIZE\",\n    \"MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS\",\n    \"MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS\",\n    \"MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS\",\n    \"MAX_UNIFORM_BLOCK_SIZE\",\n    \"MAX_UNIFORM_BUFFER_BINDINGS\",\n    \"MAX_VALUE\",\n    \"MAX_VARYING_COMPONENTS\",\n    \"MAX_VARYING_VECTORS\",\n    \"MAX_VERTEX_ATTRIBS\",\n    \"MAX_VERTEX_OUTPUT_COMPONENTS\",\n    \"MAX_VERTEX_TEXTURE_IMAGE_UNITS\",\n    \"MAX_VERTEX_UNIFORM_BLOCKS\",\n    \"MAX_VERTEX_UNIFORM_COMPONENTS\",\n    \"MAX_VERTEX_UNIFORM_VECTORS\",\n    \"MAX_VIEWPORT_DIMS\",\n    \"MEDIA_ERR_ABORTED\",\n    \"MEDIA_ERR_DECODE\",\n    \"MEDIA_ERR_ENCRYPTED\",\n    \"MEDIA_ERR_NETWORK\",\n    \"MEDIA_ERR_SRC_NOT_SUPPORTED\",\n    \"MEDIA_KEYERR_CLIENT\",\n    \"MEDIA_KEYERR_DOMAIN\",\n    \"MEDIA_KEYERR_HARDWARECHANGE\",\n    \"MEDIA_KEYERR_OUTPUT\",\n    \"MEDIA_KEYERR_SERVICE\",\n    \"MEDIA_KEYERR_UNKNOWN\",\n    \"MEDIA_RULE\",\n    \"MEDIUM_FLOAT\",\n    \"MEDIUM_INT\",\n    \"META_MASK\",\n    \"MIDIAccess\",\n    \"MIDIConnectionEvent\",\n    \"MIDIInput\",\n    \"MIDIInputMap\",\n    \"MIDIMessageEvent\",\n    \"MIDIOutput\",\n    \"MIDIOutputMap\",\n    \"MIDIPort\",\n    \"MIN\",\n    \"MIN_PROGRAM_TEXEL_OFFSET\",\n    \"MIN_SAFE_INTEGER\",\n    \"MIN_VALUE\",\n    \"MIRRORED_REPEAT\",\n    \"MODE_ASYNCHRONOUS\",\n    \"MODE_SYNCHRONOUS\",\n    \"MODIFICATION\",\n    \"MOUSEDOWN\",\n    \"MOUSEDRAG\",\n    \"MOUSEMOVE\",\n    \"MOUSEOUT\",\n    \"MOUSEOVER\",\n    \"MOUSEUP\",\n    \"MOZ_KEYFRAMES_RULE\",\n    \"MOZ_KEYFRAME_RULE\",\n    \"MOZ_SOURCE_CURSOR\",\n    \"MOZ_SOURCE_ERASER\",\n    \"MOZ_SOURCE_KEYBOARD\",\n    \"MOZ_SOURCE_MOUSE\",\n    \"MOZ_SOURCE_PEN\",\n    \"MOZ_SOURCE_TOUCH\",\n    \"MOZ_SOURCE_UNKNOWN\",\n    \"MSGESTURE_FLAG_BEGIN\",\n    \"MSGESTURE_FLAG_CANCEL\",\n    \"MSGESTURE_FLAG_END\",\n    \"MSGESTURE_FLAG_INERTIA\",\n    \"MSGESTURE_FLAG_NONE\",\n    \"MSPOINTER_TYPE_MOUSE\",\n    \"MSPOINTER_TYPE_PEN\",\n    \"MSPOINTER_TYPE_TOUCH\",\n    \"MS_ASYNC_CALLBACK_STATUS_ASSIGN_DELEGATE\",\n    \"MS_ASYNC_CALLBACK_STATUS_CANCEL\",\n    \"MS_ASYNC_CALLBACK_STATUS_CHOOSEANY\",\n    \"MS_ASYNC_CALLBACK_STATUS_ERROR\",\n    \"MS_ASYNC_CALLBACK_STATUS_JOIN\",\n    \"MS_ASYNC_OP_STATUS_CANCELED\",\n    \"MS_ASYNC_OP_STATUS_ERROR\",\n    \"MS_ASYNC_OP_STATUS_SUCCESS\",\n    \"MS_MANIPULATION_STATE_ACTIVE\",\n    \"MS_MANIPULATION_STATE_CANCELLED\",\n    \"MS_MANIPULATION_STATE_COMMITTED\",\n    \"MS_MANIPULATION_STATE_DRAGGING\",\n    \"MS_MANIPULATION_STATE_INERTIA\",\n    \"MS_MANIPULATION_STATE_PRESELECT\",\n    \"MS_MANIPULATION_STATE_SELECTING\",\n    \"MS_MANIPULATION_STATE_STOPPED\",\n    \"MS_MEDIA_ERR_ENCRYPTED\",\n    \"MS_MEDIA_KEYERR_CLIENT\",\n    \"MS_MEDIA_KEYERR_DOMAIN\",\n    \"MS_MEDIA_KEYERR_HARDWARECHANGE\",\n    \"MS_MEDIA_KEYERR_OUTPUT\",\n    \"MS_MEDIA_KEYERR_SERVICE\",\n    \"MS_MEDIA_KEYERR_UNKNOWN\",\n    \"Map\",\n    \"Math\",\n    \"MathMLElement\",\n    \"MediaCapabilities\",\n    \"MediaCapabilitiesInfo\",\n    \"MediaController\",\n    \"MediaDeviceInfo\",\n    \"MediaDevices\",\n    \"MediaElementAudioSourceNode\",\n    \"MediaEncryptedEvent\",\n    \"MediaError\",\n    \"MediaKeyError\",\n    \"MediaKeyEvent\",\n    \"MediaKeyMessageEvent\",\n    \"MediaKeyNeededEvent\",\n    \"MediaKeySession\",\n    \"MediaKeyStatusMap\",\n    \"MediaKeySystemAccess\",\n    \"MediaKeys\",\n    \"MediaList\",\n    \"MediaMetadata\",\n    \"MediaQueryList\",\n    \"MediaQueryListEvent\",\n    \"MediaRecorder\",\n    \"MediaRecorderErrorEvent\",\n    \"MediaSession\",\n    \"MediaSettingsRange\",\n    \"MediaSource\",\n    \"MediaStream\",\n    \"MediaStreamAudioDestinationNode\",\n    \"MediaStreamAudioSourceNode\",\n    \"MediaStreamEvent\",\n    \"MediaStreamTrack\",\n    \"MediaStreamTrackAudioSourceNode\",\n    \"MediaStreamTrackEvent\",\n    \"Memory\",\n    \"MessageChannel\",\n    \"MessageEvent\",\n    \"MessagePort\",\n    \"Methods\",\n    \"MimeType\",\n    \"MimeTypeArray\",\n    \"Module\",\n    \"MouseEvent\",\n    \"MouseScrollEvent\",\n    \"MozAnimation\",\n    \"MozAnimationDelay\",\n    \"MozAnimationDirection\",\n    \"MozAnimationDuration\",\n    \"MozAnimationFillMode\",\n    \"MozAnimationIterationCount\",\n    \"MozAnimationName\",\n    \"MozAnimationPlayState\",\n    \"MozAnimationTimingFunction\",\n    \"MozAppearance\",\n    \"MozBackfaceVisibility\",\n    \"MozBinding\",\n    \"MozBorderBottomColors\",\n    \"MozBorderEnd\",\n    \"MozBorderEndColor\",\n    \"MozBorderEndStyle\",\n    \"MozBorderEndWidth\",\n    \"MozBorderImage\",\n    \"MozBorderLeftColors\",\n    \"MozBorderRightColors\",\n    \"MozBorderStart\",\n    \"MozBorderStartColor\",\n    \"MozBorderStartStyle\",\n    \"MozBorderStartWidth\",\n    \"MozBorderTopColors\",\n    \"MozBoxAlign\",\n    \"MozBoxDirection\",\n    \"MozBoxFlex\",\n    \"MozBoxOrdinalGroup\",\n    \"MozBoxOrient\",\n    \"MozBoxPack\",\n    \"MozBoxSizing\",\n    \"MozCSSKeyframeRule\",\n    \"MozCSSKeyframesRule\",\n    \"MozColumnCount\",\n    \"MozColumnFill\",\n    \"MozColumnGap\",\n    \"MozColumnRule\",\n    \"MozColumnRuleColor\",\n    \"MozColumnRuleStyle\",\n    \"MozColumnRuleWidth\",\n    \"MozColumnWidth\",\n    \"MozColumns\",\n    \"MozContactChangeEvent\",\n    \"MozFloatEdge\",\n    \"MozFontFeatureSettings\",\n    \"MozFontLanguageOverride\",\n    \"MozForceBrokenImageIcon\",\n    \"MozHyphens\",\n    \"MozImageRegion\",\n    \"MozMarginEnd\",\n    \"MozMarginStart\",\n    \"MozMmsEvent\",\n    \"MozMmsMessage\",\n    \"MozMobileMessageThread\",\n    \"MozOSXFontSmoothing\",\n    \"MozOrient\",\n    \"MozOsxFontSmoothing\",\n    \"MozOutlineRadius\",\n    \"MozOutlineRadiusBottomleft\",\n    \"MozOutlineRadiusBottomright\",\n    \"MozOutlineRadiusTopleft\",\n    \"MozOutlineRadiusTopright\",\n    \"MozPaddingEnd\",\n    \"MozPaddingStart\",\n    \"MozPerspective\",\n    \"MozPerspectiveOrigin\",\n    \"MozPowerManager\",\n    \"MozSettingsEvent\",\n    \"MozSmsEvent\",\n    \"MozSmsMessage\",\n    \"MozStackSizing\",\n    \"MozTabSize\",\n    \"MozTextAlignLast\",\n    \"MozTextDecorationColor\",\n    \"MozTextDecorationLine\",\n    \"MozTextDecorationStyle\",\n    \"MozTextSizeAdjust\",\n    \"MozTransform\",\n    \"MozTransformOrigin\",\n    \"MozTransformStyle\",\n    \"MozTransition\",\n    \"MozTransitionDelay\",\n    \"MozTransitionDuration\",\n    \"MozTransitionProperty\",\n    \"MozTransitionTimingFunction\",\n    \"MozUserFocus\",\n    \"MozUserInput\",\n    \"MozUserModify\",\n    \"MozUserSelect\",\n    \"MozWindowDragging\",\n    \"MozWindowShadow\",\n    \"MutationEvent\",\n    \"MutationObserver\",\n    \"MutationRecord\",\n    \"NAMESPACE_ERR\",\n    \"NAMESPACE_RULE\",\n    \"NEAREST\",\n    \"NEAREST_MIPMAP_LINEAR\",\n    \"NEAREST_MIPMAP_NEAREST\",\n    \"NEGATIVE_INFINITY\",\n    \"NETWORK_EMPTY\",\n    \"NETWORK_ERR\",\n    \"NETWORK_IDLE\",\n    \"NETWORK_LOADED\",\n    \"NETWORK_LOADING\",\n    \"NETWORK_NO_SOURCE\",\n    \"NEVER\",\n    \"NEW\",\n    \"NEXT\",\n    \"NEXT_NO_DUPLICATE\",\n    \"NICEST\",\n    \"NODE_AFTER\",\n    \"NODE_BEFORE\",\n    \"NODE_BEFORE_AND_AFTER\",\n    \"NODE_INSIDE\",\n    \"NONE\",\n    \"NON_TRANSIENT_ERR\",\n    \"NOTATION_NODE\",\n    \"NOTCH\",\n    \"NOTEQUAL\",\n    \"NOT_ALLOWED_ERR\",\n    \"NOT_FOUND_ERR\",\n    \"NOT_READABLE_ERR\",\n    \"NOT_SUPPORTED_ERR\",\n    \"NO_DATA_ALLOWED_ERR\",\n    \"NO_ERR\",\n    \"NO_ERROR\",\n    \"NO_MODIFICATION_ALLOWED_ERR\",\n    \"NUMBER_TYPE\",\n    \"NUM_COMPRESSED_TEXTURE_FORMATS\",\n    \"NaN\",\n    \"NamedNodeMap\",\n    \"NavigationPreloadManager\",\n    \"Navigator\",\n    \"NearbyLinks\",\n    \"NetworkInformation\",\n    \"Node\",\n    \"NodeFilter\",\n    \"NodeIterator\",\n    \"NodeList\",\n    \"Notation\",\n    \"Notification\",\n    \"NotifyPaintEvent\",\n    \"Number\",\n    \"NumberFormat\",\n    \"OBJECT_TYPE\",\n    \"OBSOLETE\",\n    \"OK\",\n    \"ONE\",\n    \"ONE_MINUS_CONSTANT_ALPHA\",\n    \"ONE_MINUS_CONSTANT_COLOR\",\n    \"ONE_MINUS_DST_ALPHA\",\n    \"ONE_MINUS_DST_COLOR\",\n    \"ONE_MINUS_SRC_ALPHA\",\n    \"ONE_MINUS_SRC_COLOR\",\n    \"OPEN\",\n    \"OPENED\",\n    \"OPENING\",\n    \"ORDERED_NODE_ITERATOR_TYPE\",\n    \"ORDERED_NODE_SNAPSHOT_TYPE\",\n    \"OTHER_ERROR\",\n    \"OUT_OF_MEMORY\",\n    \"Object\",\n    \"OfflineAudioCompletionEvent\",\n    \"OfflineAudioContext\",\n    \"OfflineResourceList\",\n    \"OffscreenCanvas\",\n    \"OffscreenCanvasRenderingContext2D\",\n    \"Option\",\n    \"OrientationSensor\",\n    \"OscillatorNode\",\n    \"OverconstrainedError\",\n    \"OverflowEvent\",\n    \"PACK_ALIGNMENT\",\n    \"PACK_ROW_LENGTH\",\n    \"PACK_SKIP_PIXELS\",\n    \"PACK_SKIP_ROWS\",\n    \"PAGE_RULE\",\n    \"PARSE_ERR\",\n    \"PATHSEG_ARC_ABS\",\n    \"PATHSEG_ARC_REL\",\n    \"PATHSEG_CLOSEPATH\",\n    \"PATHSEG_CURVETO_CUBIC_ABS\",\n    \"PATHSEG_CURVETO_CUBIC_REL\",\n    \"PATHSEG_CURVETO_CUBIC_SMOOTH_ABS\",\n    \"PATHSEG_CURVETO_CUBIC_SMOOTH_REL\",\n    \"PATHSEG_CURVETO_QUADRATIC_ABS\",\n    \"PATHSEG_CURVETO_QUADRATIC_REL\",\n    \"PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS\",\n    \"PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL\",\n    \"PATHSEG_LINETO_ABS\",\n    \"PATHSEG_LINETO_HORIZONTAL_ABS\",\n    \"PATHSEG_LINETO_HORIZONTAL_REL\",\n    \"PATHSEG_LINETO_REL\",\n    \"PATHSEG_LINETO_VERTICAL_ABS\",\n    \"PATHSEG_LINETO_VERTICAL_REL\",\n    \"PATHSEG_MOVETO_ABS\",\n    \"PATHSEG_MOVETO_REL\",\n    \"PATHSEG_UNKNOWN\",\n    \"PATH_EXISTS_ERR\",\n    \"PEAKING\",\n    \"PERMISSION_DENIED\",\n    \"PERSISTENT\",\n    \"PI\",\n    \"PIXEL_PACK_BUFFER\",\n    \"PIXEL_PACK_BUFFER_BINDING\",\n    \"PIXEL_UNPACK_BUFFER\",\n    \"PIXEL_UNPACK_BUFFER_BINDING\",\n    \"PLAYING_STATE\",\n    \"POINTS\",\n    \"POLYGON_OFFSET_FACTOR\",\n    \"POLYGON_OFFSET_FILL\",\n    \"POLYGON_OFFSET_UNITS\",\n    \"POSITION_UNAVAILABLE\",\n    \"POSITIVE_INFINITY\",\n    \"PREV\",\n    \"PREV_NO_DUPLICATE\",\n    \"PROCESSING_INSTRUCTION_NODE\",\n    \"PageChangeEvent\",\n    \"PageTransitionEvent\",\n    \"PaintRequest\",\n    \"PaintRequestList\",\n    \"PannerNode\",\n    \"PasswordCredential\",\n    \"Path2D\",\n    \"PaymentAddress\",\n    \"PaymentInstruments\",\n    \"PaymentManager\",\n    \"PaymentMethodChangeEvent\",\n    \"PaymentRequest\",\n    \"PaymentRequestUpdateEvent\",\n    \"PaymentResponse\",\n    \"Performance\",\n    \"PerformanceElementTiming\",\n    \"PerformanceEntry\",\n    \"PerformanceEventTiming\",\n    \"PerformanceLongTaskTiming\",\n    \"PerformanceMark\",\n    \"PerformanceMeasure\",\n    \"PerformanceNavigation\",\n    \"PerformanceNavigationTiming\",\n    \"PerformanceObserver\",\n    \"PerformanceObserverEntryList\",\n    \"PerformancePaintTiming\",\n    \"PerformanceResourceTiming\",\n    \"PerformanceServerTiming\",\n    \"PerformanceTiming\",\n    \"PeriodicSyncManager\",\n    \"PeriodicWave\",\n    \"PermissionStatus\",\n    \"Permissions\",\n    \"PhotoCapabilities\",\n    \"PictureInPictureWindow\",\n    \"Plugin\",\n    \"PluginArray\",\n    \"PluralRules\",\n    \"PointerEvent\",\n    \"PopStateEvent\",\n    \"PopupBlockedEvent\",\n    \"Presentation\",\n    \"PresentationAvailability\",\n    \"PresentationConnection\",\n    \"PresentationConnectionAvailableEvent\",\n    \"PresentationConnectionCloseEvent\",\n    \"PresentationConnectionList\",\n    \"PresentationReceiver\",\n    \"PresentationRequest\",\n    \"ProcessingInstruction\",\n    \"ProgressEvent\",\n    \"Promise\",\n    \"PromiseRejectionEvent\",\n    \"PropertyNodeList\",\n    \"Proxy\",\n    \"PublicKeyCredential\",\n    \"PushManager\",\n    \"PushSubscription\",\n    \"PushSubscriptionOptions\",\n    \"Q\",\n    \"QUERY_RESULT\",\n    \"QUERY_RESULT_AVAILABLE\",\n    \"QUOTA_ERR\",\n    \"QUOTA_EXCEEDED_ERR\",\n    \"QueryInterface\",\n    \"R11F_G11F_B10F\",\n    \"R16F\",\n    \"R16I\",\n    \"R16UI\",\n    \"R32F\",\n    \"R32I\",\n    \"R32UI\",\n    \"R8\",\n    \"R8I\",\n    \"R8UI\",\n    \"R8_SNORM\",\n    \"RASTERIZER_DISCARD\",\n    \"READ_BUFFER\",\n    \"READ_FRAMEBUFFER\",\n    \"READ_FRAMEBUFFER_BINDING\",\n    \"READ_ONLY\",\n    \"READ_ONLY_ERR\",\n    \"READ_WRITE\",\n    \"RED\",\n    \"RED_BITS\",\n    \"RED_INTEGER\",\n    \"REMOVAL\",\n    \"RENDERBUFFER\",\n    \"RENDERBUFFER_ALPHA_SIZE\",\n    \"RENDERBUFFER_BINDING\",\n    \"RENDERBUFFER_BLUE_SIZE\",\n    \"RENDERBUFFER_DEPTH_SIZE\",\n    \"RENDERBUFFER_GREEN_SIZE\",\n    \"RENDERBUFFER_HEIGHT\",\n    \"RENDERBUFFER_INTERNAL_FORMAT\",\n    \"RENDERBUFFER_RED_SIZE\",\n    \"RENDERBUFFER_SAMPLES\",\n    \"RENDERBUFFER_STENCIL_SIZE\",\n    \"RENDERBUFFER_WIDTH\",\n    \"RENDERER\",\n    \"RENDERING_INTENT_ABSOLUTE_COLORIMETRIC\",\n    \"RENDERING_INTENT_AUTO\",\n    \"RENDERING_INTENT_PERCEPTUAL\",\n    \"RENDERING_INTENT_RELATIVE_COLORIMETRIC\",\n    \"RENDERING_INTENT_SATURATION\",\n    \"RENDERING_INTENT_UNKNOWN\",\n    \"REPEAT\",\n    \"REPLACE\",\n    \"RG\",\n    \"RG16F\",\n    \"RG16I\",\n    \"RG16UI\",\n    \"RG32F\",\n    \"RG32I\",\n    \"RG32UI\",\n    \"RG8\",\n    \"RG8I\",\n    \"RG8UI\",\n    \"RG8_SNORM\",\n    \"RGB\",\n    \"RGB10_A2\",\n    \"RGB10_A2UI\",\n    \"RGB16F\",\n    \"RGB16I\",\n    \"RGB16UI\",\n    \"RGB32F\",\n    \"RGB32I\",\n    \"RGB32UI\",\n    \"RGB565\",\n    \"RGB5_A1\",\n    \"RGB8\",\n    \"RGB8I\",\n    \"RGB8UI\",\n    \"RGB8_SNORM\",\n    \"RGB9_E5\",\n    \"RGBA\",\n    \"RGBA16F\",\n    \"RGBA16I\",\n    \"RGBA16UI\",\n    \"RGBA32F\",\n    \"RGBA32I\",\n    \"RGBA32UI\",\n    \"RGBA4\",\n    \"RGBA8\",\n    \"RGBA8I\",\n    \"RGBA8UI\",\n    \"RGBA8_SNORM\",\n    \"RGBA_INTEGER\",\n    \"RGBColor\",\n    \"RGB_INTEGER\",\n    \"RG_INTEGER\",\n    \"ROTATION_CLOCKWISE\",\n    \"ROTATION_COUNTERCLOCKWISE\",\n    \"RTCCertificate\",\n    \"RTCDTMFSender\",\n    \"RTCDTMFToneChangeEvent\",\n    \"RTCDataChannel\",\n    \"RTCDataChannelEvent\",\n    \"RTCDtlsTransport\",\n    \"RTCError\",\n    \"RTCErrorEvent\",\n    \"RTCIceCandidate\",\n    \"RTCIceTransport\",\n    \"RTCPeerConnection\",\n    \"RTCPeerConnectionIceErrorEvent\",\n    \"RTCPeerConnectionIceEvent\",\n    \"RTCRtpReceiver\",\n    \"RTCRtpSender\",\n    \"RTCRtpTransceiver\",\n    \"RTCSctpTransport\",\n    \"RTCSessionDescription\",\n    \"RTCStatsReport\",\n    \"RTCTrackEvent\",\n    \"RadioNodeList\",\n    \"Range\",\n    \"RangeError\",\n    \"RangeException\",\n    \"ReadableStream\",\n    \"ReadableStreamDefaultReader\",\n    \"RecordErrorEvent\",\n    \"Rect\",\n    \"ReferenceError\",\n    \"Reflect\",\n    \"RegExp\",\n    \"RelativeOrientationSensor\",\n    \"RelativeTimeFormat\",\n    \"RemotePlayback\",\n    \"Report\",\n    \"ReportBody\",\n    \"ReportingObserver\",\n    \"Request\",\n    \"ResizeObserver\",\n    \"ResizeObserverEntry\",\n    \"ResizeObserverSize\",\n    \"Response\",\n    \"RuntimeError\",\n    \"SAMPLER_2D\",\n    \"SAMPLER_2D_ARRAY\",\n    \"SAMPLER_2D_ARRAY_SHADOW\",\n    \"SAMPLER_2D_SHADOW\",\n    \"SAMPLER_3D\",\n    \"SAMPLER_BINDING\",\n    \"SAMPLER_CUBE\",\n    \"SAMPLER_CUBE_SHADOW\",\n    \"SAMPLES\",\n    \"SAMPLE_ALPHA_TO_COVERAGE\",\n    \"SAMPLE_BUFFERS\",\n    \"SAMPLE_COVERAGE\",\n    \"SAMPLE_COVERAGE_INVERT\",\n    \"SAMPLE_COVERAGE_VALUE\",\n    \"SAWTOOTH\",\n    \"SCHEDULED_STATE\",\n    \"SCISSOR_BOX\",\n    \"SCISSOR_TEST\",\n    \"SCROLL_PAGE_DOWN\",\n    \"SCROLL_PAGE_UP\",\n    \"SDP_ANSWER\",\n    \"SDP_OFFER\",\n    \"SDP_PRANSWER\",\n    \"SECURITY_ERR\",\n    \"SELECT\",\n    \"SEPARATE_ATTRIBS\",\n    \"SERIALIZE_ERR\",\n    \"SEVERITY_ERROR\",\n    \"SEVERITY_FATAL_ERROR\",\n    \"SEVERITY_WARNING\",\n    \"SHADER_COMPILER\",\n    \"SHADER_TYPE\",\n    \"SHADING_LANGUAGE_VERSION\",\n    \"SHIFT_MASK\",\n    \"SHORT\",\n    \"SHOWING\",\n    \"SHOW_ALL\",\n    \"SHOW_ATTRIBUTE\",\n    \"SHOW_CDATA_SECTION\",\n    \"SHOW_COMMENT\",\n    \"SHOW_DOCUMENT\",\n    \"SHOW_DOCUMENT_FRAGMENT\",\n    \"SHOW_DOCUMENT_TYPE\",\n    \"SHOW_ELEMENT\",\n    \"SHOW_ENTITY\",\n    \"SHOW_ENTITY_REFERENCE\",\n    \"SHOW_NOTATION\",\n    \"SHOW_PROCESSING_INSTRUCTION\",\n    \"SHOW_TEXT\",\n    \"SIGNALED\",\n    \"SIGNED_NORMALIZED\",\n    \"SINE\",\n    \"SOUNDFIELD\",\n    \"SQLException\",\n    \"SQRT1_2\",\n    \"SQRT2\",\n    \"SQUARE\",\n    \"SRC_ALPHA\",\n    \"SRC_ALPHA_SATURATE\",\n    \"SRC_COLOR\",\n    \"SRGB\",\n    \"SRGB8\",\n    \"SRGB8_ALPHA8\",\n    \"START_TO_END\",\n    \"START_TO_START\",\n    \"STATIC_COPY\",\n    \"STATIC_DRAW\",\n    \"STATIC_READ\",\n    \"STENCIL\",\n    \"STENCIL_ATTACHMENT\",\n    \"STENCIL_BACK_FAIL\",\n    \"STENCIL_BACK_FUNC\",\n    \"STENCIL_BACK_PASS_DEPTH_FAIL\",\n    \"STENCIL_BACK_PASS_DEPTH_PASS\",\n    \"STENCIL_BACK_REF\",\n    \"STENCIL_BACK_VALUE_MASK\",\n    \"STENCIL_BACK_WRITEMASK\",\n    \"STENCIL_BITS\",\n    \"STENCIL_BUFFER_BIT\",\n    \"STENCIL_CLEAR_VALUE\",\n    \"STENCIL_FAIL\",\n    \"STENCIL_FUNC\",\n    \"STENCIL_INDEX\",\n    \"STENCIL_INDEX8\",\n    \"STENCIL_PASS_DEPTH_FAIL\",\n    \"STENCIL_PASS_DEPTH_PASS\",\n    \"STENCIL_REF\",\n    \"STENCIL_TEST\",\n    \"STENCIL_VALUE_MASK\",\n    \"STENCIL_WRITEMASK\",\n    \"STREAM_COPY\",\n    \"STREAM_DRAW\",\n    \"STREAM_READ\",\n    \"STRING_TYPE\",\n    \"STYLE_RULE\",\n    \"SUBPIXEL_BITS\",\n    \"SUPPORTS_RULE\",\n    \"SVGAElement\",\n    \"SVGAltGlyphDefElement\",\n    \"SVGAltGlyphElement\",\n    \"SVGAltGlyphItemElement\",\n    \"SVGAngle\",\n    \"SVGAnimateColorElement\",\n    \"SVGAnimateElement\",\n    \"SVGAnimateMotionElement\",\n    \"SVGAnimateTransformElement\",\n    \"SVGAnimatedAngle\",\n    \"SVGAnimatedBoolean\",\n    \"SVGAnimatedEnumeration\",\n    \"SVGAnimatedInteger\",\n    \"SVGAnimatedLength\",\n    \"SVGAnimatedLengthList\",\n    \"SVGAnimatedNumber\",\n    \"SVGAnimatedNumberList\",\n    \"SVGAnimatedPreserveAspectRatio\",\n    \"SVGAnimatedRect\",\n    \"SVGAnimatedString\",\n    \"SVGAnimatedTransformList\",\n    \"SVGAnimationElement\",\n    \"SVGCircleElement\",\n    \"SVGClipPathElement\",\n    \"SVGColor\",\n    \"SVGComponentTransferFunctionElement\",\n    \"SVGCursorElement\",\n    \"SVGDefsElement\",\n    \"SVGDescElement\",\n    \"SVGDiscardElement\",\n    \"SVGDocument\",\n    \"SVGElement\",\n    \"SVGElementInstance\",\n    \"SVGElementInstanceList\",\n    \"SVGEllipseElement\",\n    \"SVGException\",\n    \"SVGFEBlendElement\",\n    \"SVGFEColorMatrixElement\",\n    \"SVGFEComponentTransferElement\",\n    \"SVGFECompositeElement\",\n    \"SVGFEConvolveMatrixElement\",\n    \"SVGFEDiffuseLightingElement\",\n    \"SVGFEDisplacementMapElement\",\n    \"SVGFEDistantLightElement\",\n    \"SVGFEDropShadowElement\",\n    \"SVGFEFloodElement\",\n    \"SVGFEFuncAElement\",\n    \"SVGFEFuncBElement\",\n    \"SVGFEFuncGElement\",\n    \"SVGFEFuncRElement\",\n    \"SVGFEGaussianBlurElement\",\n    \"SVGFEImageElement\",\n    \"SVGFEMergeElement\",\n    \"SVGFEMergeNodeElement\",\n    \"SVGFEMorphologyElement\",\n    \"SVGFEOffsetElement\",\n    \"SVGFEPointLightElement\",\n    \"SVGFESpecularLightingElement\",\n    \"SVGFESpotLightElement\",\n    \"SVGFETileElement\",\n    \"SVGFETurbulenceElement\",\n    \"SVGFilterElement\",\n    \"SVGFontElement\",\n    \"SVGFontFaceElement\",\n    \"SVGFontFaceFormatElement\",\n    \"SVGFontFaceNameElement\",\n    \"SVGFontFaceSrcElement\",\n    \"SVGFontFaceUriElement\",\n    \"SVGForeignObjectElement\",\n    \"SVGGElement\",\n    \"SVGGeometryElement\",\n    \"SVGGlyphElement\",\n    \"SVGGlyphRefElement\",\n    \"SVGGradientElement\",\n    \"SVGGraphicsElement\",\n    \"SVGHKernElement\",\n    \"SVGImageElement\",\n    \"SVGLength\",\n    \"SVGLengthList\",\n    \"SVGLineElement\",\n    \"SVGLinearGradientElement\",\n    \"SVGMPathElement\",\n    \"SVGMarkerElement\",\n    \"SVGMaskElement\",\n    \"SVGMatrix\",\n    \"SVGMetadataElement\",\n    \"SVGMissingGlyphElement\",\n    \"SVGNumber\",\n    \"SVGNumberList\",\n    \"SVGPaint\",\n    \"SVGPathElement\",\n    \"SVGPathSeg\",\n    \"SVGPathSegArcAbs\",\n    \"SVGPathSegArcRel\",\n    \"SVGPathSegClosePath\",\n    \"SVGPathSegCurvetoCubicAbs\",\n    \"SVGPathSegCurvetoCubicRel\",\n    \"SVGPathSegCurvetoCubicSmoothAbs\",\n    \"SVGPathSegCurvetoCubicSmoothRel\",\n    \"SVGPathSegCurvetoQuadraticAbs\",\n    \"SVGPathSegCurvetoQuadraticRel\",\n    \"SVGPathSegCurvetoQuadraticSmoothAbs\",\n    \"SVGPathSegCurvetoQuadraticSmoothRel\",\n    \"SVGPathSegLinetoAbs\",\n    \"SVGPathSegLinetoHorizontalAbs\",\n    \"SVGPathSegLinetoHorizontalRel\",\n    \"SVGPathSegLinetoRel\",\n    \"SVGPathSegLinetoVerticalAbs\",\n    \"SVGPathSegLinetoVerticalRel\",\n    \"SVGPathSegList\",\n    \"SVGPathSegMovetoAbs\",\n    \"SVGPathSegMovetoRel\",\n    \"SVGPatternElement\",\n    \"SVGPoint\",\n    \"SVGPointList\",\n    \"SVGPolygonElement\",\n    \"SVGPolylineElement\",\n    \"SVGPreserveAspectRatio\",\n    \"SVGRadialGradientElement\",\n    \"SVGRect\",\n    \"SVGRectElement\",\n    \"SVGRenderingIntent\",\n    \"SVGSVGElement\",\n    \"SVGScriptElement\",\n    \"SVGSetElement\",\n    \"SVGStopElement\",\n    \"SVGStringList\",\n    \"SVGStyleElement\",\n    \"SVGSwitchElement\",\n    \"SVGSymbolElement\",\n    \"SVGTRefElement\",\n    \"SVGTSpanElement\",\n    \"SVGTextContentElement\",\n    \"SVGTextElement\",\n    \"SVGTextPathElement\",\n    \"SVGTextPositioningElement\",\n    \"SVGTitleElement\",\n    \"SVGTransform\",\n    \"SVGTransformList\",\n    \"SVGUnitTypes\",\n    \"SVGUseElement\",\n    \"SVGVKernElement\",\n    \"SVGViewElement\",\n    \"SVGViewSpec\",\n    \"SVGZoomAndPan\",\n    \"SVGZoomEvent\",\n    \"SVG_ANGLETYPE_DEG\",\n    \"SVG_ANGLETYPE_GRAD\",\n    \"SVG_ANGLETYPE_RAD\",\n    \"SVG_ANGLETYPE_UNKNOWN\",\n    \"SVG_ANGLETYPE_UNSPECIFIED\",\n    \"SVG_CHANNEL_A\",\n    \"SVG_CHANNEL_B\",\n    \"SVG_CHANNEL_G\",\n    \"SVG_CHANNEL_R\",\n    \"SVG_CHANNEL_UNKNOWN\",\n    \"SVG_COLORTYPE_CURRENTCOLOR\",\n    \"SVG_COLORTYPE_RGBCOLOR\",\n    \"SVG_COLORTYPE_RGBCOLOR_ICCCOLOR\",\n    \"SVG_COLORTYPE_UNKNOWN\",\n    \"SVG_EDGEMODE_DUPLICATE\",\n    \"SVG_EDGEMODE_NONE\",\n    \"SVG_EDGEMODE_UNKNOWN\",\n    \"SVG_EDGEMODE_WRAP\",\n    \"SVG_FEBLEND_MODE_COLOR\",\n    \"SVG_FEBLEND_MODE_COLOR_BURN\",\n    \"SVG_FEBLEND_MODE_COLOR_DODGE\",\n    \"SVG_FEBLEND_MODE_DARKEN\",\n    \"SVG_FEBLEND_MODE_DIFFERENCE\",\n    \"SVG_FEBLEND_MODE_EXCLUSION\",\n    \"SVG_FEBLEND_MODE_HARD_LIGHT\",\n    \"SVG_FEBLEND_MODE_HUE\",\n    \"SVG_FEBLEND_MODE_LIGHTEN\",\n    \"SVG_FEBLEND_MODE_LUMINOSITY\",\n    \"SVG_FEBLEND_MODE_MULTIPLY\",\n    \"SVG_FEBLEND_MODE_NORMAL\",\n    \"SVG_FEBLEND_MODE_OVERLAY\",\n    \"SVG_FEBLEND_MODE_SATURATION\",\n    \"SVG_FEBLEND_MODE_SCREEN\",\n    \"SVG_FEBLEND_MODE_SOFT_LIGHT\",\n    \"SVG_FEBLEND_MODE_UNKNOWN\",\n    \"SVG_FECOLORMATRIX_TYPE_HUEROTATE\",\n    \"SVG_FECOLORMATRIX_TYPE_LUMINANCETOALPHA\",\n    \"SVG_FECOLORMATRIX_TYPE_MATRIX\",\n    \"SVG_FECOLORMATRIX_TYPE_SATURATE\",\n    \"SVG_FECOLORMATRIX_TYPE_UNKNOWN\",\n    \"SVG_FECOMPONENTTRANSFER_TYPE_DISCRETE\",\n    \"SVG_FECOMPONENTTRANSFER_TYPE_GAMMA\",\n    \"SVG_FECOMPONENTTRANSFER_TYPE_IDENTITY\",\n    \"SVG_FECOMPONENTTRANSFER_TYPE_LINEAR\",\n    \"SVG_FECOMPONENTTRANSFER_TYPE_TABLE\",\n    \"SVG_FECOMPONENTTRANSFER_TYPE_UNKNOWN\",\n    \"SVG_FECOMPOSITE_OPERATOR_ARITHMETIC\",\n    \"SVG_FECOMPOSITE_OPERATOR_ATOP\",\n    \"SVG_FECOMPOSITE_OPERATOR_IN\",\n    \"SVG_FECOMPOSITE_OPERATOR_OUT\",\n    \"SVG_FECOMPOSITE_OPERATOR_OVER\",\n    \"SVG_FECOMPOSITE_OPERATOR_UNKNOWN\",\n    \"SVG_FECOMPOSITE_OPERATOR_XOR\",\n    \"SVG_INVALID_VALUE_ERR\",\n    \"SVG_LENGTHTYPE_CM\",\n    \"SVG_LENGTHTYPE_EMS\",\n    \"SVG_LENGTHTYPE_EXS\",\n    \"SVG_LENGTHTYPE_IN\",\n    \"SVG_LENGTHTYPE_MM\",\n    \"SVG_LENGTHTYPE_NUMBER\",\n    \"SVG_LENGTHTYPE_PC\",\n    \"SVG_LENGTHTYPE_PERCENTAGE\",\n    \"SVG_LENGTHTYPE_PT\",\n    \"SVG_LENGTHTYPE_PX\",\n    \"SVG_LENGTHTYPE_UNKNOWN\",\n    \"SVG_MARKERUNITS_STROKEWIDTH\",\n    \"SVG_MARKERUNITS_UNKNOWN\",\n    \"SVG_MARKERUNITS_USERSPACEONUSE\",\n    \"SVG_MARKER_ORIENT_ANGLE\",\n    \"SVG_MARKER_ORIENT_AUTO\",\n    \"SVG_MARKER_ORIENT_UNKNOWN\",\n    \"SVG_MASKTYPE_ALPHA\",\n    \"SVG_MASKTYPE_LUMINANCE\",\n    \"SVG_MATRIX_NOT_INVERTABLE\",\n    \"SVG_MEETORSLICE_MEET\",\n    \"SVG_MEETORSLICE_SLICE\",\n    \"SVG_MEETORSLICE_UNKNOWN\",\n    \"SVG_MORPHOLOGY_OPERATOR_DILATE\",\n    \"SVG_MORPHOLOGY_OPERATOR_ERODE\",\n    \"SVG_MORPHOLOGY_OPERATOR_UNKNOWN\",\n    \"SVG_PAINTTYPE_CURRENTCOLOR\",\n    \"SVG_PAINTTYPE_NONE\",\n    \"SVG_PAINTTYPE_RGBCOLOR\",\n    \"SVG_PAINTTYPE_RGBCOLOR_ICCCOLOR\",\n    \"SVG_PAINTTYPE_UNKNOWN\",\n    \"SVG_PAINTTYPE_URI\",\n    \"SVG_PAINTTYPE_URI_CURRENTCOLOR\",\n    \"SVG_PAINTTYPE_URI_NONE\",\n    \"SVG_PAINTTYPE_URI_RGBCOLOR\",\n    \"SVG_PAINTTYPE_URI_RGBCOLOR_ICCCOLOR\",\n    \"SVG_PRESERVEASPECTRATIO_NONE\",\n    \"SVG_PRESERVEASPECTRATIO_UNKNOWN\",\n    \"SVG_PRESERVEASPECTRATIO_XMAXYMAX\",\n    \"SVG_PRESERVEASPECTRATIO_XMAXYMID\",\n    \"SVG_PRESERVEASPECTRATIO_XMAXYMIN\",\n    \"SVG_PRESERVEASPECTRATIO_XMIDYMAX\",\n    \"SVG_PRESERVEASPECTRATIO_XMIDYMID\",\n    \"SVG_PRESERVEASPECTRATIO_XMIDYMIN\",\n    \"SVG_PRESERVEASPECTRATIO_XMINYMAX\",\n    \"SVG_PRESERVEASPECTRATIO_XMINYMID\",\n    \"SVG_PRESERVEASPECTRATIO_XMINYMIN\",\n    \"SVG_SPREADMETHOD_PAD\",\n    \"SVG_SPREADMETHOD_REFLECT\",\n    \"SVG_SPREADMETHOD_REPEAT\",\n    \"SVG_SPREADMETHOD_UNKNOWN\",\n    \"SVG_STITCHTYPE_NOSTITCH\",\n    \"SVG_STITCHTYPE_STITCH\",\n    \"SVG_STITCHTYPE_UNKNOWN\",\n    \"SVG_TRANSFORM_MATRIX\",\n    \"SVG_TRANSFORM_ROTATE\",\n    \"SVG_TRANSFORM_SCALE\",\n    \"SVG_TRANSFORM_SKEWX\",\n    \"SVG_TRANSFORM_SKEWY\",\n    \"SVG_TRANSFORM_TRANSLATE\",\n    \"SVG_TRANSFORM_UNKNOWN\",\n    \"SVG_TURBULENCE_TYPE_FRACTALNOISE\",\n    \"SVG_TURBULENCE_TYPE_TURBULENCE\",\n    \"SVG_TURBULENCE_TYPE_UNKNOWN\",\n    \"SVG_UNIT_TYPE_OBJECTBOUNDINGBOX\",\n    \"SVG_UNIT_TYPE_UNKNOWN\",\n    \"SVG_UNIT_TYPE_USERSPACEONUSE\",\n    \"SVG_WRONG_TYPE_ERR\",\n    \"SVG_ZOOMANDPAN_DISABLE\",\n    \"SVG_ZOOMANDPAN_MAGNIFY\",\n    \"SVG_ZOOMANDPAN_UNKNOWN\",\n    \"SYNC_CONDITION\",\n    \"SYNC_FENCE\",\n    \"SYNC_FLAGS\",\n    \"SYNC_FLUSH_COMMANDS_BIT\",\n    \"SYNC_GPU_COMMANDS_COMPLETE\",\n    \"SYNC_STATUS\",\n    \"SYNTAX_ERR\",\n    \"SavedPages\",\n    \"Screen\",\n    \"ScreenOrientation\",\n    \"Script\",\n    \"ScriptProcessorNode\",\n    \"ScrollAreaEvent\",\n    \"SecurityPolicyViolationEvent\",\n    \"Selection\",\n    \"Sensor\",\n    \"SensorErrorEvent\",\n    \"ServiceWorker\",\n    \"ServiceWorkerContainer\",\n    \"ServiceWorkerRegistration\",\n    \"SessionDescription\",\n    \"Set\",\n    \"ShadowRoot\",\n    \"SharedArrayBuffer\",\n    \"SharedWorker\",\n    \"SimpleGestureEvent\",\n    \"SourceBuffer\",\n    \"SourceBufferList\",\n    \"SpeechSynthesis\",\n    \"SpeechSynthesisErrorEvent\",\n    \"SpeechSynthesisEvent\",\n    \"SpeechSynthesisUtterance\",\n    \"SpeechSynthesisVoice\",\n    \"StaticRange\",\n    \"StereoPannerNode\",\n    \"StopIteration\",\n    \"Storage\",\n    \"StorageEvent\",\n    \"StorageManager\",\n    \"String\",\n    \"StructType\",\n    \"StylePropertyMap\",\n    \"StylePropertyMapReadOnly\",\n    \"StyleSheet\",\n    \"StyleSheetList\",\n    \"SubmitEvent\",\n    \"SubtleCrypto\",\n    \"Symbol\",\n    \"SyncManager\",\n    \"SyntaxError\",\n    \"TEMPORARY\",\n    \"TEXTPATH_METHODTYPE_ALIGN\",\n    \"TEXTPATH_METHODTYPE_STRETCH\",\n    \"TEXTPATH_METHODTYPE_UNKNOWN\",\n    \"TEXTPATH_SPACINGTYPE_AUTO\",\n    \"TEXTPATH_SPACINGTYPE_EXACT\",\n    \"TEXTPATH_SPACINGTYPE_UNKNOWN\",\n    \"TEXTURE\",\n    \"TEXTURE0\",\n    \"TEXTURE1\",\n    \"TEXTURE10\",\n    \"TEXTURE11\",\n    \"TEXTURE12\",\n    \"TEXTURE13\",\n    \"TEXTURE14\",\n    \"TEXTURE15\",\n    \"TEXTURE16\",\n    \"TEXTURE17\",\n    \"TEXTURE18\",\n    \"TEXTURE19\",\n    \"TEXTURE2\",\n    \"TEXTURE20\",\n    \"TEXTURE21\",\n    \"TEXTURE22\",\n    \"TEXTURE23\",\n    \"TEXTURE24\",\n    \"TEXTURE25\",\n    \"TEXTURE26\",\n    \"TEXTURE27\",\n    \"TEXTURE28\",\n    \"TEXTURE29\",\n    \"TEXTURE3\",\n    \"TEXTURE30\",\n    \"TEXTURE31\",\n    \"TEXTURE4\",\n    \"TEXTURE5\",\n    \"TEXTURE6\",\n    \"TEXTURE7\",\n    \"TEXTURE8\",\n    \"TEXTURE9\",\n    \"TEXTURE_2D\",\n    \"TEXTURE_2D_ARRAY\",\n    \"TEXTURE_3D\",\n    \"TEXTURE_BASE_LEVEL\",\n    \"TEXTURE_BINDING_2D\",\n    \"TEXTURE_BINDING_2D_ARRAY\",\n    \"TEXTURE_BINDING_3D\",\n    \"TEXTURE_BINDING_CUBE_MAP\",\n    \"TEXTURE_COMPARE_FUNC\",\n    \"TEXTURE_COMPARE_MODE\",\n    \"TEXTURE_CUBE_MAP\",\n    \"TEXTURE_CUBE_MAP_NEGATIVE_X\",\n    \"TEXTURE_CUBE_MAP_NEGATIVE_Y\",\n    \"TEXTURE_CUBE_MAP_NEGATIVE_Z\",\n    \"TEXTURE_CUBE_MAP_POSITIVE_X\",\n    \"TEXTURE_CUBE_MAP_POSITIVE_Y\",\n    \"TEXTURE_CUBE_MAP_POSITIVE_Z\",\n    \"TEXTURE_IMMUTABLE_FORMAT\",\n    \"TEXTURE_IMMUTABLE_LEVELS\",\n    \"TEXTURE_MAG_FILTER\",\n    \"TEXTURE_MAX_ANISOTROPY_EXT\",\n    \"TEXTURE_MAX_LEVEL\",\n    \"TEXTURE_MAX_LOD\",\n    \"TEXTURE_MIN_FILTER\",\n    \"TEXTURE_MIN_LOD\",\n    \"TEXTURE_WRAP_R\",\n    \"TEXTURE_WRAP_S\",\n    \"TEXTURE_WRAP_T\",\n    \"TEXT_NODE\",\n    \"TIMEOUT\",\n    \"TIMEOUT_ERR\",\n    \"TIMEOUT_EXPIRED\",\n    \"TIMEOUT_IGNORED\",\n    \"TOO_LARGE_ERR\",\n    \"TRANSACTION_INACTIVE_ERR\",\n    \"TRANSFORM_FEEDBACK\",\n    \"TRANSFORM_FEEDBACK_ACTIVE\",\n    \"TRANSFORM_FEEDBACK_BINDING\",\n    \"TRANSFORM_FEEDBACK_BUFFER\",\n    \"TRANSFORM_FEEDBACK_BUFFER_BINDING\",\n    \"TRANSFORM_FEEDBACK_BUFFER_MODE\",\n    \"TRANSFORM_FEEDBACK_BUFFER_SIZE\",\n    \"TRANSFORM_FEEDBACK_BUFFER_START\",\n    \"TRANSFORM_FEEDBACK_PAUSED\",\n    \"TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN\",\n    \"TRANSFORM_FEEDBACK_VARYINGS\",\n    \"TRIANGLE\",\n    \"TRIANGLES\",\n    \"TRIANGLE_FAN\",\n    \"TRIANGLE_STRIP\",\n    \"TYPE_BACK_FORWARD\",\n    \"TYPE_ERR\",\n    \"TYPE_MISMATCH_ERR\",\n    \"TYPE_NAVIGATE\",\n    \"TYPE_RELOAD\",\n    \"TYPE_RESERVED\",\n    \"Table\",\n    \"TaskAttributionTiming\",\n    \"Text\",\n    \"TextDecoder\",\n    \"TextDecoderStream\",\n    \"TextEncoder\",\n    \"TextEncoderStream\",\n    \"TextEvent\",\n    \"TextMetrics\",\n    \"TextTrack\",\n    \"TextTrackCue\",\n    \"TextTrackCueList\",\n    \"TextTrackList\",\n    \"TimeEvent\",\n    \"TimeRanges\",\n    \"Touch\",\n    \"TouchEvent\",\n    \"TouchList\",\n    \"TrackEvent\",\n    \"TransformStream\",\n    \"TransitionEvent\",\n    \"TreeWalker\",\n    \"TrustedHTML\",\n    \"TrustedScript\",\n    \"TrustedScriptURL\",\n    \"TrustedTypePolicy\",\n    \"TrustedTypePolicyFactory\",\n    \"TypeError\",\n    \"TypedObject\",\n    \"U2F\",\n    \"UIEvent\",\n    \"UNCACHED\",\n    \"UNIFORM_ARRAY_STRIDE\",\n    \"UNIFORM_BLOCK_ACTIVE_UNIFORMS\",\n    \"UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES\",\n    \"UNIFORM_BLOCK_BINDING\",\n    \"UNIFORM_BLOCK_DATA_SIZE\",\n    \"UNIFORM_BLOCK_INDEX\",\n    \"UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER\",\n    \"UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER\",\n    \"UNIFORM_BUFFER\",\n    \"UNIFORM_BUFFER_BINDING\",\n    \"UNIFORM_BUFFER_OFFSET_ALIGNMENT\",\n    \"UNIFORM_BUFFER_SIZE\",\n    \"UNIFORM_BUFFER_START\",\n    \"UNIFORM_IS_ROW_MAJOR\",\n    \"UNIFORM_MATRIX_STRIDE\",\n    \"UNIFORM_OFFSET\",\n    \"UNIFORM_SIZE\",\n    \"UNIFORM_TYPE\",\n    \"UNKNOWN_ERR\",\n    \"UNKNOWN_RULE\",\n    \"UNMASKED_RENDERER_WEBGL\",\n    \"UNMASKED_VENDOR_WEBGL\",\n    \"UNORDERED_NODE_ITERATOR_TYPE\",\n    \"UNORDERED_NODE_SNAPSHOT_TYPE\",\n    \"UNPACK_ALIGNMENT\",\n    \"UNPACK_COLORSPACE_CONVERSION_WEBGL\",\n    \"UNPACK_FLIP_Y_WEBGL\",\n    \"UNPACK_IMAGE_HEIGHT\",\n    \"UNPACK_PREMULTIPLY_ALPHA_WEBGL\",\n    \"UNPACK_ROW_LENGTH\",\n    \"UNPACK_SKIP_IMAGES\",\n    \"UNPACK_SKIP_PIXELS\",\n    \"UNPACK_SKIP_ROWS\",\n    \"UNSCHEDULED_STATE\",\n    \"UNSENT\",\n    \"UNSIGNALED\",\n    \"UNSIGNED_BYTE\",\n    \"UNSIGNED_INT\",\n    \"UNSIGNED_INT_10F_11F_11F_REV\",\n    \"UNSIGNED_INT_24_8\",\n    \"UNSIGNED_INT_2_10_10_10_REV\",\n    \"UNSIGNED_INT_5_9_9_9_REV\",\n    \"UNSIGNED_INT_SAMPLER_2D\",\n    \"UNSIGNED_INT_SAMPLER_2D_ARRAY\",\n    \"UNSIGNED_INT_SAMPLER_3D\",\n    \"UNSIGNED_INT_SAMPLER_CUBE\",\n    \"UNSIGNED_INT_VEC2\",\n    \"UNSIGNED_INT_VEC3\",\n    \"UNSIGNED_INT_VEC4\",\n    \"UNSIGNED_NORMALIZED\",\n    \"UNSIGNED_SHORT\",\n    \"UNSIGNED_SHORT_4_4_4_4\",\n    \"UNSIGNED_SHORT_5_5_5_1\",\n    \"UNSIGNED_SHORT_5_6_5\",\n    \"UNSPECIFIED_EVENT_TYPE_ERR\",\n    \"UPDATEREADY\",\n    \"URIError\",\n    \"URL\",\n    \"URLSearchParams\",\n    \"URLUnencoded\",\n    \"URL_MISMATCH_ERR\",\n    \"USB\",\n    \"USBAlternateInterface\",\n    \"USBConfiguration\",\n    \"USBConnectionEvent\",\n    \"USBDevice\",\n    \"USBEndpoint\",\n    \"USBInTransferResult\",\n    \"USBInterface\",\n    \"USBIsochronousInTransferPacket\",\n    \"USBIsochronousInTransferResult\",\n    \"USBIsochronousOutTransferPacket\",\n    \"USBIsochronousOutTransferResult\",\n    \"USBOutTransferResult\",\n    \"UTC\",\n    \"Uint16Array\",\n    \"Uint32Array\",\n    \"Uint8Array\",\n    \"Uint8ClampedArray\",\n    \"UserActivation\",\n    \"UserMessageHandler\",\n    \"UserMessageHandlersNamespace\",\n    \"UserProximityEvent\",\n    \"VALIDATE_STATUS\",\n    \"VALIDATION_ERR\",\n    \"VARIABLES_RULE\",\n    \"VENDOR\",\n    \"VERSION\",\n    \"VERSION_CHANGE\",\n    \"VERSION_ERR\",\n    \"VERTEX_ARRAY_BINDING\",\n    \"VERTEX_ATTRIB_ARRAY_BUFFER_BINDING\",\n    \"VERTEX_ATTRIB_ARRAY_DIVISOR\",\n    \"VERTEX_ATTRIB_ARRAY_DIVISOR_ANGLE\",\n    \"VERTEX_ATTRIB_ARRAY_ENABLED\",\n    \"VERTEX_ATTRIB_ARRAY_INTEGER\",\n    \"VERTEX_ATTRIB_ARRAY_NORMALIZED\",\n    \"VERTEX_ATTRIB_ARRAY_POINTER\",\n    \"VERTEX_ATTRIB_ARRAY_SIZE\",\n    \"VERTEX_ATTRIB_ARRAY_STRIDE\",\n    \"VERTEX_ATTRIB_ARRAY_TYPE\",\n    \"VERTEX_SHADER\",\n    \"VERTICAL\",\n    \"VERTICAL_AXIS\",\n    \"VER_ERR\",\n    \"VIEWPORT\",\n    \"VIEWPORT_RULE\",\n    \"VRDisplay\",\n    \"VRDisplayCapabilities\",\n    \"VRDisplayEvent\",\n    \"VREyeParameters\",\n    \"VRFieldOfView\",\n    \"VRFrameData\",\n    \"VRPose\",\n    \"VRStageParameters\",\n    \"VTTCue\",\n    \"VTTRegion\",\n    \"ValidityState\",\n    \"VideoPlaybackQuality\",\n    \"VideoStreamTrack\",\n    \"VisualViewport\",\n    \"WAIT_FAILED\",\n    \"WEBKIT_FILTER_RULE\",\n    \"WEBKIT_KEYFRAMES_RULE\",\n    \"WEBKIT_KEYFRAME_RULE\",\n    \"WEBKIT_REGION_RULE\",\n    \"WRONG_DOCUMENT_ERR\",\n    \"WakeLock\",\n    \"WakeLockSentinel\",\n    \"WasmAnyRef\",\n    \"WaveShaperNode\",\n    \"WeakMap\",\n    \"WeakRef\",\n    \"WeakSet\",\n    \"WebAssembly\",\n    \"WebGL2RenderingContext\",\n    \"WebGLActiveInfo\",\n    \"WebGLBuffer\",\n    \"WebGLContextEvent\",\n    \"WebGLFramebuffer\",\n    \"WebGLProgram\",\n    \"WebGLQuery\",\n    \"WebGLRenderbuffer\",\n    \"WebGLRenderingContext\",\n    \"WebGLSampler\",\n    \"WebGLShader\",\n    \"WebGLShaderPrecisionFormat\",\n    \"WebGLSync\",\n    \"WebGLTexture\",\n    \"WebGLTransformFeedback\",\n    \"WebGLUniformLocation\",\n    \"WebGLVertexArray\",\n    \"WebGLVertexArrayObject\",\n    \"WebKitAnimationEvent\",\n    \"WebKitBlobBuilder\",\n    \"WebKitCSSFilterRule\",\n    \"WebKitCSSFilterValue\",\n    \"WebKitCSSKeyframeRule\",\n    \"WebKitCSSKeyframesRule\",\n    \"WebKitCSSMatrix\",\n    \"WebKitCSSRegionRule\",\n    \"WebKitCSSTransformValue\",\n    \"WebKitDataCue\",\n    \"WebKitGamepad\",\n    \"WebKitMediaKeyError\",\n    \"WebKitMediaKeyMessageEvent\",\n    \"WebKitMediaKeySession\",\n    \"WebKitMediaKeys\",\n    \"WebKitMediaSource\",\n    \"WebKitMutationObserver\",\n    \"WebKitNamespace\",\n    \"WebKitPlaybackTargetAvailabilityEvent\",\n    \"WebKitPoint\",\n    \"WebKitShadowRoot\",\n    \"WebKitSourceBuffer\",\n    \"WebKitSourceBufferList\",\n    \"WebKitTransitionEvent\",\n    \"WebSocket\",\n    \"WebkitAlignContent\",\n    \"WebkitAlignItems\",\n    \"WebkitAlignSelf\",\n    \"WebkitAnimation\",\n    \"WebkitAnimationDelay\",\n    \"WebkitAnimationDirection\",\n    \"WebkitAnimationDuration\",\n    \"WebkitAnimationFillMode\",\n    \"WebkitAnimationIterationCount\",\n    \"WebkitAnimationName\",\n    \"WebkitAnimationPlayState\",\n    \"WebkitAnimationTimingFunction\",\n    \"WebkitAppearance\",\n    \"WebkitBackfaceVisibility\",\n    \"WebkitBackgroundClip\",\n    \"WebkitBackgroundOrigin\",\n    \"WebkitBackgroundSize\",\n    \"WebkitBorderBottomLeftRadius\",\n    \"WebkitBorderBottomRightRadius\",\n    \"WebkitBorderImage\",\n    \"WebkitBorderRadius\",\n    \"WebkitBorderTopLeftRadius\",\n    \"WebkitBorderTopRightRadius\",\n    \"WebkitBoxAlign\",\n    \"WebkitBoxDirection\",\n    \"WebkitBoxFlex\",\n    \"WebkitBoxOrdinalGroup\",\n    \"WebkitBoxOrient\",\n    \"WebkitBoxPack\",\n    \"WebkitBoxShadow\",\n    \"WebkitBoxSizing\",\n    \"WebkitFilter\",\n    \"WebkitFlex\",\n    \"WebkitFlexBasis\",\n    \"WebkitFlexDirection\",\n    \"WebkitFlexFlow\",\n    \"WebkitFlexGrow\",\n    \"WebkitFlexShrink\",\n    \"WebkitFlexWrap\",\n    \"WebkitJustifyContent\",\n    \"WebkitLineClamp\",\n    \"WebkitMask\",\n    \"WebkitMaskClip\",\n    \"WebkitMaskComposite\",\n    \"WebkitMaskImage\",\n    \"WebkitMaskOrigin\",\n    \"WebkitMaskPosition\",\n    \"WebkitMaskPositionX\",\n    \"WebkitMaskPositionY\",\n    \"WebkitMaskRepeat\",\n    \"WebkitMaskSize\",\n    \"WebkitOrder\",\n    \"WebkitPerspective\",\n    \"WebkitPerspectiveOrigin\",\n    \"WebkitTextFillColor\",\n    \"WebkitTextSizeAdjust\",\n    \"WebkitTextStroke\",\n    \"WebkitTextStrokeColor\",\n    \"WebkitTextStrokeWidth\",\n    \"WebkitTransform\",\n    \"WebkitTransformOrigin\",\n    \"WebkitTransformStyle\",\n    \"WebkitTransition\",\n    \"WebkitTransitionDelay\",\n    \"WebkitTransitionDuration\",\n    \"WebkitTransitionProperty\",\n    \"WebkitTransitionTimingFunction\",\n    \"WebkitUserSelect\",\n    \"WheelEvent\",\n    \"Window\",\n    \"Worker\",\n    \"Worklet\",\n    \"WritableStream\",\n    \"WritableStreamDefaultWriter\",\n    \"XMLDocument\",\n    \"XMLHttpRequest\",\n    \"XMLHttpRequestEventTarget\",\n    \"XMLHttpRequestException\",\n    \"XMLHttpRequestProgressEvent\",\n    \"XMLHttpRequestUpload\",\n    \"XMLSerializer\",\n    \"XMLStylesheetProcessingInstruction\",\n    \"XPathEvaluator\",\n    \"XPathException\",\n    \"XPathExpression\",\n    \"XPathNSResolver\",\n    \"XPathResult\",\n    \"XRBoundedReferenceSpace\",\n    \"XRDOMOverlayState\",\n    \"XRFrame\",\n    \"XRHitTestResult\",\n    \"XRHitTestSource\",\n    \"XRInputSource\",\n    \"XRInputSourceArray\",\n    \"XRInputSourceEvent\",\n    \"XRInputSourcesChangeEvent\",\n    \"XRLayer\",\n    \"XRPose\",\n    \"XRRay\",\n    \"XRReferenceSpace\",\n    \"XRReferenceSpaceEvent\",\n    \"XRRenderState\",\n    \"XRRigidTransform\",\n    \"XRSession\",\n    \"XRSessionEvent\",\n    \"XRSpace\",\n    \"XRSystem\",\n    \"XRTransientInputHitTestResult\",\n    \"XRTransientInputHitTestSource\",\n    \"XRView\",\n    \"XRViewerPose\",\n    \"XRViewport\",\n    \"XRWebGLLayer\",\n    \"XSLTProcessor\",\n    \"ZERO\",\n    \"_XD0M_\",\n    \"_YD0M_\",\n    \"__defineGetter__\",\n    \"__defineSetter__\",\n    \"__lookupGetter__\",\n    \"__lookupSetter__\",\n    \"__opera\",\n    \"__proto__\",\n    \"_browserjsran\",\n    \"a\",\n    \"aLink\",\n    \"abbr\",\n    \"abort\",\n    \"aborted\",\n    \"abs\",\n    \"absolute\",\n    \"acceleration\",\n    \"accelerationIncludingGravity\",\n    \"accelerator\",\n    \"accept\",\n    \"acceptCharset\",\n    \"acceptNode\",\n    \"accessKey\",\n    \"accessKeyLabel\",\n    \"accuracy\",\n    \"acos\",\n    \"acosh\",\n    \"action\",\n    \"actionURL\",\n    \"actions\",\n    \"activated\",\n    \"active\",\n    \"activeCues\",\n    \"activeElement\",\n    \"activeSourceBuffers\",\n    \"activeSourceCount\",\n    \"activeTexture\",\n    \"activeVRDisplays\",\n    \"actualBoundingBoxAscent\",\n    \"actualBoundingBoxDescent\",\n    \"actualBoundingBoxLeft\",\n    \"actualBoundingBoxRight\",\n    \"add\",\n    \"addAll\",\n    \"addBehavior\",\n    \"addCandidate\",\n    \"addColorStop\",\n    \"addCue\",\n    \"addElement\",\n    \"addEventListener\",\n    \"addFilter\",\n    \"addFromString\",\n    \"addFromUri\",\n    \"addIceCandidate\",\n    \"addImport\",\n    \"addListener\",\n    \"addModule\",\n    \"addNamed\",\n    \"addPageRule\",\n    \"addPath\",\n    \"addPointer\",\n    \"addRange\",\n    \"addRegion\",\n    \"addRule\",\n    \"addSearchEngine\",\n    \"addSourceBuffer\",\n    \"addStream\",\n    \"addTextTrack\",\n    \"addTrack\",\n    \"addTransceiver\",\n    \"addWakeLockListener\",\n    \"added\",\n    \"addedNodes\",\n    \"additionalName\",\n    \"additiveSymbols\",\n    \"addons\",\n    \"address\",\n    \"addressLine\",\n    \"adoptNode\",\n    \"adoptedStyleSheets\",\n    \"adr\",\n    \"advance\",\n    \"after\",\n    \"album\",\n    \"alert\",\n    \"algorithm\",\n    \"align\",\n    \"align-content\",\n    \"align-items\",\n    \"align-self\",\n    \"alignContent\",\n    \"alignItems\",\n    \"alignSelf\",\n    \"alignmentBaseline\",\n    \"alinkColor\",\n    \"all\",\n    \"allSettled\",\n    \"allow\",\n    \"allowFullscreen\",\n    \"allowPaymentRequest\",\n    \"allowedDirections\",\n    \"allowedFeatures\",\n    \"allowedToPlay\",\n    \"allowsFeature\",\n    \"alpha\",\n    \"alt\",\n    \"altGraphKey\",\n    \"altHtml\",\n    \"altKey\",\n    \"altLeft\",\n    \"alternate\",\n    \"alternateSetting\",\n    \"alternates\",\n    \"altitude\",\n    \"altitudeAccuracy\",\n    \"amplitude\",\n    \"ancestorOrigins\",\n    \"anchor\",\n    \"anchorNode\",\n    \"anchorOffset\",\n    \"anchors\",\n    \"and\",\n    \"angle\",\n    \"angularAcceleration\",\n    \"angularVelocity\",\n    \"animVal\",\n    \"animate\",\n    \"animatedInstanceRoot\",\n    \"animatedNormalizedPathSegList\",\n    \"animatedPathSegList\",\n    \"animatedPoints\",\n    \"animation\",\n    \"animation-delay\",\n    \"animation-direction\",\n    \"animation-duration\",\n    \"animation-fill-mode\",\n    \"animation-iteration-count\",\n    \"animation-name\",\n    \"animation-play-state\",\n    \"animation-timing-function\",\n    \"animationDelay\",\n    \"animationDirection\",\n    \"animationDuration\",\n    \"animationFillMode\",\n    \"animationIterationCount\",\n    \"animationName\",\n    \"animationPlayState\",\n    \"animationStartTime\",\n    \"animationTimingFunction\",\n    \"animationsPaused\",\n    \"anniversary\",\n    \"antialias\",\n    \"anticipatedRemoval\",\n    \"any\",\n    \"app\",\n    \"appCodeName\",\n    \"appMinorVersion\",\n    \"appName\",\n    \"appNotifications\",\n    \"appVersion\",\n    \"appearance\",\n    \"append\",\n    \"appendBuffer\",\n    \"appendChild\",\n    \"appendData\",\n    \"appendItem\",\n    \"appendMedium\",\n    \"appendNamed\",\n    \"appendRule\",\n    \"appendStream\",\n    \"appendWindowEnd\",\n    \"appendWindowStart\",\n    \"applets\",\n    \"applicationCache\",\n    \"applicationServerKey\",\n    \"apply\",\n    \"applyConstraints\",\n    \"applyElement\",\n    \"arc\",\n    \"arcTo\",\n    \"archive\",\n    \"areas\",\n    \"arguments\",\n    \"ariaAtomic\",\n    \"ariaAutoComplete\",\n    \"ariaBusy\",\n    \"ariaChecked\",\n    \"ariaColCount\",\n    \"ariaColIndex\",\n    \"ariaColSpan\",\n    \"ariaCurrent\",\n    \"ariaDescription\",\n    \"ariaDisabled\",\n    \"ariaExpanded\",\n    \"ariaHasPopup\",\n    \"ariaHidden\",\n    \"ariaKeyShortcuts\",\n    \"ariaLabel\",\n    \"ariaLevel\",\n    \"ariaLive\",\n    \"ariaModal\",\n    \"ariaMultiLine\",\n    \"ariaMultiSelectable\",\n    \"ariaOrientation\",\n    \"ariaPlaceholder\",\n    \"ariaPosInSet\",\n    \"ariaPressed\",\n    \"ariaReadOnly\",\n    \"ariaRelevant\",\n    \"ariaRequired\",\n    \"ariaRoleDescription\",\n    \"ariaRowCount\",\n    \"ariaRowIndex\",\n    \"ariaRowSpan\",\n    \"ariaSelected\",\n    \"ariaSetSize\",\n    \"ariaSort\",\n    \"ariaValueMax\",\n    \"ariaValueMin\",\n    \"ariaValueNow\",\n    \"ariaValueText\",\n    \"arrayBuffer\",\n    \"artist\",\n    \"artwork\",\n    \"as\",\n    \"asIntN\",\n    \"asUintN\",\n    \"asin\",\n    \"asinh\",\n    \"assert\",\n    \"assign\",\n    \"assignedElements\",\n    \"assignedNodes\",\n    \"assignedSlot\",\n    \"async\",\n    \"asyncIterator\",\n    \"atEnd\",\n    \"atan\",\n    \"atan2\",\n    \"atanh\",\n    \"atob\",\n    \"attachEvent\",\n    \"attachInternals\",\n    \"attachShader\",\n    \"attachShadow\",\n    \"attachments\",\n    \"attack\",\n    \"attestationObject\",\n    \"attrChange\",\n    \"attrName\",\n    \"attributeFilter\",\n    \"attributeName\",\n    \"attributeNamespace\",\n    \"attributeOldValue\",\n    \"attributeStyleMap\",\n    \"attributes\",\n    \"attribution\",\n    \"audioBitsPerSecond\",\n    \"audioTracks\",\n    \"audioWorklet\",\n    \"authenticatedSignedWrites\",\n    \"authenticatorData\",\n    \"autoIncrement\",\n    \"autobuffer\",\n    \"autocapitalize\",\n    \"autocomplete\",\n    \"autocorrect\",\n    \"autofocus\",\n    \"automationRate\",\n    \"autoplay\",\n    \"availHeight\",\n    \"availLeft\",\n    \"availTop\",\n    \"availWidth\",\n    \"availability\",\n    \"available\",\n    \"aversion\",\n    \"ax\",\n    \"axes\",\n    \"axis\",\n    \"ay\",\n    \"azimuth\",\n    \"b\",\n    \"back\",\n    \"backface-visibility\",\n    \"backfaceVisibility\",\n    \"background\",\n    \"background-attachment\",\n    \"background-blend-mode\",\n    \"background-clip\",\n    \"background-color\",\n    \"background-image\",\n    \"background-origin\",\n    \"background-position\",\n    \"background-position-x\",\n    \"background-position-y\",\n    \"background-repeat\",\n    \"background-size\",\n    \"backgroundAttachment\",\n    \"backgroundBlendMode\",\n    \"backgroundClip\",\n    \"backgroundColor\",\n    \"backgroundFetch\",\n    \"backgroundImage\",\n    \"backgroundOrigin\",\n    \"backgroundPosition\",\n    \"backgroundPositionX\",\n    \"backgroundPositionY\",\n    \"backgroundRepeat\",\n    \"backgroundSize\",\n    \"badInput\",\n    \"badge\",\n    \"balance\",\n    \"baseFrequencyX\",\n    \"baseFrequencyY\",\n    \"baseLatency\",\n    \"baseLayer\",\n    \"baseNode\",\n    \"baseOffset\",\n    \"baseURI\",\n    \"baseVal\",\n    \"baselineShift\",\n    \"battery\",\n    \"bday\",\n    \"before\",\n    \"beginElement\",\n    \"beginElementAt\",\n    \"beginPath\",\n    \"beginQuery\",\n    \"beginTransformFeedback\",\n    \"behavior\",\n    \"behaviorCookie\",\n    \"behaviorPart\",\n    \"behaviorUrns\",\n    \"beta\",\n    \"bezierCurveTo\",\n    \"bgColor\",\n    \"bgProperties\",\n    \"bias\",\n    \"big\",\n    \"bigint64\",\n    \"biguint64\",\n    \"binaryType\",\n    \"bind\",\n    \"bindAttribLocation\",\n    \"bindBuffer\",\n    \"bindBufferBase\",\n    \"bindBufferRange\",\n    \"bindFramebuffer\",\n    \"bindRenderbuffer\",\n    \"bindSampler\",\n    \"bindTexture\",\n    \"bindTransformFeedback\",\n    \"bindVertexArray\",\n    \"blendColor\",\n    \"blendEquation\",\n    \"blendEquationSeparate\",\n    \"blendFunc\",\n    \"blendFuncSeparate\",\n    \"blink\",\n    \"blitFramebuffer\",\n    \"blob\",\n    \"block-size\",\n    \"blockDirection\",\n    \"blockSize\",\n    \"blockedURI\",\n    \"blue\",\n    \"bluetooth\",\n    \"blur\",\n    \"body\",\n    \"bodyUsed\",\n    \"bold\",\n    \"bookmarks\",\n    \"booleanValue\",\n    \"border\",\n    \"border-block\",\n    \"border-block-color\",\n    \"border-block-end\",\n    \"border-block-end-color\",\n    \"border-block-end-style\",\n    \"border-block-end-width\",\n    \"border-block-start\",\n    \"border-block-start-color\",\n    \"border-block-start-style\",\n    \"border-block-start-width\",\n    \"border-block-style\",\n    \"border-block-width\",\n    \"border-bottom\",\n    \"border-bottom-color\",\n    \"border-bottom-left-radius\",\n    \"border-bottom-right-radius\",\n    \"border-bottom-style\",\n    \"border-bottom-width\",\n    \"border-collapse\",\n    \"border-color\",\n    \"border-end-end-radius\",\n    \"border-end-start-radius\",\n    \"border-image\",\n    \"border-image-outset\",\n    \"border-image-repeat\",\n    \"border-image-slice\",\n    \"border-image-source\",\n    \"border-image-width\",\n    \"border-inline\",\n    \"border-inline-color\",\n    \"border-inline-end\",\n    \"border-inline-end-color\",\n    \"border-inline-end-style\",\n    \"border-inline-end-width\",\n    \"border-inline-start\",\n    \"border-inline-start-color\",\n    \"border-inline-start-style\",\n    \"border-inline-start-width\",\n    \"border-inline-style\",\n    \"border-inline-width\",\n    \"border-left\",\n    \"border-left-color\",\n    \"border-left-style\",\n    \"border-left-width\",\n    \"border-radius\",\n    \"border-right\",\n    \"border-right-color\",\n    \"border-right-style\",\n    \"border-right-width\",\n    \"border-spacing\",\n    \"border-start-end-radius\",\n    \"border-start-start-radius\",\n    \"border-style\",\n    \"border-top\",\n    \"border-top-color\",\n    \"border-top-left-radius\",\n    \"border-top-right-radius\",\n    \"border-top-style\",\n    \"border-top-width\",\n    \"border-width\",\n    \"borderBlock\",\n    \"borderBlockColor\",\n    \"borderBlockEnd\",\n    \"borderBlockEndColor\",\n    \"borderBlockEndStyle\",\n    \"borderBlockEndWidth\",\n    \"borderBlockStart\",\n    \"borderBlockStartColor\",\n    \"borderBlockStartStyle\",\n    \"borderBlockStartWidth\",\n    \"borderBlockStyle\",\n    \"borderBlockWidth\",\n    \"borderBottom\",\n    \"borderBottomColor\",\n    \"borderBottomLeftRadius\",\n    \"borderBottomRightRadius\",\n    \"borderBottomStyle\",\n    \"borderBottomWidth\",\n    \"borderBoxSize\",\n    \"borderCollapse\",\n    \"borderColor\",\n    \"borderColorDark\",\n    \"borderColorLight\",\n    \"borderEndEndRadius\",\n    \"borderEndStartRadius\",\n    \"borderImage\",\n    \"borderImageOutset\",\n    \"borderImageRepeat\",\n    \"borderImageSlice\",\n    \"borderImageSource\",\n    \"borderImageWidth\",\n    \"borderInline\",\n    \"borderInlineColor\",\n    \"borderInlineEnd\",\n    \"borderInlineEndColor\",\n    \"borderInlineEndStyle\",\n    \"borderInlineEndWidth\",\n    \"borderInlineStart\",\n    \"borderInlineStartColor\",\n    \"borderInlineStartStyle\",\n    \"borderInlineStartWidth\",\n    \"borderInlineStyle\",\n    \"borderInlineWidth\",\n    \"borderLeft\",\n    \"borderLeftColor\",\n    \"borderLeftStyle\",\n    \"borderLeftWidth\",\n    \"borderRadius\",\n    \"borderRight\",\n    \"borderRightColor\",\n    \"borderRightStyle\",\n    \"borderRightWidth\",\n    \"borderSpacing\",\n    \"borderStartEndRadius\",\n    \"borderStartStartRadius\",\n    \"borderStyle\",\n    \"borderTop\",\n    \"borderTopColor\",\n    \"borderTopLeftRadius\",\n    \"borderTopRightRadius\",\n    \"borderTopStyle\",\n    \"borderTopWidth\",\n    \"borderWidth\",\n    \"bottom\",\n    \"bottomMargin\",\n    \"bound\",\n    \"boundElements\",\n    \"boundingClientRect\",\n    \"boundingHeight\",\n    \"boundingLeft\",\n    \"boundingTop\",\n    \"boundingWidth\",\n    \"bounds\",\n    \"boundsGeometry\",\n    \"box-decoration-break\",\n    \"box-shadow\",\n    \"box-sizing\",\n    \"boxDecorationBreak\",\n    \"boxShadow\",\n    \"boxSizing\",\n    \"break-after\",\n    \"break-before\",\n    \"break-inside\",\n    \"breakAfter\",\n    \"breakBefore\",\n    \"breakInside\",\n    \"broadcast\",\n    \"browserLanguage\",\n    \"btoa\",\n    \"bubbles\",\n    \"buffer\",\n    \"bufferData\",\n    \"bufferDepth\",\n    \"bufferSize\",\n    \"bufferSubData\",\n    \"buffered\",\n    \"bufferedAmount\",\n    \"bufferedAmountLowThreshold\",\n    \"buildID\",\n    \"buildNumber\",\n    \"button\",\n    \"buttonID\",\n    \"buttons\",\n    \"byteLength\",\n    \"byteOffset\",\n    \"bytesWritten\",\n    \"c\",\n    \"cache\",\n    \"caches\",\n    \"call\",\n    \"caller\",\n    \"canBeFormatted\",\n    \"canBeMounted\",\n    \"canBeShared\",\n    \"canHaveChildren\",\n    \"canHaveHTML\",\n    \"canInsertDTMF\",\n    \"canMakePayment\",\n    \"canPlayType\",\n    \"canPresent\",\n    \"canTrickleIceCandidates\",\n    \"cancel\",\n    \"cancelAndHoldAtTime\",\n    \"cancelAnimationFrame\",\n    \"cancelBubble\",\n    \"cancelIdleCallback\",\n    \"cancelScheduledValues\",\n    \"cancelVideoFrameCallback\",\n    \"cancelWatchAvailability\",\n    \"cancelable\",\n    \"candidate\",\n    \"canonicalUUID\",\n    \"canvas\",\n    \"capabilities\",\n    \"caption\",\n    \"caption-side\",\n    \"captionSide\",\n    \"capture\",\n    \"captureEvents\",\n    \"captureStackTrace\",\n    \"captureStream\",\n    \"caret-color\",\n    \"caretBidiLevel\",\n    \"caretColor\",\n    \"caretPositionFromPoint\",\n    \"caretRangeFromPoint\",\n    \"cast\",\n    \"catch\",\n    \"category\",\n    \"cbrt\",\n    \"cd\",\n    \"ceil\",\n    \"cellIndex\",\n    \"cellPadding\",\n    \"cellSpacing\",\n    \"cells\",\n    \"ch\",\n    \"chOff\",\n    \"chain\",\n    \"challenge\",\n    \"changeType\",\n    \"changedTouches\",\n    \"channel\",\n    \"channelCount\",\n    \"channelCountMode\",\n    \"channelInterpretation\",\n    \"char\",\n    \"charAt\",\n    \"charCode\",\n    \"charCodeAt\",\n    \"charIndex\",\n    \"charLength\",\n    \"characterData\",\n    \"characterDataOldValue\",\n    \"characterSet\",\n    \"characteristic\",\n    \"charging\",\n    \"chargingTime\",\n    \"charset\",\n    \"check\",\n    \"checkEnclosure\",\n    \"checkFramebufferStatus\",\n    \"checkIntersection\",\n    \"checkValidity\",\n    \"checked\",\n    \"childElementCount\",\n    \"childList\",\n    \"childNodes\",\n    \"children\",\n    \"chrome\",\n    \"ciphertext\",\n    \"cite\",\n    \"city\",\n    \"claimInterface\",\n    \"claimed\",\n    \"classList\",\n    \"className\",\n    \"classid\",\n    \"clear\",\n    \"clearAppBadge\",\n    \"clearAttributes\",\n    \"clearBufferfi\",\n    \"clearBufferfv\",\n    \"clearBufferiv\",\n    \"clearBufferuiv\",\n    \"clearColor\",\n    \"clearData\",\n    \"clearDepth\",\n    \"clearHalt\",\n    \"clearImmediate\",\n    \"clearInterval\",\n    \"clearLiveSeekableRange\",\n    \"clearMarks\",\n    \"clearMaxGCPauseAccumulator\",\n    \"clearMeasures\",\n    \"clearParameters\",\n    \"clearRect\",\n    \"clearResourceTimings\",\n    \"clearShadow\",\n    \"clearStencil\",\n    \"clearTimeout\",\n    \"clearWatch\",\n    \"click\",\n    \"clickCount\",\n    \"clientDataJSON\",\n    \"clientHeight\",\n    \"clientInformation\",\n    \"clientLeft\",\n    \"clientRect\",\n    \"clientRects\",\n    \"clientTop\",\n    \"clientWaitSync\",\n    \"clientWidth\",\n    \"clientX\",\n    \"clientY\",\n    \"clip\",\n    \"clip-path\",\n    \"clip-rule\",\n    \"clipBottom\",\n    \"clipLeft\",\n    \"clipPath\",\n    \"clipPathUnits\",\n    \"clipRight\",\n    \"clipRule\",\n    \"clipTop\",\n    \"clipboard\",\n    \"clipboardData\",\n    \"clone\",\n    \"cloneContents\",\n    \"cloneNode\",\n    \"cloneRange\",\n    \"close\",\n    \"closePath\",\n    \"closed\",\n    \"closest\",\n    \"clz\",\n    \"clz32\",\n    \"cm\",\n    \"cmp\",\n    \"code\",\n    \"codeBase\",\n    \"codePointAt\",\n    \"codeType\",\n    \"colSpan\",\n    \"collapse\",\n    \"collapseToEnd\",\n    \"collapseToStart\",\n    \"collapsed\",\n    \"collect\",\n    \"colno\",\n    \"color\",\n    \"color-adjust\",\n    \"color-interpolation\",\n    \"color-interpolation-filters\",\n    \"colorAdjust\",\n    \"colorDepth\",\n    \"colorInterpolation\",\n    \"colorInterpolationFilters\",\n    \"colorMask\",\n    \"colorType\",\n    \"cols\",\n    \"column-count\",\n    \"column-fill\",\n    \"column-gap\",\n    \"column-rule\",\n    \"column-rule-color\",\n    \"column-rule-style\",\n    \"column-rule-width\",\n    \"column-span\",\n    \"column-width\",\n    \"columnCount\",\n    \"columnFill\",\n    \"columnGap\",\n    \"columnNumber\",\n    \"columnRule\",\n    \"columnRuleColor\",\n    \"columnRuleStyle\",\n    \"columnRuleWidth\",\n    \"columnSpan\",\n    \"columnWidth\",\n    \"columns\",\n    \"command\",\n    \"commit\",\n    \"commitPreferences\",\n    \"commitStyles\",\n    \"commonAncestorContainer\",\n    \"compact\",\n    \"compareBoundaryPoints\",\n    \"compareDocumentPosition\",\n    \"compareEndPoints\",\n    \"compareExchange\",\n    \"compareNode\",\n    \"comparePoint\",\n    \"compatMode\",\n    \"compatible\",\n    \"compile\",\n    \"compileShader\",\n    \"compileStreaming\",\n    \"complete\",\n    \"component\",\n    \"componentFromPoint\",\n    \"composed\",\n    \"composedPath\",\n    \"composite\",\n    \"compositionEndOffset\",\n    \"compositionStartOffset\",\n    \"compressedTexImage2D\",\n    \"compressedTexImage3D\",\n    \"compressedTexSubImage2D\",\n    \"compressedTexSubImage3D\",\n    \"computedStyleMap\",\n    \"concat\",\n    \"conditionText\",\n    \"coneInnerAngle\",\n    \"coneOuterAngle\",\n    \"coneOuterGain\",\n    \"configuration\",\n    \"configurationName\",\n    \"configurationValue\",\n    \"configurations\",\n    \"confirm\",\n    \"confirmComposition\",\n    \"confirmSiteSpecificTrackingException\",\n    \"confirmWebWideTrackingException\",\n    \"connect\",\n    \"connectEnd\",\n    \"connectShark\",\n    \"connectStart\",\n    \"connected\",\n    \"connection\",\n    \"connectionList\",\n    \"connectionSpeed\",\n    \"connectionState\",\n    \"connections\",\n    \"console\",\n    \"consolidate\",\n    \"constraint\",\n    \"constrictionActive\",\n    \"construct\",\n    \"constructor\",\n    \"contactID\",\n    \"contain\",\n    \"containerId\",\n    \"containerName\",\n    \"containerSrc\",\n    \"containerType\",\n    \"contains\",\n    \"containsNode\",\n    \"content\",\n    \"contentBoxSize\",\n    \"contentDocument\",\n    \"contentEditable\",\n    \"contentHint\",\n    \"contentOverflow\",\n    \"contentRect\",\n    \"contentScriptType\",\n    \"contentStyleType\",\n    \"contentType\",\n    \"contentWindow\",\n    \"context\",\n    \"contextMenu\",\n    \"contextmenu\",\n    \"continue\",\n    \"continuePrimaryKey\",\n    \"continuous\",\n    \"control\",\n    \"controlTransferIn\",\n    \"controlTransferOut\",\n    \"controller\",\n    \"controls\",\n    \"controlsList\",\n    \"convertPointFromNode\",\n    \"convertQuadFromNode\",\n    \"convertRectFromNode\",\n    \"convertToBlob\",\n    \"convertToSpecifiedUnits\",\n    \"cookie\",\n    \"cookieEnabled\",\n    \"coords\",\n    \"copyBufferSubData\",\n    \"copyFromChannel\",\n    \"copyTexImage2D\",\n    \"copyTexSubImage2D\",\n    \"copyTexSubImage3D\",\n    \"copyToChannel\",\n    \"copyWithin\",\n    \"correspondingElement\",\n    \"correspondingUseElement\",\n    \"corruptedVideoFrames\",\n    \"cos\",\n    \"cosh\",\n    \"count\",\n    \"countReset\",\n    \"counter-increment\",\n    \"counter-reset\",\n    \"counter-set\",\n    \"counterIncrement\",\n    \"counterReset\",\n    \"counterSet\",\n    \"country\",\n    \"cpuClass\",\n    \"cpuSleepAllowed\",\n    \"create\",\n    \"createAnalyser\",\n    \"createAnswer\",\n    \"createAttribute\",\n    \"createAttributeNS\",\n    \"createBiquadFilter\",\n    \"createBuffer\",\n    \"createBufferSource\",\n    \"createCDATASection\",\n    \"createCSSStyleSheet\",\n    \"createCaption\",\n    \"createChannelMerger\",\n    \"createChannelSplitter\",\n    \"createComment\",\n    \"createConstantSource\",\n    \"createContextualFragment\",\n    \"createControlRange\",\n    \"createConvolver\",\n    \"createDTMFSender\",\n    \"createDataChannel\",\n    \"createDelay\",\n    \"createDelayNode\",\n    \"createDocument\",\n    \"createDocumentFragment\",\n    \"createDocumentType\",\n    \"createDynamicsCompressor\",\n    \"createElement\",\n    \"createElementNS\",\n    \"createEntityReference\",\n    \"createEvent\",\n    \"createEventObject\",\n    \"createExpression\",\n    \"createFramebuffer\",\n    \"createFunction\",\n    \"createGain\",\n    \"createGainNode\",\n    \"createHTML\",\n    \"createHTMLDocument\",\n    \"createIIRFilter\",\n    \"createImageBitmap\",\n    \"createImageData\",\n    \"createIndex\",\n    \"createJavaScriptNode\",\n    \"createLinearGradient\",\n    \"createMediaElementSource\",\n    \"createMediaKeys\",\n    \"createMediaStreamDestination\",\n    \"createMediaStreamSource\",\n    \"createMediaStreamTrackSource\",\n    \"createMutableFile\",\n    \"createNSResolver\",\n    \"createNodeIterator\",\n    \"createNotification\",\n    \"createObjectStore\",\n    \"createObjectURL\",\n    \"createOffer\",\n    \"createOscillator\",\n    \"createPanner\",\n    \"createPattern\",\n    \"createPeriodicWave\",\n    \"createPolicy\",\n    \"createPopup\",\n    \"createProcessingInstruction\",\n    \"createProgram\",\n    \"createQuery\",\n    \"createRadialGradient\",\n    \"createRange\",\n    \"createRangeCollection\",\n    \"createReader\",\n    \"createRenderbuffer\",\n    \"createSVGAngle\",\n    \"createSVGLength\",\n    \"createSVGMatrix\",\n    \"createSVGNumber\",\n    \"createSVGPathSegArcAbs\",\n    \"createSVGPathSegArcRel\",\n    \"createSVGPathSegClosePath\",\n    \"createSVGPathSegCurvetoCubicAbs\",\n    \"createSVGPathSegCurvetoCubicRel\",\n    \"createSVGPathSegCurvetoCubicSmoothAbs\",\n    \"createSVGPathSegCurvetoCubicSmoothRel\",\n    \"createSVGPathSegCurvetoQuadraticAbs\",\n    \"createSVGPathSegCurvetoQuadraticRel\",\n    \"createSVGPathSegCurvetoQuadraticSmoothAbs\",\n    \"createSVGPathSegCurvetoQuadraticSmoothRel\",\n    \"createSVGPathSegLinetoAbs\",\n    \"createSVGPathSegLinetoHorizontalAbs\",\n    \"createSVGPathSegLinetoHorizontalRel\",\n    \"createSVGPathSegLinetoRel\",\n    \"createSVGPathSegLinetoVerticalAbs\",\n    \"createSVGPathSegLinetoVerticalRel\",\n    \"createSVGPathSegMovetoAbs\",\n    \"createSVGPathSegMovetoRel\",\n    \"createSVGPoint\",\n    \"createSVGRect\",\n    \"createSVGTransform\",\n    \"createSVGTransformFromMatrix\",\n    \"createSampler\",\n    \"createScript\",\n    \"createScriptProcessor\",\n    \"createScriptURL\",\n    \"createSession\",\n    \"createShader\",\n    \"createShadowRoot\",\n    \"createStereoPanner\",\n    \"createStyleSheet\",\n    \"createTBody\",\n    \"createTFoot\",\n    \"createTHead\",\n    \"createTextNode\",\n    \"createTextRange\",\n    \"createTexture\",\n    \"createTouch\",\n    \"createTouchList\",\n    \"createTransformFeedback\",\n    \"createTreeWalker\",\n    \"createVertexArray\",\n    \"createWaveShaper\",\n    \"creationTime\",\n    \"credentials\",\n    \"crossOrigin\",\n    \"crossOriginIsolated\",\n    \"crypto\",\n    \"csi\",\n    \"csp\",\n    \"cssFloat\",\n    \"cssRules\",\n    \"cssText\",\n    \"cssValueType\",\n    \"ctrlKey\",\n    \"ctrlLeft\",\n    \"cues\",\n    \"cullFace\",\n    \"currentDirection\",\n    \"currentLocalDescription\",\n    \"currentNode\",\n    \"currentPage\",\n    \"currentRect\",\n    \"currentRemoteDescription\",\n    \"currentScale\",\n    \"currentScript\",\n    \"currentSrc\",\n    \"currentState\",\n    \"currentStyle\",\n    \"currentTarget\",\n    \"currentTime\",\n    \"currentTranslate\",\n    \"currentView\",\n    \"cursor\",\n    \"curve\",\n    \"customElements\",\n    \"customError\",\n    \"cx\",\n    \"cy\",\n    \"d\",\n    \"data\",\n    \"dataFld\",\n    \"dataFormatAs\",\n    \"dataLoss\",\n    \"dataLossMessage\",\n    \"dataPageSize\",\n    \"dataSrc\",\n    \"dataTransfer\",\n    \"database\",\n    \"databases\",\n    \"dataset\",\n    \"dateTime\",\n    \"db\",\n    \"debug\",\n    \"debuggerEnabled\",\n    \"declare\",\n    \"decode\",\n    \"decodeAudioData\",\n    \"decodeURI\",\n    \"decodeURIComponent\",\n    \"decodedBodySize\",\n    \"decoding\",\n    \"decodingInfo\",\n    \"decrypt\",\n    \"default\",\n    \"defaultCharset\",\n    \"defaultChecked\",\n    \"defaultMuted\",\n    \"defaultPlaybackRate\",\n    \"defaultPolicy\",\n    \"defaultPrevented\",\n    \"defaultRequest\",\n    \"defaultSelected\",\n    \"defaultStatus\",\n    \"defaultURL\",\n    \"defaultValue\",\n    \"defaultView\",\n    \"defaultstatus\",\n    \"defer\",\n    \"define\",\n    \"defineMagicFunction\",\n    \"defineMagicVariable\",\n    \"defineProperties\",\n    \"defineProperty\",\n    \"deg\",\n    \"delay\",\n    \"delayTime\",\n    \"delegatesFocus\",\n    \"delete\",\n    \"deleteBuffer\",\n    \"deleteCaption\",\n    \"deleteCell\",\n    \"deleteContents\",\n    \"deleteData\",\n    \"deleteDatabase\",\n    \"deleteFramebuffer\",\n    \"deleteFromDocument\",\n    \"deleteIndex\",\n    \"deleteMedium\",\n    \"deleteObjectStore\",\n    \"deleteProgram\",\n    \"deleteProperty\",\n    \"deleteQuery\",\n    \"deleteRenderbuffer\",\n    \"deleteRow\",\n    \"deleteRule\",\n    \"deleteSampler\",\n    \"deleteShader\",\n    \"deleteSync\",\n    \"deleteTFoot\",\n    \"deleteTHead\",\n    \"deleteTexture\",\n    \"deleteTransformFeedback\",\n    \"deleteVertexArray\",\n    \"deliverChangeRecords\",\n    \"delivery\",\n    \"deliveryInfo\",\n    \"deliveryStatus\",\n    \"deliveryTimestamp\",\n    \"delta\",\n    \"deltaMode\",\n    \"deltaX\",\n    \"deltaY\",\n    \"deltaZ\",\n    \"dependentLocality\",\n    \"depthFar\",\n    \"depthFunc\",\n    \"depthMask\",\n    \"depthNear\",\n    \"depthRange\",\n    \"deref\",\n    \"deriveBits\",\n    \"deriveKey\",\n    \"description\",\n    \"deselectAll\",\n    \"designMode\",\n    \"desiredSize\",\n    \"destination\",\n    \"destinationURL\",\n    \"detach\",\n    \"detachEvent\",\n    \"detachShader\",\n    \"detail\",\n    \"details\",\n    \"detect\",\n    \"detune\",\n    \"device\",\n    \"deviceClass\",\n    \"deviceId\",\n    \"deviceMemory\",\n    \"devicePixelContentBoxSize\",\n    \"devicePixelRatio\",\n    \"deviceProtocol\",\n    \"deviceSubclass\",\n    \"deviceVersionMajor\",\n    \"deviceVersionMinor\",\n    \"deviceVersionSubminor\",\n    \"deviceXDPI\",\n    \"deviceYDPI\",\n    \"didTimeout\",\n    \"diffuseConstant\",\n    \"digest\",\n    \"dimensions\",\n    \"dir\",\n    \"dirName\",\n    \"direction\",\n    \"dirxml\",\n    \"disable\",\n    \"disablePictureInPicture\",\n    \"disableRemotePlayback\",\n    \"disableVertexAttribArray\",\n    \"disabled\",\n    \"dischargingTime\",\n    \"disconnect\",\n    \"disconnectShark\",\n    \"dispatchEvent\",\n    \"display\",\n    \"displayId\",\n    \"displayName\",\n    \"disposition\",\n    \"distanceModel\",\n    \"div\",\n    \"divisor\",\n    \"djsapi\",\n    \"djsproxy\",\n    \"doImport\",\n    \"doNotTrack\",\n    \"doScroll\",\n    \"doctype\",\n    \"document\",\n    \"documentElement\",\n    \"documentMode\",\n    \"documentURI\",\n    \"dolphin\",\n    \"dolphinGameCenter\",\n    \"dolphininfo\",\n    \"dolphinmeta\",\n    \"domComplete\",\n    \"domContentLoadedEventEnd\",\n    \"domContentLoadedEventStart\",\n    \"domInteractive\",\n    \"domLoading\",\n    \"domOverlayState\",\n    \"domain\",\n    \"domainLookupEnd\",\n    \"domainLookupStart\",\n    \"dominant-baseline\",\n    \"dominantBaseline\",\n    \"done\",\n    \"dopplerFactor\",\n    \"dotAll\",\n    \"downDegrees\",\n    \"downlink\",\n    \"download\",\n    \"downloadTotal\",\n    \"downloaded\",\n    \"dpcm\",\n    \"dpi\",\n    \"dppx\",\n    \"dragDrop\",\n    \"draggable\",\n    \"drawArrays\",\n    \"drawArraysInstanced\",\n    \"drawArraysInstancedANGLE\",\n    \"drawBuffers\",\n    \"drawCustomFocusRing\",\n    \"drawElements\",\n    \"drawElementsInstanced\",\n    \"drawElementsInstancedANGLE\",\n    \"drawFocusIfNeeded\",\n    \"drawImage\",\n    \"drawImageFromRect\",\n    \"drawRangeElements\",\n    \"drawSystemFocusRing\",\n    \"drawingBufferHeight\",\n    \"drawingBufferWidth\",\n    \"dropEffect\",\n    \"droppedVideoFrames\",\n    \"dropzone\",\n    \"dtmf\",\n    \"dump\",\n    \"dumpProfile\",\n    \"duplicate\",\n    \"durability\",\n    \"duration\",\n    \"dvname\",\n    \"dvnum\",\n    \"dx\",\n    \"dy\",\n    \"dynsrc\",\n    \"e\",\n    \"edgeMode\",\n    \"effect\",\n    \"effectAllowed\",\n    \"effectiveDirective\",\n    \"effectiveType\",\n    \"elapsedTime\",\n    \"element\",\n    \"elementFromPoint\",\n    \"elementTiming\",\n    \"elements\",\n    \"elementsFromPoint\",\n    \"elevation\",\n    \"ellipse\",\n    \"em\",\n    \"email\",\n    \"embeds\",\n    \"emma\",\n    \"empty\",\n    \"empty-cells\",\n    \"emptyCells\",\n    \"emptyHTML\",\n    \"emptyScript\",\n    \"emulatedPosition\",\n    \"enable\",\n    \"enableBackground\",\n    \"enableDelegations\",\n    \"enableStyleSheetsForSet\",\n    \"enableVertexAttribArray\",\n    \"enabled\",\n    \"enabledPlugin\",\n    \"encode\",\n    \"encodeInto\",\n    \"encodeURI\",\n    \"encodeURIComponent\",\n    \"encodedBodySize\",\n    \"encoding\",\n    \"encodingInfo\",\n    \"encrypt\",\n    \"enctype\",\n    \"end\",\n    \"endContainer\",\n    \"endElement\",\n    \"endElementAt\",\n    \"endOfStream\",\n    \"endOffset\",\n    \"endQuery\",\n    \"endTime\",\n    \"endTransformFeedback\",\n    \"ended\",\n    \"endpoint\",\n    \"endpointNumber\",\n    \"endpoints\",\n    \"endsWith\",\n    \"enterKeyHint\",\n    \"entities\",\n    \"entries\",\n    \"entryType\",\n    \"enumerate\",\n    \"enumerateDevices\",\n    \"enumerateEditable\",\n    \"environmentBlendMode\",\n    \"equals\",\n    \"error\",\n    \"errorCode\",\n    \"errorDetail\",\n    \"errorText\",\n    \"escape\",\n    \"estimate\",\n    \"eval\",\n    \"evaluate\",\n    \"event\",\n    \"eventPhase\",\n    \"every\",\n    \"ex\",\n    \"exception\",\n    \"exchange\",\n    \"exec\",\n    \"execCommand\",\n    \"execCommandShowHelp\",\n    \"execScript\",\n    \"exitFullscreen\",\n    \"exitPictureInPicture\",\n    \"exitPointerLock\",\n    \"exitPresent\",\n    \"exp\",\n    \"expand\",\n    \"expandEntityReferences\",\n    \"expando\",\n    \"expansion\",\n    \"expiration\",\n    \"expirationTime\",\n    \"expires\",\n    \"expiryDate\",\n    \"explicitOriginalTarget\",\n    \"expm1\",\n    \"exponent\",\n    \"exponentialRampToValueAtTime\",\n    \"exportKey\",\n    \"exports\",\n    \"extend\",\n    \"extensions\",\n    \"extentNode\",\n    \"extentOffset\",\n    \"external\",\n    \"externalResourcesRequired\",\n    \"extractContents\",\n    \"extractable\",\n    \"eye\",\n    \"f\",\n    \"face\",\n    \"factoryReset\",\n    \"failureReason\",\n    \"fallback\",\n    \"family\",\n    \"familyName\",\n    \"farthestViewportElement\",\n    \"fastSeek\",\n    \"fatal\",\n    \"featureId\",\n    \"featurePolicy\",\n    \"featureSettings\",\n    \"features\",\n    \"fenceSync\",\n    \"fetch\",\n    \"fetchStart\",\n    \"fftSize\",\n    \"fgColor\",\n    \"fieldOfView\",\n    \"file\",\n    \"fileCreatedDate\",\n    \"fileHandle\",\n    \"fileModifiedDate\",\n    \"fileName\",\n    \"fileSize\",\n    \"fileUpdatedDate\",\n    \"filename\",\n    \"files\",\n    \"filesystem\",\n    \"fill\",\n    \"fill-opacity\",\n    \"fill-rule\",\n    \"fillLightMode\",\n    \"fillOpacity\",\n    \"fillRect\",\n    \"fillRule\",\n    \"fillStyle\",\n    \"fillText\",\n    \"filter\",\n    \"filterResX\",\n    \"filterResY\",\n    \"filterUnits\",\n    \"filters\",\n    \"finally\",\n    \"find\",\n    \"findIndex\",\n    \"findRule\",\n    \"findText\",\n    \"finish\",\n    \"finished\",\n    \"fireEvent\",\n    \"firesTouchEvents\",\n    \"firstChild\",\n    \"firstElementChild\",\n    \"firstPage\",\n    \"fixed\",\n    \"flags\",\n    \"flat\",\n    \"flatMap\",\n    \"flex\",\n    \"flex-basis\",\n    \"flex-direction\",\n    \"flex-flow\",\n    \"flex-grow\",\n    \"flex-shrink\",\n    \"flex-wrap\",\n    \"flexBasis\",\n    \"flexDirection\",\n    \"flexFlow\",\n    \"flexGrow\",\n    \"flexShrink\",\n    \"flexWrap\",\n    \"flipX\",\n    \"flipY\",\n    \"float\",\n    \"float32\",\n    \"float64\",\n    \"flood-color\",\n    \"flood-opacity\",\n    \"floodColor\",\n    \"floodOpacity\",\n    \"floor\",\n    \"flush\",\n    \"focus\",\n    \"focusNode\",\n    \"focusOffset\",\n    \"font\",\n    \"font-family\",\n    \"font-feature-settings\",\n    \"font-kerning\",\n    \"font-language-override\",\n    \"font-optical-sizing\",\n    \"font-size\",\n    \"font-size-adjust\",\n    \"font-stretch\",\n    \"font-style\",\n    \"font-synthesis\",\n    \"font-variant\",\n    \"font-variant-alternates\",\n    \"font-variant-caps\",\n    \"font-variant-east-asian\",\n    \"font-variant-ligatures\",\n    \"font-variant-numeric\",\n    \"font-variant-position\",\n    \"font-variation-settings\",\n    \"font-weight\",\n    \"fontFamily\",\n    \"fontFeatureSettings\",\n    \"fontKerning\",\n    \"fontLanguageOverride\",\n    \"fontOpticalSizing\",\n    \"fontSize\",\n    \"fontSizeAdjust\",\n    \"fontSmoothingEnabled\",\n    \"fontStretch\",\n    \"fontStyle\",\n    \"fontSynthesis\",\n    \"fontVariant\",\n    \"fontVariantAlternates\",\n    \"fontVariantCaps\",\n    \"fontVariantEastAsian\",\n    \"fontVariantLigatures\",\n    \"fontVariantNumeric\",\n    \"fontVariantPosition\",\n    \"fontVariationSettings\",\n    \"fontWeight\",\n    \"fontcolor\",\n    \"fontfaces\",\n    \"fonts\",\n    \"fontsize\",\n    \"for\",\n    \"forEach\",\n    \"force\",\n    \"forceRedraw\",\n    \"form\",\n    \"formAction\",\n    \"formData\",\n    \"formEnctype\",\n    \"formMethod\",\n    \"formNoValidate\",\n    \"formTarget\",\n    \"format\",\n    \"formatToParts\",\n    \"forms\",\n    \"forward\",\n    \"forwardX\",\n    \"forwardY\",\n    \"forwardZ\",\n    \"foundation\",\n    \"fr\",\n    \"fragmentDirective\",\n    \"frame\",\n    \"frameBorder\",\n    \"frameElement\",\n    \"frameSpacing\",\n    \"framebuffer\",\n    \"framebufferHeight\",\n    \"framebufferRenderbuffer\",\n    \"framebufferTexture2D\",\n    \"framebufferTextureLayer\",\n    \"framebufferWidth\",\n    \"frames\",\n    \"freeSpace\",\n    \"freeze\",\n    \"frequency\",\n    \"frequencyBinCount\",\n    \"from\",\n    \"fromCharCode\",\n    \"fromCodePoint\",\n    \"fromElement\",\n    \"fromEntries\",\n    \"fromFloat32Array\",\n    \"fromFloat64Array\",\n    \"fromMatrix\",\n    \"fromPoint\",\n    \"fromQuad\",\n    \"fromRect\",\n    \"frontFace\",\n    \"fround\",\n    \"fullPath\",\n    \"fullScreen\",\n    \"fullscreen\",\n    \"fullscreenElement\",\n    \"fullscreenEnabled\",\n    \"fx\",\n    \"fy\",\n    \"gain\",\n    \"gamepad\",\n    \"gamma\",\n    \"gap\",\n    \"gatheringState\",\n    \"gatt\",\n    \"genderIdentity\",\n    \"generateCertificate\",\n    \"generateKey\",\n    \"generateMipmap\",\n    \"generateRequest\",\n    \"geolocation\",\n    \"gestureObject\",\n    \"get\",\n    \"getActiveAttrib\",\n    \"getActiveUniform\",\n    \"getActiveUniformBlockName\",\n    \"getActiveUniformBlockParameter\",\n    \"getActiveUniforms\",\n    \"getAdjacentText\",\n    \"getAll\",\n    \"getAllKeys\",\n    \"getAllResponseHeaders\",\n    \"getAllowlistForFeature\",\n    \"getAnimations\",\n    \"getAsFile\",\n    \"getAsString\",\n    \"getAttachedShaders\",\n    \"getAttribLocation\",\n    \"getAttribute\",\n    \"getAttributeNS\",\n    \"getAttributeNames\",\n    \"getAttributeNode\",\n    \"getAttributeNodeNS\",\n    \"getAttributeType\",\n    \"getAudioTracks\",\n    \"getAvailability\",\n    \"getBBox\",\n    \"getBattery\",\n    \"getBigInt64\",\n    \"getBigUint64\",\n    \"getBlob\",\n    \"getBookmark\",\n    \"getBoundingClientRect\",\n    \"getBounds\",\n    \"getBoxQuads\",\n    \"getBufferParameter\",\n    \"getBufferSubData\",\n    \"getByteFrequencyData\",\n    \"getByteTimeDomainData\",\n    \"getCSSCanvasContext\",\n    \"getCTM\",\n    \"getCandidateWindowClientRect\",\n    \"getCanonicalLocales\",\n    \"getCapabilities\",\n    \"getChannelData\",\n    \"getCharNumAtPosition\",\n    \"getCharacteristic\",\n    \"getCharacteristics\",\n    \"getClientExtensionResults\",\n    \"getClientRect\",\n    \"getClientRects\",\n    \"getCoalescedEvents\",\n    \"getCompositionAlternatives\",\n    \"getComputedStyle\",\n    \"getComputedTextLength\",\n    \"getComputedTiming\",\n    \"getConfiguration\",\n    \"getConstraints\",\n    \"getContext\",\n    \"getContextAttributes\",\n    \"getContributingSources\",\n    \"getCounterValue\",\n    \"getCueAsHTML\",\n    \"getCueById\",\n    \"getCurrentPosition\",\n    \"getCurrentTime\",\n    \"getData\",\n    \"getDatabaseNames\",\n    \"getDate\",\n    \"getDay\",\n    \"getDefaultComputedStyle\",\n    \"getDescriptor\",\n    \"getDescriptors\",\n    \"getDestinationInsertionPoints\",\n    \"getDevices\",\n    \"getDirectory\",\n    \"getDisplayMedia\",\n    \"getDistributedNodes\",\n    \"getEditable\",\n    \"getElementById\",\n    \"getElementsByClassName\",\n    \"getElementsByName\",\n    \"getElementsByTagName\",\n    \"getElementsByTagNameNS\",\n    \"getEnclosureList\",\n    \"getEndPositionOfChar\",\n    \"getEntries\",\n    \"getEntriesByName\",\n    \"getEntriesByType\",\n    \"getError\",\n    \"getExtension\",\n    \"getExtentOfChar\",\n    \"getEyeParameters\",\n    \"getFeature\",\n    \"getFile\",\n    \"getFiles\",\n    \"getFilesAndDirectories\",\n    \"getFingerprints\",\n    \"getFloat32\",\n    \"getFloat64\",\n    \"getFloatFrequencyData\",\n    \"getFloatTimeDomainData\",\n    \"getFloatValue\",\n    \"getFragDataLocation\",\n    \"getFrameData\",\n    \"getFramebufferAttachmentParameter\",\n    \"getFrequencyResponse\",\n    \"getFullYear\",\n    \"getGamepads\",\n    \"getHitTestResults\",\n    \"getHitTestResultsForTransientInput\",\n    \"getHours\",\n    \"getIdentityAssertion\",\n    \"getIds\",\n    \"getImageData\",\n    \"getIndexedParameter\",\n    \"getInstalledRelatedApps\",\n    \"getInt16\",\n    \"getInt32\",\n    \"getInt8\",\n    \"getInternalformatParameter\",\n    \"getIntersectionList\",\n    \"getItem\",\n    \"getItems\",\n    \"getKey\",\n    \"getKeyframes\",\n    \"getLayers\",\n    \"getLayoutMap\",\n    \"getLineDash\",\n    \"getLocalCandidates\",\n    \"getLocalParameters\",\n    \"getLocalStreams\",\n    \"getMarks\",\n    \"getMatchedCSSRules\",\n    \"getMaxGCPauseSinceClear\",\n    \"getMeasures\",\n    \"getMetadata\",\n    \"getMilliseconds\",\n    \"getMinutes\",\n    \"getModifierState\",\n    \"getMonth\",\n    \"getNamedItem\",\n    \"getNamedItemNS\",\n    \"getNativeFramebufferScaleFactor\",\n    \"getNotifications\",\n    \"getNotifier\",\n    \"getNumberOfChars\",\n    \"getOffsetReferenceSpace\",\n    \"getOutputTimestamp\",\n    \"getOverrideHistoryNavigationMode\",\n    \"getOverrideStyle\",\n    \"getOwnPropertyDescriptor\",\n    \"getOwnPropertyDescriptors\",\n    \"getOwnPropertyNames\",\n    \"getOwnPropertySymbols\",\n    \"getParameter\",\n    \"getParameters\",\n    \"getParent\",\n    \"getPathSegAtLength\",\n    \"getPhotoCapabilities\",\n    \"getPhotoSettings\",\n    \"getPointAtLength\",\n    \"getPose\",\n    \"getPredictedEvents\",\n    \"getPreference\",\n    \"getPreferenceDefault\",\n    \"getPresentationAttribute\",\n    \"getPreventDefault\",\n    \"getPrimaryService\",\n    \"getPrimaryServices\",\n    \"getProgramInfoLog\",\n    \"getProgramParameter\",\n    \"getPropertyCSSValue\",\n    \"getPropertyPriority\",\n    \"getPropertyShorthand\",\n    \"getPropertyType\",\n    \"getPropertyValue\",\n    \"getPrototypeOf\",\n    \"getQuery\",\n    \"getQueryParameter\",\n    \"getRGBColorValue\",\n    \"getRandomValues\",\n    \"getRangeAt\",\n    \"getReader\",\n    \"getReceivers\",\n    \"getRectValue\",\n    \"getRegistration\",\n    \"getRegistrations\",\n    \"getRemoteCandidates\",\n    \"getRemoteCertificates\",\n    \"getRemoteParameters\",\n    \"getRemoteStreams\",\n    \"getRenderbufferParameter\",\n    \"getResponseHeader\",\n    \"getRoot\",\n    \"getRootNode\",\n    \"getRotationOfChar\",\n    \"getSVGDocument\",\n    \"getSamplerParameter\",\n    \"getScreenCTM\",\n    \"getSeconds\",\n    \"getSelectedCandidatePair\",\n    \"getSelection\",\n    \"getSenders\",\n    \"getService\",\n    \"getSettings\",\n    \"getShaderInfoLog\",\n    \"getShaderParameter\",\n    \"getShaderPrecisionFormat\",\n    \"getShaderSource\",\n    \"getSimpleDuration\",\n    \"getSiteIcons\",\n    \"getSources\",\n    \"getSpeculativeParserUrls\",\n    \"getStartPositionOfChar\",\n    \"getStartTime\",\n    \"getState\",\n    \"getStats\",\n    \"getStatusForPolicy\",\n    \"getStorageUpdates\",\n    \"getStreamById\",\n    \"getStringValue\",\n    \"getSubStringLength\",\n    \"getSubscription\",\n    \"getSupportedConstraints\",\n    \"getSupportedExtensions\",\n    \"getSupportedFormats\",\n    \"getSyncParameter\",\n    \"getSynchronizationSources\",\n    \"getTags\",\n    \"getTargetRanges\",\n    \"getTexParameter\",\n    \"getTime\",\n    \"getTimezoneOffset\",\n    \"getTiming\",\n    \"getTotalLength\",\n    \"getTrackById\",\n    \"getTracks\",\n    \"getTransceivers\",\n    \"getTransform\",\n    \"getTransformFeedbackVarying\",\n    \"getTransformToElement\",\n    \"getTransports\",\n    \"getType\",\n    \"getTypeMapping\",\n    \"getUTCDate\",\n    \"getUTCDay\",\n    \"getUTCFullYear\",\n    \"getUTCHours\",\n    \"getUTCMilliseconds\",\n    \"getUTCMinutes\",\n    \"getUTCMonth\",\n    \"getUTCSeconds\",\n    \"getUint16\",\n    \"getUint32\",\n    \"getUint8\",\n    \"getUniform\",\n    \"getUniformBlockIndex\",\n    \"getUniformIndices\",\n    \"getUniformLocation\",\n    \"getUserMedia\",\n    \"getVRDisplays\",\n    \"getValues\",\n    \"getVarDate\",\n    \"getVariableValue\",\n    \"getVertexAttrib\",\n    \"getVertexAttribOffset\",\n    \"getVideoPlaybackQuality\",\n    \"getVideoTracks\",\n    \"getViewerPose\",\n    \"getViewport\",\n    \"getVoices\",\n    \"getWakeLockState\",\n    \"getWriter\",\n    \"getYear\",\n    \"givenName\",\n    \"global\",\n    \"globalAlpha\",\n    \"globalCompositeOperation\",\n    \"globalThis\",\n    \"glyphOrientationHorizontal\",\n    \"glyphOrientationVertical\",\n    \"glyphRef\",\n    \"go\",\n    \"grabFrame\",\n    \"grad\",\n    \"gradientTransform\",\n    \"gradientUnits\",\n    \"grammars\",\n    \"green\",\n    \"grid\",\n    \"grid-area\",\n    \"grid-auto-columns\",\n    \"grid-auto-flow\",\n    \"grid-auto-rows\",\n    \"grid-column\",\n    \"grid-column-end\",\n    \"grid-column-gap\",\n    \"grid-column-start\",\n    \"grid-gap\",\n    \"grid-row\",\n    \"grid-row-end\",\n    \"grid-row-gap\",\n    \"grid-row-start\",\n    \"grid-template\",\n    \"grid-template-areas\",\n    \"grid-template-columns\",\n    \"grid-template-rows\",\n    \"gridArea\",\n    \"gridAutoColumns\",\n    \"gridAutoFlow\",\n    \"gridAutoRows\",\n    \"gridColumn\",\n    \"gridColumnEnd\",\n    \"gridColumnGap\",\n    \"gridColumnStart\",\n    \"gridGap\",\n    \"gridRow\",\n    \"gridRowEnd\",\n    \"gridRowGap\",\n    \"gridRowStart\",\n    \"gridTemplate\",\n    \"gridTemplateAreas\",\n    \"gridTemplateColumns\",\n    \"gridTemplateRows\",\n    \"gripSpace\",\n    \"group\",\n    \"groupCollapsed\",\n    \"groupEnd\",\n    \"groupId\",\n    \"hadRecentInput\",\n    \"hand\",\n    \"handedness\",\n    \"hapticActuators\",\n    \"hardwareConcurrency\",\n    \"has\",\n    \"hasAttribute\",\n    \"hasAttributeNS\",\n    \"hasAttributes\",\n    \"hasBeenActive\",\n    \"hasChildNodes\",\n    \"hasComposition\",\n    \"hasEnrolledInstrument\",\n    \"hasExtension\",\n    \"hasExternalDisplay\",\n    \"hasFeature\",\n    \"hasFocus\",\n    \"hasInstance\",\n    \"hasLayout\",\n    \"hasOrientation\",\n    \"hasOwnProperty\",\n    \"hasPointerCapture\",\n    \"hasPosition\",\n    \"hasReading\",\n    \"hasStorageAccess\",\n    \"hash\",\n    \"head\",\n    \"headers\",\n    \"heading\",\n    \"height\",\n    \"hidden\",\n    \"hide\",\n    \"hideFocus\",\n    \"high\",\n    \"highWaterMark\",\n    \"hint\",\n    \"history\",\n    \"honorificPrefix\",\n    \"honorificSuffix\",\n    \"horizontalOverflow\",\n    \"host\",\n    \"hostCandidate\",\n    \"hostname\",\n    \"href\",\n    \"hrefTranslate\",\n    \"hreflang\",\n    \"hspace\",\n    \"html5TagCheckInerface\",\n    \"htmlFor\",\n    \"htmlText\",\n    \"httpEquiv\",\n    \"httpRequestStatusCode\",\n    \"hwTimestamp\",\n    \"hyphens\",\n    \"hypot\",\n    \"iccId\",\n    \"iceConnectionState\",\n    \"iceGatheringState\",\n    \"iceTransport\",\n    \"icon\",\n    \"iconURL\",\n    \"id\",\n    \"identifier\",\n    \"identity\",\n    \"idpLoginUrl\",\n    \"ignoreBOM\",\n    \"ignoreCase\",\n    \"ignoreDepthValues\",\n    \"image-orientation\",\n    \"image-rendering\",\n    \"imageHeight\",\n    \"imageOrientation\",\n    \"imageRendering\",\n    \"imageSizes\",\n    \"imageSmoothingEnabled\",\n    \"imageSmoothingQuality\",\n    \"imageSrcset\",\n    \"imageWidth\",\n    \"images\",\n    \"ime-mode\",\n    \"imeMode\",\n    \"implementation\",\n    \"importKey\",\n    \"importNode\",\n    \"importStylesheet\",\n    \"imports\",\n    \"impp\",\n    \"imul\",\n    \"in\",\n    \"in1\",\n    \"in2\",\n    \"inBandMetadataTrackDispatchType\",\n    \"inRange\",\n    \"includes\",\n    \"incremental\",\n    \"indeterminate\",\n    \"index\",\n    \"indexNames\",\n    \"indexOf\",\n    \"indexedDB\",\n    \"indicate\",\n    \"inertiaDestinationX\",\n    \"inertiaDestinationY\",\n    \"info\",\n    \"init\",\n    \"initAnimationEvent\",\n    \"initBeforeLoadEvent\",\n    \"initClipboardEvent\",\n    \"initCloseEvent\",\n    \"initCommandEvent\",\n    \"initCompositionEvent\",\n    \"initCustomEvent\",\n    \"initData\",\n    \"initDataType\",\n    \"initDeviceMotionEvent\",\n    \"initDeviceOrientationEvent\",\n    \"initDragEvent\",\n    \"initErrorEvent\",\n    \"initEvent\",\n    \"initFocusEvent\",\n    \"initGestureEvent\",\n    \"initHashChangeEvent\",\n    \"initKeyEvent\",\n    \"initKeyboardEvent\",\n    \"initMSManipulationEvent\",\n    \"initMessageEvent\",\n    \"initMouseEvent\",\n    \"initMouseScrollEvent\",\n    \"initMouseWheelEvent\",\n    \"initMutationEvent\",\n    \"initNSMouseEvent\",\n    \"initOverflowEvent\",\n    \"initPageEvent\",\n    \"initPageTransitionEvent\",\n    \"initPointerEvent\",\n    \"initPopStateEvent\",\n    \"initProgressEvent\",\n    \"initScrollAreaEvent\",\n    \"initSimpleGestureEvent\",\n    \"initStorageEvent\",\n    \"initTextEvent\",\n    \"initTimeEvent\",\n    \"initTouchEvent\",\n    \"initTransitionEvent\",\n    \"initUIEvent\",\n    \"initWebKitAnimationEvent\",\n    \"initWebKitTransitionEvent\",\n    \"initWebKitWheelEvent\",\n    \"initWheelEvent\",\n    \"initialTime\",\n    \"initialize\",\n    \"initiatorType\",\n    \"inline-size\",\n    \"inlineSize\",\n    \"inlineVerticalFieldOfView\",\n    \"inner\",\n    \"innerHTML\",\n    \"innerHeight\",\n    \"innerText\",\n    \"innerWidth\",\n    \"input\",\n    \"inputBuffer\",\n    \"inputEncoding\",\n    \"inputMethod\",\n    \"inputMode\",\n    \"inputSource\",\n    \"inputSources\",\n    \"inputType\",\n    \"inputs\",\n    \"insertAdjacentElement\",\n    \"insertAdjacentHTML\",\n    \"insertAdjacentText\",\n    \"insertBefore\",\n    \"insertCell\",\n    \"insertDTMF\",\n    \"insertData\",\n    \"insertItemBefore\",\n    \"insertNode\",\n    \"insertRow\",\n    \"insertRule\",\n    \"inset\",\n    \"inset-block\",\n    \"inset-block-end\",\n    \"inset-block-start\",\n    \"inset-inline\",\n    \"inset-inline-end\",\n    \"inset-inline-start\",\n    \"insetBlock\",\n    \"insetBlockEnd\",\n    \"insetBlockStart\",\n    \"insetInline\",\n    \"insetInlineEnd\",\n    \"insetInlineStart\",\n    \"installing\",\n    \"instanceRoot\",\n    \"instantiate\",\n    \"instantiateStreaming\",\n    \"instruments\",\n    \"int16\",\n    \"int32\",\n    \"int8\",\n    \"integrity\",\n    \"interactionMode\",\n    \"intercept\",\n    \"interfaceClass\",\n    \"interfaceName\",\n    \"interfaceNumber\",\n    \"interfaceProtocol\",\n    \"interfaceSubclass\",\n    \"interfaces\",\n    \"interimResults\",\n    \"internalSubset\",\n    \"interpretation\",\n    \"intersectionRatio\",\n    \"intersectionRect\",\n    \"intersectsNode\",\n    \"interval\",\n    \"invalidIteratorState\",\n    \"invalidateFramebuffer\",\n    \"invalidateSubFramebuffer\",\n    \"inverse\",\n    \"invertSelf\",\n    \"is\",\n    \"is2D\",\n    \"isActive\",\n    \"isAlternate\",\n    \"isArray\",\n    \"isBingCurrentSearchDefault\",\n    \"isBuffer\",\n    \"isCandidateWindowVisible\",\n    \"isChar\",\n    \"isCollapsed\",\n    \"isComposing\",\n    \"isConcatSpreadable\",\n    \"isConnected\",\n    \"isContentEditable\",\n    \"isContentHandlerRegistered\",\n    \"isContextLost\",\n    \"isDefaultNamespace\",\n    \"isDirectory\",\n    \"isDisabled\",\n    \"isEnabled\",\n    \"isEqual\",\n    \"isEqualNode\",\n    \"isExtensible\",\n    \"isExternalCTAP2SecurityKeySupported\",\n    \"isFile\",\n    \"isFinite\",\n    \"isFramebuffer\",\n    \"isFrozen\",\n    \"isGenerator\",\n    \"isHTML\",\n    \"isHistoryNavigation\",\n    \"isId\",\n    \"isIdentity\",\n    \"isInjected\",\n    \"isInteger\",\n    \"isIntersecting\",\n    \"isLockFree\",\n    \"isMap\",\n    \"isMultiLine\",\n    \"isNaN\",\n    \"isOpen\",\n    \"isPointInFill\",\n    \"isPointInPath\",\n    \"isPointInRange\",\n    \"isPointInStroke\",\n    \"isPrefAlternate\",\n    \"isPresenting\",\n    \"isPrimary\",\n    \"isProgram\",\n    \"isPropertyImplicit\",\n    \"isProtocolHandlerRegistered\",\n    \"isPrototypeOf\",\n    \"isQuery\",\n    \"isRenderbuffer\",\n    \"isSafeInteger\",\n    \"isSameNode\",\n    \"isSampler\",\n    \"isScript\",\n    \"isScriptURL\",\n    \"isSealed\",\n    \"isSecureContext\",\n    \"isSessionSupported\",\n    \"isShader\",\n    \"isSupported\",\n    \"isSync\",\n    \"isTextEdit\",\n    \"isTexture\",\n    \"isTransformFeedback\",\n    \"isTrusted\",\n    \"isTypeSupported\",\n    \"isUserVerifyingPlatformAuthenticatorAvailable\",\n    \"isVertexArray\",\n    \"isView\",\n    \"isVisible\",\n    \"isochronousTransferIn\",\n    \"isochronousTransferOut\",\n    \"isolation\",\n    \"italics\",\n    \"item\",\n    \"itemId\",\n    \"itemProp\",\n    \"itemRef\",\n    \"itemScope\",\n    \"itemType\",\n    \"itemValue\",\n    \"items\",\n    \"iterateNext\",\n    \"iterationComposite\",\n    \"iterator\",\n    \"javaEnabled\",\n    \"jobTitle\",\n    \"join\",\n    \"json\",\n    \"justify-content\",\n    \"justify-items\",\n    \"justify-self\",\n    \"justifyContent\",\n    \"justifyItems\",\n    \"justifySelf\",\n    \"k1\",\n    \"k2\",\n    \"k3\",\n    \"k4\",\n    \"kHz\",\n    \"keepalive\",\n    \"kernelMatrix\",\n    \"kernelUnitLengthX\",\n    \"kernelUnitLengthY\",\n    \"kerning\",\n    \"key\",\n    \"keyCode\",\n    \"keyFor\",\n    \"keyIdentifier\",\n    \"keyLightEnabled\",\n    \"keyLocation\",\n    \"keyPath\",\n    \"keyStatuses\",\n    \"keySystem\",\n    \"keyText\",\n    \"keyUsage\",\n    \"keyboard\",\n    \"keys\",\n    \"keytype\",\n    \"kind\",\n    \"knee\",\n    \"label\",\n    \"labels\",\n    \"lang\",\n    \"language\",\n    \"languages\",\n    \"largeArcFlag\",\n    \"lastChild\",\n    \"lastElementChild\",\n    \"lastEventId\",\n    \"lastIndex\",\n    \"lastIndexOf\",\n    \"lastInputTime\",\n    \"lastMatch\",\n    \"lastMessageSubject\",\n    \"lastMessageType\",\n    \"lastModified\",\n    \"lastModifiedDate\",\n    \"lastPage\",\n    \"lastParen\",\n    \"lastState\",\n    \"lastStyleSheetSet\",\n    \"latitude\",\n    \"layerX\",\n    \"layerY\",\n    \"layoutFlow\",\n    \"layoutGrid\",\n    \"layoutGridChar\",\n    \"layoutGridLine\",\n    \"layoutGridMode\",\n    \"layoutGridType\",\n    \"lbound\",\n    \"left\",\n    \"leftContext\",\n    \"leftDegrees\",\n    \"leftMargin\",\n    \"leftProjectionMatrix\",\n    \"leftViewMatrix\",\n    \"length\",\n    \"lengthAdjust\",\n    \"lengthComputable\",\n    \"letter-spacing\",\n    \"letterSpacing\",\n    \"level\",\n    \"lighting-color\",\n    \"lightingColor\",\n    \"limitingConeAngle\",\n    \"line\",\n    \"line-break\",\n    \"line-height\",\n    \"lineAlign\",\n    \"lineBreak\",\n    \"lineCap\",\n    \"lineDashOffset\",\n    \"lineHeight\",\n    \"lineJoin\",\n    \"lineNumber\",\n    \"lineTo\",\n    \"lineWidth\",\n    \"linearAcceleration\",\n    \"linearRampToValueAtTime\",\n    \"linearVelocity\",\n    \"lineno\",\n    \"lines\",\n    \"link\",\n    \"linkColor\",\n    \"linkProgram\",\n    \"links\",\n    \"list\",\n    \"list-style\",\n    \"list-style-image\",\n    \"list-style-position\",\n    \"list-style-type\",\n    \"listStyle\",\n    \"listStyleImage\",\n    \"listStylePosition\",\n    \"listStyleType\",\n    \"listener\",\n    \"load\",\n    \"loadEventEnd\",\n    \"loadEventStart\",\n    \"loadTime\",\n    \"loadTimes\",\n    \"loaded\",\n    \"loading\",\n    \"localDescription\",\n    \"localName\",\n    \"localService\",\n    \"localStorage\",\n    \"locale\",\n    \"localeCompare\",\n    \"location\",\n    \"locationbar\",\n    \"lock\",\n    \"locked\",\n    \"lockedFile\",\n    \"locks\",\n    \"log\",\n    \"log10\",\n    \"log1p\",\n    \"log2\",\n    \"logicalXDPI\",\n    \"logicalYDPI\",\n    \"longDesc\",\n    \"longitude\",\n    \"lookupNamespaceURI\",\n    \"lookupPrefix\",\n    \"loop\",\n    \"loopEnd\",\n    \"loopStart\",\n    \"looping\",\n    \"low\",\n    \"lower\",\n    \"lowerBound\",\n    \"lowerOpen\",\n    \"lowsrc\",\n    \"m11\",\n    \"m12\",\n    \"m13\",\n    \"m14\",\n    \"m21\",\n    \"m22\",\n    \"m23\",\n    \"m24\",\n    \"m31\",\n    \"m32\",\n    \"m33\",\n    \"m34\",\n    \"m41\",\n    \"m42\",\n    \"m43\",\n    \"m44\",\n    \"makeXRCompatible\",\n    \"manifest\",\n    \"manufacturer\",\n    \"manufacturerName\",\n    \"map\",\n    \"mapping\",\n    \"margin\",\n    \"margin-block\",\n    \"margin-block-end\",\n    \"margin-block-start\",\n    \"margin-bottom\",\n    \"margin-inline\",\n    \"margin-inline-end\",\n    \"margin-inline-start\",\n    \"margin-left\",\n    \"margin-right\",\n    \"margin-top\",\n    \"marginBlock\",\n    \"marginBlockEnd\",\n    \"marginBlockStart\",\n    \"marginBottom\",\n    \"marginHeight\",\n    \"marginInline\",\n    \"marginInlineEnd\",\n    \"marginInlineStart\",\n    \"marginLeft\",\n    \"marginRight\",\n    \"marginTop\",\n    \"marginWidth\",\n    \"mark\",\n    \"marker\",\n    \"marker-end\",\n    \"marker-mid\",\n    \"marker-offset\",\n    \"marker-start\",\n    \"markerEnd\",\n    \"markerHeight\",\n    \"markerMid\",\n    \"markerOffset\",\n    \"markerStart\",\n    \"markerUnits\",\n    \"markerWidth\",\n    \"marks\",\n    \"mask\",\n    \"mask-clip\",\n    \"mask-composite\",\n    \"mask-image\",\n    \"mask-mode\",\n    \"mask-origin\",\n    \"mask-position\",\n    \"mask-position-x\",\n    \"mask-position-y\",\n    \"mask-repeat\",\n    \"mask-size\",\n    \"mask-type\",\n    \"maskClip\",\n    \"maskComposite\",\n    \"maskContentUnits\",\n    \"maskImage\",\n    \"maskMode\",\n    \"maskOrigin\",\n    \"maskPosition\",\n    \"maskPositionX\",\n    \"maskPositionY\",\n    \"maskRepeat\",\n    \"maskSize\",\n    \"maskType\",\n    \"maskUnits\",\n    \"match\",\n    \"matchAll\",\n    \"matchMedia\",\n    \"matchMedium\",\n    \"matches\",\n    \"matrix\",\n    \"matrixTransform\",\n    \"max\",\n    \"max-block-size\",\n    \"max-height\",\n    \"max-inline-size\",\n    \"max-width\",\n    \"maxActions\",\n    \"maxAlternatives\",\n    \"maxBlockSize\",\n    \"maxChannelCount\",\n    \"maxChannels\",\n    \"maxConnectionsPerServer\",\n    \"maxDecibels\",\n    \"maxDistance\",\n    \"maxHeight\",\n    \"maxInlineSize\",\n    \"maxLayers\",\n    \"maxLength\",\n    \"maxMessageSize\",\n    \"maxPacketLifeTime\",\n    \"maxRetransmits\",\n    \"maxTouchPoints\",\n    \"maxValue\",\n    \"maxWidth\",\n    \"measure\",\n    \"measureText\",\n    \"media\",\n    \"mediaCapabilities\",\n    \"mediaDevices\",\n    \"mediaElement\",\n    \"mediaGroup\",\n    \"mediaKeys\",\n    \"mediaSession\",\n    \"mediaStream\",\n    \"mediaText\",\n    \"meetOrSlice\",\n    \"memory\",\n    \"menubar\",\n    \"mergeAttributes\",\n    \"message\",\n    \"messageClass\",\n    \"messageHandlers\",\n    \"messageType\",\n    \"metaKey\",\n    \"metadata\",\n    \"method\",\n    \"methodDetails\",\n    \"methodName\",\n    \"mid\",\n    \"mimeType\",\n    \"mimeTypes\",\n    \"min\",\n    \"min-block-size\",\n    \"min-height\",\n    \"min-inline-size\",\n    \"min-width\",\n    \"minBlockSize\",\n    \"minDecibels\",\n    \"minHeight\",\n    \"minInlineSize\",\n    \"minLength\",\n    \"minValue\",\n    \"minWidth\",\n    \"miterLimit\",\n    \"mix-blend-mode\",\n    \"mixBlendMode\",\n    \"mm\",\n    \"mode\",\n    \"modify\",\n    \"mount\",\n    \"move\",\n    \"moveBy\",\n    \"moveEnd\",\n    \"moveFirst\",\n    \"moveFocusDown\",\n    \"moveFocusLeft\",\n    \"moveFocusRight\",\n    \"moveFocusUp\",\n    \"moveNext\",\n    \"moveRow\",\n    \"moveStart\",\n    \"moveTo\",\n    \"moveToBookmark\",\n    \"moveToElementText\",\n    \"moveToPoint\",\n    \"movementX\",\n    \"movementY\",\n    \"mozAdd\",\n    \"mozAnimationStartTime\",\n    \"mozAnon\",\n    \"mozApps\",\n    \"mozAudioCaptured\",\n    \"mozAudioChannelType\",\n    \"mozAutoplayEnabled\",\n    \"mozCancelAnimationFrame\",\n    \"mozCancelFullScreen\",\n    \"mozCancelRequestAnimationFrame\",\n    \"mozCaptureStream\",\n    \"mozCaptureStreamUntilEnded\",\n    \"mozClearDataAt\",\n    \"mozContact\",\n    \"mozContacts\",\n    \"mozCreateFileHandle\",\n    \"mozCurrentTransform\",\n    \"mozCurrentTransformInverse\",\n    \"mozCursor\",\n    \"mozDash\",\n    \"mozDashOffset\",\n    \"mozDecodedFrames\",\n    \"mozExitPointerLock\",\n    \"mozFillRule\",\n    \"mozFragmentEnd\",\n    \"mozFrameDelay\",\n    \"mozFullScreen\",\n    \"mozFullScreenElement\",\n    \"mozFullScreenEnabled\",\n    \"mozGetAll\",\n    \"mozGetAllKeys\",\n    \"mozGetAsFile\",\n    \"mozGetDataAt\",\n    \"mozGetMetadata\",\n    \"mozGetUserMedia\",\n    \"mozHasAudio\",\n    \"mozHasItem\",\n    \"mozHidden\",\n    \"mozImageSmoothingEnabled\",\n    \"mozIndexedDB\",\n    \"mozInnerScreenX\",\n    \"mozInnerScreenY\",\n    \"mozInputSource\",\n    \"mozIsTextField\",\n    \"mozItem\",\n    \"mozItemCount\",\n    \"mozItems\",\n    \"mozLength\",\n    \"mozLockOrientation\",\n    \"mozMatchesSelector\",\n    \"mozMovementX\",\n    \"mozMovementY\",\n    \"mozOpaque\",\n    \"mozOrientation\",\n    \"mozPaintCount\",\n    \"mozPaintedFrames\",\n    \"mozParsedFrames\",\n    \"mozPay\",\n    \"mozPointerLockElement\",\n    \"mozPresentedFrames\",\n    \"mozPreservesPitch\",\n    \"mozPressure\",\n    \"mozPrintCallback\",\n    \"mozRTCIceCandidate\",\n    \"mozRTCPeerConnection\",\n    \"mozRTCSessionDescription\",\n    \"mozRemove\",\n    \"mozRequestAnimationFrame\",\n    \"mozRequestFullScreen\",\n    \"mozRequestPointerLock\",\n    \"mozSetDataAt\",\n    \"mozSetImageElement\",\n    \"mozSourceNode\",\n    \"mozSrcObject\",\n    \"mozSystem\",\n    \"mozTCPSocket\",\n    \"mozTextStyle\",\n    \"mozTypesAt\",\n    \"mozUnlockOrientation\",\n    \"mozUserCancelled\",\n    \"mozVisibilityState\",\n    \"ms\",\n    \"msAnimation\",\n    \"msAnimationDelay\",\n    \"msAnimationDirection\",\n    \"msAnimationDuration\",\n    \"msAnimationFillMode\",\n    \"msAnimationIterationCount\",\n    \"msAnimationName\",\n    \"msAnimationPlayState\",\n    \"msAnimationStartTime\",\n    \"msAnimationTimingFunction\",\n    \"msBackfaceVisibility\",\n    \"msBlockProgression\",\n    \"msCSSOMElementFloatMetrics\",\n    \"msCaching\",\n    \"msCachingEnabled\",\n    \"msCancelRequestAnimationFrame\",\n    \"msCapsLockWarningOff\",\n    \"msClearImmediate\",\n    \"msClose\",\n    \"msContentZoomChaining\",\n    \"msContentZoomFactor\",\n    \"msContentZoomLimit\",\n    \"msContentZoomLimitMax\",\n    \"msContentZoomLimitMin\",\n    \"msContentZoomSnap\",\n    \"msContentZoomSnapPoints\",\n    \"msContentZoomSnapType\",\n    \"msContentZooming\",\n    \"msConvertURL\",\n    \"msCrypto\",\n    \"msDoNotTrack\",\n    \"msElementsFromPoint\",\n    \"msElementsFromRect\",\n    \"msExitFullscreen\",\n    \"msExtendedCode\",\n    \"msFillRule\",\n    \"msFirstPaint\",\n    \"msFlex\",\n    \"msFlexAlign\",\n    \"msFlexDirection\",\n    \"msFlexFlow\",\n    \"msFlexItemAlign\",\n    \"msFlexLinePack\",\n    \"msFlexNegative\",\n    \"msFlexOrder\",\n    \"msFlexPack\",\n    \"msFlexPositive\",\n    \"msFlexPreferredSize\",\n    \"msFlexWrap\",\n    \"msFlowFrom\",\n    \"msFlowInto\",\n    \"msFontFeatureSettings\",\n    \"msFullscreenElement\",\n    \"msFullscreenEnabled\",\n    \"msGetInputContext\",\n    \"msGetRegionContent\",\n    \"msGetUntransformedBounds\",\n    \"msGraphicsTrustStatus\",\n    \"msGridColumn\",\n    \"msGridColumnAlign\",\n    \"msGridColumnSpan\",\n    \"msGridColumns\",\n    \"msGridRow\",\n    \"msGridRowAlign\",\n    \"msGridRowSpan\",\n    \"msGridRows\",\n    \"msHidden\",\n    \"msHighContrastAdjust\",\n    \"msHyphenateLimitChars\",\n    \"msHyphenateLimitLines\",\n    \"msHyphenateLimitZone\",\n    \"msHyphens\",\n    \"msImageSmoothingEnabled\",\n    \"msImeAlign\",\n    \"msIndexedDB\",\n    \"msInterpolationMode\",\n    \"msIsStaticHTML\",\n    \"msKeySystem\",\n    \"msKeys\",\n    \"msLaunchUri\",\n    \"msLockOrientation\",\n    \"msManipulationViewsEnabled\",\n    \"msMatchMedia\",\n    \"msMatchesSelector\",\n    \"msMaxTouchPoints\",\n    \"msOrientation\",\n    \"msOverflowStyle\",\n    \"msPerspective\",\n    \"msPerspectiveOrigin\",\n    \"msPlayToDisabled\",\n    \"msPlayToPreferredSourceUri\",\n    \"msPlayToPrimary\",\n    \"msPointerEnabled\",\n    \"msRegionOverflow\",\n    \"msReleasePointerCapture\",\n    \"msRequestAnimationFrame\",\n    \"msRequestFullscreen\",\n    \"msSaveBlob\",\n    \"msSaveOrOpenBlob\",\n    \"msScrollChaining\",\n    \"msScrollLimit\",\n    \"msScrollLimitXMax\",\n    \"msScrollLimitXMin\",\n    \"msScrollLimitYMax\",\n    \"msScrollLimitYMin\",\n    \"msScrollRails\",\n    \"msScrollSnapPointsX\",\n    \"msScrollSnapPointsY\",\n    \"msScrollSnapType\",\n    \"msScrollSnapX\",\n    \"msScrollSnapY\",\n    \"msScrollTranslation\",\n    \"msSetImmediate\",\n    \"msSetMediaKeys\",\n    \"msSetPointerCapture\",\n    \"msTextCombineHorizontal\",\n    \"msTextSizeAdjust\",\n    \"msToBlob\",\n    \"msTouchAction\",\n    \"msTouchSelect\",\n    \"msTraceAsyncCallbackCompleted\",\n    \"msTraceAsyncCallbackStarting\",\n    \"msTraceAsyncOperationCompleted\",\n    \"msTraceAsyncOperationStarting\",\n    \"msTransform\",\n    \"msTransformOrigin\",\n    \"msTransformStyle\",\n    \"msTransition\",\n    \"msTransitionDelay\",\n    \"msTransitionDuration\",\n    \"msTransitionProperty\",\n    \"msTransitionTimingFunction\",\n    \"msUnlockOrientation\",\n    \"msUpdateAsyncCallbackRelation\",\n    \"msUserSelect\",\n    \"msVisibilityState\",\n    \"msWrapFlow\",\n    \"msWrapMargin\",\n    \"msWrapThrough\",\n    \"msWriteProfilerMark\",\n    \"msZoom\",\n    \"msZoomTo\",\n    \"mt\",\n    \"mul\",\n    \"multiEntry\",\n    \"multiSelectionObj\",\n    \"multiline\",\n    \"multiple\",\n    \"multiply\",\n    \"multiplySelf\",\n    \"mutableFile\",\n    \"muted\",\n    \"n\",\n    \"name\",\n    \"nameProp\",\n    \"namedItem\",\n    \"namedRecordset\",\n    \"names\",\n    \"namespaceURI\",\n    \"namespaces\",\n    \"naturalHeight\",\n    \"naturalWidth\",\n    \"navigate\",\n    \"navigation\",\n    \"navigationMode\",\n    \"navigationPreload\",\n    \"navigationStart\",\n    \"navigator\",\n    \"near\",\n    \"nearestViewportElement\",\n    \"negative\",\n    \"negotiated\",\n    \"netscape\",\n    \"networkState\",\n    \"newScale\",\n    \"newTranslate\",\n    \"newURL\",\n    \"newValue\",\n    \"newValueSpecifiedUnits\",\n    \"newVersion\",\n    \"newhome\",\n    \"next\",\n    \"nextElementSibling\",\n    \"nextHopProtocol\",\n    \"nextNode\",\n    \"nextPage\",\n    \"nextSibling\",\n    \"nickname\",\n    \"noHref\",\n    \"noModule\",\n    \"noResize\",\n    \"noShade\",\n    \"noValidate\",\n    \"noWrap\",\n    \"node\",\n    \"nodeName\",\n    \"nodeType\",\n    \"nodeValue\",\n    \"nonce\",\n    \"normalize\",\n    \"normalizedPathSegList\",\n    \"notationName\",\n    \"notations\",\n    \"note\",\n    \"noteGrainOn\",\n    \"noteOff\",\n    \"noteOn\",\n    \"notify\",\n    \"now\",\n    \"numOctaves\",\n    \"number\",\n    \"numberOfChannels\",\n    \"numberOfInputs\",\n    \"numberOfItems\",\n    \"numberOfOutputs\",\n    \"numberValue\",\n    \"oMatchesSelector\",\n    \"object\",\n    \"object-fit\",\n    \"object-position\",\n    \"objectFit\",\n    \"objectPosition\",\n    \"objectStore\",\n    \"objectStoreNames\",\n    \"objectType\",\n    \"observe\",\n    \"of\",\n    \"offscreenBuffering\",\n    \"offset\",\n    \"offset-anchor\",\n    \"offset-distance\",\n    \"offset-path\",\n    \"offset-rotate\",\n    \"offsetAnchor\",\n    \"offsetDistance\",\n    \"offsetHeight\",\n    \"offsetLeft\",\n    \"offsetNode\",\n    \"offsetParent\",\n    \"offsetPath\",\n    \"offsetRotate\",\n    \"offsetTop\",\n    \"offsetWidth\",\n    \"offsetX\",\n    \"offsetY\",\n    \"ok\",\n    \"oldURL\",\n    \"oldValue\",\n    \"oldVersion\",\n    \"olderShadowRoot\",\n    \"onLine\",\n    \"onabort\",\n    \"onabsolutedeviceorientation\",\n    \"onactivate\",\n    \"onactive\",\n    \"onaddsourcebuffer\",\n    \"onaddstream\",\n    \"onaddtrack\",\n    \"onafterprint\",\n    \"onafterscriptexecute\",\n    \"onafterupdate\",\n    \"onanimationcancel\",\n    \"onanimationend\",\n    \"onanimationiteration\",\n    \"onanimationstart\",\n    \"onappinstalled\",\n    \"onaudioend\",\n    \"onaudioprocess\",\n    \"onaudiostart\",\n    \"onautocomplete\",\n    \"onautocompleteerror\",\n    \"onauxclick\",\n    \"onbeforeactivate\",\n    \"onbeforecopy\",\n    \"onbeforecut\",\n    \"onbeforedeactivate\",\n    \"onbeforeeditfocus\",\n    \"onbeforeinstallprompt\",\n    \"onbeforepaste\",\n    \"onbeforeprint\",\n    \"onbeforescriptexecute\",\n    \"onbeforeunload\",\n    \"onbeforeupdate\",\n    \"onbeforexrselect\",\n    \"onbegin\",\n    \"onblocked\",\n    \"onblur\",\n    \"onbounce\",\n    \"onboundary\",\n    \"onbufferedamountlow\",\n    \"oncached\",\n    \"oncancel\",\n    \"oncandidatewindowhide\",\n    \"oncandidatewindowshow\",\n    \"oncandidatewindowupdate\",\n    \"oncanplay\",\n    \"oncanplaythrough\",\n    \"once\",\n    \"oncellchange\",\n    \"onchange\",\n    \"oncharacteristicvaluechanged\",\n    \"onchargingchange\",\n    \"onchargingtimechange\",\n    \"onchecking\",\n    \"onclick\",\n    \"onclose\",\n    \"onclosing\",\n    \"oncompassneedscalibration\",\n    \"oncomplete\",\n    \"onconnect\",\n    \"onconnecting\",\n    \"onconnectionavailable\",\n    \"onconnectionstatechange\",\n    \"oncontextmenu\",\n    \"oncontrollerchange\",\n    \"oncontrolselect\",\n    \"oncopy\",\n    \"oncuechange\",\n    \"oncut\",\n    \"ondataavailable\",\n    \"ondatachannel\",\n    \"ondatasetchanged\",\n    \"ondatasetcomplete\",\n    \"ondblclick\",\n    \"ondeactivate\",\n    \"ondevicechange\",\n    \"ondevicelight\",\n    \"ondevicemotion\",\n    \"ondeviceorientation\",\n    \"ondeviceorientationabsolute\",\n    \"ondeviceproximity\",\n    \"ondischargingtimechange\",\n    \"ondisconnect\",\n    \"ondisplay\",\n    \"ondownloading\",\n    \"ondrag\",\n    \"ondragend\",\n    \"ondragenter\",\n    \"ondragexit\",\n    \"ondragleave\",\n    \"ondragover\",\n    \"ondragstart\",\n    \"ondrop\",\n    \"ondurationchange\",\n    \"onemptied\",\n    \"onencrypted\",\n    \"onend\",\n    \"onended\",\n    \"onenter\",\n    \"onenterpictureinpicture\",\n    \"onerror\",\n    \"onerrorupdate\",\n    \"onexit\",\n    \"onfilterchange\",\n    \"onfinish\",\n    \"onfocus\",\n    \"onfocusin\",\n    \"onfocusout\",\n    \"onformdata\",\n    \"onfreeze\",\n    \"onfullscreenchange\",\n    \"onfullscreenerror\",\n    \"ongatheringstatechange\",\n    \"ongattserverdisconnected\",\n    \"ongesturechange\",\n    \"ongestureend\",\n    \"ongesturestart\",\n    \"ongotpointercapture\",\n    \"onhashchange\",\n    \"onhelp\",\n    \"onicecandidate\",\n    \"onicecandidateerror\",\n    \"oniceconnectionstatechange\",\n    \"onicegatheringstatechange\",\n    \"oninactive\",\n    \"oninput\",\n    \"oninputsourceschange\",\n    \"oninvalid\",\n    \"onkeydown\",\n    \"onkeypress\",\n    \"onkeystatuseschange\",\n    \"onkeyup\",\n    \"onlanguagechange\",\n    \"onlayoutcomplete\",\n    \"onleavepictureinpicture\",\n    \"onlevelchange\",\n    \"onload\",\n    \"onloadeddata\",\n    \"onloadedmetadata\",\n    \"onloadend\",\n    \"onloading\",\n    \"onloadingdone\",\n    \"onloadingerror\",\n    \"onloadstart\",\n    \"onlosecapture\",\n    \"onlostpointercapture\",\n    \"only\",\n    \"onmark\",\n    \"onmessage\",\n    \"onmessageerror\",\n    \"onmidimessage\",\n    \"onmousedown\",\n    \"onmouseenter\",\n    \"onmouseleave\",\n    \"onmousemove\",\n    \"onmouseout\",\n    \"onmouseover\",\n    \"onmouseup\",\n    \"onmousewheel\",\n    \"onmove\",\n    \"onmoveend\",\n    \"onmovestart\",\n    \"onmozfullscreenchange\",\n    \"onmozfullscreenerror\",\n    \"onmozorientationchange\",\n    \"onmozpointerlockchange\",\n    \"onmozpointerlockerror\",\n    \"onmscontentzoom\",\n    \"onmsfullscreenchange\",\n    \"onmsfullscreenerror\",\n    \"onmsgesturechange\",\n    \"onmsgesturedoubletap\",\n    \"onmsgestureend\",\n    \"onmsgesturehold\",\n    \"onmsgesturestart\",\n    \"onmsgesturetap\",\n    \"onmsgotpointercapture\",\n    \"onmsinertiastart\",\n    \"onmslostpointercapture\",\n    \"onmsmanipulationstatechanged\",\n    \"onmsneedkey\",\n    \"onmsorientationchange\",\n    \"onmspointercancel\",\n    \"onmspointerdown\",\n    \"onmspointerenter\",\n    \"onmspointerhover\",\n    \"onmspointerleave\",\n    \"onmspointermove\",\n    \"onmspointerout\",\n    \"onmspointerover\",\n    \"onmspointerup\",\n    \"onmssitemodejumplistitemremoved\",\n    \"onmsthumbnailclick\",\n    \"onmute\",\n    \"onnegotiationneeded\",\n    \"onnomatch\",\n    \"onnoupdate\",\n    \"onobsolete\",\n    \"onoffline\",\n    \"ononline\",\n    \"onopen\",\n    \"onorientationchange\",\n    \"onpagechange\",\n    \"onpagehide\",\n    \"onpageshow\",\n    \"onpaste\",\n    \"onpause\",\n    \"onpayerdetailchange\",\n    \"onpaymentmethodchange\",\n    \"onplay\",\n    \"onplaying\",\n    \"onpluginstreamstart\",\n    \"onpointercancel\",\n    \"onpointerdown\",\n    \"onpointerenter\",\n    \"onpointerleave\",\n    \"onpointerlockchange\",\n    \"onpointerlockerror\",\n    \"onpointermove\",\n    \"onpointerout\",\n    \"onpointerover\",\n    \"onpointerrawupdate\",\n    \"onpointerup\",\n    \"onpopstate\",\n    \"onprocessorerror\",\n    \"onprogress\",\n    \"onpropertychange\",\n    \"onratechange\",\n    \"onreading\",\n    \"onreadystatechange\",\n    \"onrejectionhandled\",\n    \"onrelease\",\n    \"onremove\",\n    \"onremovesourcebuffer\",\n    \"onremovestream\",\n    \"onremovetrack\",\n    \"onrepeat\",\n    \"onreset\",\n    \"onresize\",\n    \"onresizeend\",\n    \"onresizestart\",\n    \"onresourcetimingbufferfull\",\n    \"onresult\",\n    \"onresume\",\n    \"onrowenter\",\n    \"onrowexit\",\n    \"onrowsdelete\",\n    \"onrowsinserted\",\n    \"onscroll\",\n    \"onsearch\",\n    \"onsecuritypolicyviolation\",\n    \"onseeked\",\n    \"onseeking\",\n    \"onselect\",\n    \"onselectedcandidatepairchange\",\n    \"onselectend\",\n    \"onselectionchange\",\n    \"onselectstart\",\n    \"onshippingaddresschange\",\n    \"onshippingoptionchange\",\n    \"onshow\",\n    \"onsignalingstatechange\",\n    \"onsoundend\",\n    \"onsoundstart\",\n    \"onsourceclose\",\n    \"onsourceclosed\",\n    \"onsourceended\",\n    \"onsourceopen\",\n    \"onspeechend\",\n    \"onspeechstart\",\n    \"onsqueeze\",\n    \"onsqueezeend\",\n    \"onsqueezestart\",\n    \"onstalled\",\n    \"onstart\",\n    \"onstatechange\",\n    \"onstop\",\n    \"onstorage\",\n    \"onstoragecommit\",\n    \"onsubmit\",\n    \"onsuccess\",\n    \"onsuspend\",\n    \"onterminate\",\n    \"ontextinput\",\n    \"ontimeout\",\n    \"ontimeupdate\",\n    \"ontoggle\",\n    \"ontonechange\",\n    \"ontouchcancel\",\n    \"ontouchend\",\n    \"ontouchmove\",\n    \"ontouchstart\",\n    \"ontrack\",\n    \"ontransitioncancel\",\n    \"ontransitionend\",\n    \"ontransitionrun\",\n    \"ontransitionstart\",\n    \"onunhandledrejection\",\n    \"onunload\",\n    \"onunmute\",\n    \"onupdate\",\n    \"onupdateend\",\n    \"onupdatefound\",\n    \"onupdateready\",\n    \"onupdatestart\",\n    \"onupgradeneeded\",\n    \"onuserproximity\",\n    \"onversionchange\",\n    \"onvisibilitychange\",\n    \"onvoiceschanged\",\n    \"onvolumechange\",\n    \"onvrdisplayactivate\",\n    \"onvrdisplayconnect\",\n    \"onvrdisplaydeactivate\",\n    \"onvrdisplaydisconnect\",\n    \"onvrdisplaypresentchange\",\n    \"onwaiting\",\n    \"onwaitingforkey\",\n    \"onwarning\",\n    \"onwebkitanimationend\",\n    \"onwebkitanimationiteration\",\n    \"onwebkitanimationstart\",\n    \"onwebkitcurrentplaybacktargetiswirelesschanged\",\n    \"onwebkitfullscreenchange\",\n    \"onwebkitfullscreenerror\",\n    \"onwebkitkeyadded\",\n    \"onwebkitkeyerror\",\n    \"onwebkitkeymessage\",\n    \"onwebkitneedkey\",\n    \"onwebkitorientationchange\",\n    \"onwebkitplaybacktargetavailabilitychanged\",\n    \"onwebkitpointerlockchange\",\n    \"onwebkitpointerlockerror\",\n    \"onwebkitresourcetimingbufferfull\",\n    \"onwebkittransitionend\",\n    \"onwheel\",\n    \"onzoom\",\n    \"opacity\",\n    \"open\",\n    \"openCursor\",\n    \"openDatabase\",\n    \"openKeyCursor\",\n    \"opened\",\n    \"opener\",\n    \"opera\",\n    \"operationType\",\n    \"operator\",\n    \"opr\",\n    \"optimum\",\n    \"options\",\n    \"or\",\n    \"order\",\n    \"orderX\",\n    \"orderY\",\n    \"ordered\",\n    \"org\",\n    \"organization\",\n    \"orient\",\n    \"orientAngle\",\n    \"orientType\",\n    \"orientation\",\n    \"orientationX\",\n    \"orientationY\",\n    \"orientationZ\",\n    \"origin\",\n    \"originalPolicy\",\n    \"originalTarget\",\n    \"orphans\",\n    \"oscpu\",\n    \"outerHTML\",\n    \"outerHeight\",\n    \"outerText\",\n    \"outerWidth\",\n    \"outline\",\n    \"outline-color\",\n    \"outline-offset\",\n    \"outline-style\",\n    \"outline-width\",\n    \"outlineColor\",\n    \"outlineOffset\",\n    \"outlineStyle\",\n    \"outlineWidth\",\n    \"outputBuffer\",\n    \"outputLatency\",\n    \"outputs\",\n    \"overflow\",\n    \"overflow-anchor\",\n    \"overflow-block\",\n    \"overflow-inline\",\n    \"overflow-wrap\",\n    \"overflow-x\",\n    \"overflow-y\",\n    \"overflowAnchor\",\n    \"overflowBlock\",\n    \"overflowInline\",\n    \"overflowWrap\",\n    \"overflowX\",\n    \"overflowY\",\n    \"overrideMimeType\",\n    \"oversample\",\n    \"overscroll-behavior\",\n    \"overscroll-behavior-block\",\n    \"overscroll-behavior-inline\",\n    \"overscroll-behavior-x\",\n    \"overscroll-behavior-y\",\n    \"overscrollBehavior\",\n    \"overscrollBehaviorBlock\",\n    \"overscrollBehaviorInline\",\n    \"overscrollBehaviorX\",\n    \"overscrollBehaviorY\",\n    \"ownKeys\",\n    \"ownerDocument\",\n    \"ownerElement\",\n    \"ownerNode\",\n    \"ownerRule\",\n    \"ownerSVGElement\",\n    \"owningElement\",\n    \"p1\",\n    \"p2\",\n    \"p3\",\n    \"p4\",\n    \"packetSize\",\n    \"packets\",\n    \"pad\",\n    \"padEnd\",\n    \"padStart\",\n    \"padding\",\n    \"padding-block\",\n    \"padding-block-end\",\n    \"padding-block-start\",\n    \"padding-bottom\",\n    \"padding-inline\",\n    \"padding-inline-end\",\n    \"padding-inline-start\",\n    \"padding-left\",\n    \"padding-right\",\n    \"padding-top\",\n    \"paddingBlock\",\n    \"paddingBlockEnd\",\n    \"paddingBlockStart\",\n    \"paddingBottom\",\n    \"paddingInline\",\n    \"paddingInlineEnd\",\n    \"paddingInlineStart\",\n    \"paddingLeft\",\n    \"paddingRight\",\n    \"paddingTop\",\n    \"page\",\n    \"page-break-after\",\n    \"page-break-before\",\n    \"page-break-inside\",\n    \"pageBreakAfter\",\n    \"pageBreakBefore\",\n    \"pageBreakInside\",\n    \"pageCount\",\n    \"pageLeft\",\n    \"pageTop\",\n    \"pageX\",\n    \"pageXOffset\",\n    \"pageY\",\n    \"pageYOffset\",\n    \"pages\",\n    \"paint-order\",\n    \"paintOrder\",\n    \"paintRequests\",\n    \"paintType\",\n    \"paintWorklet\",\n    \"palette\",\n    \"pan\",\n    \"panningModel\",\n    \"parameters\",\n    \"parent\",\n    \"parentElement\",\n    \"parentNode\",\n    \"parentRule\",\n    \"parentStyleSheet\",\n    \"parentTextEdit\",\n    \"parentWindow\",\n    \"parse\",\n    \"parseAll\",\n    \"parseFloat\",\n    \"parseFromString\",\n    \"parseInt\",\n    \"part\",\n    \"participants\",\n    \"passive\",\n    \"password\",\n    \"pasteHTML\",\n    \"path\",\n    \"pathLength\",\n    \"pathSegList\",\n    \"pathSegType\",\n    \"pathSegTypeAsLetter\",\n    \"pathname\",\n    \"pattern\",\n    \"patternContentUnits\",\n    \"patternMismatch\",\n    \"patternTransform\",\n    \"patternUnits\",\n    \"pause\",\n    \"pauseAnimations\",\n    \"pauseOnExit\",\n    \"pauseProfilers\",\n    \"pauseTransformFeedback\",\n    \"paused\",\n    \"payerEmail\",\n    \"payerName\",\n    \"payerPhone\",\n    \"paymentManager\",\n    \"pc\",\n    \"peerIdentity\",\n    \"pending\",\n    \"pendingLocalDescription\",\n    \"pendingRemoteDescription\",\n    \"percent\",\n    \"performance\",\n    \"periodicSync\",\n    \"permission\",\n    \"permissionState\",\n    \"permissions\",\n    \"persist\",\n    \"persisted\",\n    \"personalbar\",\n    \"perspective\",\n    \"perspective-origin\",\n    \"perspectiveOrigin\",\n    \"phone\",\n    \"phoneticFamilyName\",\n    \"phoneticGivenName\",\n    \"photo\",\n    \"pictureInPictureElement\",\n    \"pictureInPictureEnabled\",\n    \"pictureInPictureWindow\",\n    \"ping\",\n    \"pipeThrough\",\n    \"pipeTo\",\n    \"pitch\",\n    \"pixelBottom\",\n    \"pixelDepth\",\n    \"pixelHeight\",\n    \"pixelLeft\",\n    \"pixelRight\",\n    \"pixelStorei\",\n    \"pixelTop\",\n    \"pixelUnitToMillimeterX\",\n    \"pixelUnitToMillimeterY\",\n    \"pixelWidth\",\n    \"place-content\",\n    \"place-items\",\n    \"place-self\",\n    \"placeContent\",\n    \"placeItems\",\n    \"placeSelf\",\n    \"placeholder\",\n    \"platform\",\n    \"platforms\",\n    \"play\",\n    \"playEffect\",\n    \"playState\",\n    \"playbackRate\",\n    \"playbackState\",\n    \"playbackTime\",\n    \"played\",\n    \"playoutDelayHint\",\n    \"playsInline\",\n    \"plugins\",\n    \"pluginspage\",\n    \"pname\",\n    \"pointer-events\",\n    \"pointerBeforeReferenceNode\",\n    \"pointerEnabled\",\n    \"pointerEvents\",\n    \"pointerId\",\n    \"pointerLockElement\",\n    \"pointerType\",\n    \"points\",\n    \"pointsAtX\",\n    \"pointsAtY\",\n    \"pointsAtZ\",\n    \"polygonOffset\",\n    \"pop\",\n    \"populateMatrix\",\n    \"popupWindowFeatures\",\n    \"popupWindowName\",\n    \"popupWindowURI\",\n    \"port\",\n    \"port1\",\n    \"port2\",\n    \"ports\",\n    \"posBottom\",\n    \"posHeight\",\n    \"posLeft\",\n    \"posRight\",\n    \"posTop\",\n    \"posWidth\",\n    \"pose\",\n    \"position\",\n    \"positionAlign\",\n    \"positionX\",\n    \"positionY\",\n    \"positionZ\",\n    \"postError\",\n    \"postMessage\",\n    \"postalCode\",\n    \"poster\",\n    \"pow\",\n    \"powerEfficient\",\n    \"powerOff\",\n    \"preMultiplySelf\",\n    \"precision\",\n    \"preferredStyleSheetSet\",\n    \"preferredStylesheetSet\",\n    \"prefix\",\n    \"preload\",\n    \"prepend\",\n    \"presentation\",\n    \"preserveAlpha\",\n    \"preserveAspectRatio\",\n    \"preserveAspectRatioString\",\n    \"pressed\",\n    \"pressure\",\n    \"prevValue\",\n    \"preventDefault\",\n    \"preventExtensions\",\n    \"preventSilentAccess\",\n    \"previousElementSibling\",\n    \"previousNode\",\n    \"previousPage\",\n    \"previousRect\",\n    \"previousScale\",\n    \"previousSibling\",\n    \"previousTranslate\",\n    \"primaryKey\",\n    \"primitiveType\",\n    \"primitiveUnits\",\n    \"principals\",\n    \"print\",\n    \"priority\",\n    \"privateKey\",\n    \"probablySupportsContext\",\n    \"process\",\n    \"processIceMessage\",\n    \"processingEnd\",\n    \"processingStart\",\n    \"product\",\n    \"productId\",\n    \"productName\",\n    \"productSub\",\n    \"profile\",\n    \"profileEnd\",\n    \"profiles\",\n    \"projectionMatrix\",\n    \"promise\",\n    \"prompt\",\n    \"properties\",\n    \"propertyIsEnumerable\",\n    \"propertyName\",\n    \"protocol\",\n    \"protocolLong\",\n    \"prototype\",\n    \"provider\",\n    \"pseudoClass\",\n    \"pseudoElement\",\n    \"pt\",\n    \"publicId\",\n    \"publicKey\",\n    \"published\",\n    \"pulse\",\n    \"push\",\n    \"pushManager\",\n    \"pushNotification\",\n    \"pushState\",\n    \"put\",\n    \"putImageData\",\n    \"px\",\n    \"quadraticCurveTo\",\n    \"qualifier\",\n    \"quaternion\",\n    \"query\",\n    \"queryCommandEnabled\",\n    \"queryCommandIndeterm\",\n    \"queryCommandState\",\n    \"queryCommandSupported\",\n    \"queryCommandText\",\n    \"queryCommandValue\",\n    \"querySelector\",\n    \"querySelectorAll\",\n    \"queueMicrotask\",\n    \"quote\",\n    \"quotes\",\n    \"r\",\n    \"r1\",\n    \"r2\",\n    \"race\",\n    \"rad\",\n    \"radiogroup\",\n    \"radiusX\",\n    \"radiusY\",\n    \"random\",\n    \"range\",\n    \"rangeCount\",\n    \"rangeMax\",\n    \"rangeMin\",\n    \"rangeOffset\",\n    \"rangeOverflow\",\n    \"rangeParent\",\n    \"rangeUnderflow\",\n    \"rate\",\n    \"ratio\",\n    \"raw\",\n    \"rawId\",\n    \"read\",\n    \"readAsArrayBuffer\",\n    \"readAsBinaryString\",\n    \"readAsBlob\",\n    \"readAsDataURL\",\n    \"readAsText\",\n    \"readBuffer\",\n    \"readEntries\",\n    \"readOnly\",\n    \"readPixels\",\n    \"readReportRequested\",\n    \"readText\",\n    \"readValue\",\n    \"readable\",\n    \"ready\",\n    \"readyState\",\n    \"reason\",\n    \"reboot\",\n    \"receivedAlert\",\n    \"receiver\",\n    \"receivers\",\n    \"recipient\",\n    \"reconnect\",\n    \"recordNumber\",\n    \"recordsAvailable\",\n    \"recordset\",\n    \"rect\",\n    \"red\",\n    \"redEyeReduction\",\n    \"redirect\",\n    \"redirectCount\",\n    \"redirectEnd\",\n    \"redirectStart\",\n    \"redirected\",\n    \"reduce\",\n    \"reduceRight\",\n    \"reduction\",\n    \"refDistance\",\n    \"refX\",\n    \"refY\",\n    \"referenceNode\",\n    \"referenceSpace\",\n    \"referrer\",\n    \"referrerPolicy\",\n    \"refresh\",\n    \"region\",\n    \"regionAnchorX\",\n    \"regionAnchorY\",\n    \"regionId\",\n    \"regions\",\n    \"register\",\n    \"registerContentHandler\",\n    \"registerElement\",\n    \"registerProperty\",\n    \"registerProtocolHandler\",\n    \"reject\",\n    \"rel\",\n    \"relList\",\n    \"relatedAddress\",\n    \"relatedNode\",\n    \"relatedPort\",\n    \"relatedTarget\",\n    \"release\",\n    \"releaseCapture\",\n    \"releaseEvents\",\n    \"releaseInterface\",\n    \"releaseLock\",\n    \"releasePointerCapture\",\n    \"releaseShaderCompiler\",\n    \"reliable\",\n    \"reliableWrite\",\n    \"reload\",\n    \"rem\",\n    \"remainingSpace\",\n    \"remote\",\n    \"remoteDescription\",\n    \"remove\",\n    \"removeAllRanges\",\n    \"removeAttribute\",\n    \"removeAttributeNS\",\n    \"removeAttributeNode\",\n    \"removeBehavior\",\n    \"removeChild\",\n    \"removeCue\",\n    \"removeEventListener\",\n    \"removeFilter\",\n    \"removeImport\",\n    \"removeItem\",\n    \"removeListener\",\n    \"removeNamedItem\",\n    \"removeNamedItemNS\",\n    \"removeNode\",\n    \"removeParameter\",\n    \"removeProperty\",\n    \"removeRange\",\n    \"removeRegion\",\n    \"removeRule\",\n    \"removeSiteSpecificTrackingException\",\n    \"removeSourceBuffer\",\n    \"removeStream\",\n    \"removeTrack\",\n    \"removeVariable\",\n    \"removeWakeLockListener\",\n    \"removeWebWideTrackingException\",\n    \"removed\",\n    \"removedNodes\",\n    \"renderHeight\",\n    \"renderState\",\n    \"renderTime\",\n    \"renderWidth\",\n    \"renderbufferStorage\",\n    \"renderbufferStorageMultisample\",\n    \"renderedBuffer\",\n    \"renderingMode\",\n    \"renotify\",\n    \"repeat\",\n    \"replace\",\n    \"replaceAdjacentText\",\n    \"replaceAll\",\n    \"replaceChild\",\n    \"replaceChildren\",\n    \"replaceData\",\n    \"replaceId\",\n    \"replaceItem\",\n    \"replaceNode\",\n    \"replaceState\",\n    \"replaceSync\",\n    \"replaceTrack\",\n    \"replaceWholeText\",\n    \"replaceWith\",\n    \"reportValidity\",\n    \"request\",\n    \"requestAnimationFrame\",\n    \"requestAutocomplete\",\n    \"requestData\",\n    \"requestDevice\",\n    \"requestFrame\",\n    \"requestFullscreen\",\n    \"requestHitTestSource\",\n    \"requestHitTestSourceForTransientInput\",\n    \"requestId\",\n    \"requestIdleCallback\",\n    \"requestMIDIAccess\",\n    \"requestMediaKeySystemAccess\",\n    \"requestPermission\",\n    \"requestPictureInPicture\",\n    \"requestPointerLock\",\n    \"requestPresent\",\n    \"requestReferenceSpace\",\n    \"requestSession\",\n    \"requestStart\",\n    \"requestStorageAccess\",\n    \"requestSubmit\",\n    \"requestVideoFrameCallback\",\n    \"requestingWindow\",\n    \"requireInteraction\",\n    \"required\",\n    \"requiredExtensions\",\n    \"requiredFeatures\",\n    \"reset\",\n    \"resetPose\",\n    \"resetTransform\",\n    \"resize\",\n    \"resizeBy\",\n    \"resizeTo\",\n    \"resolve\",\n    \"response\",\n    \"responseBody\",\n    \"responseEnd\",\n    \"responseReady\",\n    \"responseStart\",\n    \"responseText\",\n    \"responseType\",\n    \"responseURL\",\n    \"responseXML\",\n    \"restartIce\",\n    \"restore\",\n    \"result\",\n    \"resultIndex\",\n    \"resultType\",\n    \"results\",\n    \"resume\",\n    \"resumeProfilers\",\n    \"resumeTransformFeedback\",\n    \"retry\",\n    \"returnValue\",\n    \"rev\",\n    \"reverse\",\n    \"reversed\",\n    \"revocable\",\n    \"revokeObjectURL\",\n    \"rgbColor\",\n    \"right\",\n    \"rightContext\",\n    \"rightDegrees\",\n    \"rightMargin\",\n    \"rightProjectionMatrix\",\n    \"rightViewMatrix\",\n    \"role\",\n    \"rolloffFactor\",\n    \"root\",\n    \"rootBounds\",\n    \"rootElement\",\n    \"rootMargin\",\n    \"rotate\",\n    \"rotateAxisAngle\",\n    \"rotateAxisAngleSelf\",\n    \"rotateFromVector\",\n    \"rotateFromVectorSelf\",\n    \"rotateSelf\",\n    \"rotation\",\n    \"rotationAngle\",\n    \"rotationRate\",\n    \"round\",\n    \"row-gap\",\n    \"rowGap\",\n    \"rowIndex\",\n    \"rowSpan\",\n    \"rows\",\n    \"rtcpTransport\",\n    \"rtt\",\n    \"ruby-align\",\n    \"ruby-position\",\n    \"rubyAlign\",\n    \"rubyOverhang\",\n    \"rubyPosition\",\n    \"rules\",\n    \"runtime\",\n    \"runtimeStyle\",\n    \"rx\",\n    \"ry\",\n    \"s\",\n    \"safari\",\n    \"sample\",\n    \"sampleCoverage\",\n    \"sampleRate\",\n    \"samplerParameterf\",\n    \"samplerParameteri\",\n    \"sandbox\",\n    \"save\",\n    \"saveData\",\n    \"scale\",\n    \"scale3d\",\n    \"scale3dSelf\",\n    \"scaleNonUniform\",\n    \"scaleNonUniformSelf\",\n    \"scaleSelf\",\n    \"scheme\",\n    \"scissor\",\n    \"scope\",\n    \"scopeName\",\n    \"scoped\",\n    \"screen\",\n    \"screenBrightness\",\n    \"screenEnabled\",\n    \"screenLeft\",\n    \"screenPixelToMillimeterX\",\n    \"screenPixelToMillimeterY\",\n    \"screenTop\",\n    \"screenX\",\n    \"screenY\",\n    \"scriptURL\",\n    \"scripts\",\n    \"scroll\",\n    \"scroll-behavior\",\n    \"scroll-margin\",\n    \"scroll-margin-block\",\n    \"scroll-margin-block-end\",\n    \"scroll-margin-block-start\",\n    \"scroll-margin-bottom\",\n    \"scroll-margin-inline\",\n    \"scroll-margin-inline-end\",\n    \"scroll-margin-inline-start\",\n    \"scroll-margin-left\",\n    \"scroll-margin-right\",\n    \"scroll-margin-top\",\n    \"scroll-padding\",\n    \"scroll-padding-block\",\n    \"scroll-padding-block-end\",\n    \"scroll-padding-block-start\",\n    \"scroll-padding-bottom\",\n    \"scroll-padding-inline\",\n    \"scroll-padding-inline-end\",\n    \"scroll-padding-inline-start\",\n    \"scroll-padding-left\",\n    \"scroll-padding-right\",\n    \"scroll-padding-top\",\n    \"scroll-snap-align\",\n    \"scroll-snap-type\",\n    \"scrollAmount\",\n    \"scrollBehavior\",\n    \"scrollBy\",\n    \"scrollByLines\",\n    \"scrollByPages\",\n    \"scrollDelay\",\n    \"scrollHeight\",\n    \"scrollIntoView\",\n    \"scrollIntoViewIfNeeded\",\n    \"scrollLeft\",\n    \"scrollLeftMax\",\n    \"scrollMargin\",\n    \"scrollMarginBlock\",\n    \"scrollMarginBlockEnd\",\n    \"scrollMarginBlockStart\",\n    \"scrollMarginBottom\",\n    \"scrollMarginInline\",\n    \"scrollMarginInlineEnd\",\n    \"scrollMarginInlineStart\",\n    \"scrollMarginLeft\",\n    \"scrollMarginRight\",\n    \"scrollMarginTop\",\n    \"scrollMaxX\",\n    \"scrollMaxY\",\n    \"scrollPadding\",\n    \"scrollPaddingBlock\",\n    \"scrollPaddingBlockEnd\",\n    \"scrollPaddingBlockStart\",\n    \"scrollPaddingBottom\",\n    \"scrollPaddingInline\",\n    \"scrollPaddingInlineEnd\",\n    \"scrollPaddingInlineStart\",\n    \"scrollPaddingLeft\",\n    \"scrollPaddingRight\",\n    \"scrollPaddingTop\",\n    \"scrollRestoration\",\n    \"scrollSnapAlign\",\n    \"scrollSnapType\",\n    \"scrollTo\",\n    \"scrollTop\",\n    \"scrollTopMax\",\n    \"scrollWidth\",\n    \"scrollX\",\n    \"scrollY\",\n    \"scrollbar-color\",\n    \"scrollbar-width\",\n    \"scrollbar3dLightColor\",\n    \"scrollbarArrowColor\",\n    \"scrollbarBaseColor\",\n    \"scrollbarColor\",\n    \"scrollbarDarkShadowColor\",\n    \"scrollbarFaceColor\",\n    \"scrollbarHighlightColor\",\n    \"scrollbarShadowColor\",\n    \"scrollbarTrackColor\",\n    \"scrollbarWidth\",\n    \"scrollbars\",\n    \"scrolling\",\n    \"scrollingElement\",\n    \"sctp\",\n    \"sctpCauseCode\",\n    \"sdp\",\n    \"sdpLineNumber\",\n    \"sdpMLineIndex\",\n    \"sdpMid\",\n    \"seal\",\n    \"search\",\n    \"searchBox\",\n    \"searchBoxJavaBridge_\",\n    \"searchParams\",\n    \"sectionRowIndex\",\n    \"secureConnectionStart\",\n    \"security\",\n    \"seed\",\n    \"seekToNextFrame\",\n    \"seekable\",\n    \"seeking\",\n    \"select\",\n    \"selectAllChildren\",\n    \"selectAlternateInterface\",\n    \"selectConfiguration\",\n    \"selectNode\",\n    \"selectNodeContents\",\n    \"selectNodes\",\n    \"selectSingleNode\",\n    \"selectSubString\",\n    \"selected\",\n    \"selectedIndex\",\n    \"selectedOptions\",\n    \"selectedStyleSheetSet\",\n    \"selectedStylesheetSet\",\n    \"selection\",\n    \"selectionDirection\",\n    \"selectionEnd\",\n    \"selectionStart\",\n    \"selector\",\n    \"selectorText\",\n    \"self\",\n    \"send\",\n    \"sendAsBinary\",\n    \"sendBeacon\",\n    \"sender\",\n    \"sentAlert\",\n    \"sentTimestamp\",\n    \"separator\",\n    \"serialNumber\",\n    \"serializeToString\",\n    \"serverTiming\",\n    \"service\",\n    \"serviceWorker\",\n    \"session\",\n    \"sessionId\",\n    \"sessionStorage\",\n    \"set\",\n    \"setActionHandler\",\n    \"setActive\",\n    \"setAlpha\",\n    \"setAppBadge\",\n    \"setAttribute\",\n    \"setAttributeNS\",\n    \"setAttributeNode\",\n    \"setAttributeNodeNS\",\n    \"setBaseAndExtent\",\n    \"setBigInt64\",\n    \"setBigUint64\",\n    \"setBingCurrentSearchDefault\",\n    \"setCapture\",\n    \"setCodecPreferences\",\n    \"setColor\",\n    \"setCompositeOperation\",\n    \"setConfiguration\",\n    \"setCurrentTime\",\n    \"setCustomValidity\",\n    \"setData\",\n    \"setDate\",\n    \"setDragImage\",\n    \"setEnd\",\n    \"setEndAfter\",\n    \"setEndBefore\",\n    \"setEndPoint\",\n    \"setFillColor\",\n    \"setFilterRes\",\n    \"setFloat32\",\n    \"setFloat64\",\n    \"setFloatValue\",\n    \"setFormValue\",\n    \"setFullYear\",\n    \"setHeaderValue\",\n    \"setHours\",\n    \"setIdentityProvider\",\n    \"setImmediate\",\n    \"setInt16\",\n    \"setInt32\",\n    \"setInt8\",\n    \"setInterval\",\n    \"setItem\",\n    \"setKeyframes\",\n    \"setLineCap\",\n    \"setLineDash\",\n    \"setLineJoin\",\n    \"setLineWidth\",\n    \"setLiveSeekableRange\",\n    \"setLocalDescription\",\n    \"setMatrix\",\n    \"setMatrixValue\",\n    \"setMediaKeys\",\n    \"setMilliseconds\",\n    \"setMinutes\",\n    \"setMiterLimit\",\n    \"setMonth\",\n    \"setNamedItem\",\n    \"setNamedItemNS\",\n    \"setNonUserCodeExceptions\",\n    \"setOrientToAngle\",\n    \"setOrientToAuto\",\n    \"setOrientation\",\n    \"setOverrideHistoryNavigationMode\",\n    \"setPaint\",\n    \"setParameter\",\n    \"setParameters\",\n    \"setPeriodicWave\",\n    \"setPointerCapture\",\n    \"setPosition\",\n    \"setPositionState\",\n    \"setPreference\",\n    \"setProperty\",\n    \"setPrototypeOf\",\n    \"setRGBColor\",\n    \"setRGBColorICCColor\",\n    \"setRadius\",\n    \"setRangeText\",\n    \"setRemoteDescription\",\n    \"setRequestHeader\",\n    \"setResizable\",\n    \"setResourceTimingBufferSize\",\n    \"setRotate\",\n    \"setScale\",\n    \"setSeconds\",\n    \"setSelectionRange\",\n    \"setServerCertificate\",\n    \"setShadow\",\n    \"setSinkId\",\n    \"setSkewX\",\n    \"setSkewY\",\n    \"setStart\",\n    \"setStartAfter\",\n    \"setStartBefore\",\n    \"setStdDeviation\",\n    \"setStreams\",\n    \"setStringValue\",\n    \"setStrokeColor\",\n    \"setSuggestResult\",\n    \"setTargetAtTime\",\n    \"setTargetValueAtTime\",\n    \"setTime\",\n    \"setTimeout\",\n    \"setTransform\",\n    \"setTranslate\",\n    \"setUTCDate\",\n    \"setUTCFullYear\",\n    \"setUTCHours\",\n    \"setUTCMilliseconds\",\n    \"setUTCMinutes\",\n    \"setUTCMonth\",\n    \"setUTCSeconds\",\n    \"setUint16\",\n    \"setUint32\",\n    \"setUint8\",\n    \"setUri\",\n    \"setValidity\",\n    \"setValueAtTime\",\n    \"setValueCurveAtTime\",\n    \"setVariable\",\n    \"setVelocity\",\n    \"setVersion\",\n    \"setYear\",\n    \"settingName\",\n    \"settingValue\",\n    \"sex\",\n    \"shaderSource\",\n    \"shadowBlur\",\n    \"shadowColor\",\n    \"shadowOffsetX\",\n    \"shadowOffsetY\",\n    \"shadowRoot\",\n    \"shape\",\n    \"shape-image-threshold\",\n    \"shape-margin\",\n    \"shape-outside\",\n    \"shape-rendering\",\n    \"shapeImageThreshold\",\n    \"shapeMargin\",\n    \"shapeOutside\",\n    \"shapeRendering\",\n    \"sheet\",\n    \"shift\",\n    \"shiftKey\",\n    \"shiftLeft\",\n    \"shippingAddress\",\n    \"shippingOption\",\n    \"shippingType\",\n    \"show\",\n    \"showHelp\",\n    \"showModal\",\n    \"showModalDialog\",\n    \"showModelessDialog\",\n    \"showNotification\",\n    \"sidebar\",\n    \"sign\",\n    \"signal\",\n    \"signalingState\",\n    \"signature\",\n    \"silent\",\n    \"sin\",\n    \"singleNodeValue\",\n    \"sinh\",\n    \"sinkId\",\n    \"sittingToStandingTransform\",\n    \"size\",\n    \"sizeToContent\",\n    \"sizeX\",\n    \"sizeZ\",\n    \"sizes\",\n    \"skewX\",\n    \"skewXSelf\",\n    \"skewY\",\n    \"skewYSelf\",\n    \"slice\",\n    \"slope\",\n    \"slot\",\n    \"small\",\n    \"smil\",\n    \"smooth\",\n    \"smoothingTimeConstant\",\n    \"snapToLines\",\n    \"snapshotItem\",\n    \"snapshotLength\",\n    \"some\",\n    \"sort\",\n    \"sortingCode\",\n    \"source\",\n    \"sourceBuffer\",\n    \"sourceBuffers\",\n    \"sourceCapabilities\",\n    \"sourceFile\",\n    \"sourceIndex\",\n    \"sources\",\n    \"spacing\",\n    \"span\",\n    \"speak\",\n    \"speakAs\",\n    \"speaking\",\n    \"species\",\n    \"specified\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"speechSynthesis\",\n    \"speed\",\n    \"speedOfSound\",\n    \"spellcheck\",\n    \"splice\",\n    \"split\",\n    \"splitText\",\n    \"spreadMethod\",\n    \"sqrt\",\n    \"src\",\n    \"srcElement\",\n    \"srcFilter\",\n    \"srcObject\",\n    \"srcUrn\",\n    \"srcdoc\",\n    \"srclang\",\n    \"srcset\",\n    \"stack\",\n    \"stackTraceLimit\",\n    \"stacktrace\",\n    \"stageParameters\",\n    \"standalone\",\n    \"standby\",\n    \"start\",\n    \"startContainer\",\n    \"startIce\",\n    \"startMessages\",\n    \"startNotifications\",\n    \"startOffset\",\n    \"startProfiling\",\n    \"startRendering\",\n    \"startShark\",\n    \"startTime\",\n    \"startsWith\",\n    \"state\",\n    \"status\",\n    \"statusCode\",\n    \"statusMessage\",\n    \"statusText\",\n    \"statusbar\",\n    \"stdDeviationX\",\n    \"stdDeviationY\",\n    \"stencilFunc\",\n    \"stencilFuncSeparate\",\n    \"stencilMask\",\n    \"stencilMaskSeparate\",\n    \"stencilOp\",\n    \"stencilOpSeparate\",\n    \"step\",\n    \"stepDown\",\n    \"stepMismatch\",\n    \"stepUp\",\n    \"sticky\",\n    \"stitchTiles\",\n    \"stop\",\n    \"stop-color\",\n    \"stop-opacity\",\n    \"stopColor\",\n    \"stopImmediatePropagation\",\n    \"stopNotifications\",\n    \"stopOpacity\",\n    \"stopProfiling\",\n    \"stopPropagation\",\n    \"stopShark\",\n    \"stopped\",\n    \"storage\",\n    \"storageArea\",\n    \"storageName\",\n    \"storageStatus\",\n    \"store\",\n    \"storeSiteSpecificTrackingException\",\n    \"storeWebWideTrackingException\",\n    \"stpVersion\",\n    \"stream\",\n    \"streams\",\n    \"stretch\",\n    \"strike\",\n    \"string\",\n    \"stringValue\",\n    \"stringify\",\n    \"stroke\",\n    \"stroke-dasharray\",\n    \"stroke-dashoffset\",\n    \"stroke-linecap\",\n    \"stroke-linejoin\",\n    \"stroke-miterlimit\",\n    \"stroke-opacity\",\n    \"stroke-width\",\n    \"strokeDasharray\",\n    \"strokeDashoffset\",\n    \"strokeLinecap\",\n    \"strokeLinejoin\",\n    \"strokeMiterlimit\",\n    \"strokeOpacity\",\n    \"strokeRect\",\n    \"strokeStyle\",\n    \"strokeText\",\n    \"strokeWidth\",\n    \"style\",\n    \"styleFloat\",\n    \"styleMap\",\n    \"styleMedia\",\n    \"styleSheet\",\n    \"styleSheetSets\",\n    \"styleSheets\",\n    \"sub\",\n    \"subarray\",\n    \"subject\",\n    \"submit\",\n    \"submitFrame\",\n    \"submitter\",\n    \"subscribe\",\n    \"substr\",\n    \"substring\",\n    \"substringData\",\n    \"subtle\",\n    \"subtree\",\n    \"suffix\",\n    \"suffixes\",\n    \"summary\",\n    \"sup\",\n    \"supported\",\n    \"supportedContentEncodings\",\n    \"supportedEntryTypes\",\n    \"supports\",\n    \"supportsSession\",\n    \"surfaceScale\",\n    \"surroundContents\",\n    \"suspend\",\n    \"suspendRedraw\",\n    \"swapCache\",\n    \"swapNode\",\n    \"sweepFlag\",\n    \"symbols\",\n    \"sync\",\n    \"sysexEnabled\",\n    \"system\",\n    \"systemCode\",\n    \"systemId\",\n    \"systemLanguage\",\n    \"systemXDPI\",\n    \"systemYDPI\",\n    \"tBodies\",\n    \"tFoot\",\n    \"tHead\",\n    \"tabIndex\",\n    \"table\",\n    \"table-layout\",\n    \"tableLayout\",\n    \"tableValues\",\n    \"tag\",\n    \"tagName\",\n    \"tagUrn\",\n    \"tags\",\n    \"taintEnabled\",\n    \"takePhoto\",\n    \"takeRecords\",\n    \"tan\",\n    \"tangentialPressure\",\n    \"tanh\",\n    \"target\",\n    \"targetElement\",\n    \"targetRayMode\",\n    \"targetRaySpace\",\n    \"targetTouches\",\n    \"targetX\",\n    \"targetY\",\n    \"tcpType\",\n    \"tee\",\n    \"tel\",\n    \"terminate\",\n    \"test\",\n    \"texImage2D\",\n    \"texImage3D\",\n    \"texParameterf\",\n    \"texParameteri\",\n    \"texStorage2D\",\n    \"texStorage3D\",\n    \"texSubImage2D\",\n    \"texSubImage3D\",\n    \"text\",\n    \"text-align\",\n    \"text-align-last\",\n    \"text-anchor\",\n    \"text-combine-upright\",\n    \"text-decoration\",\n    \"text-decoration-color\",\n    \"text-decoration-line\",\n    \"text-decoration-skip-ink\",\n    \"text-decoration-style\",\n    \"text-decoration-thickness\",\n    \"text-emphasis\",\n    \"text-emphasis-color\",\n    \"text-emphasis-position\",\n    \"text-emphasis-style\",\n    \"text-indent\",\n    \"text-justify\",\n    \"text-orientation\",\n    \"text-overflow\",\n    \"text-rendering\",\n    \"text-shadow\",\n    \"text-transform\",\n    \"text-underline-offset\",\n    \"text-underline-position\",\n    \"textAlign\",\n    \"textAlignLast\",\n    \"textAnchor\",\n    \"textAutospace\",\n    \"textBaseline\",\n    \"textCombineUpright\",\n    \"textContent\",\n    \"textDecoration\",\n    \"textDecorationBlink\",\n    \"textDecorationColor\",\n    \"textDecorationLine\",\n    \"textDecorationLineThrough\",\n    \"textDecorationNone\",\n    \"textDecorationOverline\",\n    \"textDecorationSkipInk\",\n    \"textDecorationStyle\",\n    \"textDecorationThickness\",\n    \"textDecorationUnderline\",\n    \"textEmphasis\",\n    \"textEmphasisColor\",\n    \"textEmphasisPosition\",\n    \"textEmphasisStyle\",\n    \"textIndent\",\n    \"textJustify\",\n    \"textJustifyTrim\",\n    \"textKashida\",\n    \"textKashidaSpace\",\n    \"textLength\",\n    \"textOrientation\",\n    \"textOverflow\",\n    \"textRendering\",\n    \"textShadow\",\n    \"textTracks\",\n    \"textTransform\",\n    \"textUnderlineOffset\",\n    \"textUnderlinePosition\",\n    \"then\",\n    \"threadId\",\n    \"threshold\",\n    \"thresholds\",\n    \"tiltX\",\n    \"tiltY\",\n    \"time\",\n    \"timeEnd\",\n    \"timeLog\",\n    \"timeOrigin\",\n    \"timeRemaining\",\n    \"timeStamp\",\n    \"timecode\",\n    \"timeline\",\n    \"timelineTime\",\n    \"timeout\",\n    \"timestamp\",\n    \"timestampOffset\",\n    \"timing\",\n    \"title\",\n    \"to\",\n    \"toArray\",\n    \"toBlob\",\n    \"toDataURL\",\n    \"toDateString\",\n    \"toElement\",\n    \"toExponential\",\n    \"toFixed\",\n    \"toFloat32Array\",\n    \"toFloat64Array\",\n    \"toGMTString\",\n    \"toISOString\",\n    \"toJSON\",\n    \"toLocaleDateString\",\n    \"toLocaleFormat\",\n    \"toLocaleLowerCase\",\n    \"toLocaleString\",\n    \"toLocaleTimeString\",\n    \"toLocaleUpperCase\",\n    \"toLowerCase\",\n    \"toMatrix\",\n    \"toMethod\",\n    \"toPrecision\",\n    \"toPrimitive\",\n    \"toSdp\",\n    \"toSource\",\n    \"toStaticHTML\",\n    \"toString\",\n    \"toStringTag\",\n    \"toSum\",\n    \"toTimeString\",\n    \"toUTCString\",\n    \"toUpperCase\",\n    \"toggle\",\n    \"toggleAttribute\",\n    \"toggleLongPressEnabled\",\n    \"tone\",\n    \"toneBuffer\",\n    \"tooLong\",\n    \"tooShort\",\n    \"toolbar\",\n    \"top\",\n    \"topMargin\",\n    \"total\",\n    \"totalFrameDelay\",\n    \"totalVideoFrames\",\n    \"touch-action\",\n    \"touchAction\",\n    \"touched\",\n    \"touches\",\n    \"trace\",\n    \"track\",\n    \"trackVisibility\",\n    \"transaction\",\n    \"transactions\",\n    \"transceiver\",\n    \"transferControlToOffscreen\",\n    \"transferFromImageBitmap\",\n    \"transferImageBitmap\",\n    \"transferIn\",\n    \"transferOut\",\n    \"transferSize\",\n    \"transferToImageBitmap\",\n    \"transform\",\n    \"transform-box\",\n    \"transform-origin\",\n    \"transform-style\",\n    \"transformBox\",\n    \"transformFeedbackVaryings\",\n    \"transformOrigin\",\n    \"transformPoint\",\n    \"transformString\",\n    \"transformStyle\",\n    \"transformToDocument\",\n    \"transformToFragment\",\n    \"transition\",\n    \"transition-delay\",\n    \"transition-duration\",\n    \"transition-property\",\n    \"transition-timing-function\",\n    \"transitionDelay\",\n    \"transitionDuration\",\n    \"transitionProperty\",\n    \"transitionTimingFunction\",\n    \"translate\",\n    \"translateSelf\",\n    \"translationX\",\n    \"translationY\",\n    \"transport\",\n    \"trim\",\n    \"trimEnd\",\n    \"trimLeft\",\n    \"trimRight\",\n    \"trimStart\",\n    \"trueSpeed\",\n    \"trunc\",\n    \"truncate\",\n    \"trustedTypes\",\n    \"turn\",\n    \"twist\",\n    \"type\",\n    \"typeDetail\",\n    \"typeMismatch\",\n    \"typeMustMatch\",\n    \"types\",\n    \"u2f\",\n    \"ubound\",\n    \"uint16\",\n    \"uint32\",\n    \"uint8\",\n    \"uint8Clamped\",\n    \"undefined\",\n    \"unescape\",\n    \"uneval\",\n    \"unicode\",\n    \"unicode-bidi\",\n    \"unicodeBidi\",\n    \"unicodeRange\",\n    \"uniform1f\",\n    \"uniform1fv\",\n    \"uniform1i\",\n    \"uniform1iv\",\n    \"uniform1ui\",\n    \"uniform1uiv\",\n    \"uniform2f\",\n    \"uniform2fv\",\n    \"uniform2i\",\n    \"uniform2iv\",\n    \"uniform2ui\",\n    \"uniform2uiv\",\n    \"uniform3f\",\n    \"uniform3fv\",\n    \"uniform3i\",\n    \"uniform3iv\",\n    \"uniform3ui\",\n    \"uniform3uiv\",\n    \"uniform4f\",\n    \"uniform4fv\",\n    \"uniform4i\",\n    \"uniform4iv\",\n    \"uniform4ui\",\n    \"uniform4uiv\",\n    \"uniformBlockBinding\",\n    \"uniformMatrix2fv\",\n    \"uniformMatrix2x3fv\",\n    \"uniformMatrix2x4fv\",\n    \"uniformMatrix3fv\",\n    \"uniformMatrix3x2fv\",\n    \"uniformMatrix3x4fv\",\n    \"uniformMatrix4fv\",\n    \"uniformMatrix4x2fv\",\n    \"uniformMatrix4x3fv\",\n    \"unique\",\n    \"uniqueID\",\n    \"uniqueNumber\",\n    \"unit\",\n    \"unitType\",\n    \"units\",\n    \"unloadEventEnd\",\n    \"unloadEventStart\",\n    \"unlock\",\n    \"unmount\",\n    \"unobserve\",\n    \"unpause\",\n    \"unpauseAnimations\",\n    \"unreadCount\",\n    \"unregister\",\n    \"unregisterContentHandler\",\n    \"unregisterProtocolHandler\",\n    \"unscopables\",\n    \"unselectable\",\n    \"unshift\",\n    \"unsubscribe\",\n    \"unsuspendRedraw\",\n    \"unsuspendRedrawAll\",\n    \"unwatch\",\n    \"unwrapKey\",\n    \"upDegrees\",\n    \"upX\",\n    \"upY\",\n    \"upZ\",\n    \"update\",\n    \"updateCommands\",\n    \"updateIce\",\n    \"updateInterval\",\n    \"updatePlaybackRate\",\n    \"updateRenderState\",\n    \"updateSettings\",\n    \"updateTiming\",\n    \"updateViaCache\",\n    \"updateWith\",\n    \"updated\",\n    \"updating\",\n    \"upgrade\",\n    \"upload\",\n    \"uploadTotal\",\n    \"uploaded\",\n    \"upper\",\n    \"upperBound\",\n    \"upperOpen\",\n    \"uri\",\n    \"url\",\n    \"urn\",\n    \"urns\",\n    \"usages\",\n    \"usb\",\n    \"usbVersionMajor\",\n    \"usbVersionMinor\",\n    \"usbVersionSubminor\",\n    \"useCurrentView\",\n    \"useMap\",\n    \"useProgram\",\n    \"usedSpace\",\n    \"user-select\",\n    \"userActivation\",\n    \"userAgent\",\n    \"userChoice\",\n    \"userHandle\",\n    \"userHint\",\n    \"userLanguage\",\n    \"userSelect\",\n    \"userVisibleOnly\",\n    \"username\",\n    \"usernameFragment\",\n    \"utterance\",\n    \"uuid\",\n    \"v8BreakIterator\",\n    \"vAlign\",\n    \"vLink\",\n    \"valid\",\n    \"validate\",\n    \"validateProgram\",\n    \"validationMessage\",\n    \"validity\",\n    \"value\",\n    \"valueAsDate\",\n    \"valueAsNumber\",\n    \"valueAsString\",\n    \"valueInSpecifiedUnits\",\n    \"valueMissing\",\n    \"valueOf\",\n    \"valueText\",\n    \"valueType\",\n    \"values\",\n    \"variable\",\n    \"variant\",\n    \"variationSettings\",\n    \"vector-effect\",\n    \"vectorEffect\",\n    \"velocityAngular\",\n    \"velocityExpansion\",\n    \"velocityX\",\n    \"velocityY\",\n    \"vendor\",\n    \"vendorId\",\n    \"vendorSub\",\n    \"verify\",\n    \"version\",\n    \"vertexAttrib1f\",\n    \"vertexAttrib1fv\",\n    \"vertexAttrib2f\",\n    \"vertexAttrib2fv\",\n    \"vertexAttrib3f\",\n    \"vertexAttrib3fv\",\n    \"vertexAttrib4f\",\n    \"vertexAttrib4fv\",\n    \"vertexAttribDivisor\",\n    \"vertexAttribDivisorANGLE\",\n    \"vertexAttribI4i\",\n    \"vertexAttribI4iv\",\n    \"vertexAttribI4ui\",\n    \"vertexAttribI4uiv\",\n    \"vertexAttribIPointer\",\n    \"vertexAttribPointer\",\n    \"vertical\",\n    \"vertical-align\",\n    \"verticalAlign\",\n    \"verticalOverflow\",\n    \"vh\",\n    \"vibrate\",\n    \"vibrationActuator\",\n    \"videoBitsPerSecond\",\n    \"videoHeight\",\n    \"videoTracks\",\n    \"videoWidth\",\n    \"view\",\n    \"viewBox\",\n    \"viewBoxString\",\n    \"viewTarget\",\n    \"viewTargetString\",\n    \"viewport\",\n    \"viewportAnchorX\",\n    \"viewportAnchorY\",\n    \"viewportElement\",\n    \"views\",\n    \"violatedDirective\",\n    \"visibility\",\n    \"visibilityState\",\n    \"visible\",\n    \"visualViewport\",\n    \"vlinkColor\",\n    \"vmax\",\n    \"vmin\",\n    \"voice\",\n    \"voiceURI\",\n    \"volume\",\n    \"vrml\",\n    \"vspace\",\n    \"vw\",\n    \"w\",\n    \"wait\",\n    \"waitSync\",\n    \"waiting\",\n    \"wake\",\n    \"wakeLock\",\n    \"wand\",\n    \"warn\",\n    \"wasClean\",\n    \"wasDiscarded\",\n    \"watch\",\n    \"watchAvailability\",\n    \"watchPosition\",\n    \"webdriver\",\n    \"webkitAddKey\",\n    \"webkitAlignContent\",\n    \"webkitAlignItems\",\n    \"webkitAlignSelf\",\n    \"webkitAnimation\",\n    \"webkitAnimationDelay\",\n    \"webkitAnimationDirection\",\n    \"webkitAnimationDuration\",\n    \"webkitAnimationFillMode\",\n    \"webkitAnimationIterationCount\",\n    \"webkitAnimationName\",\n    \"webkitAnimationPlayState\",\n    \"webkitAnimationTimingFunction\",\n    \"webkitAppearance\",\n    \"webkitAudioContext\",\n    \"webkitAudioDecodedByteCount\",\n    \"webkitAudioPannerNode\",\n    \"webkitBackfaceVisibility\",\n    \"webkitBackground\",\n    \"webkitBackgroundAttachment\",\n    \"webkitBackgroundClip\",\n    \"webkitBackgroundColor\",\n    \"webkitBackgroundImage\",\n    \"webkitBackgroundOrigin\",\n    \"webkitBackgroundPosition\",\n    \"webkitBackgroundPositionX\",\n    \"webkitBackgroundPositionY\",\n    \"webkitBackgroundRepeat\",\n    \"webkitBackgroundSize\",\n    \"webkitBackingStorePixelRatio\",\n    \"webkitBorderBottomLeftRadius\",\n    \"webkitBorderBottomRightRadius\",\n    \"webkitBorderImage\",\n    \"webkitBorderImageOutset\",\n    \"webkitBorderImageRepeat\",\n    \"webkitBorderImageSlice\",\n    \"webkitBorderImageSource\",\n    \"webkitBorderImageWidth\",\n    \"webkitBorderRadius\",\n    \"webkitBorderTopLeftRadius\",\n    \"webkitBorderTopRightRadius\",\n    \"webkitBoxAlign\",\n    \"webkitBoxDirection\",\n    \"webkitBoxFlex\",\n    \"webkitBoxOrdinalGroup\",\n    \"webkitBoxOrient\",\n    \"webkitBoxPack\",\n    \"webkitBoxShadow\",\n    \"webkitBoxSizing\",\n    \"webkitCancelAnimationFrame\",\n    \"webkitCancelFullScreen\",\n    \"webkitCancelKeyRequest\",\n    \"webkitCancelRequestAnimationFrame\",\n    \"webkitClearResourceTimings\",\n    \"webkitClosedCaptionsVisible\",\n    \"webkitConvertPointFromNodeToPage\",\n    \"webkitConvertPointFromPageToNode\",\n    \"webkitCreateShadowRoot\",\n    \"webkitCurrentFullScreenElement\",\n    \"webkitCurrentPlaybackTargetIsWireless\",\n    \"webkitDecodedFrameCount\",\n    \"webkitDirectionInvertedFromDevice\",\n    \"webkitDisplayingFullscreen\",\n    \"webkitDroppedFrameCount\",\n    \"webkitEnterFullScreen\",\n    \"webkitEnterFullscreen\",\n    \"webkitEntries\",\n    \"webkitExitFullScreen\",\n    \"webkitExitFullscreen\",\n    \"webkitExitPointerLock\",\n    \"webkitFilter\",\n    \"webkitFlex\",\n    \"webkitFlexBasis\",\n    \"webkitFlexDirection\",\n    \"webkitFlexFlow\",\n    \"webkitFlexGrow\",\n    \"webkitFlexShrink\",\n    \"webkitFlexWrap\",\n    \"webkitFullScreenKeyboardInputAllowed\",\n    \"webkitFullscreenElement\",\n    \"webkitFullscreenEnabled\",\n    \"webkitGenerateKeyRequest\",\n    \"webkitGetAsEntry\",\n    \"webkitGetDatabaseNames\",\n    \"webkitGetEntries\",\n    \"webkitGetEntriesByName\",\n    \"webkitGetEntriesByType\",\n    \"webkitGetFlowByName\",\n    \"webkitGetGamepads\",\n    \"webkitGetImageDataHD\",\n    \"webkitGetNamedFlows\",\n    \"webkitGetRegionFlowRanges\",\n    \"webkitGetUserMedia\",\n    \"webkitHasClosedCaptions\",\n    \"webkitHidden\",\n    \"webkitIDBCursor\",\n    \"webkitIDBDatabase\",\n    \"webkitIDBDatabaseError\",\n    \"webkitIDBDatabaseException\",\n    \"webkitIDBFactory\",\n    \"webkitIDBIndex\",\n    \"webkitIDBKeyRange\",\n    \"webkitIDBObjectStore\",\n    \"webkitIDBRequest\",\n    \"webkitIDBTransaction\",\n    \"webkitImageSmoothingEnabled\",\n    \"webkitIndexedDB\",\n    \"webkitInitMessageEvent\",\n    \"webkitIsFullScreen\",\n    \"webkitJustifyContent\",\n    \"webkitKeys\",\n    \"webkitLineClamp\",\n    \"webkitLineDashOffset\",\n    \"webkitLockOrientation\",\n    \"webkitMask\",\n    \"webkitMaskClip\",\n    \"webkitMaskComposite\",\n    \"webkitMaskImage\",\n    \"webkitMaskOrigin\",\n    \"webkitMaskPosition\",\n    \"webkitMaskPositionX\",\n    \"webkitMaskPositionY\",\n    \"webkitMaskRepeat\",\n    \"webkitMaskSize\",\n    \"webkitMatchesSelector\",\n    \"webkitMediaStream\",\n    \"webkitNotifications\",\n    \"webkitOfflineAudioContext\",\n    \"webkitOrder\",\n    \"webkitOrientation\",\n    \"webkitPeerConnection00\",\n    \"webkitPersistentStorage\",\n    \"webkitPerspective\",\n    \"webkitPerspectiveOrigin\",\n    \"webkitPointerLockElement\",\n    \"webkitPostMessage\",\n    \"webkitPreservesPitch\",\n    \"webkitPutImageDataHD\",\n    \"webkitRTCPeerConnection\",\n    \"webkitRegionOverset\",\n    \"webkitRelativePath\",\n    \"webkitRequestAnimationFrame\",\n    \"webkitRequestFileSystem\",\n    \"webkitRequestFullScreen\",\n    \"webkitRequestFullscreen\",\n    \"webkitRequestPointerLock\",\n    \"webkitResolveLocalFileSystemURL\",\n    \"webkitSetMediaKeys\",\n    \"webkitSetResourceTimingBufferSize\",\n    \"webkitShadowRoot\",\n    \"webkitShowPlaybackTargetPicker\",\n    \"webkitSlice\",\n    \"webkitSpeechGrammar\",\n    \"webkitSpeechGrammarList\",\n    \"webkitSpeechRecognition\",\n    \"webkitSpeechRecognitionError\",\n    \"webkitSpeechRecognitionEvent\",\n    \"webkitStorageInfo\",\n    \"webkitSupportsFullscreen\",\n    \"webkitTemporaryStorage\",\n    \"webkitTextFillColor\",\n    \"webkitTextSizeAdjust\",\n    \"webkitTextStroke\",\n    \"webkitTextStrokeColor\",\n    \"webkitTextStrokeWidth\",\n    \"webkitTransform\",\n    \"webkitTransformOrigin\",\n    \"webkitTransformStyle\",\n    \"webkitTransition\",\n    \"webkitTransitionDelay\",\n    \"webkitTransitionDuration\",\n    \"webkitTransitionProperty\",\n    \"webkitTransitionTimingFunction\",\n    \"webkitURL\",\n    \"webkitUnlockOrientation\",\n    \"webkitUserSelect\",\n    \"webkitVideoDecodedByteCount\",\n    \"webkitVisibilityState\",\n    \"webkitWirelessVideoPlaybackDisabled\",\n    \"webkitdirectory\",\n    \"webkitdropzone\",\n    \"webstore\",\n    \"weight\",\n    \"whatToShow\",\n    \"wheelDelta\",\n    \"wheelDeltaX\",\n    \"wheelDeltaY\",\n    \"whenDefined\",\n    \"which\",\n    \"white-space\",\n    \"whiteSpace\",\n    \"wholeText\",\n    \"widows\",\n    \"width\",\n    \"will-change\",\n    \"willChange\",\n    \"willValidate\",\n    \"window\",\n    \"withCredentials\",\n    \"word-break\",\n    \"word-spacing\",\n    \"word-wrap\",\n    \"wordBreak\",\n    \"wordSpacing\",\n    \"wordWrap\",\n    \"workerStart\",\n    \"wrap\",\n    \"wrapKey\",\n    \"writable\",\n    \"writableAuxiliaries\",\n    \"write\",\n    \"writeText\",\n    \"writeValue\",\n    \"writeWithoutResponse\",\n    \"writeln\",\n    \"writing-mode\",\n    \"writingMode\",\n    \"x\",\n    \"x1\",\n    \"x2\",\n    \"xChannelSelector\",\n    \"xmlEncoding\",\n    \"xmlStandalone\",\n    \"xmlVersion\",\n    \"xmlbase\",\n    \"xmllang\",\n    \"xmlspace\",\n    \"xor\",\n    \"xr\",\n    \"y\",\n    \"y1\",\n    \"y2\",\n    \"yChannelSelector\",\n    \"yandex\",\n    \"z\",\n    \"z-index\",\n    \"zIndex\",\n    \"zoom\",\n    \"zoomAndPan\",\n    \"zoomRectScreen\",\n];\n","/***********************************************************************\n\n  A JavaScript tokenizer / parser / beautifier / compressor.\n  https://github.com/mishoo/UglifyJS2\n\n  -------------------------------- (C) ---------------------------------\n\n                           Author: Mihai Bazon\n                         <mihai.bazon@gmail.com>\n                       http://mihai.bazon.net/blog\n\n  Distributed under the BSD license:\n\n    Copyright 2012 (c) Mihai Bazon <mihai.bazon@gmail.com>\n\n    Redistribution and use in source and binary forms, with or without\n    modification, are permitted provided that the following conditions\n    are met:\n\n        * Redistributions of source code must retain the above\n          copyright notice, this list of conditions and the following\n          disclaimer.\n\n        * Redistributions in binary form must reproduce the above\n          copyright notice, this list of conditions and the following\n          disclaimer in the documentation and/or other materials\n          provided with the distribution.\n\n    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER “AS IS” AND ANY\n    EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n    PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER BE\n    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,\n    OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n    PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n    PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n    THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR\n    TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF\n    THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n    SUCH DAMAGE.\n\n ***********************************************************************/\n\n\"use strict\";\n/* global global, self */\n\nimport {\n    defaults,\n    push_uniq,\n} from \"./utils/index.js\";\nimport { base54 } from \"./scope.js\";\nimport {\n    AST_Binary,\n    AST_Call,\n    AST_ClassPrivateProperty,\n    AST_Conditional,\n    AST_Dot,\n    AST_DotHash,\n    AST_ObjectKeyVal,\n    AST_ObjectProperty,\n    AST_PrivateMethod,\n    AST_PrivateGetter,\n    AST_PrivateSetter,\n    AST_Sequence,\n    AST_String,\n    AST_Sub,\n    TreeTransformer,\n    TreeWalker,\n} from \"./ast.js\";\nimport { domprops } from \"../tools/domprops.js\";\n\nfunction find_builtins(reserved) {\n    domprops.forEach(add);\n\n    // Compatibility fix for some standard defined globals not defined on every js environment\n    var new_globals = [\"Symbol\", \"Map\", \"Promise\", \"Proxy\", \"Reflect\", \"Set\", \"WeakMap\", \"WeakSet\"];\n    var objects = {};\n    var global_ref = typeof global === \"object\" ? global : self;\n\n    new_globals.forEach(function (new_global) {\n        objects[new_global] = global_ref[new_global] || new Function();\n    });\n\n    [\n        \"null\",\n        \"true\",\n        \"false\",\n        \"NaN\",\n        \"Infinity\",\n        \"-Infinity\",\n        \"undefined\",\n    ].forEach(add);\n    [ Object, Array, Function, Number,\n      String, Boolean, Error, Math,\n      Date, RegExp, objects.Symbol, ArrayBuffer,\n      DataView, decodeURI, decodeURIComponent,\n      encodeURI, encodeURIComponent, eval, EvalError,\n      Float32Array, Float64Array, Int8Array, Int16Array,\n      Int32Array, isFinite, isNaN, JSON, objects.Map, parseFloat,\n      parseInt, objects.Promise, objects.Proxy, RangeError, ReferenceError,\n      objects.Reflect, objects.Set, SyntaxError, TypeError, Uint8Array,\n      Uint8ClampedArray, Uint16Array, Uint32Array, URIError,\n      objects.WeakMap, objects.WeakSet\n    ].forEach(function(ctor) {\n        Object.getOwnPropertyNames(ctor).map(add);\n        if (ctor.prototype) {\n            Object.getOwnPropertyNames(ctor.prototype).map(add);\n        }\n    });\n    function add(name) {\n        reserved.add(name);\n    }\n}\n\nfunction reserve_quoted_keys(ast, reserved) {\n    function add(name) {\n        push_uniq(reserved, name);\n    }\n\n    ast.walk(new TreeWalker(function(node) {\n        if (node instanceof AST_ObjectKeyVal && node.quote) {\n            add(node.key);\n        } else if (node instanceof AST_ObjectProperty && node.quote) {\n            add(node.key.name);\n        } else if (node instanceof AST_Sub) {\n            addStrings(node.property, add);\n        }\n    }));\n}\n\nfunction addStrings(node, add) {\n    node.walk(new TreeWalker(function(node) {\n        if (node instanceof AST_Sequence) {\n            addStrings(node.tail_node(), add);\n        } else if (node instanceof AST_String) {\n            add(node.value);\n        } else if (node instanceof AST_Conditional) {\n            addStrings(node.consequent, add);\n            addStrings(node.alternative, add);\n        }\n        return true;\n    }));\n}\n\nfunction mangle_private_properties(ast, options) {\n    var cprivate = -1;\n    var private_cache = new Map();\n    var nth_identifier = options.nth_identifier || base54;\n\n    ast =  ast.transform(new TreeTransformer(function(node) {\n        if (\n            node instanceof AST_ClassPrivateProperty\n            || node instanceof AST_PrivateMethod\n            || node instanceof AST_PrivateGetter\n            || node instanceof AST_PrivateSetter\n        ) {\n            node.key.name = mangle_private(node.key.name);\n        } else if (node instanceof AST_DotHash) {\n            node.property = mangle_private(node.property);\n        }\n    }));\n    return ast;\n\n    function mangle_private(name) {\n        let mangled = private_cache.get(name);\n        if (!mangled) {\n            mangled = nth_identifier.get(++cprivate);\n            private_cache.set(name, mangled);\n        }\n\n        return mangled;\n    }\n}\n\nfunction mangle_properties(ast, options) {\n    options = defaults(options, {\n        builtins: false,\n        cache: null,\n        debug: false,\n        keep_quoted: false,\n        nth_identifier: base54,\n        only_cache: false,\n        regex: null,\n        reserved: null,\n        undeclared: false,\n    }, true);\n\n    var nth_identifier = options.nth_identifier;\n\n    var reserved_option = options.reserved;\n    if (!Array.isArray(reserved_option)) reserved_option = [reserved_option];\n    var reserved = new Set(reserved_option);\n    if (!options.builtins) find_builtins(reserved);\n\n    var cname = -1;\n\n    var cache;\n    if (options.cache) {\n        cache = options.cache.props;\n    } else {\n        cache = new Map();\n    }\n\n    var regex = options.regex && new RegExp(options.regex);\n\n    // note debug is either false (disabled), or a string of the debug suffix to use (enabled).\n    // note debug may be enabled as an empty string, which is falsey. Also treat passing 'true'\n    // the same as passing an empty string.\n    var debug = options.debug !== false;\n    var debug_name_suffix;\n    if (debug) {\n        debug_name_suffix = (options.debug === true ? \"\" : options.debug);\n    }\n\n    var names_to_mangle = new Set();\n    var unmangleable = new Set();\n    // Track each already-mangled name to prevent nth_identifier from generating\n    // the same name.\n    cache.forEach((mangled_name) => unmangleable.add(mangled_name));\n\n    var keep_quoted = !!options.keep_quoted;\n\n    // step 1: find candidates to mangle\n    ast.walk(new TreeWalker(function(node) {\n        if (\n            node instanceof AST_ClassPrivateProperty\n            || node instanceof AST_PrivateMethod\n            || node instanceof AST_PrivateGetter\n            || node instanceof AST_PrivateSetter\n            || node instanceof AST_DotHash\n        ) {\n            // handled by mangle_private_properties\n        } else if (node instanceof AST_ObjectKeyVal) {\n            if (typeof node.key == \"string\" && (!keep_quoted || !node.quote)) {\n                add(node.key);\n            }\n        } else if (node instanceof AST_ObjectProperty) {\n            // setter or getter, since KeyVal is handled above\n            if (!keep_quoted || !node.quote) {\n                add(node.key.name);\n            }\n        } else if (node instanceof AST_Dot) {\n            var declared = !!options.undeclared;\n            if (!declared) {\n                var root = node;\n                while (root.expression) {\n                    root = root.expression;\n                }\n                declared = !(root.thedef && root.thedef.undeclared);\n            }\n            if (declared &&\n                (!keep_quoted || !node.quote)) {\n                add(node.property);\n            }\n        } else if (node instanceof AST_Sub) {\n            if (!keep_quoted) {\n                addStrings(node.property, add);\n            }\n        } else if (node instanceof AST_Call\n            && node.expression.print_to_string() == \"Object.defineProperty\") {\n            addStrings(node.args[1], add);\n        } else if (node instanceof AST_Binary && node.operator === \"in\") {\n            addStrings(node.left, add);\n        }\n    }));\n\n    // step 2: transform the tree, renaming properties\n    return ast.transform(new TreeTransformer(function(node) {\n        if (\n            node instanceof AST_ClassPrivateProperty\n            || node instanceof AST_PrivateMethod\n            || node instanceof AST_PrivateGetter\n            || node instanceof AST_PrivateSetter\n            || node instanceof AST_DotHash\n        ) {\n            // handled by mangle_private_properties\n        } else if (node instanceof AST_ObjectKeyVal) {\n            if (typeof node.key == \"string\" && (!keep_quoted || !node.quote)) {\n                node.key = mangle(node.key);\n            }\n        } else if (node instanceof AST_ObjectProperty) {\n            // setter, getter, method or class field\n            if (!keep_quoted || !node.quote) {\n                node.key.name = mangle(node.key.name);\n            }\n        } else if (node instanceof AST_Dot) {\n            if (!keep_quoted || !node.quote) {\n                node.property = mangle(node.property);\n            }\n        } else if (!keep_quoted && node instanceof AST_Sub) {\n            node.property = mangleStrings(node.property);\n        } else if (node instanceof AST_Call\n            && node.expression.print_to_string() == \"Object.defineProperty\") {\n            node.args[1] = mangleStrings(node.args[1]);\n        } else if (node instanceof AST_Binary && node.operator === \"in\") {\n            node.left = mangleStrings(node.left);\n        }\n    }));\n\n    // only function declarations after this line\n\n    function can_mangle(name) {\n        if (unmangleable.has(name)) return false;\n        if (reserved.has(name)) return false;\n        if (options.only_cache) {\n            return cache.has(name);\n        }\n        if (/^-?[0-9]+(\\.[0-9]+)?(e[+-][0-9]+)?$/.test(name)) return false;\n        return true;\n    }\n\n    function should_mangle(name) {\n        if (regex && !regex.test(name)) return false;\n        if (reserved.has(name)) return false;\n        return cache.has(name)\n            || names_to_mangle.has(name);\n    }\n\n    function add(name) {\n        if (can_mangle(name))\n            names_to_mangle.add(name);\n\n        if (!should_mangle(name)) {\n            unmangleable.add(name);\n        }\n    }\n\n    function mangle(name) {\n        if (!should_mangle(name)) {\n            return name;\n        }\n\n        var mangled = cache.get(name);\n        if (!mangled) {\n            if (debug) {\n                // debug mode: use a prefix and suffix to preserve readability, e.g. o.foo -> o._$foo$NNN_.\n                var debug_mangled = \"_$\" + name + \"$\" + debug_name_suffix + \"_\";\n\n                if (can_mangle(debug_mangled)) {\n                    mangled = debug_mangled;\n                }\n            }\n\n            // either debug mode is off, or it is on and we could not use the mangled name\n            if (!mangled) {\n                do {\n                    mangled = nth_identifier.get(++cname);\n                } while (!can_mangle(mangled));\n            }\n\n            cache.set(name, mangled);\n        }\n        return mangled;\n    }\n\n    function mangleStrings(node) {\n        return node.transform(new TreeTransformer(function(node) {\n            if (node instanceof AST_Sequence) {\n                var last = node.expressions.length - 1;\n                node.expressions[last] = mangleStrings(node.expressions[last]);\n            } else if (node instanceof AST_String) {\n                node.value = mangle(node.value);\n            } else if (node instanceof AST_Conditional) {\n                node.consequent = mangleStrings(node.consequent);\n                node.alternative = mangleStrings(node.alternative);\n            }\n            return node;\n        }));\n    }\n}\n\nexport {\n    reserve_quoted_keys,\n    mangle_properties,\n    mangle_private_properties,\n};\n","\"use strict\";\n/* eslint-env browser, es6, node */\n\nimport {\n    defaults,\n    map_from_object,\n    map_to_object,\n    HOP,\n} from \"./utils/index.js\";\nimport { AST_Toplevel, AST_Node } from \"./ast.js\";\nimport { parse } from \"./parse.js\";\nimport { OutputStream } from \"./output.js\";\nimport { Compressor } from \"./compress/index.js\";\nimport { base54 } from \"./scope.js\";\nimport { SourceMap } from \"./sourcemap.js\";\nimport {\n    mangle_properties,\n    mangle_private_properties,\n    reserve_quoted_keys,\n} from \"./propmangle.js\";\n\nvar to_ascii = typeof atob == \"undefined\" ? function(b64) {\n    return Buffer.from(b64, \"base64\").toString();\n} : atob;\nvar to_base64 = typeof btoa == \"undefined\" ? function(str) {\n    return Buffer.from(str).toString(\"base64\");\n} : btoa;\n\nfunction read_source_map(code) {\n    var match = /(?:^|[^.])\\/\\/# sourceMappingURL=data:application\\/json(;[\\w=-]*)?;base64,([+/0-9A-Za-z]*=*)\\s*$/.exec(code);\n    if (!match) {\n        console.warn(\"inline source map not found\");\n        return null;\n    }\n    return to_ascii(match[2]);\n}\n\nfunction set_shorthand(name, options, keys) {\n    if (options[name]) {\n        keys.forEach(function(key) {\n            if (options[key]) {\n                if (typeof options[key] != \"object\") options[key] = {};\n                if (!(name in options[key])) options[key][name] = options[name];\n            }\n        });\n    }\n}\n\nfunction init_cache(cache) {\n    if (!cache) return;\n    if (!(\"props\" in cache)) {\n        cache.props = new Map();\n    } else if (!(cache.props instanceof Map)) {\n        cache.props = map_from_object(cache.props);\n    }\n}\n\nfunction cache_to_json(cache) {\n    return {\n        props: map_to_object(cache.props)\n    };\n}\n\nasync function minify(files, options) {\n    options = defaults(options, {\n        compress: {},\n        ecma: undefined,\n        enclose: false,\n        ie8: false,\n        keep_classnames: undefined,\n        keep_fnames: false,\n        mangle: {},\n        module: false,\n        nameCache: null,\n        output: null,\n        format: null,\n        parse: {},\n        rename: undefined,\n        safari10: false,\n        sourceMap: false,\n        spidermonkey: false,\n        timings: false,\n        toplevel: false,\n        warnings: false,\n        wrap: false,\n    }, true);\n    var timings = options.timings && {\n        start: Date.now()\n    };\n    if (options.keep_classnames === undefined) {\n        options.keep_classnames = options.keep_fnames;\n    }\n    if (options.rename === undefined) {\n        options.rename = options.compress && options.mangle;\n    }\n    if (options.output && options.format) {\n        throw new Error(\"Please only specify either output or format option, preferrably format.\");\n    }\n    options.format = options.format || options.output || {};\n    set_shorthand(\"ecma\", options, [ \"parse\", \"compress\", \"format\" ]);\n    set_shorthand(\"ie8\", options, [ \"compress\", \"mangle\", \"format\" ]);\n    set_shorthand(\"keep_classnames\", options, [ \"compress\", \"mangle\" ]);\n    set_shorthand(\"keep_fnames\", options, [ \"compress\", \"mangle\" ]);\n    set_shorthand(\"module\", options, [ \"parse\", \"compress\", \"mangle\" ]);\n    set_shorthand(\"safari10\", options, [ \"mangle\", \"format\" ]);\n    set_shorthand(\"toplevel\", options, [ \"compress\", \"mangle\" ]);\n    set_shorthand(\"warnings\", options, [ \"compress\" ]); // legacy\n    var quoted_props;\n    if (options.mangle) {\n        options.mangle = defaults(options.mangle, {\n            cache: options.nameCache && (options.nameCache.vars || {}),\n            eval: false,\n            ie8: false,\n            keep_classnames: false,\n            keep_fnames: false,\n            module: false,\n            nth_identifier: base54,\n            properties: false,\n            reserved: [],\n            safari10: false,\n            toplevel: false,\n        }, true);\n        if (options.mangle.properties) {\n            if (typeof options.mangle.properties != \"object\") {\n                options.mangle.properties = {};\n            }\n            if (options.mangle.properties.keep_quoted) {\n                quoted_props = options.mangle.properties.reserved;\n                if (!Array.isArray(quoted_props)) quoted_props = [];\n                options.mangle.properties.reserved = quoted_props;\n            }\n            if (options.nameCache && !(\"cache\" in options.mangle.properties)) {\n                options.mangle.properties.cache = options.nameCache.props || {};\n            }\n        }\n        init_cache(options.mangle.cache);\n        init_cache(options.mangle.properties.cache);\n    }\n    if (options.sourceMap) {\n        options.sourceMap = defaults(options.sourceMap, {\n            asObject: false,\n            content: null,\n            filename: null,\n            includeSources: false,\n            root: null,\n            url: null,\n        }, true);\n    }\n    if (timings) timings.parse = Date.now();\n    var toplevel;\n    if (files instanceof AST_Toplevel) {\n        toplevel = files;\n    } else {\n        if (typeof files == \"string\" || (options.parse.spidermonkey && !Array.isArray(files))) {\n            files = [ files ];\n        }\n        options.parse = options.parse || {};\n        options.parse.toplevel = null;\n\n        if (options.parse.spidermonkey) {\n            options.parse.toplevel = AST_Node.from_mozilla_ast(Object.keys(files).reduce(function(toplevel, name) {\n                if (!toplevel) return files[name];\n                toplevel.body = toplevel.body.concat(files[name].body);\n                return toplevel;\n            }, null));\n        } else {\n            delete options.parse.spidermonkey;\n\n            for (var name in files) if (HOP(files, name)) {\n                options.parse.filename = name;\n                options.parse.toplevel = parse(files[name], options.parse);\n                if (options.sourceMap && options.sourceMap.content == \"inline\") {\n                    if (Object.keys(files).length > 1)\n                        throw new Error(\"inline source map only works with singular input\");\n                    options.sourceMap.content = read_source_map(files[name]);\n                }\n            }\n        }\n\n        toplevel = options.parse.toplevel;\n    }\n    if (quoted_props && options.mangle.properties.keep_quoted !== \"strict\") {\n        reserve_quoted_keys(toplevel, quoted_props);\n    }\n    if (options.wrap) {\n        toplevel = toplevel.wrap_commonjs(options.wrap);\n    }\n    if (options.enclose) {\n        toplevel = toplevel.wrap_enclose(options.enclose);\n    }\n    if (timings) timings.rename = Date.now();\n    // disable rename on harmony due to expand_names bug in for-of loops\n    // https://github.com/mishoo/UglifyJS2/issues/2794\n    if (0 && options.rename) {\n        toplevel.figure_out_scope(options.mangle);\n        toplevel.expand_names(options.mangle);\n    }\n    if (timings) timings.compress = Date.now();\n    if (options.compress) {\n        toplevel = new Compressor(options.compress, {\n            mangle_options: options.mangle\n        }).compress(toplevel);\n    }\n    if (timings) timings.scope = Date.now();\n    if (options.mangle) toplevel.figure_out_scope(options.mangle);\n    if (timings) timings.mangle = Date.now();\n    if (options.mangle) {\n        toplevel.compute_char_frequency(options.mangle);\n        toplevel.mangle_names(options.mangle);\n        toplevel = mangle_private_properties(toplevel, options.mangle);\n    }\n    if (timings) timings.properties = Date.now();\n    if (options.mangle && options.mangle.properties) {\n        toplevel = mangle_properties(toplevel, options.mangle.properties);\n    }\n    if (timings) timings.format = Date.now();\n    var result = {};\n    if (options.format.ast) {\n        result.ast = toplevel;\n    }\n    if (options.format.spidermonkey) {\n        result.ast = toplevel.to_mozilla_ast();\n    }\n    if (!HOP(options.format, \"code\") || options.format.code) {\n        if (options.sourceMap) {\n            options.format.source_map = await SourceMap({\n                file: options.sourceMap.filename,\n                orig: options.sourceMap.content,\n                root: options.sourceMap.root\n            });\n            if (options.sourceMap.includeSources) {\n                if (files instanceof AST_Toplevel) {\n                    throw new Error(\"original source content unavailable\");\n                } else for (var name in files) if (HOP(files, name)) {\n                    options.format.source_map.get().setSourceContent(name, files[name]);\n                }\n            }\n        }\n        delete options.format.ast;\n        delete options.format.code;\n        delete options.format.spidermonkey;\n        var stream = OutputStream(options.format);\n        toplevel.print(stream);\n        result.code = stream.get();\n        if (options.sourceMap) {\n            if(options.sourceMap.asObject) {\n                result.map = options.format.source_map.get().toJSON();\n            } else {\n                result.map = options.format.source_map.toString();\n            }\n            if (options.sourceMap.url == \"inline\") {\n                var sourceMap = typeof result.map === \"object\" ? JSON.stringify(result.map) : result.map;\n                result.code += \"\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\" + to_base64(sourceMap);\n            } else if (options.sourceMap.url) {\n                result.code += \"\\n//# sourceMappingURL=\" + options.sourceMap.url;\n            }\n        }\n    }\n    if (options.nameCache && options.mangle) {\n        if (options.mangle.cache) options.nameCache.vars = cache_to_json(options.mangle.cache);\n        if (options.mangle.properties && options.mangle.properties.cache) {\n            options.nameCache.props = cache_to_json(options.mangle.properties.cache);\n        }\n    }\n    if (options.format && options.format.source_map) {\n        options.format.source_map.destroy();\n    }\n    if (timings) {\n        timings.end = Date.now();\n        result.timings = {\n            parse: 1e-3 * (timings.rename - timings.parse),\n            rename: 1e-3 * (timings.compress - timings.rename),\n            compress: 1e-3 * (timings.scope - timings.compress),\n            scope: 1e-3 * (timings.mangle - timings.scope),\n            mangle: 1e-3 * (timings.properties - timings.mangle),\n            properties: 1e-3 * (timings.format - timings.properties),\n            format: 1e-3 * (timings.end - timings.format),\n            total: 1e-3 * (timings.end - timings.start)\n        };\n    }\n    return result;\n}\n\nexport {\n  minify,\n  to_ascii,\n};\n","/***********************************************************************\n\n  A JavaScript tokenizer / parser / beautifier / compressor.\n  https://github.com/mishoo/UglifyJS2\n\n  -------------------------------- (C) ---------------------------------\n\n                           Author: Mihai Bazon\n                         <mihai.bazon@gmail.com>\n                       http://mihai.bazon.net/blog\n\n  Distributed under the BSD license:\n\n    Copyright 2012 (c) Mihai Bazon <mihai.bazon@gmail.com>\n\n    Redistribution and use in source and binary forms, with or without\n    modification, are permitted provided that the following conditions\n    are met:\n\n        * Redistributions of source code must retain the above\n          copyright notice, this list of conditions and the following\n          disclaimer.\n\n        * Redistributions in binary form must reproduce the above\n          copyright notice, this list of conditions and the following\n          disclaimer in the documentation and/or other materials\n          provided with the distribution.\n\n    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER “AS IS” AND ANY\n    EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n    PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER BE\n    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,\n    OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n    PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n    PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n    THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR\n    TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF\n    THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n    SUCH DAMAGE.\n\n ***********************************************************************/\n\n\"use strict\";\n\nimport MOZ_SourceMap from \"source-map\";\nimport {\n    defaults,\n} from \"./utils/index.js\";\n\n// a small wrapper around fitzgen's source-map library\nasync function SourceMap(options) {\n    options = defaults(options, {\n        file : null,\n        root : null,\n        orig : null,\n\n        orig_line_diff : 0,\n        dest_line_diff : 0,\n    });\n\n    var orig_map;\n    var generator = new MOZ_SourceMap.SourceMapGenerator({\n        file       : options.file,\n        sourceRoot : options.root\n    });\n\n    if (options.orig) {\n        orig_map = await new MOZ_SourceMap.SourceMapConsumer(options.orig);\n        orig_map.sources.forEach(function(source) {\n            var sourceContent = orig_map.sourceContentFor(source, true);\n            if (sourceContent) {\n                generator.setSourceContent(source, sourceContent);\n            }\n        });\n    }\n\n    function add(source, gen_line, gen_col, orig_line, orig_col, name) {\n        if (orig_map) {\n            var info = orig_map.originalPositionFor({\n                line: orig_line,\n                column: orig_col\n            });\n            if (info.source === null) {\n                return;\n            }\n            source = info.source;\n            orig_line = info.line;\n            orig_col = info.column;\n            name = info.name || name;\n        }\n        generator.addMapping({\n            generated : { line: gen_line + options.dest_line_diff, column: gen_col },\n            original  : { line: orig_line + options.orig_line_diff, column: orig_col },\n            source    : source,\n            name      : name\n        });\n    }\n\n    return {\n        add        : add,\n        get        : function() { return generator; },\n        toString   : function() { return generator.toString(); },\n        destroy    : function () {\n            if (orig_map && orig_map.destroy) {\n                orig_map.destroy();\n            }\n        }\n    };\n}\n\nexport {\n    SourceMap,\n};\n"],"names":["pako","assign","require","module","exports","zlib_deflate","utils","strings","msg","ZStream","toString","Object","prototype","Deflate","options","this","level","method","chunkSize","windowBits","memLevel","strategy","to","opt","raw","gzip","err","ended","chunks","strm","avail_out","status","deflateInit2","Error","header","deflateSetHeader","dictionary","dict","string2buf","call","Uint8Array","deflateSetDictionary","_dict_set","deflate","input","deflator","push","result","data","mode","_mode","next_in","avail_in","length","output","Buf8","next_out","onEnd","onData","buf2binstring","shrinkBuf","deflateEnd","chunk","join","flattenChunks","deflateRaw","zlib_inflate","c","GZheader","Inflate","inflateInit2","Z_OK","inflateGetHeader","inflateSetDictionary","inflate","inflator","next_out_utf8","tail","utf8str","allowBufError","Z_FINISH","Z_NO_FLUSH","binstring2buf","Z_NEED_DICT","Z_BUF_ERROR","Z_STREAM_END","Z_SYNC_FLUSH","utf8border","buf2string","arraySet","inflateEnd","inflateRaw","ungzip","TYPED_OK","Uint16Array","Int32Array","_has","obj","key","hasOwnProperty","sources","Array","slice","arguments","source","shift","TypeError","p","buf","size","subarray","fnTyped","dest","src","src_offs","len","dest_offs","set","i","l","pos","fnUntyped","concat","apply","setTyped","on","Buf16","Buf32","STR_APPLY_OK","STR_APPLY_UIA_OK","String","fromCharCode","__","_utf8len","q","str","c2","m_pos","str_len","buf_len","charCodeAt","max","out","c_len","utf16buf","adler","s1","s2","n","Z_PARTIAL_FLUSH","Z_FULL_FLUSH","Z_BLOCK","Z_TREES","Z_ERRNO","Z_STREAM_ERROR","Z_DATA_ERROR","Z_NO_COMPRESSION","Z_BEST_SPEED","Z_BEST_COMPRESSION","Z_DEFAULT_COMPRESSION","Z_FILTERED","Z_HUFFMAN_ONLY","Z_RLE","Z_FIXED","Z_DEFAULT_STRATEGY","Z_BINARY","Z_TEXT","Z_UNKNOWN","Z_DEFLATED","crcTable","table","k","makeTable","crc","t","end","configuration_table","trees","adler32","crc32","MAX_MATCH","MIN_LOOKAHEAD","HCRC_STATE","BUSY_STATE","FINISH_STATE","errorCode","rank","f","zero","flush_pending","s","state","pending","pending_buf","pending_out","total_out","flush_block_only","last","_tr_flush_block","block_start","strstart","put_byte","b","putShortMSB","read_buf","start","wrap","total_in","longest_match","cur_match","match","chain_length","max_chain_length","scan","best_len","prev_length","nice_match","limit","w_size","_win","window","wmask","w_mask","prev","strend","scan_end1","scan_end","good_match","lookahead","match_start","fill_window","m","more","_w_size","window_size","hash_size","head","insert","ins_h","hash_shift","hash_mask","deflate_fast","flush","hash_head","bflush","match_length","_tr_tally","max_lazy_match","MIN_MATCH","last_lit","deflate_slow","max_insert","prev_match","match_available","Config","good_length","max_lazy","nice_length","max_chain","func","DeflateState","pending_buf_size","gzhead","gzindex","last_flush","w_bits","hash_bits","dyn_ltree","HEAP_SIZE","dyn_dtree","bl_tree","l_desc","d_desc","bl_desc","bl_count","MAX_BITS","heap","heap_len","heap_max","depth","l_buf","lit_bufsize","d_buf","opt_len","static_len","matches","bi_buf","bi_valid","deflateResetKeep","data_type","_tr_init","deflateReset","ret","max_block_size","max_start","deflateInit","old_flush","beg","val","text","hcrc","extra","name","comment","time","os","bstate","deflate_huff","deflate_rle","_tr_align","_tr_stored_block","avail","next","tmpDict","dictLength","deflateInfo","xflags","extra_len","done","_in","_out","dmax","wsize","whave","wnext","s_window","hold","bits","lcode","dcode","lmask","dmask","here","op","dist","from","from_source","lencode","distcode","lenbits","distbits","top","dolen","dodist","sane","inflate_fast","inflate_table","TYPE","BAD","zswap32","InflateState","havedict","flags","check","total","wbits","offset","ncode","nlen","ndist","have","lens","work","lendyn","distdyn","back","was","inflateResetKeep","inflateReset","inflateReset2","lenfix","distfix","virgin","fixedtables","sym","updatewindow","copy","inflateInit","put","left","here_bits","here_op","here_val","last_bits","last_op","last_val","opts","hbuf","order","inf_leave","inflateInfo","MAXBITS","lbase","lext","dbase","dext","type","lens_index","codes","table_index","incr","fill","low","mask","min","root","curr","drop","used","huff","base","base_index","count","offs","extra_index","LITERALS","L_CODES","D_CODES","extra_lbits","extra_dbits","extra_blbits","bl_order","static_ltree","static_dtree","_dist_code","_length_code","base_length","static_l_desc","static_d_desc","static_bl_desc","base_dist","StaticTreeDesc","static_tree","extra_bits","extra_base","elems","max_length","has_stree","TreeDesc","dyn_tree","stat_desc","max_code","d_code","put_short","w","send_bits","value","send_code","tree","bi_reverse","code","res","gen_codes","next_code","init_block","END_BLOCK","bi_windup","smaller","_n2","_m2","pqdownheap","v","j","compress_block","ltree","dtree","lc","lx","build_tree","desc","node","stree","h","xbits","overflow","gen_bitlen","scan_tree","curlen","prevlen","nextlen","max_count","min_count","REP_3_6","REPZ_3_10","REPZ_11_138","send_tree","static_init_done","stored_len","copy_block","LENGTH_CODES","tr_static_init","opt_lenb","static_lenb","max_blindex","black_mask","detect_data_type","BL_CODES","build_bl_tree","lcodes","dcodes","blcodes","send_all_trees","STATIC_TREES","bi_flush","ArraySet","constructor","_array","_set","Map","aArray","aAllowDuplicates","add","aStr","isDuplicate","has","idx","indexOf","get","at","aIdx","toArray","base64","encode","aValue","digit","encoded","vlq","toVLQSigned","VLQ_BASE","intToCharMap","split","number","recursiveSearch","aLow","aHigh","aNeedle","aHaystack","aCompare","aBias","mid","Math","floor","cmp","LEAST_UPPER_BOUND","GREATEST_LOWER_BOUND","search","index","util","_sorted","_last","generatedLine","generatedColumn","unsortedForEach","aCallback","aThisArg","forEach","aMapping","mappingA","mappingB","lineA","lineB","columnA","columnB","compareByGeneratedPositionsInflated","generatedPositionAfter","sort","fetch","mappingsWasmUrl","then","response","arrayBuffer","initialize","url","fs","path","Promise","resolve","reject","wasmPath","readFile","error","buffer","_","console","debug","binarySearch","readWasm","wasm","INTERNAL","Symbol","SourceMapConsumer","aSourceMap","aSourceMapURL","sourceMap","parseSourceMapInput","consumer","sections","IndexedSourceMapConsumer","BasicSourceMapConsumer","_factory","fromSourceMap","_factoryBSM","rawSourceMap","sourceMapUrl","x","destroy","e","_parseMappings","aSourceRoot","eachMapping","aContext","aOrder","allGeneratedPositionsFor","aArgs","_version","GENERATED_ORDER","ORIGINAL_ORDER","super","that","version","getArg","names","sourceRoot","sourcesContent","mappings","file","normalize","map","isAbsolute","relative","_names","fromArray","_sources","_absoluteSources","computeSourceURL","_mappings","_sourceMapURL","_computedColumnSpans","_mappingsPtr","_wasm","_findSourceIndex","aSource","relativeSource","_getMappingsPtr","mappingsBufPtr","allocate_mappings","mappingsBuf","memory","mappingsPtr","parse_mappings","get_last_error","context","withMappingCallback","mapping","by_generated_location","by_original_location","originalLine","originalColumn","column","lastColumn","lastGeneratedColumn","Infinity","line","all_generated_locations_for","free_mappings","computeColumnSpans","compute_column_spans","originalPositionFor","needle","bias","original_location_for","hasContentsOfAllSources","some","sc","sourceContentFor","nullOnMissing","urlParse","fileUriAbsPath","replace","scheme","generatedPositionFor","generated_location_for","__generatedMappings","__originalMappings","__generatedMappingsUnsorted","__originalMappingsUnsorted","lastOffset","all","offsetLine","offsetColumn","generatedOffset","_sections","_generatedMappings","_sortGeneratedMappings","_originalMappings","_sortOriginalMappings","_generatedMappingsUnsorted","_originalMappingsUnsorted","compareByGeneratedPositionsDeflated","compareByOriginalPositions","sectionIndex","section","every","content","generatedPosition","generatedMappings","originalMappings","sectionMappings","adjustedMapping","_findMapping","aMappings","aLineName","aColumnName","aComparator","undefined","base64VLQ","MappingList","SourceMapGenerator","_file","_sourceRoot","_skipValidation","_sourcesContents","aSourceMapConsumer","generator","newMapping","generated","original","addMapping","sourceFile","sourceRelative","setSourceContent","_validateMapping","aSourceFile","aSourceContent","create","toSetString","keys","applySourceMap","aSourceMapPath","newSources","newNames","srcFile","aGenerated","aOriginal","aName","JSON","stringify","_serializeMappings","nameIdx","sourceIdx","previousGeneratedColumn","previousGeneratedLine","previousOriginalColumn","previousOriginalLine","previousName","previousSource","_generateSourcesContent","aSources","toJSON","REGEX_NEWLINE","isSourceNode","SourceNode","aLine","aColumn","aChunks","children","sourceContents","aGeneratedCode","aRelativePath","remainingLines","remainingLinesIndex","shiftNextLine","getNextLine","nextLine","lastGeneratedLine","lastMapping","substr","addMappingWithCode","splice","aChunk","isArray","prepend","unshift","walk","aFn","aSep","newChildren","replaceRight","aPattern","aReplacement","lastChild","walkSourceContents","fromSetString","toStringWithSourceMap","sourceMappingActive","lastOriginalSource","lastOriginalLine","lastOriginalColumn","lastOriginalName","sourceContent","aDefaultValue","urlRegexp","dataUrlRegexp","aUrl","auth","host","port","urlGenerate","aParsedUrl","cache","temp","pop","lruMemoize","aPath","parts","up","part","aRoot","aPathUrl","aRootUrl","joined","charAt","test","lastIndexOf","supportsNullProto","identity","isProtoString","strcmp","aStr1","aStr2","onlyCompareOriginal","onlyCompareGenerated","parse","sourceURL","sourceMapURL","parsed","substring","Mapping","cachedWasm","callbackStack","WebAssembly","instantiate","env","mapping_callback","hasLastGeneratedColumn","hasOriginal","hasName","start_all_generated_locations_for","end_all_generated_locations_for","timeEnd","start_compute_column_spans","end_compute_column_spans","start_generated_location_for","end_generated_location_for","start_original_location_for","end_original_location_for","start_parse_mappings","end_parse_mappings","start_sort_by_generated_location","end_sort_by_generated_location","start_sort_by_original_location","end_sort_by_original_location","Wasm","instance","mappingCallback","proxyMarker","createEndpoint","releaseProxy","throwMarker","isObject","transferHandlers","canHandle","serialize","port1","port2","MessageChannel","expose","deserialize","createProxy","target","serialized","isError","message","stack","ep","self","addEventListener","callback","ev","id","argumentList","fromWireValue","returnValue","parent","reduce","prop","rawValue","proxy","transfers","transferCache","transfer","catch","wireValue","transferables","toWireValue","postMessage","removeEventListener","closeEndPoint","endpoint","isMessagePort","close","throwIfProxyReleased","isReleased","isProxyReleased","Proxy","_target","requestResponseMessage","r","bind","_thisArg","rawArgumentList","processArguments","construct","processed","arr","WeakMap","handler","serializedValue","random","Number","MAX_SAFE_INTEGER","characters","member","array","includes","DefaultsError","defs","defaults","args","croak","HOP","ecma","noop","return_false","return_true","return_this","return_null","MAP","a","backwards","doit","is_last","Last","AtTop","Splice","reverse","skip","at_top","make_node","ctor","orig","props","push_uniq","el","string_template","remove","mergeSort","_ms","right","ai","bi","merge","makePredicate","words","Set","map_add","map_to_object","keep_name","keep_setting","RegExp","lineTerminatorEscape","regexp_source_fix","has_annotation","annotation","_annotations","set_annotation","LATEST_RAW","LATEST_TEMPLATE_END","KEYWORDS","KEYWORDS_ATOM","RESERVED_WORDS","ALL_RESERVED_WORDS","KEYWORDS_BEFORE_EXPRESSION","OPERATOR_CHARS","RE_NUM_LITERAL","RE_HEX_NUMBER","RE_OCT_NUMBER","RE_ES6_OCT_NUMBER","RE_BIN_NUMBER","RE_DEC_NUMBER","RE_BIG_INT","OPERATORS","WHITESPACE_CHARS","NEWLINE_CHARS","PUNC_AFTER_EXPRESSION","PUNC_BEFORE_EXPRESSION","PUNC_CHARS","UNICODE","ID_Start","ID_Continue","get_full_char","is_surrogate_pair_head","is_surrogate_pair_tail","is_digit","is_identifier_start","ch","is_identifier_char","BASIC_IDENT","is_basic_identifier_string","is_identifier_string","allow_surrogates","exec","parse_js_number","num","allow_e","NaN","parseInt","parseFloat","JS_Parse_Error","filename","col","js_error","is_token","token","EX_EOF","tokenizer","$TEXT","html5_comments","shebang","S","tokpos","tokline","tokcol","newline_before","regex_allowed","brace_counter","template_braces","comments_before","directives","directive_stack","peek","is_option_chain_op","cannot_be_digit","signal_eof","in_string","forward","looking_at","find","what","start_token","prev_was_dot","previous_token","is_comment","UNARY_POSTFIX","nlb","comments_after","tok","AST_Token","skip_whitespace","parse_error","read_num","prefix","has_e","after_e","has_x","has_dot","is_big_int","numeric_separator","pred","read_while","next_token","has_directive","endsWith","without_n","valid","isNaN","is_octal","read_escaped_char","strict_hex","template_string","hex_bytes","strict_octal","read_octal_escape_sequence","read_string","with_eof_error","start_pos","quote","read_template_characters","begin","tmp","skip_line_comment","find_eol","skip_multiline_comment","surrogates","get_full_char_length","read_name","escaped","read_escaped_identifier_char","name_str","read_regexp","prev_backslash","in_class","read_operator","grow","bigger","handle_slash","read_word","word","eof_error","cont","ex","force_regexp","nc","add_directive","directive","push_directives_stack","pop_directives_stack","UNARY_PREFIX","ASSIGNMENT","LOGICAL_ASSIGNMENT","PRECEDENCE","ATOMIC_START_TOKEN","outer_comments_before_counts","bare_returns","expression","strict","toplevel","peeked","in_function","in_async","in_generator","in_directives","in_loop","labels","is","ctx","token_error","unexpected","expect_token","expect","punc","has_newline_before","can_insert_semicolon","is_in_generator","can_await","semicolon","optional","parenthesised","exp","embed_tokens","parser","expr","handle_regexp","statement","is_export_default","is_for_body","is_if_body","dir","stat","simple_statement","body","AST_String","AST_Directive","function_","AST_Defun","imported_name","imported_names","as_symbol","AST_SymbolImport","map_names","mod_str","assert_clause","maybe_import_assertion","AST_Import","module_name","import_statement","labeled_statement","AST_BlockStatement","block_","AST_EmptyStatement","break_cont","AST_Break","AST_Continue","AST_Debugger","condition","AST_Do","AST_While","for_await_error","await_tok","init","var_","let_","const_","is_in","is_of","AST_Definitions","definitions","is_assignable","to_destructuring","AST_Destructuring","for_in","for_of","regular_for","for_","class_","AST_DefClass","if_","AST_Return","AST_Switch","switch_body_","AST_Throw","bcatch","bfinally","parameter","AST_SymbolCatch","AST_Catch","argname","AST_Finally","AST_Try","try_","AST_With","export_statement","label","AST_Label","AST_IterationStatement","references","ref","AST_LabeledStatement","AST_SimpleStatement","ldef","AST_LabelRef","thedef","step","AST_For","is_await","lhs","AST_ForOf","await","object","AST_ForIn","arrow_function","argnames","is_async","_function_body","AST_Arrow","async","is_generator_property","in_statement","is_generator","AST_SymbolDefun","AST_SymbolLambda","AST_Function","AST_Accessor","AST_SymbolDeclaration","track_used_binding_identifiers","is_parameter","parameters","duplicate","default_assignment","spread","strict_mode","tracker","add_parameter","check_strict","mark_default_assignment","mark_spread","mark_strict_mode","is_strict","used_parameters","symbol_type","param","expand","binding_element","AST_DefaultAssign","operator","AST_Expansion","expand_token","elements","first","is_expand","first_token","AST_SymbolFunarg","AST_Hole","is_array","AST_ObjectKeyVal","property_token","property","as_property_name","block","loop","current_generator","current_async","params","_verify_symbol","cond","belse","AST_If","alternative","cur","branch","AST_Case","AST_Default","vardefs","no_in","kind","def","sym_type","AST_SymbolVar","AST_SymbolConst","AST_SymbolLet","AST_VarDef","AST_Var","AST_Let","AST_Const","as_atom_node","_make_symbol","AST_SymbolRef","AST_Number","AST_BigInt","AST_RegExp","AST_False","AST_True","AST_Null","to_fun_args","default_seen_above","insert_default","default_value","AST_Object","properties","AST_Array","elm","AST_Assign","expr_atom","allow_calls","allow_arrows","subscripts","AST_NewTarget","newexp","expr_list","AST_New","annotate","new_","AST_ImportMeta","import_meta","exprs","maybe_sequence","spread_token","invalid_sequence","trailing_comma","params_or_seq_","AST_Call","AST_Sequence","expressions","outer_comments_before","array_","object_or_destructuring_","cls","AST_ClassExpression","segments","AST_TemplateSegment","AST_TemplateString","closing","allow_trailing_comma","allow_empty","create_accessor","concise","concise_method_or_getset","logical","AST_Node","KindOfClass","class_name","extends_","AST_SymbolDefClass","AST_SymbolClass","extends","is_class","get_symbol_ast","SymbolClass","AST_SymbolMethod","is_not_method_start","is_static","is_private","accessor_type","AST_PrivateGetter","AST_PrivateSetter","static","AccessorClass","AST_ObjectGetter","AST_ObjectSetter","AST_PrivateMethod","AST_ConciseMethod","AST_SymbolClassProperty","AST_ClassPropertyVariant","AST_ClassPrivateProperty","AST_ClassProperty","map_name","is_import","make_symbol","foreign_name","foreign_type","AST_SymbolImportForeign","AST_SymbolExportForeign","AST_SymbolExport","AST_NameMapping","map_nameAsterisk","is_default","exported_names","exported_value","exported_definition","AST_Export","as_name","AST_This","AST_Super","noerror","comments","comments_outside_parens","_PURE","_INLINE","_NOINLINE","is_chain","AST_DotVariant","AST_DotHash","AST_Dot","AST_Sub","call_args","chain_contents","AST_Chain","AST_PrefixedTemplateString","maybe_unary","AST_Await","make_unary","AST_UnaryPrefix","AST_UnaryPostfix","expr_op","min_prec","prec","AST_Binary","maybe_conditional","expr_ops","yes","AST_Conditional","consequent","AST_PropAccess","AST_ObjectProperty","maybe_assign","star","has_expression","AST_Yield","is_star","_yield_expression","commas","AST_Toplevel","DEFNODE","methods","self_props","PROPS","proto","Function","BASE","SUBCLASSES","CTOR","SELF_PROPS","DEFMETHOD","has_tok_flag","flag","Boolean","set_tok_flag","truth","seal","new_nlb","quote_type","_clone","deep","clone","transform","TreeTransformer","$documentation","$propdoc","_walk","visitor","_visit","_children_backwards","AST_Statement","walk_body","clone_block_scope","block_scope","AST_Block","AST_StatementWithBody","TreeWalker","AST_LoopControl","AST_DWLoop","AST_Scope","variables","uses_with","uses_eval","parent_scope","enclosed","cname","get_defun_scope","is_block_scope","_block_scope","figure_out_scope","pinned","globals","wrap_commonjs","wrapped_tl","wrap_enclose","args_values","AST_Lambda","uses_arguments","args_as_names","all_symbols","is_braceless","length_property","arg","AST_Symbol","seg","AST_Jump","AST_Exit","AST_SwitchBranch","name_import","name_export","AST_Unary","computed_key","AST_Class","scope","AST_SymbolBlockDeclaration","AST_Constant","getValue","AST_Atom","AST_NaN","AST_Undefined","AST_Infinity","AST_Boolean","cb","to_visit","walk_abort","walk_parent","initial_stack","parent_pop_indices","current","info","visit_length","visit","descend","getPrototypeOf","find_parent","st","loopcontrol_target","before","after","def_transform","tw","in_list","transformed","after_ret","do_list","list","first_in_statement","left_is_object","normalize_directives","in_directive","assert_clause_from_moz","assertions","my_start_token","my_end_token","assertion_kv","from_moz","MOZ_TO_ME","Program","M","ArrayPattern","ObjectPattern","AssignmentPattern","SpreadElement","argument","RestElement","TemplateElement","cooked","TemplateLiteral","quasis","TaggedTemplateExpression","quasi","tag","FunctionDeclaration","FunctionExpression","ArrowFunctionExpression","ExpressionStatement","TryStatement","handlers","guardedHandlers","finalizer","Property","computed","MethodDefinition","FieldDefinition","PropertyDefinition","ArrayExpression","elem","ObjectExpression","SequenceExpression","MemberExpression","ChainExpression","SwitchCase","VariableDeclaration","declarations","ImportDeclaration","specifiers","specifier","imported","local","ExportAllDeclaration","ExportNamedDeclaration","declaration","exported","ExportDefaultDeclaration","Literal","rx","regex","pattern","rx_source","MetaProperty","meta","Identifier","FROM_MOZ_STACK","BigIntLiteral","UpdateExpression","UnaryExpression","ClassDeclaration","ClassExpression","superClass","def_to_moz","to_moz_scope","to_moz_in_destructuring","to_moz","print_to_string","to_moz_block","guard","assert_clause_to_moz","key_moz","moznode","loc","range","moztype","mytype","propmap","moz_to_me","me_to_moz","moz","how","my","ast","name_mapping","isComputed","string_or_num","shorthand","definition","mangled_name","to_mozilla_ast","mynode","endpos","endline","endcol","set_moz_loc","save_stack","TO_MOZ_STACK","EXPECT_DIRECTIVE","r_annotation","is_some_comments","Rope","committed","append","insertAt","char","curLength","OutputStream","readonly","ascii_only","beautify","braces","ie8","indent_level","indent_start","inline_script","keep_numbers","keep_quoted_props","max_line_len","preamble","preserve_annotations","quote_keys","quote_style","safari10","semicolons","source_map","webkit","width","wrap_iife","wrap_func_args","comment_filter","regex_pos","indentation","current_col","current_line","current_pos","OUTPUT","printed_comments","to_utf8","identifier","get_full_char_code","lone","encode_string","dq","sq","quote_single","quote_double","make_string","mapping_token","mapping_name","has_parens","might_need_space","might_need_semicolon","might_add_newline","need_newline_indented","need_space","newline_insert","do_add_mapping","ensure_line_len","delta","requireSemicolonChars","print","indent","space","half","repeat","with_indent","next_indent","save_indentation","newline","force_semicolon","has_nlb","filter_comment","use_asm","active_scope","current_width","should_break","comma","colon","print_name","make_name","print_string","escape_directive","print_template_string_chars","with_block","with_parens","with_square","add_mapping","option","prepend_comments","return_with_value","filter","last_nlb","append_comments","push_node","pop_node","DEFPRINT","nodetype","PARENS","display_body","is_toplevel","allow_directives","stmt","print_braced_empty","print_braced","parenthesize_for_noin","noin","parens","print_property_name","make_num","force_parens","_codegen","add_source_map","needs_parens","po","so","pp","sp","p1","startsWith","force_statement","make_block","_do_print_body","nokeyword","_do_print","parenthesize_tag","is_tagged","first_statement","returned","make_then","print_computed","get_name","allowShortHand","_print_getter_setter","r_slash_script","slash_script_replace","$1","digits","candidates","toLowerCase","best","best_of","DEFMAP","existing_flags","delete","sort_regexp_flags","shallow_cmp","node1","node2","mkshallow","comparisons","pass_through","other","function_defs","unmangleable_names","SymbolDef","eliminated","assignments","replaced","global","export","undeclared","next_id","chained","direct_access","recursive_refs","should_replace","single_use","fixed","fixed_value","unmangleable","keep_fnames","eval","keep_classnames","mangle","redefinition","redefined_catch_def","next_mangled","ext","nth_identifier","reserved","defun","in_destructuring","for_scopes","save_scope","init_scope_vars","the_block_scope","save_destructuring","save_defun","save_labels","def_function","closest_scope","mark_export","def_variable","mark_enclosed","find_variable","reference","def_global","refs","g","conflicting_def","scope_ancestry","ancestry","new_scope_enclosed_set","to_enclose","scope_topdown","values","SymClass","tentative_name","conflict_scopes","symbol_name","scopes","found_scopes","bubble_up","find_scopes_visible_from","conflicting_def_shallow","symbol","mangled_names","tricky_def","tricky_name","base54","_default_mangler_options","lname","to_mangle","collect","save_nesting","avoid","to_avoid","add_def","reset","find_colliding_names","rename","next_name","consider","stream","_print","skip_string","tail_node","leading","chars","frequency","compare","mangle_options","compressor","_size","list_overhead","lambda_modifiers","args_and_arrow","body_overhead","def_size","key_size","static_size","merge_sequence","make_sequence","make_node_from_constant","isFinite","best_of_expression","ast1","ast2","best_of_statement","get_simple_key","read_property","has_break_or_continue","found","maintain_this_binding","is_func_expr","is_iife_call","log10","identifier_atom","is_identifier_atom","is_ref_of","can_be_evicted_from_block","as_statement_array","thing","is_recursive_ref","WRITE_ONLY","SQUEEZED","TOP","has_flag","set_flag","clear_flag","make_nested_lookup","global_name","fname","inner_map","pure_prop_access_globals","object_methods","is_pure_native_method","is_pure_native_fn","is_pure_native_value","is_undeclared_ref","lazy_op","unary_side_effects","def_is_string","is_undefined","has_side_effects","is_null_or_undefined","is_nullish","is_nullish_shortcircuited","is_lhs","def_is_boolean","unary_bool","binary_bool","is_boolean","def_is_number","unary","numeric_ops","is_number","is_string","def_has_side_effects","any","is_callee_pure","is_call_pure","is_declared","may_throw_on_access","def_may_throw","may_throw","def_is_constant_expression","all_refs_local","scope_def","is_constant_expression","def_may_throw_on_access","_dot_throw","is_immutable","def_find_defs","to_node","_find_defs","child","suffix","defines","def_negate","basic_negation","alt","negated","negate","global_pure_fns","first_arg","evaluate","pure_funcs","native_obj","aborts","is_modified","immutable","contains_this","def_eval","def_aborts","block_aborts","nullish","_eval","unaryPrefix","evaluated","evaluated_regexps","fn","element","non_converting_unary","non_converting_binary","identity_comparison","has_identity","pow","reentrant_ref_eval","global_objs","regexp_flags","def_drop_side_effect_free","trim","nodes","changed","drop_side_effect_free","def_reduce_vars","reset_def","exposed","reset_variables","defs_to_safe_ids","safe_ids","mark","loop_ids","reset_block_variables","safe","safe_to_read","safe_to_assign","def_safe_ids","mark_escaped","d","is_constant","aa","callee","process_expression","with_effects","trimmed_extends","trimmed_prop","suppress","loop_body","is_lhs_read_only","trim_unreachable_code","remove_initializers","tighten_body","statements","in_try","find_loop_scope_try","CHANGED","max_iter","eliminate_spurious_blocks","eliminate_dead_code","handle_if_return","sequences_limit","sequencesize","sequencesize_2","join_consecutive_vars","collapse","stat_index","scanner","abort","hit","hit_stack","hit_index","handle_custom_scan_order","stop_after","find_stop","equivalent_to","replace_all","stop_if_hit","lhs_local","can_replace","newScope","lvalues","nested_def","shadows","value_def","candidate","funarg","side_effects","may_modify","modified","side_effects_external","multi_replacer","extract_args","extract_candidates","get_lhs","get_lvalues","is_lhs_local","value_has_side_effects","replace_all_symbols","remove_candidate","has_overlapping_symbol","fn_strict","scan_this","cur_scope","redefined_within_scope","iife","write_only","referenced","var_def","mangleable_var","get_rvalue","seen_dirs","multiple_if_returns","has_multiple_if_returns","in_lambda","next_index","ab","can_merge_flow","as_statement_array_with_return","extract_functions","prev_index","lct","is_return_void","declarations_only","has_quit","seq","push_seq","to_simple_statement","decls","cons_seq","join_object_assignments","defn","trimmed","diff","extract_object_assignments","finish_walk","eq","arg_name","saved_loop","ref_once","Compressor","false_by_default","arrows","booleans","booleans_as_integers","collapse_vars","computed_props","conditionals","dead_code","drop_console","drop_debugger","global_defs","hoist_funs","hoist_props","hoist_vars","if_return","inline","join_vars","keep_fargs","keep_infinity","loops","negate_iife","passes","pure_getters","reduce_funcs","reduce_vars","sequences","switches","top_retain","typeofs","unsafe","unsafe_arrows","unsafe_comps","unsafe_Function","unsafe_math","unsafe_symbols","unsafe_methods","unsafe_proto","unsafe_regexp","unsafe_undefined","unused","warnings","funcs","vars","_toplevel","in_boolean_context","get_toplevel","compress","resolve_defines","stopping","pass","reset_opt_flags","was_scope","hoist_properties","hoist_declarations","optimize","drop_unused","def_optimize","optimizer","find_scope","is_empty","tree1","tree2","walk_1_state","walk_2_state","walk_1_push","walk_2_push","node_1","node_2","tt","preparation","global_names","opt_AST_Lambda","r_keep_assign","if_break_in_loop","is_break","drop_it","rest","retain_top_func","drop_funcs","drop_vars","assign_as_unused","in_use_ids","fixed_ids","var_defs_by_id","initializations","node_def","in_export","scan_ref_scoped","in_use","drop_block","is_destructure","var_defs","redef","dirs","hoisted","vars_found","var_decl","to_assignments","is_lambda","defs_by_id","hoister","create_symbol","self_condition_length","negated_length","negated_is_best","default_branch","exact_match","decl","eliminate_branch","default_index","default_or_exact","last_branch","equivalentBranch","branches_equivalent","fallthroughDepth","is_inert_body","plucked","bbody","DEFAULT","default_body_index","side_effect_index","prev_body_index","caseBody","findIndex","has_nested_break","sideEffect","exact_exp","always","insertBreak","pbody","bblock","pblock","has_break","varDef","inline_array_like_spread","simple_args","is_func","EXIT","separator","consts","fun","comp","compute_char_frequency","mangle_names","is_regular_func","can_inline","replacement","returned_value","nearest_scope","return_value","can_flatten_body","block_scoped","variable","safe_to_inject","can_inject_vars","can_inject_args","is_reachable","can_inject_symbols","scope_encloses_variables_in_this_scope","add_child_scope","append_var","flatten_args","lines","flatten_vars","flatten_fn","filter_for_side_effects","trim_right_for_undefined","lift_sequences","commutativeOperators","pulled_scope","looked_up","is_atomic","find_ref","reversible","is_strict_comparison","combined","ll","rr","lr","associative","binary","reversed","within_array_or_object_literal","defun_def","lambda_def","name_length","replace_size","overhead","undef","ASSIGN_OPS","ASSIGN_OPS_COMMUTATIVE","safe_to_flatten","literals_in_boolean_context","lift_key","evaluateRight","arg_index","single_arg_diff","check_subject","nullish_side","null_cmp","undefined_cmp","find_comparison","defined_side","is_nullish_check","in_bool","is_true","is_false","booleanize","OPT_ARGUMENTS","sub","flatten_object","retValue","FLATTEN","flatten","optimized","inline_object_prop_spread","segment","inners","arrow","ancestors","is_destructuring_export_decl","keep","should_retain","domprops","addStrings","mangle_properties","builtins","keep_quoted","only_cache","reserved_option","objects","global_ref","new_global","Date","ArrayBuffer","DataView","decodeURI","decodeURIComponent","encodeURI","encodeURIComponent","EvalError","Float32Array","Float64Array","Int8Array","Int16Array","RangeError","ReferenceError","Reflect","SyntaxError","Uint8ClampedArray","Uint32Array","URIError","WeakSet","getOwnPropertyNames","find_builtins","debug_name_suffix","names_to_mangle","declared","mangleStrings","can_mangle","should_mangle","mangled","debug_mangled","to_ascii","atob","b64","Buffer","to_base64","btoa","read_source_map","warn","set_shorthand","init_cache","map_from_object","cache_to_json","minify","files","quoted_props","timings","enclose","nameCache","format","spidermonkey","now","asObject","includeSources","reserve_quoted_keys","cprivate","private_cache","mangle_private","mangle_private_properties","orig_map","orig_line_diff","dest_line_diff","MOZ_SourceMap","gen_line","gen_col","orig_line","orig_col","SourceMap"],"sourceRoot":""}